<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>void land space</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.guoming576.cn/"/>
  <updated>2021-08-14T09:34:15.247Z</updated>
  <id>http://blog.guoming576.cn/</id>
  
  <author>
    <name>hero576</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>曲线抽稀</title>
    <link href="http://blog.guoming576.cn/2021/07/28/%E6%9B%B2%E7%BA%BF%E6%8A%BD%E7%A8%80/"/>
    <id>http://blog.guoming576.cn/2021/07/28/%E6%9B%B2%E7%BA%BF%E6%8A%BD%E7%A8%80/</id>
    <published>2021-07-28T03:27:00.000Z</published>
    <updated>2021-08-14T09:34:15.247Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1><h2 id="何为抽稀"><a class="markdownIt-Anchor" href="#何为抽稀"></a> 何为抽稀</h2><ul><li><p>在处理矢量化数据时，记录中往往会有很多重复数据，对进一步数据处理带来诸多不便。多余的数据一方面浪费了较多的存储空间，另一方面造成所要表达的图形不光滑或不符合标准。因此要通过某种规则，在保证矢量曲线形状不变的情况下， 最大限度地减少数据点个数，这个过程称为抽稀。</p></li><li><p>通俗的讲就是对曲线进行采样简化，即在曲线上取有限个点，将其变为折线，并且能够在一定程度保持原有形状。比较常用的两种抽稀算法是：道格拉斯-普克(Douglas-Peuker)算法和垂距限值法。</p></li></ul><h1 id="道格拉斯-普克douglas-peuker算法"><a class="markdownIt-Anchor" href="#道格拉斯-普克douglas-peuker算法"></a> 道格拉斯-普克(Douglas-Peuker)算法</h1><ul><li><p>Douglas-Peuker算法(DP算法)过程如下:</p><ol><li>连接曲线首尾两点A、B；</li><li>依次计算曲线上所有点到A、B两点所在曲线的距离；</li><li>计算最大距离D，如果D小于阈值threshold,则去掉曲线上出A、B外的所有点；如果D大于阈值threshold,则把曲线以最大距离分割成两段；</li><li>对所有曲线分段重复1-3步骤，知道所有D均小于阈值。即完成抽稀。<br />这种算法的抽稀精度与阈值有很大关系，阈值越大，简化程度越大，点减少的越多；反之简化程度越低，点保留的越多，形状也越趋于原曲线。</li></ol></li><li><p>下面是Python代码实现:</p></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">  File Name：    DouglasPeuker</span></span><br><span class="line"><span class="string">  Description :  道格拉斯-普克抽稀算法</span></span><br><span class="line"><span class="string">  Author :        J_hao</span></span><br><span class="line"><span class="string">  date：          2017/8/16</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">  Change Activity:</span></span><br><span class="line"><span class="string">                  2017/8/16: 道格拉斯-普克抽稀算法</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt, pow</span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">&#x27;J_hao&#x27;</span></span><br><span class="line"></span><br><span class="line">THRESHOLD = <span class="number">0.0001</span>  <span class="comment"># 阈值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">point2LineDistance</span>(<span class="params">point_a, point_b, point_c</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算点a到点b c所在直线的距离</span></span><br><span class="line"><span class="string">    :param point_a:</span></span><br><span class="line"><span class="string">    :param point_b:</span></span><br><span class="line"><span class="string">    :param point_c:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 首先计算b c 所在直线的斜率和截距</span></span><br><span class="line">    <span class="keyword">if</span> point_b[<span class="number">0</span>] == point_c[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">9999999</span></span><br><span class="line">    slope = (point_b[<span class="number">1</span>] - point_c[<span class="number">1</span>]) / (point_b[<span class="number">0</span>] - point_c[<span class="number">0</span>])</span><br><span class="line">    intercept = point_b[<span class="number">1</span>] - slope * point_b[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算点a到b c所在直线的距离</span></span><br><span class="line">    distance = abs(slope * point_a[<span class="number">0</span>] - point_a[<span class="number">1</span>] + intercept) / sqrt(<span class="number">1</span> + pow(slope, <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> distance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DouglasPeuker</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.threshold = THRESHOLD</span><br><span class="line">        self.qualify_list = list()</span><br><span class="line">        self.disqualify_list = list()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">diluting</span>(<span class="params">self, point_list</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        抽稀</span></span><br><span class="line"><span class="string">        :param point_list:二维点列表</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> len(point_list) &lt; <span class="number">3</span>:</span><br><span class="line">            self.qualify_list.extend(point_list[::<span class="number">-1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 找到与收尾两点连线距离最大的点</span></span><br><span class="line">            max_distance_index, max_distance = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> index, point <span class="keyword">in</span> enumerate(point_list):</span><br><span class="line">                <span class="keyword">if</span> index <span class="keyword">in</span> [<span class="number">0</span>, len(point_list) - <span class="number">1</span>]:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                distance = point2LineDistance(point, point_list[<span class="number">0</span>], point_list[<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">if</span> distance &gt; max_distance:</span><br><span class="line">                    max_distance_index = index</span><br><span class="line">                    max_distance = distance</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 若最大距离小于阈值，则去掉所有中间点。 反之，则将曲线按最大距离点分割</span></span><br><span class="line">            <span class="keyword">if</span> max_distance &lt; self.threshold:</span><br><span class="line">                self.qualify_list.append(point_list[<span class="number">-1</span>])</span><br><span class="line">                self.qualify_list.append(point_list[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 将曲线按最大距离的点分割成两段</span></span><br><span class="line">                sequence_a = point_list[:max_distance_index]</span><br><span class="line">                sequence_b = point_list[max_distance_index:]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> sequence <span class="keyword">in</span> [sequence_a, sequence_b]:</span><br><span class="line">                    <span class="keyword">if</span> len(sequence) &lt; <span class="number">3</span> <span class="keyword">and</span> sequence == sequence_b:</span><br><span class="line">                        self.qualify_list.extend(sequence[::<span class="number">-1</span>])</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        self.disqualify_list.append(sequence)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">self, point_list</span>):</span></span><br><span class="line">        self.diluting(point_list)</span><br><span class="line">        <span class="keyword">while</span> len(self.disqualify_list) &gt; <span class="number">0</span>:</span><br><span class="line">            self.diluting(self.disqualify_list.pop())</span><br><span class="line">        <span class="keyword">print</span> self.qualify_list</span><br><span class="line">        <span class="keyword">print</span> len(self.qualify_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    d = DouglasPeuker()</span><br><span class="line">    d.main([[<span class="number">104.066228</span>, <span class="number">30.644527</span>], [<span class="number">104.066279</span>, <span class="number">30.643528</span>], [<span class="number">104.066296</span>, <span class="number">30.642528</span>], [<span class="number">104.066314</span>, <span class="number">30.641529</span>],</span><br><span class="line">            [<span class="number">104.066332</span>, <span class="number">30.640529</span>], [<span class="number">104.066383</span>, <span class="number">30.639530</span>], [<span class="number">104.066400</span>, <span class="number">30.638530</span>], [<span class="number">104.066451</span>, <span class="number">30.637531</span>],</span><br><span class="line">            [<span class="number">104.066468</span>, <span class="number">30.636532</span>], [<span class="number">104.066518</span>, <span class="number">30.635533</span>], [<span class="number">104.066535</span>, <span class="number">30.634533</span>], [<span class="number">104.066586</span>, <span class="number">30.633534</span>],</span><br><span class="line">            [<span class="number">104.066636</span>, <span class="number">30.632536</span>], [<span class="number">104.066686</span>, <span class="number">30.631537</span>], [<span class="number">104.066735</span>, <span class="number">30.630538</span>], [<span class="number">104.066785</span>, <span class="number">30.629539</span>],</span><br><span class="line">            [<span class="number">104.066802</span>, <span class="number">30.628539</span>], [<span class="number">104.066820</span>, <span class="number">30.627540</span>], [<span class="number">104.066871</span>, <span class="number">30.626541</span>], [<span class="number">104.066888</span>, <span class="number">30.625541</span>],</span><br><span class="line">            [<span class="number">104.066906</span>, <span class="number">30.624541</span>], [<span class="number">104.066924</span>, <span class="number">30.623541</span>], [<span class="number">104.066942</span>, <span class="number">30.622542</span>], [<span class="number">104.066960</span>, <span class="number">30.621542</span>],</span><br><span class="line">            [<span class="number">104.067011</span>, <span class="number">30.620543</span>], [<span class="number">104.066122</span>, <span class="number">30.620086</span>], [<span class="number">104.065124</span>, <span class="number">30.620021</span>], [<span class="number">104.064124</span>, <span class="number">30.620022</span>],</span><br><span class="line">            [<span class="number">104.063124</span>, <span class="number">30.619990</span>], [<span class="number">104.062125</span>, <span class="number">30.619958</span>], [<span class="number">104.061125</span>, <span class="number">30.619926</span>], [<span class="number">104.060126</span>, <span class="number">30.619894</span>],</span><br><span class="line">            [<span class="number">104.059126</span>, <span class="number">30.619895</span>], [<span class="number">104.058127</span>, <span class="number">30.619928</span>], [<span class="number">104.057518</span>, <span class="number">30.620722</span>], [<span class="number">104.057625</span>, <span class="number">30.621716</span>],</span><br><span class="line">            [<span class="number">104.057735</span>, <span class="number">30.622710</span>], [<span class="number">104.057878</span>, <span class="number">30.623700</span>], [<span class="number">104.057984</span>, <span class="number">30.624694</span>], [<span class="number">104.058094</span>, <span class="number">30.625688</span>],</span><br><span class="line">            [<span class="number">104.058204</span>, <span class="number">30.626682</span>], [<span class="number">104.058315</span>, <span class="number">30.627676</span>], [<span class="number">104.058425</span>, <span class="number">30.628670</span>], [<span class="number">104.058502</span>, <span class="number">30.629667</span>],</span><br><span class="line">            [<span class="number">104.058518</span>, <span class="number">30.630667</span>], [<span class="number">104.058503</span>, <span class="number">30.631667</span>], [<span class="number">104.058521</span>, <span class="number">30.632666</span>], [<span class="number">104.057664</span>, <span class="number">30.633182</span>],</span><br><span class="line">            [<span class="number">104.056664</span>, <span class="number">30.633174</span>], [<span class="number">104.055664</span>, <span class="number">30.633166</span>], [<span class="number">104.054672</span>, <span class="number">30.633289</span>], [<span class="number">104.053758</span>, <span class="number">30.633694</span>],</span><br><span class="line">            [<span class="number">104.052852</span>, <span class="number">30.634118</span>], [<span class="number">104.052623</span>, <span class="number">30.635091</span>], [<span class="number">104.053145</span>, <span class="number">30.635945</span>], [<span class="number">104.053675</span>, <span class="number">30.636793</span>],</span><br><span class="line">            [<span class="number">104.054200</span>, <span class="number">30.637643</span>], [<span class="number">104.054756</span>, <span class="number">30.638475</span>], [<span class="number">104.055295</span>, <span class="number">30.639317</span>], [<span class="number">104.055843</span>, <span class="number">30.640153</span>],</span><br><span class="line">            [<span class="number">104.056387</span>, <span class="number">30.640993</span>], [<span class="number">104.056933</span>, <span class="number">30.641830</span>], [<span class="number">104.057478</span>, <span class="number">30.642669</span>], [<span class="number">104.058023</span>, <span class="number">30.643507</span>],</span><br><span class="line">            [<span class="number">104.058595</span>, <span class="number">30.644327</span>], [<span class="number">104.059152</span>, <span class="number">30.645158</span>], [<span class="number">104.059663</span>, <span class="number">30.646018</span>], [<span class="number">104.060171</span>, <span class="number">30.646879</span>],</span><br><span class="line">            [<span class="number">104.061170</span>, <span class="number">30.646855</span>], [<span class="number">104.062168</span>, <span class="number">30.646781</span>], [<span class="number">104.063167</span>, <span class="number">30.646823</span>], [<span class="number">104.064167</span>, <span class="number">30.646814</span>],</span><br><span class="line">            [<span class="number">104.065163</span>, <span class="number">30.646725</span>], [<span class="number">104.066157</span>, <span class="number">30.646618</span>], [<span class="number">104.066231</span>, <span class="number">30.645620</span>], [<span class="number">104.066247</span>, <span class="number">30.644621</span>], ])</span><br></pre></td></tr></table></figure><h1 id="垂距限值法"><a class="markdownIt-Anchor" href="#垂距限值法"></a> 垂距限值法</h1><ul><li><p>垂距限值法其实和DP算法原理一样，但是垂距限值不是从整体角度考虑，而是依次扫描每一个点，检查是否符合要求。算法过程如下:</p><ol><li>以第二个点开始，计算第二个点到前一个点和后一个点所在直线的距离d；</li><li>如果d大于阈值，则保留第二个点，计算第三个点到第二个点和第四个点所在直线的距离d;若d小于阈值则舍弃第二个点，计算第三个点到第一个点和第四个点所在直线的距离d;</li><li>依次类推，直线曲线上倒数第二个点。<br />下面是Python代码实现：</li></ol></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">  File Name：    LimitVerticalDistance</span></span><br><span class="line"><span class="string">  Description :  垂距限值抽稀算法</span></span><br><span class="line"><span class="string">  Author :        J_hao</span></span><br><span class="line"><span class="string">  date：          2017/8/17</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">  Change Activity:</span></span><br><span class="line"><span class="string">                  2017/8/17:</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt, pow</span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">&#x27;J_hao&#x27;</span></span><br><span class="line"></span><br><span class="line">THRESHOLD = <span class="number">0.0001</span>  <span class="comment"># 阈值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">point2LineDistance</span>(<span class="params">point_a, point_b, point_c</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算点a到点b c所在直线的距离</span></span><br><span class="line"><span class="string">    :param point_a:</span></span><br><span class="line"><span class="string">    :param point_b:</span></span><br><span class="line"><span class="string">    :param point_c:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 首先计算b c 所在直线的斜率和截距</span></span><br><span class="line">    <span class="keyword">if</span> point_b[<span class="number">0</span>] == point_c[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">9999999</span></span><br><span class="line">    slope = (point_b[<span class="number">1</span>] - point_c[<span class="number">1</span>]) / (point_b[<span class="number">0</span>] - point_c[<span class="number">0</span>])</span><br><span class="line">    intercept = point_b[<span class="number">1</span>] - slope * point_b[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算点a到b c所在直线的距离</span></span><br><span class="line">    distance = abs(slope * point_a[<span class="number">0</span>] - point_a[<span class="number">1</span>] + intercept) / sqrt(<span class="number">1</span> + pow(slope, <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> distance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LimitVerticalDistance</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.threshold = THRESHOLD</span><br><span class="line">        self.qualify_list = list()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">diluting</span>(<span class="params">self, point_list</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        抽稀</span></span><br><span class="line"><span class="string">        :param point_list:二维点列表</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.qualify_list.append(point_list[<span class="number">0</span>])</span><br><span class="line">        check_index = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> check_index &lt; len(point_list) - <span class="number">1</span>:</span><br><span class="line">            distance = point2LineDistance(point_list[check_index],</span><br><span class="line">                                          self.qualify_list[<span class="number">-1</span>],</span><br><span class="line">                                          point_list[check_index + <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> distance &lt; self.threshold:</span><br><span class="line">                check_index += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.qualify_list.append(point_list[check_index])</span><br><span class="line">                check_index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self.qualify_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    l = LimitVerticalDistance()</span><br><span class="line">    diluting = l.diluting([[<span class="number">104.066228</span>, <span class="number">30.644527</span>], [<span class="number">104.066279</span>, <span class="number">30.643528</span>], [<span class="number">104.066296</span>, <span class="number">30.642528</span>], [<span class="number">104.066314</span>, <span class="number">30.641529</span>],</span><br><span class="line">            [<span class="number">104.066332</span>, <span class="number">30.640529</span>], [<span class="number">104.066383</span>, <span class="number">30.639530</span>], [<span class="number">104.066400</span>, <span class="number">30.638530</span>], [<span class="number">104.066451</span>, <span class="number">30.637531</span>],</span><br><span class="line">            [<span class="number">104.066468</span>, <span class="number">30.636532</span>], [<span class="number">104.066518</span>, <span class="number">30.635533</span>], [<span class="number">104.066535</span>, <span class="number">30.634533</span>], [<span class="number">104.066586</span>, <span class="number">30.633534</span>],</span><br><span class="line">            [<span class="number">104.066636</span>, <span class="number">30.632536</span>], [<span class="number">104.066686</span>, <span class="number">30.631537</span>], [<span class="number">104.066735</span>, <span class="number">30.630538</span>], [<span class="number">104.066785</span>, <span class="number">30.629539</span>],</span><br><span class="line">            [<span class="number">104.066802</span>, <span class="number">30.628539</span>], [<span class="number">104.066820</span>, <span class="number">30.627540</span>], [<span class="number">104.066871</span>, <span class="number">30.626541</span>], [<span class="number">104.066888</span>, <span class="number">30.625541</span>],</span><br><span class="line">            [<span class="number">104.066906</span>, <span class="number">30.624541</span>], [<span class="number">104.066924</span>, <span class="number">30.623541</span>], [<span class="number">104.066942</span>, <span class="number">30.622542</span>], [<span class="number">104.066960</span>, <span class="number">30.621542</span>],</span><br><span class="line">            [<span class="number">104.067011</span>, <span class="number">30.620543</span>], [<span class="number">104.066122</span>, <span class="number">30.620086</span>], [<span class="number">104.065124</span>, <span class="number">30.620021</span>], [<span class="number">104.064124</span>, <span class="number">30.620022</span>],</span><br><span class="line">            [<span class="number">104.063124</span>, <span class="number">30.619990</span>], [<span class="number">104.062125</span>, <span class="number">30.619958</span>], [<span class="number">104.061125</span>, <span class="number">30.619926</span>], [<span class="number">104.060126</span>, <span class="number">30.619894</span>],</span><br><span class="line">            [<span class="number">104.059126</span>, <span class="number">30.619895</span>], [<span class="number">104.058127</span>, <span class="number">30.619928</span>], [<span class="number">104.057518</span>, <span class="number">30.620722</span>], [<span class="number">104.057625</span>, <span class="number">30.621716</span>],</span><br><span class="line">            [<span class="number">104.057735</span>, <span class="number">30.622710</span>], [<span class="number">104.057878</span>, <span class="number">30.623700</span>], [<span class="number">104.057984</span>, <span class="number">30.624694</span>], [<span class="number">104.058094</span>, <span class="number">30.625688</span>],</span><br><span class="line">            [<span class="number">104.058204</span>, <span class="number">30.626682</span>], [<span class="number">104.058315</span>, <span class="number">30.627676</span>], [<span class="number">104.058425</span>, <span class="number">30.628670</span>], [<span class="number">104.058502</span>, <span class="number">30.629667</span>],</span><br><span class="line">            [<span class="number">104.058518</span>, <span class="number">30.630667</span>], [<span class="number">104.058503</span>, <span class="number">30.631667</span>], [<span class="number">104.058521</span>, <span class="number">30.632666</span>], [<span class="number">104.057664</span>, <span class="number">30.633182</span>],</span><br><span class="line">            [<span class="number">104.056664</span>, <span class="number">30.633174</span>], [<span class="number">104.055664</span>, <span class="number">30.633166</span>], [<span class="number">104.054672</span>, <span class="number">30.633289</span>], [<span class="number">104.053758</span>, <span class="number">30.633694</span>],</span><br><span class="line">            [<span class="number">104.052852</span>, <span class="number">30.634118</span>], [<span class="number">104.052623</span>, <span class="number">30.635091</span>], [<span class="number">104.053145</span>, <span class="number">30.635945</span>], [<span class="number">104.053675</span>, <span class="number">30.636793</span>],</span><br><span class="line">            [<span class="number">104.054200</span>, <span class="number">30.637643</span>], [<span class="number">104.054756</span>, <span class="number">30.638475</span>], [<span class="number">104.055295</span>, <span class="number">30.639317</span>], [<span class="number">104.055843</span>, <span class="number">30.640153</span>],</span><br><span class="line">            [<span class="number">104.056387</span>, <span class="number">30.640993</span>], [<span class="number">104.056933</span>, <span class="number">30.641830</span>], [<span class="number">104.057478</span>, <span class="number">30.642669</span>], [<span class="number">104.058023</span>, <span class="number">30.643507</span>],</span><br><span class="line">            [<span class="number">104.058595</span>, <span class="number">30.644327</span>], [<span class="number">104.059152</span>, <span class="number">30.645158</span>], [<span class="number">104.059663</span>, <span class="number">30.646018</span>], [<span class="number">104.060171</span>, <span class="number">30.646879</span>],</span><br><span class="line">            [<span class="number">104.061170</span>, <span class="number">30.646855</span>], [<span class="number">104.062168</span>, <span class="number">30.646781</span>], [<span class="number">104.063167</span>, <span class="number">30.646823</span>], [<span class="number">104.064167</span>, <span class="number">30.646814</span>],</span><br><span class="line">            [<span class="number">104.065163</span>, <span class="number">30.646725</span>], [<span class="number">104.066157</span>, <span class="number">30.646618</span>], [<span class="number">104.066231</span>, <span class="number">30.645620</span>], [<span class="number">104.066247</span>, <span class="number">30.644621</span>], ])</span><br><span class="line">    <span class="keyword">print</span> len(diluting)</span><br><span class="line">    print(diluting)</span><br></pre></td></tr></table></figure><h1 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h1><ul><li>其实DP算法和垂距限值法原理一样，DP算法是从整体上考虑一条完整的曲线，实现时较垂距限值法复杂，但垂距限值法可能会在某些情况下导致局部最优。另外在实际使用中发现采用点到另外两点所在直线距离的方法来判断偏离，在曲线弧度比较大的情况下比较准确。如果在曲线弧度比较小，弯曲程度不明显时，这种方法抽稀效果不是很理想，建议使用三点所围成的三角形面积作为判断标准。下面是抽稀效果:</li></ul><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="http://www.spiderpy.cn/blog/detail/29/">连接</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://blog.guoming576.cn/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>cppad</title>
    <link href="http://blog.guoming576.cn/2021/07/05/cppad/"/>
    <id>http://blog.guoming576.cn/2021/07/05/cppad/</id>
    <published>2021-07-05T09:07:20.000Z</published>
    <updated>2021-08-08T11:29:30.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1><p>最优化问题，等式约束/不等式约束</p><h2 id="ipopt配置"><a class="markdownIt-Anchor" href="#ipopt配置"></a> ipopt配置</h2><ul><li><a href="https://coin-or.github.io/Ipopt/OPTIONS.html">官方说明</a></li></ul><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><ul><li><p>最优化问题：</p></li><li><p><code>$\begin&#123;cases&#125;minimize&amp;&amp;x_1*x_4*(x_1+x_2+x_3)+x_3\\subject\;to &amp;&amp;x_1*x_2*x_3*x_4\ge25\\&amp;&amp;x_1^2+x_2^2+x_3^2+x_4^2=40\\&amp;&amp;1\le x_1,x_2,x_3,x_4\le 5\end&#123;cases&#125;$</code></p></li><li><p>设置参数、初始状态、状态约束值、等式/不等式约束值、优化方程/等式及不等式方程。</p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.19)</span><br><span class="line">project(cppad_tst)</span><br><span class="line">set(CMAKE_CXX_STANDARD 14)</span><br><span class="line">add_executable(cppad_tst main.cpp)</span><br><span class="line">target_link_libraries(cppad_tst ipopt)</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cppad/ipopt/solve.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="keyword">using</span> CppAD::AD;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FG_eval</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">typedef</span> <span class="title">CPPAD_TESTVECTOR</span><span class="params">(AD&lt;<span class="keyword">double</span>&gt;)</span> ADvector</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(ADvector &amp;fg, <span class="keyword">const</span> ADvector &amp;x)</span> </span>&#123;</span><br><span class="line">            assert(fg.size() == <span class="number">3</span>);</span><br><span class="line">            assert(x.size() == <span class="number">4</span>);</span><br><span class="line">            AD&lt;<span class="keyword">double</span>&gt; x1 = x[<span class="number">0</span>];</span><br><span class="line">            AD&lt;<span class="keyword">double</span>&gt; x2 = x[<span class="number">1</span>];</span><br><span class="line">            AD&lt;<span class="keyword">double</span>&gt; x3 = x[<span class="number">2</span>];</span><br><span class="line">            AD&lt;<span class="keyword">double</span>&gt; x4 = x[<span class="number">3</span>];</span><br><span class="line">            fg[<span class="number">0</span>] = x1 * x4 * (x1 + x2 + x3) + x3;</span><br><span class="line">            fg[<span class="number">1</span>] = x1 * x2 * x3 * x4;</span><br><span class="line">            fg[<span class="number">2</span>] = x1 * x1 + x2 * x2 + x3 * x3 + x4 * x4;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">get_started</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">size_t</span> i;</span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="title">CPPAD_TESTVECTOR</span><span class="params">(<span class="keyword">double</span>)</span> Dvector</span>;</span><br><span class="line">    <span class="keyword">size_t</span> nx = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">size_t</span> ng = <span class="number">2</span>;</span><br><span class="line">    <span class="function">Dvector <span class="title">xi</span><span class="params">(nx)</span></span>;</span><br><span class="line">    xi[<span class="number">0</span>] = <span class="number">1.</span>;</span><br><span class="line">    xi[<span class="number">1</span>] = <span class="number">5.</span>;</span><br><span class="line">    xi[<span class="number">2</span>] = <span class="number">5.</span>;</span><br><span class="line">    xi[<span class="number">3</span>] = <span class="number">1.</span>;</span><br><span class="line">    Dvector xl(nx), xu(nx);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; nx; i++) &#123;</span><br><span class="line">        xl[i] = <span class="number">1.</span>;</span><br><span class="line">        xu[i] = <span class="number">5.</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Dvector gl(ng), gu(ng);</span><br><span class="line">    gl[<span class="number">0</span>] = <span class="number">25.</span>;</span><br><span class="line">    gu[<span class="number">0</span>] = <span class="number">1.0e19</span>;</span><br><span class="line">    gl[<span class="number">1</span>] = <span class="number">40.</span>;</span><br><span class="line">    gu[<span class="number">1</span>] = <span class="number">40.</span>;</span><br><span class="line">    FG_eval fgEval;</span><br><span class="line">    <span class="built_in">string</span> options;</span><br><span class="line">    options += <span class="string">&quot;Integer print_level  0\n&quot;</span>;</span><br><span class="line">    options += <span class="string">&quot;String sb  yes\n&quot;</span>;</span><br><span class="line">    options += <span class="string">&quot;Integer max_iter  10\n&quot;</span>;</span><br><span class="line">    options += <span class="string">&quot;Numeric tol    1e-6\n&quot;</span>;</span><br><span class="line">    options += <span class="string">&quot;String derivative_test  second-order\n&quot;</span>;</span><br><span class="line">    options += <span class="string">&quot;Numeric point_perturbation_radius 0.\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    CppAD::ipopt::solve_result&lt;Dvector&gt; solution;</span><br><span class="line">    CppAD::ipopt::solve&lt;Dvector, FG_eval&gt;(options, xi, xl, xu, gl, gu, fgEval, solution);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; nx; i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;solution.x[i]&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;solution.zl[i]&lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;solution.zu[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ok &amp;= solution.status == CppAD::ipopt::solve_result&lt;Dvector&gt;::success;</span><br><span class="line">    <span class="keyword">double</span> check_x[] = &#123;<span class="number">1.</span>, <span class="number">4.743</span>, <span class="number">3.82115</span>, <span class="number">1.379408</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> check_zl[] = &#123;<span class="number">1.087871</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> check_zu[] = &#123;<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> rel_tol = <span class="number">1e-6</span>;</span><br><span class="line">    <span class="keyword">double</span> abs_tol = <span class="number">1e-6</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; nx; i++) &#123;</span><br><span class="line">        ok &amp;= CppAD::NearEqual(check_x[i], solution.x[i], rel_tol, abs_tol);</span><br><span class="line">        ok &amp;= CppAD::NearEqual(check_zl[i], solution.zl[i], rel_tol, abs_tol);</span><br><span class="line">        ok &amp;= CppAD::NearEqual(check_zu[i], solution.zu[i], rel_tol, abs_tol);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Hello, World!&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; get_started() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.jianshu.com/p/47ddf443d8fb">连接</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="programme" scheme="http://blog.guoming576.cn/categories/programme/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
  <entry>
    <title>cvxpy</title>
    <link href="http://blog.guoming576.cn/2021/07/05/cvxpy/"/>
    <id>http://blog.guoming576.cn/2021/07/05/cvxpy/</id>
    <published>2021-07-05T09:07:20.000Z</published>
    <updated>2021-08-08T11:29:30.560Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li><a href="https://www.cvxpy.org/">官网</a></li></ul><h2 id="资料"><a class="markdownIt-Anchor" href="#资料"></a> 资料</h2><ul><li><a href="https://blog.csdn.net/geekwill/article/details/78836054">(3条消息) Python.CVXPY学习指南一_GeekWill的博客-CSDN博客_cvxpy</a></li><li><a href="https://www.bilibili.com/read/cv8180627/">cvxpy 常用功能汇总 - 哔哩哔哩 (bilibili.com)</a></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="programme" scheme="http://blog.guoming576.cn/categories/programme/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
  <entry>
    <title>四元素</title>
    <link href="http://blog.guoming576.cn/2021/05/22/%E5%9B%9B%E5%85%83%E6%95%B0/"/>
    <id>http://blog.guoming576.cn/2021/05/22/%E5%9B%9B%E5%85%83%E6%95%B0/</id>
    <published>2021-05-22T03:27:00.000Z</published>
    <updated>2021-08-14T09:34:34.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="四元数"><a class="markdownIt-Anchor" href="#四元数"></a> 四元数<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></h1><h1 id="引入四元素"><a class="markdownIt-Anchor" href="#引入四元素"></a> 引入四元素</h1><ul><li>假设有两个复数：<code>$\begin&#123;cases&#125;A=a+bi\\C=c+di\end&#123;cases&#125;$</code>，在引入一个虚部j，定义：<code>$Q=A+Cj$</code>，并定义：<code>$k=ij$</code>，可得：<code>$Q=a+bi+cj+dk\in\mathbb&#123;H&#125;$</code></li><li>另一种表示，复数<code>$z=a_bi$</code>表示复平面内一个点，坐标为<code>$(a,b)$</code>，四元数也可以表示为<code>$Q=a+bi+cj+dk\Longleftrightarrow q_w+q_v$</code><ul><li>其中，<code>$q_w$</code>为实部，<code>$q_v=q_xi+q_yj+q_zk=(q_x,q_y,q_z)$</code>为虚部</li></ul></li><li>将四元数Q记作四维空间向量q，则可以写为：<code>$q=\begin&#123;bmatrix&#125;q_w\\q_v\end&#123;bmatrix&#125;=\begin&#123;bmatrix&#125;q_w\\q_x\\q_y\\q_z\end&#123;bmatrix&#125;$</code></li></ul><h1 id="虚部的运算"><a class="markdownIt-Anchor" href="#虚部的运算"></a> 虚部的运算</h1><ul><li><code>$i^2=j^2=k^2=ijk=-1\\ij=-ji=k\\jk=-kj=i\\ki=-ik=j$</code></li><li>实数，虚数，复数本质都是四元数：<code>$\\a\in\mathbb&#123;H&#125;\\bi\in\mathbb&#123;I&#125;\in\mathbb&#123;H&#125;\\a+bi\in\mathbb&#123;Z&#125;\in\mathbb&#123;H&#125;$</code></li></ul><h1 id="纯虚四元数"><a class="markdownIt-Anchor" href="#纯虚四元数"></a> 纯虚四元数</h1><ul><li><code>$Q=bi+cj+dk\in\mathbb&#123;H&#125;_p\subset\mathbb&#123;H&#125;$</code></li></ul><h1 id="性质"><a class="markdownIt-Anchor" href="#性质"></a> 性质</h1><table><thead><tr><th>运算</th><th>公式</th><th>说明</th></tr></thead><tbody><tr><td>加法</td><td><code>$p\pm q=\begin&#123;bmatrix&#125;p_w\\p_v\end&#123;bmatrix&#125;\pm\begin&#123;bmatrix&#125;q_w\\q_v\end&#123;bmatrix&#125;=\begin&#123;bmatrix&#125;p_w\pm q_w\\p_v\pm q_v\end&#123;bmatrix&#125;$</code></td><td>交换律:<code>$p+q=q+p$</code><br>结合律：<code>$p+(q+r)=(p+q)+r$</code></td></tr><tr><td>乘积</td><td><code>$p\otimes q=(q_w+q_xi+q_yj+q_zk)\otimes(p_w+p_xi+p_yj+p_zk)\\=\begin&#123;bmatrix&#125;p_wq_w-p_xq_x-p_yq_y-p_zq_z\\p_wq_x+p_xq_w+p_yq_z-p_zq_y\\p_wq_y-p_xq_z+p_yq_w+p_zq_x\\p_wq_z+p_xq_y-p_yq_x+p_zq_w\\\end&#123;bmatrix&#125;\\=\begin&#123;bmatrix&#125;p_wq_w-p_v^Tq_v\\p_wq_v+q_wp_v+p_v\times q_v\end&#123;bmatrix&#125;\\=\begin&#123;bmatrix&#125;p_w&amp;-p_x&amp;-p_y&amp;-p_z\\p_x&amp;p_w&amp;-p_z&amp;p_y\\p_y&amp;p_z&amp;p_w&amp;-p_x\\p_z&amp;-p_y&amp;p_x&amp;p_w\\\end&#123;bmatrix&#125;\begin&#123;bmatrix&#125;q_w\\q_x\\q_y\\q_z\end&#123;bmatrix&#125;\\=p_Lq\\=\begin&#123;bmatrix&#125;q_w&amp;-q_x&amp;-q_y&amp;-q_z\\q_x&amp;q_w&amp;q_z&amp;-q_y\\q_y&amp;-q_z&amp;q_w&amp;q_x\\q_z&amp;q_y&amp;-q_x&amp;q_w\\\end&#123;bmatrix&#125;\begin&#123;bmatrix&#125;p_w\\p_x\\p_y\\p_z\end&#123;bmatrix&#125;\\=q_Rp$</code></td><td>不满足交换律<code>$q\otimes p=\neq p\otimes q$</code><br>结合律：<code>$(q\otimes p)\otimes r=q\otimes (p\otimes r)$</code><br>分配率：<code>$q\otimes (p+r)=q\otimes p+q\otimes r$</code><br><code>$p_Rq_L=q_Lp_R$</code></td></tr><tr><td>共轭</td><td><code>$q^*=q_w-q_v=\begin&#123;bmatrix&#125;q_w\\-q_v\end&#123;bmatrix&#125;\\q^*\otimes q=q\otimes q^*=\begin&#123;bmatrix&#125;q_w^2+q_x^2+q_y^2+q_z^2\\0_v\end&#123;bmatrix&#125;\\(p\otimes q)^*=q^*\otimes p^*$</code></td><td></td></tr><tr><td>模</td><td><code>$\|q\|=\sqrt&#123;q\otimes q^*&#125;=\sqrt&#123;q^*\otimes q&#125;=\sqrt&#123;q_w^2+q_x^2+q_y^2+q_z^2&#125;$</code></td><td></td></tr><tr><td>逆</td><td><code>$q^&#123;-1&#125;\otimes q=1\\q^&#123;-1&#125;=\frac&#123;q^*&#125;&#123;\|q\|^2&#125;$</code></td><td></td></tr></tbody></table><h1 id="单位四元数"><a class="markdownIt-Anchor" href="#单位四元数"></a> 单位四元数</h1><ul><li>模长为1的四元数<code>$\|q\|=1$</code>，这样限制其刚好三个自由度，用于三维空间的旋转。任意单位四元素总可以表达成下面的形式：<code>$\\q=\begin&#123;bmatrix&#125;\cos&#123;\theta&#125;\\u\sin&#123;\theta&#125;\end&#123;bmatrix&#125;$</code><ul><li>其中：<code>$u=u_xi+u_yj+u_zk$</code>是单位矢量，<code>$\theta$</code>是标量</li><li>由于是单位四元数：<code>$q^&#123;-1&#125;=\frac&#123;q^*&#125;&#123;\|q\|^2&#125;=q^&#123;*&#125;$</code></li></ul></li></ul><blockquote><p>三维空间的旋转的表达：</p><ul><li>欧拉角：Yaw, Pitch, Roll，共三个自由度；</li><li>旋转矩阵：虽然这是个3维方阵，貌似有9个自由度，但它本身也受到正交性等限制。它也只有三个自由度；</li><li>旋转向量：旋转方向向量只有两个自由度，外加一个旋转角度，所以，它也肯定是三个自由度；</li><li>单位四元数：当一个四元数被限制为单位四元数时，它也只剩下了三个自由度，我们可以用它来表达旋转。</li></ul></blockquote><h1 id="单位纯虚四元数"><a class="markdownIt-Anchor" href="#单位纯虚四元数"></a> 单位纯虚四元数</h1><ul><li>四元数<code>$q=[0,u_x,u_y,u_z]^T\in\mathbb&#123;H&#125;_p$</code>，<code>$\|q\|=1$</code>，可得：<code>$q\otimes q=-1$</code></li></ul><h1 id="指数映射"><a class="markdownIt-Anchor" href="#指数映射"></a> 指数映射</h1><h1 id="对数映射"><a class="markdownIt-Anchor" href="#对数映射"></a> 对数映射</h1><h1 id="球面插值"><a class="markdownIt-Anchor" href="#球面插值"></a> 球面插值</h1><h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.cnblogs.com/tchenai/p/9767510.html">四元数基础（一） - shared_ptr - 博客园 (cnblogs.com)</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/tchenai/p/9775269.html">四元数基础（二） - shared_ptr - 博客园 (cnblogs.com)</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://blog.csdn.net/u011760195/article/details/85382640">点的旋转（4）：四元数的乘法_ayww的博客-CSDN博客_四元数的乘法</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://www.cnblogs.com/leixinyue/p/13469155.html">四元数和旋转(Quaternion &amp; rotation)</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://blog.guoming576.cn/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>MPC原理</title>
    <link href="http://blog.guoming576.cn/2021/05/20/MPC/"/>
    <id>http://blog.guoming576.cn/2021/05/20/MPC/</id>
    <published>2021-05-20T02:10:00.000Z</published>
    <updated>2021-08-14T09:35:26.919Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><p><img src="/images/pasted-395.png" alt="数学模型" /><br /><img src="/images/pasted-396.png" alt="阿克曼转向角" /></p><h1 id="mpc简介"><a class="markdownIt-Anchor" href="#mpc简介"></a> MPC简介</h1><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><h1 id="车辆运动学"><a class="markdownIt-Anchor" href="#车辆运动学"></a> 车辆运动学</h1><h2 id="数学模型"><a class="markdownIt-Anchor" href="#数学模型"></a> 数学模型</h2><p><img src="" alt="" /></p><ul><li>只考虑车辆在二维平面(<code>xoy</code>)上运动</li><li>状态量(states)：<code>x</code>,<code>y</code>,<code>$\phi$</code></li><li>控制量(control)：<code>$v_r$</code>,<code>$\delta_f$</code>。即：脚踏板(pedals)，转向(st+eering wheel)<ul><li>rear,front</li></ul></li></ul><h2 id="状态空间"><a class="markdownIt-Anchor" href="#状态空间"></a> 状态空间<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2><p><img src="" alt="阿克曼转向" /></p><ul><li><p>前轮左右两个轮的转角有一个差值，叫做阿克曼转向，可以保证转向外侧和内侧走过的圆弧圆心，在后轮两中心延长线的一个点上。此时模型可以简化为自行车的两轮模型。</p></li><li><p><code>$v_f\cos&#123;\delta_f&#125;=v_r$</code>：前轮速度与后轮速度在径向上的约束</p></li><li><p><code>$v_f\sin&#123;\delta_f&#125;=v_y$</code>：横向速度</p></li><li><p><code>$v_y=v_r\tan&#123;\delta_f&#125;$</code></p></li><li><p><code>$\varphi=\frac&#123;v_r\tan&#123;\delta_f&#125;&#125;&#123;l&#125;$</code></p><ul><li><code>$\omega=\frac&#123;v_y&#125;&#123;l&#125;$</code>：角速度的线速度/半径</li></ul></li><li><p>状态空间：<code>$\xi=\begin&#123;bmatrix&#125;X\\Y\\\varphi\end&#123;bmatrix&#125;$</code></p></li><li><p>控制空间：<code>$u=\begin&#123;bmatrix&#125;v_r\\\delta_f\end&#123;bmatrix&#125;$</code></p></li><li><p>非线性</p></li></ul><h2 id="线性化"><a class="markdownIt-Anchor" href="#线性化"></a> 线性化</h2><ul><li><p>将变量相乘的非线性关系，转化为线性关系。直接转换做不到，可以使用参考值与实际值的差值来计算</p></li><li><p>由前面已知关系：<code>$\begin&#123;cases&#125;\dot&#123;X&#125;=v_r\cos&#123;\varphi&#125;=f_1\\\dot&#123;Y&#125;=v_r\sin&#123;\varphi&#125;=f_2\\\dot&#123;\varphi&#125;=\frac&#123;v_r\tan&#123;\delta_f&#125;&#125;&#123;l &#125;=f_3\\\end&#123;cases&#125;$</code></p><ul><li><code>$\dot&#123;X&#125;$</code>表示大地坐标系下瞬时的水平坐标变化，也就是导数</li></ul></li><li><p>假设状态向量符合函数关系：<code>$\dot&#123;\xi&#125;=f(\xi,u)$</code></p></li><li><p>根据近似线性化(相对应的是反馈线性化，缺点是通用性不好，不同模型都要重新推导)，在参考点(<code>$\xi_r$</code>)处利用泰勒展开</p></li></ul><blockquote><ul><li>泰勒公式<code>$f(x)=\frac&#123;f(x_0)&#125;&#123;0!&#125;+\frac&#123;f'(x_0)&#125;&#123;1!&#125;(x-x_0)+\dots+\frac&#123;f^&#123;(n)&#125;(x_0)&#125;&#123;n!&#125;(x-x_0)^n+R_0(x)$</code></li><li>对于一阶泰勒展开，需要计算导数，在向量空间求导，可以求解雅克比矩阵</li><li><code>$J_f(x_1,\dots,x_n)=\begin&#123;bmatrix&#125;\frac&#123;\partial&#123;y_1&#125;&#125;&#123;\partial&#123;x_1&#125;&#125;&amp;&amp;\dots&amp;&amp;\frac&#123;\partial&#123;y_1&#125;&#125;&#123;\partial&#123;x_n&#125;&#125;\\\vdots&amp;&amp;\ddots&amp;&amp;\vdots\\\frac&#123;\partial&#123;y_m&#125;&#125;&#123;\partial&#123;x_1&#125;&#125;&amp;&amp;\dots&amp;&amp;\frac&#123;\partial&#123;y_m&#125;&#125;&#123;\partial&#123;x_n&#125;&#125;\end&#123;bmatrix&#125;$</code></li></ul></blockquote><ul><li><p><code>$\dot&#123;\xi&#125;=f(\xi,u)\approx f(\xi_r,u_r)+J_x(\xi-\xi_r)+J_u(u-u_r)= f(\xi_r,u_r)+\frac&#123;\partial f&#125;&#123;\partial \xi&#125;(\xi-\xi_r)+\frac&#123;\partial f&#125;&#123;\partial u&#125;(u-u_r)$</code></p></li><li><p>用<code>$\tilde&#123;\xi&#125;=\xi-\xi_r$</code>表示误差</p></li><li><p>一阶泰勒展开与参考状态相减<code>$\dot&#123;\xi_r&#125;=f(\xi_r,u_r)$</code>，得到两个雅克比矩阵</p></li><li><p><code>$\dot&#123;\tilde&#123;\xi&#125;&#125;=\dot&#123;\xi&#125;-\dot&#123;\xi_r&#125;=\frac&#123;\partial f&#125;&#123;\partial \xi&#125;\tilde&#123;\xi&#125;+\frac&#123;\partial f&#125;&#123;\partial u&#125;\tilde&#123;u&#125;=A\tilde&#123;\xi&#125;+B\tilde&#123;u&#125;$</code>，此时状态和控制表示为了线性关系</p><ul><li>其中：<code>$\tilde&#123;\xi&#125;=\begin&#123;bmatrix&#125;x-x_r\\y-y_r\\\varphi-\varphi_r\end&#123;bmatrix&#125;$</code></li><li><code>$\tilde&#123;u&#125;=\begin&#123;bmatrix&#125;v_r\\\delta_f\end&#123;bmatrix&#125;$</code></li><li>利用雅克比矩阵，求A：<code>$A=\frac&#123;\partial f&#125;&#123;\partial \xi&#125;=\begin&#123;bmatrix&#125;\frac&#123;\partial&#123;f_1&#125;&#125;&#123;\partial&#123;\xi_1&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_1&#125;&#125;&#123;\partial&#123;\xi_2&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_1&#125;&#125;&#123;\partial&#123;\xi_3&#125;&#125;\\\frac&#123;\partial&#123;f_2&#125;&#125;&#123;\partial&#123;\xi_1&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_2&#125;&#125;&#123;\partial&#123;\xi_2&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_2&#125;&#125;&#123;\partial&#123;\xi_3&#125;&#125;\\\frac&#123;\partial&#123;f_3&#125;&#125;&#123;\partial&#123;\xi_1&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_3&#125;&#125;&#123;\partial&#123;\xi_2&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_3&#125;&#125;&#123;\partial&#123;\xi_3&#125;&#125;\end&#123;bmatrix&#125;=\begin&#123;bmatrix&#125;0&amp;&amp;0&amp;&amp;-v_r\sin&#123;\varphi_r&#125;\\0&amp;&amp;0&amp;&amp;v_r\sin&#123;\varphi_r&#125;\\0&amp;&amp;0&amp;&amp;0\end&#123;bmatrix&#125;$</code></li><li><code>$B=\frac&#123;\partial f&#125;&#123;\partial u&#125;=\begin&#123;bmatrix&#125;\frac&#123;\partial&#123;f_1&#125;&#125;&#123;\partial&#123;u_1&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_1&#125;&#125;&#123;\partial&#123;u_2&#125;&#125;\\\frac&#123;\partial&#123;f_2&#125;&#125;&#123;\partial&#123;u_1&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_2&#125;&#125;&#123;\partial&#123;u_2&#125;&#125;\\\frac&#123;\partial&#123;f_3&#125;&#125;&#123;\partial&#123;u_1&#125;&#125;&amp;&amp;\frac&#123;\partial&#123;f_3&#125;&#125;&#123;\partial&#123;u_2&#125;&#125;\end&#123;bmatrix&#125;=\begin&#123;bmatrix&#125;\cos&#123;\varphi_r&#125;&amp;&amp;0\\\sin&#123;\varphi_r&#125;&amp;&amp;0\\\frac&#123;\tan\delta_f&#125;&#123;l&#125;&amp;&amp;\frac&#123;v_r&#125;&#123;l\cos^2\delta_f&#125;\end&#123;bmatrix&#125;$</code></li></ul></li></ul><h2 id="离散化"><a class="markdownIt-Anchor" href="#离散化"></a> 离散化</h2><ul><li><p>使用前向欧拉(Forward-Euler)做近似化</p></li><li><p><code>$\dot&#123;\tilde&#123;\xi&#125;&#125;=\frac&#123;\tilde&#123;\xi&#125;(k+1)-\tilde&#123;\xi&#125;(k)&#125;&#123;T&#125;=A\tilde&#123;\xi&#125;(k)+B\tilde&#123;u&#125;(k)$</code></p></li><li><p><code>$\tilde&#123;\xi&#125;(k+1)=(I+TA)\tilde&#123;\xi&#125;(k)+(TB)\tilde&#123;u&#125;(k)=\tilde&#123;A&#125;\tilde&#123;\xi&#125;(k)+\tilde&#123;B&#125;\tilde&#123;u&#125;(k)$</code></p><ul><li>其中：<code>$\tilde&#123;A&#125;=I+TA=\begin&#123;bmatrix&#125;1&amp;&amp;0&amp;&amp;-Tv_r\sin&#123;\varphi_r&#125;\\0&amp;&amp;1&amp;&amp;Tv_r\sin&#123;\varphi_r&#125;\\0&amp;&amp;0&amp;&amp;1\end&#123;bmatrix&#125;$</code></li><li><code>$\tilde&#123;B&#125;=TB=\begin&#123;bmatrix&#125;T\cos&#123;\varphi_r&#125;&amp;&amp;0\\T\sin&#123;\varphi_r&#125;&amp;&amp;0\\\frac&#123;T\tan\delta_f&#125;&#123;l&#125;&amp;&amp;\frac&#123;Tv_r&#125;&#123;l\cos^2\delta_f&#125;\end&#123;bmatrix&#125;$</code></li></ul></li><li><p>至此，我们得到了线性时变的状态空间</p></li></ul><h2 id="组合"><a class="markdownIt-Anchor" href="#组合"></a> 组合</h2><ul><li>状态和控制进行组合</li><li><code>$\begin&#123;cases&#125;\xi(k+1)=\tilde&#123;A&#125;\xi(k)+\tilde&#123;B&#125;\triangle u(k)\\\eta(k)=\tilde&#123;C&#125;\xi(k)\end&#123;cases&#125;$</code><ul><li>其中：<code>$\xi(k)=\begin&#123;bmatrix&#125;\tilde&#123;x&#125;(k)\\\tilde&#123;u&#125;(k-1)\end&#123;bmatrix&#125;$</code></li><li><code>$\tilde&#123;x&#125;(k)=x(k)-x_r(k)$</code>，表示k时刻状态与参考值的偏差</li></ul></li><li>带入到公式中，可得</li><li><code>$\triangle u(k)=\tilde&#123;u&#125;(k)-\tilde&#123;u&#125;(k-1)=u(k)-u_r(k)-u(k-1)+u_r(k-1)$</code></li><li><code>$u(k)=u_r(k)+(u(k-1)-u_r(k-1))+\triangle u$</code></li><li>其中<code>$u(k)$</code>是最终控制量，<code>$u_r(k)$</code>是参考控制量，<code>$(u(k-1)-u_r(k-1))$</code>是历史控制量，<code>$\triangle u$</code>最优化得到的控制量。</li></ul><h2 id="预测"><a class="markdownIt-Anchor" href="#预测"></a> 预测</h2><ul><li><p>根据状态空间，我们可以推出以下关系：</p></li><li><p><code>$\tilde&#123;\xi&#125;(k+1)=\tilde&#123;A&#125;\tilde&#123;\xi&#125;(k)+\tilde&#123;B&#125;\tilde&#123;u&#125;(k)$</code></p></li><li><p><code>$\tilde&#123;\xi&#125;(k+2)=\tilde&#123;A&#125;^2\tilde&#123;\xi&#125;(k)+\tilde&#123;A&#125;\tilde&#123;B&#125;\tilde&#123;u&#125;(k)+\tilde&#123;B&#125;\tilde&#123;u&#125;(k+1)$</code></p></li><li><p><code>$\tilde&#123;\xi&#125;(k+3)=\tilde&#123;A&#125;^3\tilde&#123;\xi&#125;(k)+\tilde&#123;A&#125;^2\tilde&#123;B&#125;\tilde&#123;u&#125;(k)+\tilde&#123;A&#125;\tilde&#123;B&#125;\tilde&#123;u&#125;(k+1)+\tilde&#123;B&#125;\tilde&#123;u&#125;(k+2)$</code></p></li><li><p><code>$\cdots$</code></p><ul><li>预测时域：当<code>$N_p=4$</code>时，可以得到<code>$\tilde&#123;\xi&#125;(k+1)\; \tilde&#123;\xi&#125;(k+2)\; \tilde&#123;\xi&#125;(k+3)\; \tilde&#123;\xi&#125;(k+4)$</code>四个状态空间</li><li>控制时域：当<code>$N_c=3$</code>时，已知<code>$\tilde&#123;u&#125;(k+1)\;\tilde&#123;u&#125;(k+2)\;\tilde&#123;u&#125;(k+3)$</code>三个控制空间</li></ul></li><li><p>简写为：<code>$Y=\Psi\xi(k)+\Theta\triangle u(k)$</code></p><ul><li>其中：<code>$Y=\begin&#123;bmatrix&#125;\tilde&#123;\xi&#125;(k+1)\\\cdots\\\tilde&#123;\xi&#125;(k+N_p)\end&#123;bmatrix&#125;$</code></li><li><code>$\Psi=\begin&#123;bmatrix&#125;\tilde&#123;A&#125;\\\tilde&#123;A&#125;^2\\\cdots\\\tilde&#123;A&#125;^&#123;N_p&#125;\end&#123;bmatrix&#125;$</code></li><li><code>$\xi(k)=\begin&#123;bmatrix&#125;\tilde&#123;x_k&#125;\\\tilde&#123;y_k&#125;\\\tilde&#123;\varphi_k&#125;\end&#123;bmatrix&#125;$</code></li><li><code>$\Theta=\begin&#123;bmatrix&#125;\tilde&#123;B&#125;&amp;&amp;0&amp;&amp;\cdots&amp;&amp;\cdots\\\tilde&#123;A&#125;\tilde&#123;B&#125;&amp;&amp;\tilde&#123;B&#125;&amp;&amp;0&amp;&amp;\cdots\\\vdots&amp;&amp;\vdots&amp;&amp;\vdots&amp;&amp;\vdots\\\tilde&#123;A&#125;^&#123;N_p-1&#125;\tilde&#123;B&#125;&amp;&amp;\cdots&amp;&amp;\cdots&amp;&amp;\tilde&#123;B&#125;\end&#123;bmatrix&#125;$</code>，此时为<code>$N_p=N_c+1$</code>的情况，当<code>$N_p&gt;N_c+1$</code>时，后面的系数为0，即不考虑控制情况</li><li><code>$U=\begin&#123;bmatrix&#125;u(k)\\u(k+1)\\\vdots\\u(k+N_c)\end&#123;bmatrix&#125;$</code></li></ul></li></ul><h2 id="优化"><a class="markdownIt-Anchor" href="#优化"></a> 优化</h2><ul><li><p>根据控制规律，使用HSL求解最优化问题。</p></li><li><p>目标：1）尽快收敛到参考值：<code>$Y-&gt;Y_r$</code>；2）控制输入尽可能小：<code>$\min&#123;U&#125;$</code></p></li><li><p>求解就是让目标的偏差最小，使用加权平方和调整不同的值。</p></li><li><p>想要轨迹尽量满足参考值： <code>$\begin&#123;bmatrix&#125;x_1-&gt;x_&#123;1ref&#125;\\y_1-&gt;y_&#123;1ref&#125;\\\varphi_1-&gt;\varphi_&#123;1ref&#125;\\\cdots\\x_&#123;N_p&#125;-&gt;x_&#123;N_pref&#125;\\y_&#123;N_p&#125;-&gt;y_&#123;N_pref&#125;\\\varphi_1-&gt;\varphi_&#123;1ref&#125;\\\end&#123;bmatrix&#125;$</code></p></li><li><p>构建损失函数：<code>$L=(Y-Y_r)^TQ(Y-Y_r)+U^TRT$</code></p></li><li><p>由于我们只能控制变量U，所以上面的损失函数现阶段无法全部控制。</p></li><li><p>定义偏差：<code>$E=\Psi\xi-\Psi\xi_r=\Psi\xi-Y_&#123;ref&#125;$</code></p><ul><li>预测公式为：<code>$Y=\Psi\xi(k)+\Theta u(k)$</code></li><li>可得：<code>$Y-Y_&#123;ref&#125;=E+\Theta U$</code></li></ul></li><li><p>损失函数可变化为：<code>$L=E^TQE+(\Theta U)^TQ(\Theta U)+2E^TQ(\Theta U)+U^TRU$</code></p><ul><li>其中第一项没有U，可以当做控制函数的常数</li></ul></li><li><p><code>$L=U^T(\Theta^TQ\Theta+R)U+2E^2Q\Theta U$</code></p></li><li><p>可以构建为二次规划问题：<code>$\begin&#123;cases&#125;\min&amp;&amp;\frac&#123;1&#125;&#123;2&#125;U^THU+f^TU\\s.t. &amp;&amp;lb\leq U\leq ub\end&#123;cases&#125;$</code></p></li><li><p>最终可得U的各时刻的输出<code>$U=\begin&#123;bmatrix&#125;u(k)\\u(k+1)\\\cdots\\u(k+N_c)\end&#123;bmatrix&#125;$</code>。</p></li></ul><p><strong>松弛因子的引入</strong></p><table><thead><tr><th>- 代价函数：<code>$L=\sum\|\eta-\eta_r\|^2_Q+\sum\|u\|^2_R+\rho\epsilon^2$</code></th></tr></thead><tbody></tbody></table><h2 id="反馈控制"><a class="markdownIt-Anchor" href="#反馈控制"></a> 反馈控制</h2><ul><li><p>与传统控制方式不同，MPC通过优化求解出控制向量后，系统状态更新再得到预测，再根据预测得到新的控制向量，不断迭代。</p></li><li><p><code>$u(k)=u_r(k)+(u(k-1-u_r(k-1))+\triangle u(k)$</code></p></li></ul><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><ul><li>tonyxxq/MPC-Control</li><li>PythonRobotics/cubic_spline_planner.py</li><li>udacity官方：CarND-MPC-Project/install_Ipopt_CppAD.md at master</li><li><a href="https://github.com/tonyxxq/MPC-Control">安装方式</a></li></ul><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/tingfenghanlei/article/details/85046120">博客</a>，<a href="https://www.guyuehome.com/33800">古月居</a>，<a href="https://www.bilibili.com/video/BV1HQ4y1P7bJ?p=4&amp;spm_id_from=pageDriver">视频教程</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="control" scheme="http://blog.guoming576.cn/categories/control/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>坐标系转换</title>
    <link href="http://blog.guoming576.cn/2021/05/15/transform/"/>
    <id>http://blog.guoming576.cn/2021/05/15/transform/</id>
    <published>2021-05-15T03:27:00.000Z</published>
    <updated>2021-08-14T09:36:02.529Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="全局坐标与局部坐标相互转换"><a class="markdownIt-Anchor" href="#全局坐标与局部坐标相互转换"></a> 全局坐标与局部坐标相互转换<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transformGlobalToLocal</span>(<span class="params">x,y,psi,ptsx,ptsy</span>):</span></span><br><span class="line">    x_pos = []</span><br><span class="line">    y_pos = []</span><br><span class="line">    <span class="keyword">assert</span> len(ptsx)==len(ptsy),<span class="string">&quot;error&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ptsx)):</span><br><span class="line">        x_pos.append(np.cos(psi) * (ptsx[i] - x) + np.sin(psi) * (ptsy[i] - y))</span><br><span class="line">        y_pos.append(-np.sin(psi) * (ptsx[i] - x) + np.cos(psi) * (ptsy[i] - y))</span><br><span class="line">    <span class="keyword">return</span> x_pos,y_pos</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transformLocalToGlobal</span>(<span class="params">x,y,psi,x_pos,y_pos</span>):</span></span><br><span class="line">    ptsx = []</span><br><span class="line">    ptsy = []</span><br><span class="line">    <span class="keyword">assert</span> len(x_pos)==len(y_pos),<span class="string">&quot;dim error&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(x_pos)):</span><br><span class="line">        ptsx.append(np.cos(psi) * x_pos[i] + -np.sin(psi) * y_pos[i] + x)</span><br><span class="line">        ptsy.append(np.sin(psi) * x_pos[i] + np.cos(psi) * y_pos[i] + y)</span><br><span class="line">    <span class="keyword">return</span> ptsx,ptsy</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    ptsx = [<span class="number">-61.09</span>,<span class="number">-78.29172</span>,<span class="number">-93.05002</span>,<span class="number">-107.7717</span>,<span class="number">-123.3917</span>,<span class="number">-134.97</span>]</span><br><span class="line">    ptsy = [<span class="number">92.88499</span>,<span class="number">78.73102</span>,<span class="number">65.34102</span>,<span class="number">50.57938</span>,<span class="number">33.37102</span>,<span class="number">18.404</span>]</span><br><span class="line">    psi_unity = <span class="number">3.837348</span></span><br><span class="line">    psi = <span class="number">4.016634</span></span><br><span class="line">    x = <span class="number">-74.76527</span></span><br><span class="line">    y = <span class="number">84.16312</span></span><br><span class="line">    steering_angle = <span class="number">-0.1665902</span></span><br><span class="line">    throttle = <span class="number">1</span></span><br><span class="line">    speed = <span class="number">20.35116</span></span><br><span class="line">    next_x = [<span class="number">-15.4600169051846</span>,<span class="number">6.42984847749198</span>,<span class="number">26.1671664043421</span>,<span class="number">46.9338419093793</span>,<span class="number">70.1543380846207</span>,<span class="number">89.0638601705846</span>]</span><br><span class="line">    next_y = [<span class="number">4.90631258290863</span>,<span class="number">0.774989399278558</span>,<span class="number">-1.97051600855438</span>,<span class="number">-3.80873960226945</span>,<span class="number">-4.76822449803267</span>,<span class="number">-4.06204247415754</span>]</span><br><span class="line">    x_pos,y_pos = transformGlobalToLocal(x,y,psi,ptsx,ptsy)</span><br><span class="line">    transformLocalToGlobal(x,y,psi,x_pos,y_pos)</span><br></pre></td></tr></table></figure><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/weixin_39602967/article/details/110935396">连接</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://blog.guoming576.cn/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>ORB-SLAM2</title>
    <link href="http://blog.guoming576.cn/2021/05/10/ORB-SLAM2/"/>
    <id>http://blog.guoming576.cn/2021/05/10/ORB-SLAM2/</id>
    <published>2021-05-10T03:27:00.000Z</published>
    <updated>2021-08-14T09:35:41.512Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h1 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h1><ul><li><p>ORB-SLAM是西班牙Zaragoza大学的Raul Mur-Artal编写的视觉SLAM系统。他的论文“ORB-SLAM: a versatile andaccurate monocular SLAM system&quot;发表在2015年的IEEE Trans. on Robotics上。开源代码包括前期的ORB-SLAM和后期的ORB-SLAM2。第一个版本主要用于单目SLAM，而第二个版本支持单目、双目和RGBD三种接口。</p></li><li><p><a href="">ORB-SLAM论文</a></p></li><li><p><a href="">ORB-SLAM2论文</a></p></li><li><p><a href="">作者博士论文</a></p></li></ul><h2 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h2><ul><li><p>ORB-SLAM是一个完整的SLAM系统，包括视觉里程计、跟踪、回环检测。它是一种完全基于稀疏特征点的单目SLAM系统，其核心是使用ORB（Orinted FAST and BRIEF）作为整个视觉SLAM中的核心特征。具体体现在几个方面：</p><ul><li>提取和跟踪的特征点使用ORB。ORB特征的提取过程非常快，适合用于实时性强的系统。</li><li>回环检测使用词袋模型，其字典是一个大型的ORB字典。</li><li>接口丰富，支持单目、双目、RGBD多种传感器输入，编译时ROS可选，使得其应用十分轻便。代价是为了支持各种接 口，代码逻辑稍为复杂。</li><li>在PC机以30ms/帧的速度进行实时计算，但在嵌入式平台上表现不佳。</li></ul></li></ul><h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2><ul><li>它主要有三个线程组成：跟踪、Local Mapping（又称小图）、Loop Closing（又称大图）。</li></ul><p><img src="https://img-blog.csdn.net/20180413184944586?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xlYXJuaW5nX3RvcnRvc2ll/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="ORB-SLAM整体流程" /></p><ul><li><a href="https://blog.csdn.net/u010128736/article/details/53157605">22</a></li></ul><h3 id="跟踪"><a class="markdownIt-Anchor" href="#跟踪"></a> 跟踪</h3><ul><li><p>跟踪线程相当于一个视觉里程计，流程如下：</p><ul><li>首先，对原始图像提取ORB特征并计算描述子。</li><li>根据特征描述，在图像间进行特征匹配。</li><li>根据匹配特征点估计相机运动。</li><li>根据关键帧判别准则，判断当前帧是否为关键帧。</li><li>相比于多数视觉SLAM中利用帧间运动大小来取关键帧的做法，ORB_SLAM的关键帧判别准则较为复杂。</li></ul></li></ul><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2><table><thead><tr><th>库名</th><th>命令</th></tr></thead><tbody><tr><td>依赖</td><td><code>sudo apt-get update</code></td></tr><tr><td>git</td><td><code>sudo apt-get install git</code></td></tr><tr><td>cmake</td><td><code>sudo apt-get install cmake</code></td></tr><tr><td>Pangolin</td><td><code>sudo apt-get install libglew-dev libpython2.7-dev</code><br><code>git clone https://github.com/stevenlovegrove/Pangolin.git</code><br><code>cd Pangolin</code><br><code>mkdir build &amp;&amp; cd build</code><br><code>cmake .. &amp;&amp; make -j4 &amp;&amp; sudo make install</code></td></tr><tr><td>OpenCV</td><td><code>sudo apt-get install build-essential</code><br><code>sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev</code><br><code>sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev</code><br><code>cd opencv &amp;&amp; mkdir build &amp;&amp; cd build</code><br><code>cmake -D CMAKE_BUILD_TYPE=Release –D CMAKE_INSTALL_PREFIX=/usr/local ..&amp;&amp;　make –j8 &amp;&amp; sudo make install</code></td></tr><tr><td>Eigen3</td><td><code>sudo apt-get install libeigen3-dev</code></td></tr><tr><td>ORB-SLAM2</td><td><code>git clone https://github.com/raulmur/ORB_SLAM2.git ORB_SLAM2</code><br><code>$ cd ORB_SLAM2 &amp;&amp; chmod +x build.sh &amp;&amp; ./build.sh</code></td></tr></tbody></table><ul><li><p>DBoW2是DBow库的改进版本，DBow库是一个开源的C++库，用于索引图像并将其转换为单词表示形式。</p></li><li><p>g2o是一个开源的C ++框架，用于优化基于图的非线性误差函数。</p></li><li><p>这两个库在ORB-SLAM2项目的第三方文件夹中</p></li><li><p><a href="https://blog.csdn.net/lixujie666/article/details/90023059">/usr/include/c++/8/bits/stl_map.h:122:21: error: static assertion failed: std::map must have the same value_type as its allocator</a></p></li><li><p><a href="https://blog.csdn.net/qq_37788081/article/details/85000361">error: ‘usleep’ was not declared in this scope</a></p></li><li><p><a href="https://blog.csdn.net/u014709760/article/details/85253525">boost问题</a></p></li></ul><h2 id="数据集"><a class="markdownIt-Anchor" href="#数据集"></a> 数据集<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2><table><thead><tr><th>数据集</th><th>介绍</th></tr></thead><tbody><tr><td><a href="http://vision.in.tum.de/data/datasets/rgbd-dataset/download">TUM</a></td><td></td></tr><tr><td><a href="http://www.cvlibs.net/datasets/kitti/eval_odometry.php">KITTI</a></td><td></td></tr><tr><td>EuRoC</td><td></td></tr></tbody></table><h3 id="tum"><a class="markdownIt-Anchor" href="#tum"></a> TUM</h3><ul><li><p>数据格式</p></li><li><p><a href="http://associate.py">associate.py</a>：用于py2</p><ul><li><code>python associate.py rgb.txt depth.txt &gt;associate.txt</code></li><li><code>python associtate.py associate.txt groundtruth.txt&gt;associate_with_groundtruth.txt</code></li></ul></li></ul><h2 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h2><ul><li>TUM:<code>./Examples/Monocular/mono_tum Vocabulary/ORBvoc.txt Examples/Monocular/TUM3.yaml data/rgbd_dataset_freiburg1_desk</code></li><li>KITTI: <code>./Examples/Monocular/mono_kitti Vocabulary/ORBvoc.txt Examples/Monocular/KITTIX.yaml PATH_TO_DATASET_FOLDER/dataset/sequences/SEQUENCE_NUMBER</code></li></ul><h1 id="代码分析"><a class="markdownIt-Anchor" href="#代码分析"></a> 代码分析<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></h1><p><a href="https://blog.csdn.net/u010128736/">sylvester的博客</a></p><h1 id="地图"><a class="markdownIt-Anchor" href="#地图"></a> 地图</h1><p>-<a href="https://blog.csdn.net/u014709760/article/details/86319090"></a></p><h1 id="python实现"><a class="markdownIt-Anchor" href="#python实现"></a> python实现</h1><ul><li><a href="https://www.zhihu.com/question/265234059?sort=created"></a></li><li><a href="https://github.com/Transportation-Inspection/visual_odometry">py2-slam-github</a></li></ul><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/learning_tortosie/article/details/79881165">ORB-SLAM2的安装与运行_W_Tortoise的博客-CSDN博客_orbslam2运行</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://www.sohu.com/a/154011668_715754">数据集</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/66882733">双目部分分析</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="robot" scheme="http://blog.guoming576.cn/categories/robot/"/>
    
    
      <category term="SLAM" scheme="http://blog.guoming576.cn/tags/SLAM/"/>
    
  </entry>
  
  <entry>
    <title>线段相交--叉乘</title>
    <link href="http://blog.guoming576.cn/2021/04/15/%E7%BA%BF%E6%AE%B5%E7%9B%B8%E4%BA%A4--%E5%8F%89%E4%B9%98/"/>
    <id>http://blog.guoming576.cn/2021/04/15/%E7%BA%BF%E6%AE%B5%E7%9B%B8%E4%BA%A4--%E5%8F%89%E4%B9%98/</id>
    <published>2021-04-15T03:27:00.000Z</published>
    <updated>2021-08-14T09:34:44.519Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1><ul><li>判断两个给定线段是否相交，考虑向量叉乘。</li></ul><h2 id="叉乘"><a class="markdownIt-Anchor" href="#叉乘"></a> 叉乘</h2><ul><li><p>向量<code>a(x1,y1)</code>，向量<code>b(x2,y2)</code></p></li><li><p>叉乘：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mover accent="true"><msub><mi>y</mi><mn>2</mn></msub><mo>˙</mo></mover><mo>−</mo><mi>x</mi><mn>2</mn><mover accent="true"><mrow><mi>y</mi><mn>1</mn></mrow><mo>˙</mo></mover><mo>=</mo><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mi mathvariant="normal">∣</mi><mo>˙</mo></mover><mi>b</mi><mi mathvariant="normal">∣</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">a\times b=\begin{bmatrix}x_1,y_1\\x_2,y_2\end{bmatrix}=x_1\dot{y_2}-x2\dot{y1}=|a|\dot|b|\sin\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8623000000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.13889em;">˙</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0757400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord">2</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8813000000000002em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span></span></span><span style="top:-3.2134400000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.13889em;">˙</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.23686em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9868600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord">∣</span></span><span style="top:-3.319em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.13889em;">˙</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span><span class="mord mathdefault">b</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></p></li><li><p>根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">\sin\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>我们可知：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>b</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a\times b&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，表示向量b在向量a的顺时针方向；</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>b</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a\times b&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，表示向量b在向量a的逆时针方向；</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a\times b=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，表示向量a与向量b平行。</li></ul></li><li><p>顺逆时针是指两向量平移至起点相连，从某个方向旋转到另一个向量小于180度。如下图：</p></li></ul><p><img src="/images/pasted-390.png" alt="" /></p><h2 id="判断相交"><a class="markdownIt-Anchor" href="#判断相交"></a> 判断相交</h2><ul><li>假设有两条线段AB，CD，若AB，CD相交，我们可以确定：<ol><li>线段AB与CD所在的直线相交，即点A和点B分别在直线CD的两边；</li><li>线段CD与AB所在的直线相交，即点C和点D分别在直线AB的两边；</li></ol></li><li>上面两个条件同时满足是两线段相交的充要条件，所以我们只需要证明点A和点B分别在直线CD的两边，点C和点D分别在直线AB的两边，这样便可以证明线段AB与CD相交了。</li></ul><h2 id="使用叉乘定理判断"><a class="markdownIt-Anchor" href="#使用叉乘定理判断"></a> 使用叉乘定理判断</h2><p><img src="/images/pasted-391.png" alt="" /></p><ul><li><p>在上图中，线段AB与线段CD相交，于是我们可以得到两个向量AC，AD，C和D分别在AB的两边，向量AC在向量AB的逆势针方向，AB×AC &gt; 0；向量AD在向量AB的顺势针方向，AB×AD &lt; 0，两叉乘结果异号。</p></li><li><p>这样，方法就出来了：如果线段CD的两个端点C和D，与另一条线段的一个端点（A或B，只能是其中一个）连成的向量，与向量AB做叉乘，若结果异号，表示C和D分别在直线AB的两边，若结果同号，则表示CD两点都在AB的一边，则肯定不相交。</p></li><li><p>当然，不能只证明C，D在直线AB的两边，还要用相同的方法证明A，B在直线CD的两边，两者同时满足才是线段相交的充要条件。</p></li></ul><h2 id="几种特殊情况"><a class="markdownIt-Anchor" href="#几种特殊情况"></a> 几种特殊情况</h2><p><img src="/images/pasted-392.png" alt="" /></p><ol><li>只有1点相交，线段AB与CD相交于C点，按照之前介绍的方法，我们可以连成两向量AD和AC，这时候，我们发现，AC与AB共线，AB×AC = 0；而AB×AD &lt; 0；两者并不异号，可实际上仍然相交。所以当出现两叉乘结果中，有一方为0，也可以看成点CD在直线AB的两边。</li></ol><p><img src="/images/pasted-393.png" alt="" /></p><ol start="2"><li>两条线段重合，线段AB与线段CD重合，重合部分为CB，这种重合的情况要特殊判断：</li></ol><ul><li>首先，我们给没条线段的两个端点排序，大小判断方法如下：横坐标大的点更大，横坐标相同，纵坐标大的点更大。</li><li>排好序后，每条线段中，小的点当起点，大的当终点。我们计算向量AB×向量CD，若结果为0，表示线段AB平行CD，平行才有了重合的可能；但平行也分共线和不共线，只有共线才有可能重合</li></ul><p><img src="/images/pasted-394.png" alt="" /></p><ul><li><p>判断共线我们可以在两条线段中各取一点，用这两点组成的向量与其中一条线段进行叉乘，结果若为0，就表示两线段共线。我们取向量BC，若BC×CD = 0，表示两点共线，即是第二种情况，否则就是第一种情况。</p></li><li><p>然而，即使他们共线，却还是不一定重合，就如上图中第二种情况。这时候，之前给点排序的妙处就体现出来了：</p></li><li><p><strong>若一条线段AB与另一条线段CD共线，且线段AB的起点小于等于线段CD的起点，但线段AB的终点（注意是终点）大于等于线段CD的起点（注意是起点），或者交换一下顺序，CD的起点小于AB的起点…只要满足其中一个，就表示有重合部分。</strong></p></li></ul><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.cnblogs.com/tuyang1129/p/9390376.html">连接</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://blog.guoming576.cn/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>AlexNet</title>
    <link href="http://blog.guoming576.cn/2021/03/30/alexnet/"/>
    <id>http://blog.guoming576.cn/2021/03/30/alexnet/</id>
    <published>2021-03-30T10:56:00.000Z</published>
    <updated>2021-09-10T16:37:33.966Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="alexnet"><a class="markdownIt-Anchor" href="#alexnet"></a> AlexNet</h1><ul><li><p><a href="https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf">AlexNet</a>，2012Alex和Hinton在LeNet基础上进行了更宽更深的网络设计。</p></li><li><p>在ILSVRC2012图像分类竞赛第一名，标志着深度学习革命的开始。</p></li><li><p>亮点：</p><ul><li>首次使用GPU进行网络加速训练</li><li>使用了ReLU激活函数，而非传统Sigmoid以及Tanh</li><li>使用了LRN局部响应归一化</li><li>在全连接层的两层中使用了Dropout随机失活神经元，减少过拟合</li></ul></li></ul><p><img src="/images/pasted-119.png" alt="AlexNet" /></p><h1 id="网络架构"><a class="markdownIt-Anchor" href="#网络架构"></a> 网络架构</h1><p><img src="/images/pasted-120.png" alt="AlexNet" /></p><ul><li>AlextNet网络采用卷积神经网络架构： 5个卷积层和3个全连接层，输出层为Softmax层（识别1000类别）</li></ul><table><thead><tr><th>id</th><th>层</th><th>输入</th><th>结构</th><th>输出</th><th>参数个数</th><th>算力</th></tr></thead><tbody><tr><td>1</td><td>conv1</td><td>输入图像<code>224*224*3</code></td><td>filter:96个<code>11*11</code> ，stride=4，(224-11)/4+1=54.2，所以pad=3</td><td><code>55*55*96</code></td><td><code>(11*11*3+1)*96=35K</code></td><td><code>55*55*96*(11*11*3+1)=105M</code></td></tr><tr><td>2</td><td>pool1</td><td><code>55*55*96</code></td><td>maxpool:<code>3*3</code>，stride=2，<code>(55-3)/2+1=27</code></td><td><code>27*27*96</code></td><td>0</td><td>0</td></tr><tr><td>3</td><td>conv2</td><td><code>27*27*96</code></td><td>256个5*5kernals，pad=2,<code>(27-5+2*2)/1+1=27</code></td><td><code>27*27*256</code></td><td><code>(5*5*96+1)*256=307k</code></td><td><code>233M</code></td></tr><tr><td>4</td><td>pool2</td><td><code>27*27*256</code></td><td>maxpool:<code>3*3</code>，stride=2，<code>(27-3)/2+1=13</code></td><td><code>13*13*256</code></td><td>0</td><td>0</td></tr><tr><td>5</td><td>conv3</td><td><code>13*13*256</code></td><td>filter:384个<code>3*3</code>,pad=1，<code>(13-3+1*2)/1+1=13</code></td><td><code>13*13*384</code></td><td><code>(3*3*256+1)*384=884k</code></td><td><code>149M</code></td></tr><tr><td>6</td><td>conv4</td><td><code>13*13*384</code></td><td>filter:384个<code>3*3</code>，pad=1，<code>(13-3+1*2)/1+1=13</code></td><td><code>13*13*384</code></td><td><code>(3*3*384+1)*384=1.3M</code></td><td><code>112M</code></td></tr><tr><td>7</td><td>conv5</td><td><code>13*13*384</code></td><td>filter:256个<code>3*3</code>，pad=1，<code>(13-3+1*2)/1+1=13</code></td><td><code>13*13*256</code></td><td><code>(3*3*384+1)*256=442K</code></td><td><code>74M</code></td></tr><tr><td>8</td><td>pool5</td><td><code>13*13*256</code></td><td>maxpool:<code>3*3</code>，stride=2，<code>(13-3)/2+1=6</code></td><td><code>6*6*256</code></td><td>0</td><td>0</td></tr><tr><td>9</td><td>fullconnect1</td><td><code>6*6*256=9216</code></td><td>layer:4096</td><td><code>4096</code></td><td><code>(9216+1)*4096=37M</code></td><td><code>37M</code></td></tr><tr><td>10</td><td>fullconnect2</td><td><code>4096</code></td><td>layer:4096</td><td><code>4096</code></td><td><code>(4096+1)*4096=16M</code></td><td><code>16M</code></td></tr><tr><td>11</td><td>fullconnect3</td><td><code>4096</code></td><td>layer:1000</td><td><code>1000</code></td><td><code>(4096+1)*1000=4M</code></td><td><code>4M</code></td></tr><tr><td>12</td><td>softmax</td><td><code>1000</code></td><td></td><td></td><td></td><td></td></tr></tbody></table><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>=</mo><mfrac><mrow><mi>w</mi><mo>−</mo><mi>F</mi><mo>+</mo><mn>2</mn><mi>P</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">N=\frac{w-F+2P}{S}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li></ul><h1 id="网络改进"><a class="markdownIt-Anchor" href="#网络改进"></a> 网络改进</h1><ul><li>首次引入了ReLU作为CNN 的激活函数，并验证其效果在较深的网络超过了Sigmoid，解决了Sigmoid在网络较深时的梯度弥散问题，提高了网络的训练速率。</li><li>首次引入了Dropout随机忽略部分神经元，避免过拟合。随机系数0.5，也就是随机忽略一半的神经元。只在前两个全连接层使用。</li><li>利用数据增强减低过拟合。利用随机裁剪和翻转镜像操作增加训练数据量。<ol><li>图像平移与水平反射（镜像）:测试时，网络剪裁5个224×224图块（4个角图块和1个中心图块）以及它们的水平反射（总共10个）进行预测，并对网络的softmax层的预测求10个图块平均值。如果没有该方案， AlexNet网络会遭受严重的过拟合，这将迫使使用更小的网络</li><li>改变训练集RGB通道的图像像素强度(intensity)：对每一RGB像素<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo>=</mo><mo stretchy="false">[</mo><msubsup><mi>I</mi><mrow><mi>x</mi><mi>y</mi></mrow><mi>R</mi></msubsup><mo separator="true">,</mo><msubsup><mi>I</mi><mrow><mi>x</mi><mi>y</mi></mrow><mi>G</mi></msubsup><mo separator="true">,</mo><msubsup><mi>I</mi><mrow><mi>x</mi><mi>y</mi></mrow><mi>B</mi></msubsup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">I_{x,y}=[I_{xy}^R,I_{xy}^G,I_{xy}^B]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2244389999999998em;vertical-align:-0.383108em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，加上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>3</mn></msub><mo stretchy="false">]</mo><mo stretchy="false">[</mo><msub><mi>α</mi><mn>1</mn></msub><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><msub><mi>λ</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>3</mn></msub><msub><mi>λ</mi><mn>3</mn></msub><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">[p_1,p_2,p_3][\alpha_1\lambda_1,\alpha_2\lambda_2,\alpha_3\lambda_3]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，其中pi,λ是像素RGB的<code>3*3</code>协方差矩阵的特征向量和特征值。α均值为0，标准差0.1的随机变量。该方法即增加了目标对光照强度和颜色变化的鲁棒性，把top-1错误率减少了1%.</li></ol></li><li>使用重叠最大池化(Overlapping max pooling)。最大池化可以避免平均池化的模糊化效果，而采用重叠技巧可提升特征的丰富性。每次移动的步幅小于池化的边长。</li><li>提出了局部响应归一化(Local Response Normalization,LRN) 层，对局部神经元的活动创建竞争机制，使得其中响应比较大的值变得相对更大，并抑制其他反馈较小的神经元，增强了模型的泛化能力。</li><li>双GPU并行计算，在第三个卷积层Conv3和全连接层做信息交互。利用GPU的并行计算能力加速网络训练过程，并采用GPU分块训练的方式解决显存对网络规模的限制</li></ul><p><img src="/images/pasted-121.png" alt="双GPU并行计算" /></p><h2 id="lrn"><a class="markdownIt-Anchor" href="#lrn"></a> LRN</h2><ul><li>模拟在神经生物学中有一个概念叫做“ 侧抑制(Lateral inhibition)”。其含义是被激活的神经元会对相邻的神经元产生抑制作用。对局部神经元的活动创建竞争机制，使得其中响应比较大的值变得相对更大，并抑制其他反馈较小的神经元，增强了模型的泛化能力。</li></ul><p><img src="/images/pasted-122.png" alt="LRN" /></p><ul><li><p>算法功能是在池化之后，对通道间的数据进行了距离相关函数的归一化。</p></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>b</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mfrac><msubsup><mi>a</mi><mi>i</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msubsup><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mi>α</mi><munderover><mo>∑</mo><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><mrow><mi>j</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo>−</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></munderover><mrow><mo stretchy="false">(</mo><msubsup><mi>a</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mi>j</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><msup><mo stretchy="false">)</mo><mi>β</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">b_{x,y}^{i}=\frac{a_{i}^{x,y}}{(k+\alpha\sum_{min(N-1,i+n/2)}^{j=max(0,i-n/2)}{(a_{x,y}^{j})^2})^\beta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.9093em;vertical-align:-1.4499999999999997em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4593em;"><span style="top:-2.1100000000000003em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3598em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7218em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4499999999999997em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>a</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">a_{x,y}^{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2077719999999998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span>:第i个卷积核在位置(𝑥, 𝑦)运用ReLU后的特征图上的输出</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>b</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">b_{x,y}^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2077719999999998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span>: LRN的输出，也是下一层的输入</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>:同一位置上邻近深度卷积核的数目（沿通道方向); 自己决定; AlexNet选择5</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>:卷积核的总数目</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo separator="true">,</mo><mi>α</mi><mo separator="true">,</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">k,\alpha,\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>:都是超参。 AlexNet选择 k = 2, α = 10e-4, β = 0.75</li></ul></li><li><p>改变超参数可以实现其它归一化操作，如当k = 0, n=N, α = 1, β = 0.5便是经典的𝑙2归一化</p></li><li><p>2015年VGGNet论文Very Deep Convolutional Networks for Large-Scale Image Recognition提到LRN对VGGNet作用不大</p></li></ul><h2 id="损失函数"><a class="markdownIt-Anchor" href="#损失函数"></a> 损失函数</h2><ul><li>Softmax回归：是逻辑回归对处理多个类别的情况的推广。优化目标，相当于在预测分布下最大化训练样本中正确标签的对数概率的平均值</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mi>l</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>j</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><mrow><msubsup><mi>θ</mi><mi>j</mi><mi>T</mi></msubsup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></msup><mrow><munder><mo>∑</mo><mrow><mn>1</mn><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>k</mi></mrow></munder><mrow><msubsup><mi>θ</mi><mi>j</mi><mi>T</mi></msubsup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mrow></mfrac><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">J(\theta)=-\frac{1}{m}\left [\sum_{i=1}^{m}\sum_{j=1}^{k}l(y^{(i)}=j)\log{\frac{e^{\theta^{T}_{j}x^{(i)}}}{\sum_{1\le l\le k}{\theta^{T}_{j}x^{(i)}}}} \right ]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2498900000000006em;vertical-align:-1.4137769999999998em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75887em;"><span style="top:-2.3687389999999997em;"><span class="pstrut" style="height:3.08187em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">≤</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39488900000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.823131em;"><span style="top:-2.4231360000000004em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.31187em;"><span class="pstrut" style="height:3.08187em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.75887em;"><span class="pstrut" style="height:3.08187em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0818699999999999em;"><span style="top:-3.10517em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.214em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1261029999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p><ul><li>采用独热One-hot标签编码时，目标误差函数等同于交叉熵损失</li></ul><h2 id="网络训练"><a class="markdownIt-Anchor" href="#网络训练"></a> 网络训练</h2><ul><li>改进随机梯度下降</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>0.9</mn><msub><mi>v</mi><mi>i</mi></msub><mo>−</mo><mn>0.0005</mn><mi>ϵ</mi><msub><mi>ω</mi><mi>i</mi></msub><mo>−</mo><mi>ϵ</mi><mrow><mo fence="true">⟨</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>ω</mi></mrow></mfrac><msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mi>i</mi></msub></msub><mo fence="true">⟩</mo></mrow></mrow><annotation encoding="application/x-tex">v_{i+1}=0.9v_i-0.0005\epsilon \omega_i-\epsilon\left \langle \frac{\partial L}{\partial \omega}|_{w_i} \right \rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">5</span><span class="mord mathdefault">ϵ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">⟨</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">⟩</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>ω</mi><mi>i</mi></msub><mo>+</mo><msub><mi>v</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\omega_{i+1}=\omega_i+v_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li><code>动量=权重衰减-学习率*梯度下降</code></li><li>学习率随梯度变化变缓而减小</li></ul><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlexNet</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, num_classes=<span class="number">1000</span>, init_weights=False</span>):</span></span><br><span class="line">        super(AlexNet, self).__init__()</span><br><span class="line">        self.features = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">3</span>, <span class="number">48</span>, kernel_size=<span class="number">11</span>, stride=<span class="number">4</span>, padding=<span class="number">2</span>),  <span class="comment"># input[3, 224, 224]  output[48, 55, 55]</span></span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),                  <span class="comment"># output[48, 27, 27]</span></span><br><span class="line">            nn.Conv2d(<span class="number">48</span>, <span class="number">128</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),           <span class="comment"># output[128, 27, 27]</span></span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),                  <span class="comment"># output[128, 13, 13]</span></span><br><span class="line">            nn.Conv2d(<span class="number">128</span>, <span class="number">192</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),          <span class="comment"># output[192, 13, 13]</span></span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">192</span>, <span class="number">192</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),          <span class="comment"># output[192, 13, 13]</span></span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">192</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),          <span class="comment"># output[128, 13, 13]</span></span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),                  <span class="comment"># output[128, 6, 6]</span></span><br><span class="line">        )</span><br><span class="line">        self.classifier = nn.Sequential(</span><br><span class="line">            nn.Dropout(p=<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span> * <span class="number">6</span> * <span class="number">6</span>, <span class="number">2048</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.Dropout(p=<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">2048</span>, <span class="number">2048</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.Linear(<span class="number">2048</span>, num_classes),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> init_weights:</span><br><span class="line">            self._initialize_weights()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        x = self.features(x)</span><br><span class="line">        x = torch.flatten(x, start_dim=<span class="number">1</span>)</span><br><span class="line">        x = self.classifier(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_initialize_weights</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> self.modules():</span><br><span class="line">            <span class="keyword">if</span> isinstance(m, nn.Conv2d):</span><br><span class="line">                nn.init.kaiming_normal_(m.weight, mode=<span class="string">&#x27;fan_out&#x27;</span>, nonlinearity=<span class="string">&#x27;relu&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> m.bias <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    nn.init.constant_(m.bias, <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">elif</span> isinstance(m, nn.Linear):</span><br><span class="line">                nn.init.normal_(m.weight, <span class="number">0</span>, <span class="number">0.01</span>)</span><br><span class="line">                nn.init.constant_(m.bias, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="DL" scheme="http://blog.guoming576.cn/categories/DL/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>LeNet</title>
    <link href="http://blog.guoming576.cn/2021/03/30/lenet/"/>
    <id>http://blog.guoming576.cn/2021/03/30/lenet/</id>
    <published>2021-03-30T10:56:00.000Z</published>
    <updated>2021-08-22T10:25:21.181Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li><a href="http://yann.lecun.com/exdb/lenet/">LeNet-5模型</a>是Yann LeCun教授于1998年在论文Gradient-based learning applied to document recognition中提出。它是第一个成功应用于手写数字识别问题并产生实际商业价值的卷积神经网络</li></ul><h1 id="网络结构"><a class="markdownIt-Anchor" href="#网络结构"></a> 网络结构</h1><p><img src="/images/pasted-118.png" alt="LeNet-5网络结构" /></p><ul><li>2个卷积层 (C1, C3), 2个下采样(池化) 层 (S2 and S4), 2个全连接层 (C5,F6), 随后是输出层</li></ul><table><thead><tr><th>层</th><th>说明</th><th>输出数据维度</th></tr></thead><tbody><tr><td>input</td><td>输入层，图片</td><td>batchx3x32x32</td></tr><tr><td>conv1</td><td>卷积层<br>in=3<br>out=16<br>kernel=5x5<br>padding=0<br>stride=1</td><td>batchx16x28x28</td></tr><tr><td>relu</td><td>激活函数</td><td></td></tr><tr><td>pool1</td><td>最大下采样<br>kernel=2x2<br>stride=2<br>padding=0</td><td>batchx16x14x14</td></tr><tr><td>conv2</td><td>卷积层<br>in=16<br>out=32<br>kernel=5x5<br>padding=0<br>stride=1</td><td>batchx32x10*10</td></tr><tr><td>relu</td><td>激活函数</td><td></td></tr><tr><td>pool2</td><td>最大下采样<br>kernel=2x2<br>stride=2<br>padding=0</td><td>batchx32x5x5</td></tr><tr><td>fc1</td><td>全连接层<br>in=32x5x5<br>out=120</td><td>batchx120</td></tr><tr><td>fc2</td><td>全连接层<br>in=120<br>out=84</td><td>batchx84</td></tr><tr><td>fc3</td><td>全连接层<br>in=84<br>out=10</td><td>batchx10</td></tr></tbody></table><blockquote><p>卷积层计算公式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>=</mo><mfrac><mrow><mi>W</mi><mo>−</mo><mi>F</mi><mo>+</mo><mn>2</mn><mi>P</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">N=\frac{W-F+2P}{S}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br />W<em>W：输入图片大小<br />F</em>F：filter大小<br />S：步长<br />P：Padding</p></blockquote><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><h2 id="pytorch"><a class="markdownIt-Anchor" href="#pytorch"></a> pytorch</h2><ul><li><p><a href="https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html">官方教程</a></p></li><li><p>pytorch</p></li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeNet</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">    super(LeNet, self).__init__()</span><br><span class="line">    self.conv1 = nn.Conv2d(<span class="number">3</span>,<span class="number">16</span>,<span class="number">5</span>) <span class="comment"># in_channel out_channel kernel_size stride=1</span></span><br><span class="line">    self.pool1 = nn.MaxPool2d(<span class="number">2</span>,<span class="number">2</span>) <span class="comment"># kernel_size stride padding=0</span></span><br><span class="line">    self.conv2 = nn.Conv2d(<span class="number">16</span>,<span class="number">32</span>,<span class="number">5</span>)</span><br><span class="line">    self.pool2 = nn.MaxPool2d(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">    self.fc1 = nn.Linear(<span class="number">32</span>*<span class="number">5</span>*<span class="number">5</span>,<span class="number">120</span>)</span><br><span class="line">    self.fc2 = nn.Linear(<span class="number">120</span>,<span class="number">84</span>)</span><br><span class="line">    self.fc3 = nn.Linear(<span class="number">84</span>,<span class="number">10</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self,x</span>):</span></span><br><span class="line">    x = F.relu(self.conv1(x))</span><br><span class="line">    x = self.pool1(x)</span><br><span class="line">    x = F.relu(self.conv2(x))</span><br><span class="line">    x = self.pool2(x)</span><br><span class="line">    x = x.view(<span class="number">-1</span>, <span class="number">32</span>*<span class="number">5</span>*<span class="number">5</span>)</span><br><span class="line">    x = F.relu(self.fc1(x))</span><br><span class="line">    x = F.relu(self.fc2(x))</span><br><span class="line">    x = self.fc3(x)</span><br><span class="line">    <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><ul><li>tensorflow</li></ul><blockquote><p>padding: VALID(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>=</mo><mfrac><mrow><mi>W</mi><mo>−</mo><mi>F</mi><mo>+</mo><mn>1</mn></mrow><mi>S</mi></mfrac></mrow><annotation encoding="application/x-tex">N=\frac{W-F+1}{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，向上取整)、SAME(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>=</mo><mfrac><mi>W</mi><mi>S</mi></mfrac></mrow><annotation encoding="application/x-tex">N=\frac{W}{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，向上取整)</p></blockquote><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Dense, Flatten, Conv2D, MaxPool2D</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeNet</span>(<span class="params">Model</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        super(LeNet, self).__init__()</span><br><span class="line">        self.conv1 = Conv2D(<span class="number">16</span>, <span class="number">5</span>, activation=<span class="string">&#x27;relu&#x27;</span>)</span><br><span class="line">        self.pool1 = MaxPool2D()</span><br><span class="line">        self.conv2 = Conv2D(<span class="number">32</span>,<span class="number">5</span>, activation=<span class="string">&#x27;relu&#x27;</span>)</span><br><span class="line">        self.pool2 = MaxPool2D()</span><br><span class="line">        self.flatten = Flatten()</span><br><span class="line">        self.d1 = Dense(<span class="number">120</span>, activation=<span class="string">&#x27;relu&#x27;</span>)</span><br><span class="line">        self.d2 = Dense(<span class="number">84</span>, activation=<span class="string">&#x27;relu&#x27;</span>)</span><br><span class="line">        self.d3 = Dense(<span class="number">10</span>, activation=<span class="string">&#x27;softmax&#x27;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">call</span>(<span class="params">self, x, **kwargs</span>):</span></span><br><span class="line">        x = self.pool1(self.conv1(x))     <span class="comment"># input[batch, 32, 32, 3] output[batch, 14, 14, 16]</span></span><br><span class="line">        x = self.pool2(self.conv2(x))     <span class="comment"># input[batch, 14, 14, 16] output[batch, 5, 5, 32]</span></span><br><span class="line">        x = self.flatten(x)               <span class="comment"># output [batch, 5*5*32]</span></span><br><span class="line">        x = self.d1(x)                    <span class="comment"># output [batch, 120]</span></span><br><span class="line">        x = self.d2(x)                    <span class="comment"># output [batch, 84]</span></span><br><span class="line">        <span class="keyword">return</span> self.d3(x)                 <span class="comment"># output [batch, 10]</span></span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="DL" scheme="http://blog.guoming576.cn/categories/DL/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>VGGNet</title>
    <link href="http://blog.guoming576.cn/2021/03/30/vggnet/"/>
    <id>http://blog.guoming576.cn/2021/03/30/vggnet/</id>
    <published>2021-03-30T10:56:00.000Z</published>
    <updated>2021-09-10T16:41:58.784Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="vggnet"><a class="markdownIt-Anchor" href="#vggnet"></a> VGGNet</h1><ul><li><a href="https://arxiv.org/abs/1409.1556v1">VGGNet</a>2015，K. Simonyan and A. Zisserman提出，是2014 年ILSVRC竞赛分类任务的第二名（第一名是GoogLeNet）和定位任务的第一名。</li><li>泛化能力强，适合迁移学习</li></ul><h2 id="网络改进"><a class="markdownIt-Anchor" href="#网络改进"></a> 网络改进</h2><ul><li>对卷积核和池化大小进行了统一： 3×3卷积和2×2最大池化操作</li><li>采用卷积层堆叠的策略，将多个连续的卷积层构成卷积层组</li><li>采用小的卷积滤波器，网络更深（16/19层）</li><li>不采用LRN(Local Response Normalization)</li></ul><h2 id="网络结构"><a class="markdownIt-Anchor" href="#网络结构"></a> 网络结构</h2><ul><li>VGG-16有16个卷积层或全连接层，包括五组卷积层和3个全连接层，即： 16=2+2+3+3+3+3。</li></ul><p><img src="/images/pasted-123.png" alt="VGG网络结构" /></p><p><img src="/images/pasted-124.png" alt="VGG网络结构" /></p><ul><li>网络包含5组卷积操作，每组内的卷积层具有相同的结构，每组包含1~3个连续的卷积层，每两个卷积层之间为ReLU层。</li><li>VGG的卷积层，特征图的空间分辨率单调递减，特征图的通道数单调递增。使得输入图像在维度上流畅地转换到分类向量。AlexNet的通道数无此规律，VGGNet后续的GoogLeNet和ResNet均遵循此维度变化的规律。</li></ul><p><img src="/images/pasted-126.png" alt="卷积层分辨率递减，通道数递增" /></p><h1 id="卷积堆叠"><a class="markdownIt-Anchor" href="#卷积堆叠"></a> 卷积堆叠</h1><ul><li>与单个卷积层相比，卷积堆叠可以增加感受野，增强网络的学习能力和特征表达能力</li><li>与具有较大核的卷积层相比，采用多个具有小卷积核的卷积层串联的方式能够减少网络参数</li><li>在每层卷积之后进行ReLU非线性操作可提升网络的特征学习能力</li></ul><p><img src="/images/pasted-125.png" alt="卷积堆叠" /></p><ul><li>感受野计算公式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi>x</mi><mi>S</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo>+</mo><mi>K</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">F(i)=(F(i+1)-1)xStride+Ksize</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span></span></span></span><ul><li>其中：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>为第i层感受野</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">stride</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span></span></span></span>第i层步距</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">ksize</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span></span></span></span>卷积核或池化核尺寸</li></ul></li></ul><h1 id="训练"><a class="markdownIt-Anchor" href="#训练"></a> 训练</h1><ul><li><p>训练是通过使用带有动量的小批次梯度下降的反向传播来优化多类别逻辑回归目标</p></li><li><p>批次大小设置为256，动量为0.9。 通过权重衰减正则化（L2惩罚因子设置为5 × 10−4）和前两个全连接层的丢弃（丢弃率设置为0.5）对训练进行正则化。</p></li><li><p>学习率初始设定为10−2， 然后当验证集准确率度停止改善时，学习率降低10倍</p></li><li><p>单尺度训练：训练图像大小裁剪为固定大小<code>224*224</code>(s=224)或<code>384*384</code>(s=384)</p></li><li><p>多尺度训练：尺度抖动，训练图像大小随机在<code>s∈[256,512]</code>的范围中</p></li><li><p>训练时，将不同尺寸的s，随机裁剪为<code>224*224</code>的训练样本</p></li><li><p>测试时，将图像缩放到固定尺寸Q=s或0.5(256+512)，对网络最后的卷积层使用滑动窗口进行分类预测，对不同的窗口分类结果取平均。</p></li></ul><h1 id="多剪裁"><a class="markdownIt-Anchor" href="#多剪裁"></a> 多剪裁</h1><ul><li>Multi-Crop evaluation: 从测试图像中剪切出一大批<code>224*224</code>的小块图像，在输出时取平均得到一个1000维的平均结果。</li></ul><h1 id="密集评估"><a class="markdownIt-Anchor" href="#密集评估"></a> 密集评估</h1><ul><li>Dense evaluation: 测试图像的尺寸不作任何变化，将最后一个卷积层和全连接层看成为一个卷积操作，然后对所作的结果进行平均。 全卷积网络因为没有全连接的限制，因而可以接收任意宽或高的输入</li><li>首先将全连接的层转换为卷积层（第一个FC层转换到7×7卷积层，最后两个FC层转换到1×1转换层）。 然后将得到的全卷积网络应用于整个（未剪切的）图像。</li><li>比如，对于训练图像其大小为<code>224*224</code>，经过最后一个卷积得到7×7×m的特征图，然后输出为1000个结点。这是训练好的网络。</li><li>对于一个<code>448*448</code>的测试图像，经过训练好的网络的映射，最后会输出<code>2*2*1000</code>大小的结果，将<code>2*2</code>里面的内容进行平均，即得到1000维向量</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="DL" scheme="http://blog.guoming576.cn/categories/DL/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>车道线</title>
    <link href="http://blog.guoming576.cn/2021/02/17/%E8%BD%A6%E9%81%93%E7%BA%BF/"/>
    <id>http://blog.guoming576.cn/2021/02/17/%E8%BD%A6%E9%81%93%E7%BA%BF/</id>
    <published>2021-02-17T11:14:05.000Z</published>
    <updated>2021-03-07T04:03:12.060Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h1><h2 id="数据"><a class="markdownIt-Anchor" href="#数据"></a> 数据</h2><p><img src="/images/lane.png" alt="" /></p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">img = cv2.imread(<span class="string">&quot;lane.png&quot;</span>)</span><br><span class="line">img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grayscale</span>(<span class="params">img</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;灰度变换&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> cv2.cvtColor(img,cv2.COLOR_RGB2GRAY)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">canny</span>(<span class="params">img,low_threshold,high_threshold</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;边缘检测&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> cv2.Canny(img,low_threshold,high_threshold)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gaussian_blur</span>(<span class="params">img,kernel_size</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;高斯去噪&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> cv2.GaussianBlur(img,(kernel_size,kernel_size),<span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">median_blur</span>(<span class="params">img,kernel_size</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;高斯去噪&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> cv2.medianBlur(img,kernel_size)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">region_of_interest</span>(<span class="params">img,vertices</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;兴趣域&#x27;&#x27;&#x27;</span></span><br><span class="line">    mask = np.zeros_like(img)</span><br><span class="line">    <span class="keyword">if</span> len(img.shape)&gt;<span class="number">2</span>:</span><br><span class="line">        channel_count = img.shape[<span class="number">2</span>]</span><br><span class="line">        ignore_mask_color = (<span class="number">255</span>,)*channel_count</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ignore_mask_color = <span class="number">255</span></span><br><span class="line">    cv2.fillPoly(mask,vertices,ignore_mask_color)</span><br><span class="line">    img_masked = cv2.bitwise_and(img,mask)</span><br><span class="line">    <span class="keyword">return</span> img_masked</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_lines</span>(<span class="params">img,lines,color=[<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>],thickness=<span class="number">2</span></span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;绘制直线&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> lines.any():</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="keyword">for</span> x1,y1,x2,y2 <span class="keyword">in</span> line:</span><br><span class="line">            cv2.line(img,(x1,y1),(x2,y2),color,thickness)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_y_intercepts</span>(<span class="params">lines,slopes</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;根据输入线段的斜率，计算对应y方向的截距和平局斜率&#x27;&#x27;&#x27;</span></span><br><span class="line">    slopes = slopes[~np.isnan(slopes)]</span><br><span class="line">    slopes = slopes[~np.isinf(slopes)]</span><br><span class="line">    avg_slope = slopes.mean()</span><br><span class="line">    lines = lines.reshape((lines.shape[<span class="number">0</span>]*<span class="number">2</span>,lines.shape[<span class="number">1</span>]//<span class="number">2</span>))</span><br><span class="line">    x_mean,y_mean = np.mean(lines,axis=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> y_mean - (x_mean*avg_slope),avg_slope</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_x_intercepts</span>(<span class="params">y_1,y_2,slope,b</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;根据斜率和截距，及计算对应y值的x&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (~np.isnan(slope) <span class="keyword">and</span> ~np.isnan(b)):</span><br><span class="line">        x_1 = x_2 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        x_1 = (y_1-b)/slope</span><br><span class="line">        x_2 = (y_2-b)/slope</span><br><span class="line">    <span class="keyword">return</span> x_1,x_2</span><br><span class="line">prev_left_x1=prev_left_x2=prev_right_x1=prev_right_x2=<span class="number">0</span></span><br><span class="line">prev_left_avg_m,prev_right_avg_m=<span class="number">-1</span>,<span class="number">1</span></span><br><span class="line">prev_left_b=prev_right_b=prev_left_line=prev_right_line=<span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_lines_extrapolated</span>(<span class="params">img,lines,color=[<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>],thickness=<span class="number">3</span></span>):</span></span><br><span class="line">    imgshape=img.shape</span><br><span class="line">    lines = lines.reshape((lines.shape[<span class="number">0</span>],lines.shape[<span class="number">2</span>]))</span><br><span class="line">    y_min = lines.reshape((lines.shape[<span class="number">0</span>]*<span class="number">2</span>,lines.shape[<span class="number">1</span>]//<span class="number">2</span>))[:,<span class="number">1</span>].min()</span><br><span class="line">    slopes = (lines[:,<span class="number">3</span>]-lines[:,<span class="number">1</span>])/(lines[:,<span class="number">2</span>]-lines[:,<span class="number">0</span>])</span><br><span class="line">    slopes = slopes[~np.isnan(slopes)]</span><br><span class="line">    slopes = slopes[~np.isinf(slopes)]</span><br><span class="line">    left_lines = lines[slopes&lt;<span class="number">-0.5</span>]  <span class="comment"># 左边行车道斜率为负</span></span><br><span class="line">    right_lines = lines[slopes&gt;<span class="number">0.5</span>]  <span class="comment"># 右边行车道斜率为正</span></span><br><span class="line">    left_slopes = slopes[slopes&lt;<span class="number">-0.5</span>]</span><br><span class="line">    right_slopes = slopes[slopes&gt;<span class="number">0.5</span>]</span><br><span class="line">    <span class="keyword">global</span> prev_left_avg_m</span><br><span class="line">    <span class="keyword">global</span> prev_right_avg_m</span><br><span class="line">    <span class="keyword">global</span> prev_left_b</span><br><span class="line">    <span class="keyword">global</span> prev_right_b</span><br><span class="line">    left_b,left_avg_m = get_y_intercepts(left_lines,left_slopes)</span><br><span class="line">    right_b,right_avg_m = get_y_intercepts(right_lines,right_slopes)</span><br><span class="line">    keep_prev_left = <span class="literal">False</span></span><br><span class="line">    keep_prev_right = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> left_avg_m &lt; <span class="number">-0.83</span> <span class="keyword">or</span> left_avg_m &gt; <span class="number">-0.36</span>:</span><br><span class="line">        left_avg_m = prev_left_avg_m</span><br><span class="line">        left_b = prev_left_b</span><br><span class="line">        keep_prev_left = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> right_avg_m &gt; <span class="number">0.83</span> <span class="keyword">or</span> right_avg_m &lt; <span class="number">0.36</span>:</span><br><span class="line">        right_avg_m = prev_right_avg_m</span><br><span class="line">        right_b = prev_right_b</span><br><span class="line">        keep_prev_right = <span class="literal">True</span></span><br><span class="line">    prev_left_avg_m = left_avg_m</span><br><span class="line">    prev_right_avg_m = right_avg_m</span><br><span class="line">    prev_left_b = left_b</span><br><span class="line">    prev_right_b = right_b</span><br><span class="line">    </span><br><span class="line">    left_x1,left_x2 = get_x_intercepts(y_1=y_min,y_2=imgshape[<span class="number">0</span>],slope=left_avg_m,b=left_b)</span><br><span class="line">    right_x1,right_x2 = get_x_intercepts(y_1=y_min,y_2=imgshape[<span class="number">0</span>],slope=right_avg_m,b=right_b)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> prev_left_x1</span><br><span class="line">    <span class="keyword">global</span> prev_left_x2</span><br><span class="line">    <span class="keyword">global</span> prev_right_x1</span><br><span class="line">    <span class="keyword">global</span> prev_right_x2</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> prev_left_x1 != <span class="number">0</span> <span class="keyword">or</span> prev_left_x2 != <span class="number">0</span> <span class="keyword">or</span> prev_right_x1 != <span class="number">0</span> <span class="keyword">or</span> prev_right_x2 != <span class="number">0</span>:</span><br><span class="line">        alpha = <span class="number">0.2</span></span><br><span class="line">        left_x1_new = math.floor(alpha*left_x1+(<span class="number">1</span>-alpha)*prev_left_x1)</span><br><span class="line">        left_x2_new = math.floor(alpha*left_x2+(<span class="number">1</span>-alpha)*prev_left_x2)</span><br><span class="line">        right_x1_new = math.floor(alpha*right_x1+(<span class="number">1</span>-alpha)*prev_right_x1)</span><br><span class="line">        right_x2_new = math.floor(alpha*right_x2+(<span class="number">1</span>-alpha)*prev_right_x2)</span><br><span class="line">        prev_left_x1 = left_x1_new</span><br><span class="line">        prev_left_x2 = left_x2_new</span><br><span class="line">        prev_right_x1 = right_x1_new</span><br><span class="line">        prev_right_x2 = right_x2_new</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        left_x1_new = left_x1</span><br><span class="line">        left_x2_new = left_x2</span><br><span class="line">        right_x1_new = right_x1</span><br><span class="line">        right_x2_new = right_x2</span><br><span class="line">        prev_left_x1 = left_x1_new</span><br><span class="line">        prev_left_x2 = left_x2_new</span><br><span class="line">        prev_right_x1 = right_x1_new</span><br><span class="line">        prev_right_x2 = right_x2_new</span><br><span class="line">    left_line = np.array([left_x1_new,y_min,left_x2_new,imgshape[<span class="number">0</span>]],dtype=np.int32)</span><br><span class="line">    right_line = np.array([right_x1_new,y_min,right_x2_new,imgshape[<span class="number">0</span>]],dtype=np.int32)</span><br><span class="line">    <span class="keyword">if</span> keep_prev_left:</span><br><span class="line">        left_line = prev_left_line</span><br><span class="line">        left_x1_new = prev_left_x1</span><br><span class="line">        left_x2_new = prev_left_x2</span><br><span class="line">    <span class="keyword">if</span> keep_prev_right:</span><br><span class="line">        right_line = prev_right_line</span><br><span class="line">        right_x1_new = prev_right_x1</span><br><span class="line">        right_x2_new = prev_right_x2</span><br><span class="line">    cv2.line(img,(int(left_x1_new),int(y_min)),(int(left_x2_new),int(imgshape[<span class="number">0</span>])),color,thickness)</span><br><span class="line">    cv2.line(img,(int(right_x1_new),int(y_min)),(int(right_x2_new),int(imgshape[<span class="number">0</span>])),color,thickness)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hough_line</span>(<span class="params">img,rho,theta,threshold,min_line_len,max_line_gap,extrapolate=False</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    img:canny检测后的图像</span></span><br><span class="line"><span class="string">    rho:hough检测中grid像素距离</span></span><br><span class="line"><span class="string">    theta:grid角度距离</span></span><br><span class="line"><span class="string">    threshold:最小voting数值</span></span><br><span class="line"><span class="string">    min_line_len:构成线的最小像素个数</span></span><br><span class="line"><span class="string">    max_line_gap:相连线段之间的最大距离</span></span><br><span class="line"><span class="string">    extrapolate:</span></span><br><span class="line"><span class="string">    返回黑背景上有白线的图</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    lines = cv2.HoughLinesP(img,rho,theta,threshold,np.array([]),minLineLength=min_line_len,maxLineGap=max_line_gap)</span><br><span class="line">    img_line = np.zeros((img.shape[<span class="number">0</span>],img.shape[<span class="number">1</span>],<span class="number">3</span>),dtype=np.uint8)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> extrapolate:</span><br><span class="line">        draw_lines(img_line,lines)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        draw_lines_extrapolated(img_line,lines)</span><br><span class="line">    <span class="keyword">return</span> img_line</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">weighted_img</span>(<span class="params">img,initial_img,a=<span class="number">0.8</span>,b=<span class="number">1</span></span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    img:hough检测输出</span></span><br><span class="line"><span class="string">    initial_img:原始图像</span></span><br><span class="line"><span class="string">    加权相加：initial_img*a + img*b</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> cv2.addWeighted(initial_img,a,img,b,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><ul><li>检测车道线</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">s = img.shape</span><br><span class="line">img_gray = grayscale(img)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">plt.imshow(img_gray)</span><br><span class="line">img_blur = gaussian_blur(img_gray,kernel_size=<span class="number">5</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">plt.imshow(img_blur)</span><br><span class="line">img_edge = canny(img_blur,low_threshold=<span class="number">50</span>,high_threshold=<span class="number">150</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">plt.imshow(img_edge)</span><br><span class="line">vertices = np.array([[(<span class="number">0</span>,s[<span class="number">0</span>]),(s[<span class="number">1</span>]*<span class="number">0.5</span>,s[<span class="number">0</span>]*<span class="number">0.5</span>),(s[<span class="number">1</span>]*<span class="number">0.5</span>,s[<span class="number">0</span>]*<span class="number">0.5</span>),(s[<span class="number">1</span>],s[<span class="number">0</span>])]],dtype=np.int32)</span><br><span class="line">print(vertices)</span><br><span class="line">masked_edges = region_of_interest(img_edge,vertices)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">plt.imshow(masked_edges)</span><br><span class="line">img_hough_line = hough_line(masked_edges,rho=<span class="number">1</span>,theta=np.pi/<span class="number">180</span>,threshold=<span class="number">40</span>,min_line_len=<span class="number">60</span>,max_line_gap=<span class="number">30</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">plt.imshow(img_hough_line)</span><br><span class="line">img_lanes = weighted_img(img_hough_line,img,<span class="number">0.8</span>,<span class="number">1</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>)</span><br><span class="line">plt.imshow(img_lanes)</span><br></pre></td></tr></table></figure><ul><li>检测并绘制延长线</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">s = img.shape</span><br><span class="line">img_gray = grayscale(img)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">plt.imshow(img_gray)</span><br><span class="line">img_blur = gaussian_blur(img_gray,kernel_size=<span class="number">5</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">plt.imshow(img_blur)</span><br><span class="line">img_edge = canny(img_blur,low_threshold=<span class="number">50</span>,high_threshold=<span class="number">150</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">plt.imshow(img_edge)</span><br><span class="line">vertices = np.array([[(<span class="number">0</span>,s[<span class="number">0</span>]),(s[<span class="number">1</span>]*<span class="number">0.5</span>,s[<span class="number">0</span>]*<span class="number">0.5</span>),(s[<span class="number">1</span>]*<span class="number">0.5</span>,s[<span class="number">0</span>]*<span class="number">0.5</span>),(s[<span class="number">1</span>],s[<span class="number">0</span>])]],dtype=np.int32)</span><br><span class="line">print(vertices)</span><br><span class="line">masked_edges = region_of_interest(img_edge,vertices)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">plt.imshow(masked_edges)</span><br><span class="line">img_hough_line = hough_line(masked_edges,rho=<span class="number">1</span>,theta=np.pi/<span class="number">180</span>,threshold=<span class="number">40</span>,min_line_len=<span class="number">60</span>,max_line_gap=<span class="number">30</span>,extrapolate=<span class="literal">True</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">plt.imshow(img_hough_line)</span><br><span class="line">img_lanes = weighted_img(img_hough_line,img,<span class="number">0.8</span>,<span class="number">1</span>)</span><br><span class="line">a = fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>)</span><br><span class="line">plt.imshow(img_lanes)</span><br></pre></td></tr></table></figure><h2 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h2><p><img src="/images/lane1.png" alt="" /><br /><img src="/images/lane2.png" alt="" /></p><h2 id="检测曲率"><a class="markdownIt-Anchor" href="#检测曲率"></a> 检测曲率</h2><ul><li>最小二乘拟合</li></ul><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td><code>np.ravel</code></td><td>高维数组拉成一维</td></tr><tr><td><code>np.ployfit</code></td><td>多项式拟合</td></tr><tr><td><code>np.plotval</code></td><td>多项式求值</td></tr></tbody></table><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x_coords = np.ravel([[line[<span class="number">0</span>][<span class="number">0</span>],line[<span class="number">0</span>][<span class="number">2</span>]] <span class="keyword">for</span> line <span class="keyword">in</span> lines])</span><br><span class="line">y_coords = np.ravel([[line[<span class="number">0</span>][<span class="number">1</span>],line[<span class="number">0</span>][<span class="number">3</span>]] <span class="keyword">for</span> line <span class="keyword">in</span> lines])</span><br><span class="line">ploy = np.ployfit(x_coords,y_coords,deg=<span class="number">1</span>)</span><br><span class="line">point_min=(np.min(x_coords),np.polyval(ploy,np.min(*x_coords)))</span><br><span class="line">point_max=(np.max(x_coords),np.polyval(ploy,np.max(*x_coords)))</span><br><span class="line">np.array([point_min,point_max],dtype=np.int)</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="opencv" scheme="http://blog.guoming576.cn/categories/opencv/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
  <entry>
    <title>opencv检测银行卡号</title>
    <link href="http://blog.guoming576.cn/2021/02/08/opencv_credit_card/"/>
    <id>http://blog.guoming576.cn/2021/02/08/opencv_credit_card/</id>
    <published>2021-02-08T13:41:15.000Z</published>
    <updated>2021-02-08T14:02:58.442Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h1><ul><li>模板<br /><img src="/images/pasted-384.png" alt="" /></li><li>待识别图像<br /><img src="/images/pasted-385.png" alt="" /></li></ul><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">img_file = <span class="string">&quot;credit_card.png&quot;</span></span><br><span class="line">tem_file = <span class="string">&quot;reference.png&quot;</span></span><br><span class="line">img = cv2.imread(img_file)</span><br><span class="line">tem = cv2.imread(tem_file)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tem_process</span>(<span class="params">img</span>):</span></span><br><span class="line">    img_cpy = img.copy()</span><br><span class="line">    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)</span><br><span class="line">    ret,binary = cv2.threshold(gray,<span class="number">10</span>,<span class="number">255</span>,cv2.THRESH_BINARY_INV)</span><br><span class="line">    contours,hierarchy = cv2.findContours(binary.copy(),cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line">    <span class="comment">#cv2.drawContours(img_cpy,contours,-1,(255,0,0),3)</span></span><br><span class="line">    <span class="comment">#plt.imshow(img_cpy)</span></span><br><span class="line">    temp_index_list = &#123;&#125;</span><br><span class="line">    digits_template = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i,contour <span class="keyword">in</span> enumerate(contours):</span><br><span class="line">        x,y,w,h=cv2.boundingRect(contour)</span><br><span class="line">        temp_index_list[x] = &#123;<span class="string">&#x27;i&#x27;</span>:i,<span class="string">&#x27;pos&#x27;</span>:(x,y,w,h)&#125;</span><br><span class="line">    keys = list(temp_index_list.keys())</span><br><span class="line">    keys.sort()</span><br><span class="line">    <span class="keyword">for</span> i,k <span class="keyword">in</span> enumerate(keys):</span><br><span class="line">        contour = temp_index_list[k].get(<span class="string">&quot;pos&quot;</span>)</span><br><span class="line">        <span class="comment">#cv2.putText(img_cpy,&quot;&#123;&#125;&quot;.format(i),temp_index_list[k].get(&quot;pos&quot;)[:2],cv2.FONT_HERSHEY_COMPLEX,0.75,(0,0,242))</span></span><br><span class="line">        x,y,w,h = contour</span><br><span class="line">        digits_template[i] = cv2.resize(binary[y:y+h,x:x+w],(<span class="number">57</span>,<span class="number">88</span>))</span><br><span class="line">    <span class="comment">#plt.imshow(img_cpy)</span></span><br><span class="line">    <span class="keyword">return</span> digits_template</span><br><span class="line">digits = tem_process(tem)    </span><br><span class="line"><span class="comment"># 初始化卷积核</span></span><br><span class="line">rectKernel = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">9</span>, <span class="number">3</span>))</span><br><span class="line">sqKernel = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line"><span class="comment">#读取输入图像，预处理</span></span><br><span class="line">image = cv2.resize(img,(<span class="number">300</span>,int(img.shape[<span class="number">0</span>]*(<span class="number">300</span>/img.shape[<span class="number">1</span>])),))</span><br><span class="line">gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)</span><br><span class="line"><span class="comment">#礼帽操作，突出更明亮的区域</span></span><br><span class="line">tophat = cv2.morphologyEx(gray, cv2.MORPH_TOPHAT, rectKernel) </span><br><span class="line"><span class="comment">#ksize=-1相当于用3*3的</span></span><br><span class="line">gradX = cv2.Sobel(tophat, ddepth=cv2.CV_32F, dx=<span class="number">1</span>, dy=<span class="number">0</span>,ksize=<span class="number">-1</span>)</span><br><span class="line">gradX = np.absolute(gradX)</span><br><span class="line">(minVal, maxVal) = (np.min(gradX), np.max(gradX))</span><br><span class="line">gradX = (<span class="number">255</span> * ((gradX - minVal) / (maxVal - minVal)))</span><br><span class="line">gradX = gradX.astype(<span class="string">&quot;uint8&quot;</span>)</span><br><span class="line"><span class="comment">#通过闭操作（先膨胀，再腐蚀）将数字连在一起</span></span><br><span class="line">gradX = cv2.morphologyEx(gradX, cv2.MORPH_CLOSE, rectKernel) </span><br><span class="line"><span class="comment">#THRESH_OTSU会自动寻找合适的阈值，适合双峰，需把阈值参数设置为0</span></span><br><span class="line">thresh = cv2.threshold(gradX, <span class="number">0</span>, <span class="number">255</span>, cv2.THRESH_BINARY | cv2.THRESH_OTSU)[<span class="number">1</span>] </span><br><span class="line"><span class="comment">#再来一个闭操作</span></span><br><span class="line">thresh = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, sqKernel) <span class="comment">#再来一个闭操作</span></span><br><span class="line"><span class="comment"># 计算轮廓</span></span><br><span class="line">threshCnts, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line">cnts = threshCnts</span><br><span class="line">cur_img = image.copy()</span><br><span class="line">cv2.drawContours(cur_img,cnts,<span class="number">-1</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">3</span>) </span><br><span class="line">locs = []</span><br><span class="line">concour_img = image.copy()</span><br><span class="line"><span class="comment"># 遍历轮廓</span></span><br><span class="line"><span class="keyword">for</span> (i, c) <span class="keyword">in</span> enumerate(cnts):</span><br><span class="line">    <span class="comment"># 计算矩形</span></span><br><span class="line">    (x, y, w, h) = cv2.boundingRect(c)</span><br><span class="line">    ar = w / float(h)</span><br><span class="line">    <span class="comment"># 选择合适的区域，根据实际任务来，这里的基本都是四个数字一组</span></span><br><span class="line">    <span class="keyword">if</span> ar &gt; <span class="number">2.5</span> <span class="keyword">and</span> ar &lt; <span class="number">4.0</span>:</span><br><span class="line">        <span class="keyword">if</span> (w &gt; <span class="number">40</span> <span class="keyword">and</span> w &lt; <span class="number">55</span>) <span class="keyword">and</span> (h &gt; <span class="number">10</span> <span class="keyword">and</span> h &lt; <span class="number">20</span>):</span><br><span class="line">            <span class="comment">#符合的留下来</span></span><br><span class="line">            locs.append((x, y, w, h))</span><br><span class="line">            cv2.rectangle(concour_img,(x,y),(x+w,y+h),(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line"><span class="comment"># 将符合的轮廓从左到右排序</span></span><br><span class="line">locs = sorted(locs, key=<span class="keyword">lambda</span> x:x[<span class="number">0</span>])</span><br><span class="line">output = []</span><br><span class="line"><span class="comment"># 遍历每一个轮廓中的数字</span></span><br><span class="line"><span class="keyword">for</span> (i, (gX, gY, gW, gH)) <span class="keyword">in</span> enumerate(locs):</span><br><span class="line">    <span class="comment"># initialize the list of group digits</span></span><br><span class="line">    groupOutput = []</span><br><span class="line">    <span class="comment"># 根据坐标提取每一个组</span></span><br><span class="line">    group = gray[gY - <span class="number">5</span>:gY + gH + <span class="number">5</span>, gX - <span class="number">5</span>:gX + gW + <span class="number">5</span>]</span><br><span class="line">    <span class="comment">#cv_show(&#x27;group&#x27;,group)</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    group = cv2.threshold(group, <span class="number">0</span>, <span class="number">255</span>,</span><br><span class="line">        cv2.THRESH_BINARY | cv2.THRESH_OTSU)[<span class="number">1</span>]</span><br><span class="line">    <span class="comment">#cv_show(&#x27;group&#x27;,group)</span></span><br><span class="line">    <span class="comment"># 计算每一组的轮廓</span></span><br><span class="line">    digitCnts,hierarchy = cv2.findContours(group.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line">    digits_x=[]</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> digitCnts:</span><br><span class="line">        (x, y, w, h) = cv2.boundingRect(c)</span><br><span class="line">        digits_x.append(x)</span><br><span class="line">    indexs = np.argsort(digits_x)</span><br><span class="line">    c_digits = [digitCnts[c] <span class="keyword">for</span> c <span class="keyword">in</span> indexs]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 计算每一组中的每一个数值</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> c_digits:</span><br><span class="line">        <span class="comment"># 找到当前数值的轮廓，resize成合适的的大小</span></span><br><span class="line">        (x, y, w, h) = cv2.boundingRect(c)</span><br><span class="line">        roi = group[y:y + h, x:x + w]</span><br><span class="line">        roi = cv2.resize(roi, (<span class="number">57</span>, <span class="number">88</span>))</span><br><span class="line">        <span class="comment">#cv_show(&#x27;roi&#x27;,roi)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算匹配得分</span></span><br><span class="line">        scores = []</span><br><span class="line">        <span class="comment"># 在模板中计算每一个得分</span></span><br><span class="line">        <span class="keyword">for</span> (digit, digitROI) <span class="keyword">in</span> digits.items():</span><br><span class="line">            <span class="comment"># 模板匹配</span></span><br><span class="line">            result = cv2.matchTemplate(roi, digitROI,</span><br><span class="line">                cv2.TM_CCOEFF)</span><br><span class="line">            (_, score, _, _) = cv2.minMaxLoc(result)</span><br><span class="line">            scores.append(score)</span><br><span class="line">        <span class="comment"># 得到最合适的数字</span></span><br><span class="line">        groupOutput.append(str(np.argmax(scores)))</span><br><span class="line">    <span class="comment"># 画出来</span></span><br><span class="line">    cv2.rectangle(image, (gX - <span class="number">5</span>, gY - <span class="number">5</span>),</span><br><span class="line">        (gX + gW + <span class="number">5</span>, gY + gH + <span class="number">5</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>)</span><br><span class="line">    cv2.putText(image, <span class="string">&quot;&quot;</span>.join(groupOutput), (gX, gY - <span class="number">15</span>),</span><br><span class="line">        cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.65</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 得到结果</span></span><br><span class="line">    output.extend(groupOutput)</span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line"><span class="comment">#print(&quot;Credit Card Type: &#123;&#125;&quot;.format(FIRST_NUMBER[output[0]]))</span></span><br><span class="line">print(<span class="string">&quot;Credit Card #: &#123;&#125;&quot;</span>.format(<span class="string">&quot;&quot;</span>.join(output)))</span><br><span class="line">plt.imshow(image)</span><br></pre></td></tr></table></figure><ul><li>识别结果<br /><img src="/images/pasted-386.png" alt="" /></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="opencv" scheme="http://blog.guoming576.cn/categories/opencv/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
  <entry>
    <title>单目测距方法</title>
    <link href="http://blog.guoming576.cn/2021/02/05/%E5%8D%95%E7%9B%AE%E6%B5%8B%E8%B7%9D%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.guoming576.cn/2021/02/05/%E5%8D%95%E7%9B%AE%E6%B5%8B%E8%B7%9D%E6%96%B9%E6%B3%95/</id>
    <published>2021-02-05T05:21:04.000Z</published>
    <updated>2021-08-08T11:09:32.874Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1><ol><li>Mobileye论文<br />Vision-based ACC with a Single Camera: Bounds on Range and Range Rate Accuracy</li></ol><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/57004561">连接</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="programme" scheme="http://blog.guoming576.cn/categories/programme/"/>
    
    
      <category term="cv" scheme="http://blog.guoming576.cn/tags/cv/"/>
    
  </entry>
  
  <entry>
    <title>opencv透视变换</title>
    <link href="http://blog.guoming576.cn/2021/02/01/opencv%E9%80%8F%E8%A7%86%E5%8F%98%E6%8D%A2/"/>
    <id>http://blog.guoming576.cn/2021/02/01/opencv%E9%80%8F%E8%A7%86%E5%8F%98%E6%8D%A2/</id>
    <published>2021-02-01T13:41:15.000Z</published>
    <updated>2021-02-17T13:07:10.837Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h1><ul><li>待识别图像<br /><img src="/images/pasted-387.jpg" alt="" /></li></ul><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 设置参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order_points</span>(<span class="params">pts</span>):</span></span><br><span class="line">    <span class="comment"># 一共4个坐标点</span></span><br><span class="line">    rect = np.zeros((<span class="number">4</span>, <span class="number">2</span>), dtype = <span class="string">&quot;float32&quot;</span>)</span><br><span class="line">    <span class="comment"># 按顺序找到对应坐标0123分别是 左上，右上，右下，左下</span></span><br><span class="line">    <span class="comment"># 计算左上，右下</span></span><br><span class="line">    s = pts.sum(axis = <span class="number">1</span>)</span><br><span class="line">    rect[<span class="number">0</span>] = pts[np.argmin(s)]</span><br><span class="line">    rect[<span class="number">2</span>] = pts[np.argmax(s)]</span><br><span class="line">    <span class="comment"># 计算右上和左下</span></span><br><span class="line">    diff = np.diff(pts, axis = <span class="number">1</span>)</span><br><span class="line">    rect[<span class="number">1</span>] = pts[np.argmin(diff)]</span><br><span class="line">    rect[<span class="number">3</span>] = pts[np.argmax(diff)]</span><br><span class="line">    <span class="keyword">return</span> rect</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">four_point_transform</span>(<span class="params">image, pts</span>):</span></span><br><span class="line">    <span class="comment"># 获取输入坐标点</span></span><br><span class="line">    rect = order_points(pts)</span><br><span class="line">    (tl, tr, br, bl) = rect</span><br><span class="line">    <span class="comment"># 计算输入的w和h值</span></span><br><span class="line">    widthA = np.sqrt(((br[<span class="number">0</span>] - bl[<span class="number">0</span>]) ** <span class="number">2</span>) + ((br[<span class="number">1</span>] - bl[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    widthB = np.sqrt(((tr[<span class="number">0</span>] - tl[<span class="number">0</span>]) ** <span class="number">2</span>) + ((tr[<span class="number">1</span>] - tl[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    maxWidth = max(int(widthA), int(widthB))</span><br><span class="line"></span><br><span class="line">    heightA = np.sqrt(((tr[<span class="number">0</span>] - br[<span class="number">0</span>]) ** <span class="number">2</span>) + ((tr[<span class="number">1</span>] - br[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    heightB = np.sqrt(((tl[<span class="number">0</span>] - bl[<span class="number">0</span>]) ** <span class="number">2</span>) + ((tl[<span class="number">1</span>] - bl[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    maxHeight = max(int(heightA), int(heightB))</span><br><span class="line">    <span class="comment"># 变换后对应坐标位置</span></span><br><span class="line">    dst = np.array([</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [maxWidth - <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">        [maxWidth - <span class="number">1</span>, maxHeight - <span class="number">1</span>],</span><br><span class="line">        [<span class="number">0</span>, maxHeight - <span class="number">1</span>]], dtype = <span class="string">&quot;float32&quot;</span>)</span><br><span class="line">    <span class="comment"># 计算变换矩阵</span></span><br><span class="line">    M = cv2.getPerspectiveTransform(rect, dst)</span><br><span class="line">    warped = cv2.warpPerspective(image, M, (maxWidth, maxHeight))</span><br><span class="line">    <span class="comment"># 返回变换后结果</span></span><br><span class="line">    <span class="keyword">return</span> warped</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resize</span>(<span class="params">image, width=None, height=None, inter=cv2.INTER_AREA</span>):</span></span><br><span class="line">    dim = <span class="literal">None</span></span><br><span class="line">    (h, w) = image.shape[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> width <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">and</span> height <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line">    <span class="keyword">if</span> width <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        r = height / float(h)</span><br><span class="line">        dim = (int(w * r), height)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r = width / float(w)</span><br><span class="line">        dim = (width, int(h * r))</span><br><span class="line">    resized = cv2.resize(image, dim, interpolation=inter)</span><br><span class="line">    <span class="keyword">return</span> resized</span><br><span class="line"><span class="comment"># 读取输入</span></span><br><span class="line">image = cv2.imread(<span class="string">&quot;images/ocr/receipt.jpg&quot;</span>)</span><br><span class="line"><span class="comment">#坐标也会相同变化</span></span><br><span class="line">ratio = image.shape[<span class="number">0</span>] / <span class="number">500.0</span></span><br><span class="line">orig = image.copy()</span><br><span class="line">image = resize(orig, height = <span class="number">500</span>)</span><br><span class="line">plt.imshow(image)</span><br><span class="line"><span class="comment"># 预处理</span></span><br><span class="line">gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)</span><br><span class="line">gray = cv2.GaussianBlur(gray, (<span class="number">5</span>, <span class="number">5</span>), <span class="number">0</span>)</span><br><span class="line">edged = cv2.Canny(gray, <span class="number">75</span>, <span class="number">200</span>)</span><br><span class="line"><span class="comment"># 展示预处理结果</span></span><br><span class="line">plt.imshow(edged)</span><br><span class="line"><span class="comment"># 轮廓检测</span></span><br><span class="line">cnts = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)[<span class="number">0</span>]</span><br><span class="line">cnts = sorted(cnts, key = cv2.contourArea, reverse = <span class="literal">True</span>)[:<span class="number">5</span>]</span><br><span class="line"><span class="comment"># 遍历轮廓</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> cnts:</span><br><span class="line">    <span class="comment"># 计算轮廓近似</span></span><br><span class="line">    peri = cv2.arcLength(c, <span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># C表示输入的点集</span></span><br><span class="line">    <span class="comment"># epsilon表示从原始轮廓到近似轮廓的最大距离，它是一个准确度参数</span></span><br><span class="line">    <span class="comment"># True表示封闭的</span></span><br><span class="line">    approx = cv2.approxPolyDP(c, <span class="number">0.02</span> * peri, <span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 4个点的时候就拿出来</span></span><br><span class="line">    <span class="keyword">if</span> len(approx) == <span class="number">4</span>:</span><br><span class="line">        screenCnt = approx</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># 展示结果</span></span><br><span class="line">cv2.drawContours(image, [screenCnt], <span class="number">-1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">plt.imshow( image)</span><br><span class="line"><span class="comment"># 透视变换</span></span><br><span class="line">warped = four_point_transform(orig, screenCnt.reshape(<span class="number">4</span>, <span class="number">2</span>) * ratio)</span><br><span class="line"><span class="comment"># 二值处理</span></span><br><span class="line">warped = cv2.cvtColor(warped, cv2.COLOR_BGR2GRAY)</span><br><span class="line">ref = cv2.threshold(warped, <span class="number">100</span>, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">plt.imshow(ref)</span><br><span class="line"><span class="comment"># 展示结果</span></span><br><span class="line">plt.imshow(resize(orig, height = <span class="number">650</span>))</span><br></pre></td></tr></table></figure><ul><li>识别结果<br /><img src="/images/pasted-388.jpg" alt="" /></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="opencv" scheme="http://blog.guoming576.cn/categories/opencv/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
  <entry>
    <title>相机标定</title>
    <link href="http://blog.guoming576.cn/2021/01/16/%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A/"/>
    <id>http://blog.guoming576.cn/2021/01/16/%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A/</id>
    <published>2021-01-16T03:21:13.000Z</published>
    <updated>2021-02-08T14:03:08.005Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="相机模型"><a class="markdownIt-Anchor" href="#相机模型"></a> 相机模型</h1><h2 id="坐标系"><a class="markdownIt-Anchor" href="#坐标系"></a> 坐标系</h2><ul><li><p>世界坐标系：物体在真实世界的三维坐标：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>X</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X_w,Y_w,Z_w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li><li><p>相机坐标系：以相机光学中心为原点的坐标系，光轴与z轴重合：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>X</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Z</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X_c,Y_c,Z_c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li><li><p>图像坐标系：相机拍摄图像的坐标系，原点为相机光轴与成像平面的交点，图像的中心点：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p></li><li><p>像素坐标系：由于图像组成是像素，存储位置的原点在左上角：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></p></li><li><p>前三个坐标系的单位是毫米，最后一个是像素</p></li></ul><h2 id="坐标系转换"><a class="markdownIt-Anchor" href="#坐标系转换"></a> 坐标系转换</h2><p><strong>世界坐标系-相机坐标系</strong></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>X</mi><mi>c</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Y</mi><mi>c</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>c</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>t</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>X</mi><mi>w</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Y</mi><mi>w</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>w</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}X_c\\Y_c\\Z_c\\1\end{bmatrix}=\begin{bmatrix}R&amp;t\\0&amp;1\end{bmatrix}\begin{bmatrix}X_w\\Y_w\\Z_w\\1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></li></ul><p><strong>相机坐标系-图像坐标系</strong></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mfrac><mi>f</mi><msub><mi>Z</mi><mi>c</mi></msub></mfrac><msub><mi>X</mi><mi>c</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mfrac><mi>f</mi><msub><mi>Z</mi><mi>c</mi></msub></mfrac><msub><mi>Y</mi><mi>c</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}x=\frac{f}{Z_c}X_c\\y=\frac{f}{Z_c}Y_c\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7031em;"><span style="top:-3.7031em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2031em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi>f</mi><msub><mi>Z</mi><mi>c</mi></msub></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi>f</mi><msub><mi>Z</mi><mi>c</mi></msub></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>1</mn><msub><mi>Z</mi><mi>c</mi></msub></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>X</mi><mi>c</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Y</mi><mi>c</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>c</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}x\\y\\1\end{bmatrix}=\begin{bmatrix}\frac{f}{Z_c}&amp;0&amp;0&amp;0\\0&amp;\frac{f}{Z_c}&amp;0&amp;0\\0&amp;0&amp;\frac{1}{Z_c}&amp;0\end{bmatrix}\begin{bmatrix}X_c\\Y_c\\Z_c\\1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.27242em;"><span style="top:-4.340204em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.962888em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.6726800000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7724199999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.27242em;"><span style="top:-4.340204em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.962888em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.6726800000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7724199999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.27242em;"><span style="top:-4.340204em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.962888em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.6726800000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7724199999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.27242em;"><span style="top:-4.340204em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.962888em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.6726800000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7724199999999999em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></li></ul><p><strong>图像坐标系-像素坐标系</strong></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mo>=</mo><msub><mi>c</mi><mi>x</mi></msub><mo>+</mo><mi>x</mi><mo>⋅</mo><msub><mi>f</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>v</mi><mo>=</mo><msub><mi>c</mi><mi>y</mi></msub><mo>+</mo><mi>y</mi><mo>⋅</mo><msub><mi>f</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}u=c_x+x\cdot f_x\\v=c_y+y\cdot f_y\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>f</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>f</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}u\\v\\1\end{bmatrix}=\begin{bmatrix}f_x&amp;0&amp;c_x\\0&amp;f_y&amp;c_y\\0&amp;0&amp;1\end{bmatrix}\begin{bmatrix}x\\y\\1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></li></ul><h1 id="畸变模型"><a class="markdownIt-Anchor" href="#畸变模型"></a> 畸变模型</h1><ul><li>相机的畸变一般只考虑径向畸变和切向畸变</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>k</mi><mn>1</mn></msub><msup><mi>r</mi><mn>2</mn></msup><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub><msup><mi>r</mi><mn>4</mn></msup><mo>+</mo><msub><mi>k</mi><mn>3</mn></msub><msup><mi>r</mi><mn>6</mn></msup><mo stretchy="false">)</mo><mo>+</mo><mn>2</mn><msub><mi>p</mi><mn>1</mn></msub><mi>x</mi><mi>y</mi><mo>+</mo><msub><mi>p</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msup><mi>r</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>y</mi><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mi>y</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>k</mi><mn>1</mn></msub><msup><mi>r</mi><mn>2</mn></msup><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub><msup><mi>r</mi><mn>4</mn></msup><mo>+</mo><msub><mi>k</mi><mn>3</mn></msub><msup><mi>r</mi><mn>6</mn></msup><mo stretchy="false">)</mo><mo>+</mo><mn>2</mn><msub><mi>p</mi><mn>2</mn></msub><mi>x</mi><mi>y</mi><mo>+</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msup><mi>r</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><msup><mi>y</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}x_{distorted}=x(1+k_1r^2+k_2r^4+k_3r^6)+2p_1xy+p_2(r^2+2x^2)\\y_{distorted}=y(1+k_1r^2+k_2r^4+k_3r^6)+2p_2xy+p_1(r^2+2y^2)\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><ul><li>其中：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">r^2=x^2+y^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li></ul></li></ul><p><img src="/images/pasted-379.png" alt="" /></p><ul><li>k&gt;0，枕形畸变</li><li>k&lt;0，桶形畸变</li></ul><h1 id="相机标定"><a class="markdownIt-Anchor" href="#相机标定"></a> 相机标定</h1><h2 id="标定结果"><a class="markdownIt-Anchor" href="#标定结果"></a> 标定结果</h2><ul><li>内参：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>f</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f_x,f_y,c_x,c_y,k_1,k_2,k_3,p_1,p_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>外参：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo separator="true">,</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">R,t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span></span></span></span></li></ul><h2 id="张氏标定法"><a class="markdownIt-Anchor" href="#张氏标定法"></a> 张氏标定法<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2><ul><li><p>将问题转化为三维投影二维后与图像通过最小二乘优化求解</p></li><li><p>目标函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mi mathvariant="normal">∥</mi><msub><mi>m</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><mover accent="true"><mi>m</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><msub><mi>R</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∥</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n}\sum_{j=1}^{m}\|m_{ij}-\hat{m}(A,R_i,t_i,M_j)\|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24011em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∥</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∥</span></span></span></span></p></li><li><p>但是优化量太多，对初值很敏感，容易陷入局部最优。张正友提出了一个获取初始值的方法</p></li><li><p>假定目标点在z=0的平面上，坐标变换可以简化为：</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>A</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>r</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>r</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>r</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>t</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>X</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>A</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>r</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>r</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>t</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>X</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">s\begin{bmatrix}u\\v\\1\end{bmatrix}=A\begin{bmatrix}r_1&amp;r_2&amp;r_3&amp;t\end{bmatrix}\begin{bmatrix}X\\Y\\Z\\1\end{bmatrix}=A\begin{bmatrix}r_1&amp;r_2&amp;t\end{bmatrix}\begin{bmatrix}X\\Y\\1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>这里就要求标定板要做成平面，这时问题可以简化为利用两组图像想，利用单应矩阵的求解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>R</mi><mo separator="true">,</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">A,R,t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mn>3</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>λ</mi><mi>A</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>r</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>r</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>t</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}h_1&amp;h_2&amp;h_3\end{bmatrix}=\lambda A\begin{bmatrix}r_1&amp;r_2&amp;t\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord mathdefault">λ</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></p></li><li><p>最后优化目标方程，得到标定的最优解</p></li></ul><p><strong>改进</strong></p><ul><li>张正友方法没有限制圆环和棋盘格的标靶，圆环与棋盘格的优缺点</li><li>圆形的检测精度比棋盘格更高，但是存在偏心误差：投影后的椭圆中心不是圆心</li></ul><p><img src="/images/pasted-380.png" alt="" /></p><ul><li>圆环检测优化<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li></ul><ul><li>标定靶检测边缘对检测结果的影响<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></li></ul><h2 id="标定操作"><a class="markdownIt-Anchor" href="#标定操作"></a> 标定操作</h2><ul><li>拍摄机位和数量的选择<ul><li>尽量将标定板在图形范围内都出现</li><li>不同的角度旋转</li></ul></li></ul><h2 id="标定评价"><a class="markdownIt-Anchor" href="#标定评价"></a> 标定评价</h2><ul><li><p>重投影误差(Re-projection error)：目标函数的误差</p></li><li><p>影响因素：</p><ul><li>检测精度</li><li>噪声</li><li>分辨率</li><li>优化</li></ul></li></ul><h1 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h1><h2 id="单目pnp问题"><a class="markdownIt-Anchor" href="#单目pnp问题"></a> 单目：PnP问题</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::solvePnP</span><br></pre></td></tr></table></figure><h2 id="双目测量"><a class="markdownIt-Anchor" href="#双目测量"></a> 双目测量</h2><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><ul><li>opencv的标定函数</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::calibrateCamera(object_points,image_points,imageSize,cam_intr_para,distCoeffs,rvecs,tvecs);</span><br></pre></td></tr></table></figure><h2 id="标定"><a class="markdownIt-Anchor" href="#标定"></a> 标定</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2,traceback</span><br><span class="line">chess_corner_x = <span class="number">10</span>  <span class="comment"># </span></span><br><span class="line">chess_corner_y = <span class="number">8</span>  </span><br><span class="line">criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER,<span class="number">30</span>,<span class="number">0.001</span>)  <span class="comment"># 定义：迭代最大次数，角点变化的最小值</span></span><br><span class="line"></span><br><span class="line">obj_p = np.mgrid[:chess_corner_x,:chess_corner_y].T.reshape(<span class="number">-1</span>,<span class="number">2</span>)</span><br><span class="line">z_p = np.zeros((chess_corner_x*chess_corner_y))</span><br><span class="line">obj_p = np.c_[obj_p,z_p].astype(np.float32)  <span class="comment"># 保存每个格子的位置，z轴的值为0</span></span><br><span class="line"></span><br><span class="line">obj_points = []  <span class="comment"># 真实世界坐标系</span></span><br><span class="line">img_points = []  <span class="comment"># 图像坐标系</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#obj_p = np.zeros((chess_corner_x*chess_corner_y,3))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detect</span>():</span></span><br><span class="line">    cap = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            ret, frame = cap.read()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)</span><br><span class="line">            <span class="comment"># 检测棋盘角点像素坐标</span></span><br><span class="line">            ret, corners = cv2.findChessboardCorners(gray,(chess_corner_x,chess_corner_y),<span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> ret:</span><br><span class="line">                <span class="comment"># 寻找亚像素坐标，窗口大小5*5</span></span><br><span class="line">                corners2 = cv2.cornerSubPix(gray,corners,(<span class="number">11</span>,<span class="number">11</span>),(<span class="number">-1</span>,<span class="number">-1</span>),criteria)</span><br><span class="line">                obj_points.append(obj_p)  <span class="comment"># 物点</span></span><br><span class="line">                img_points.append(corners2)</span><br><span class="line">                frame = cv2.drawChessboardCorners(frame,(chess_corner_x,chess_corner_y),corners2,ret)</span><br><span class="line">            cv2.imshow(<span class="string">&quot;cap&quot;</span>, frame)</span><br><span class="line">            <span class="keyword">if</span> cv2.waitKey(<span class="number">30</span>) == <span class="number">27</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        cap.release()</span><br><span class="line">        cv2.destroyAllWindows()</span><br><span class="line">detect()</span><br><span class="line">ret,mrx,dist,rvecs,tveces = cv2.calibrateCamera(obj_points,img_points,(chess_corner_x,chess_corner_y),<span class="literal">None</span>,<span class="literal">None</span>)</span><br><span class="line"><span class="keyword">if</span> ret:</span><br><span class="line">    print(<span class="string">&quot;done!&quot;</span>,mrx,dist,rvecs,tveces)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;calibration error&quot;</span>)</span><br><span class="line">tot_mean_error=<span class="number">0</span></span><br><span class="line">mean_error_image = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(obj_points)):</span><br><span class="line">    reprojected_points,_ = cv2.projectPoints(obj_points[i],rvecs[i],tveces[i],mrx,dist)</span><br><span class="line">    reprojected_points=reprojected_points.reshape(<span class="number">-1</span>,<span class="number">2</span>)</span><br><span class="line">    mean_error_image=np.sum(np.sum(np.abs(img_points[i]-reprojected_points)**<span class="number">2</span>,axis=<span class="number">-1</span>)**(<span class="number">1.</span>/<span class="number">2</span>))/np.alen(reprojected_points)</span><br><span class="line">    tot_mean_error +=mean_error_image</span><br><span class="line">mean_error=tot_mean_error/len(obj_points)</span><br><span class="line">print(<span class="string">&quot;Mean reprojection error: &quot;</span>,mean_error)</span><br><span class="line">tot_error=<span class="number">0</span></span><br><span class="line">total_points=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(obj_points)):</span><br><span class="line">    reprojected_points,_ = cv2.projectPoints(obj_points[i],rvecs[i],tveces[i],mrx,dist)</span><br><span class="line">    reprojected_points=reprojected_points.reshape(<span class="number">-1</span>,<span class="number">2</span>)</span><br><span class="line">    tot_error+=np.sum(np.abs(img_points[i]-reprojected_points)**<span class="number">2</span>)</span><br><span class="line">    total_points+=len(obj_points[i])</span><br><span class="line">mean_error=np.sqrt(tot_error/total_points)</span><br><span class="line">print(<span class="string">&quot;Mean reprojection error: &quot;</span>,mean_error)</span><br></pre></td></tr></table></figure><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>A Flexible New Technique for Camera Calibration <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Accurate camera calibration using iterative refinement of control points <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>Algorithm for computation of region-based image edge profile acutance <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="opencv" scheme="http://blog.guoming576.cn/categories/opencv/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
  <entry>
    <title>opencv4神经网络模块</title>
    <link href="http://blog.guoming576.cn/2021/01/12/opencv4_DNN/"/>
    <id>http://blog.guoming576.cn/2021/01/12/opencv4_DNN/</id>
    <published>2021-01-12T14:19:03.000Z</published>
    <updated>2021-02-08T14:02:40.783Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><ul><li>opencv4对深度神经网络提供了支持，使得opencv4对图像处理的能力大大拓展。<a href="https://github.com/opencv/opencv/wiki/Deep-Learning-in-OpenCV">官方介绍</a></li></ul><h1 id="网络模型"><a class="markdownIt-Anchor" href="#网络模型"></a> 网络模型</h1><h2 id="yolov3"><a class="markdownIt-Anchor" href="#yolov3"></a> YOLOV3</h2><ul><li><a href="https://pjreddie.com/darknet/yolo">地址</a></li><li>下载网络权重文件，网络配置yml文件+</li></ul><h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><table><thead><tr><th>功能</th><th>说明</th></tr></thead><tbody><tr><td>引入</td><td><code>#include&lt;opencv2/dnn.hpp&gt;</code></td></tr><tr><td>命名空间</td><td><code>using namespace cv::dnn;</code></td></tr><tr><td>初始化模型</td><td><code>Net net = readNetFromCaffe(model_prototxt, model_caffe);</code></td></tr><tr><td>设置计算后台</td><td><code>net.setPreferableBackend(DNN_BACKEND_OPENCV);</code></td></tr><tr><td>设置计算设备</td><td><code>net.setPreferableTarget(DNN_TARGET_CUDA);</code></td></tr><tr><td>打印模型结构</td><td><code>vector&lt;string&gt; layer_names = net.getLayerNames();</code><br><code>for (auto i : layer_names) &#123;</code><br><code>int id = net.getLayerId(i);</code><br><code>auto layer = net.getLayer(id);</code><br><code>//cout&lt;&lt;id&lt;&lt;layer &lt;&lt; i &lt;&lt; endl;</code><br><code>printf(&quot;layerid:%d,type:%s,name:%s\n&quot;, id,layer-&gt;type.c_str(), layer-&gt;name.c_str());</code><br><code>&#125;</code></td></tr><tr><td>定义测试图像</td><td><code>Mat inputBlob = blobFromImage(src,1.,Size(w,h),Scalar(117., 117., 117.),true,false);</code></td></tr><tr><td>计算输出</td><td><code>Mat probMat = net.forward();</code>可以指定任意一层的输出<br><code>Mat prob = probMat.reshape(1, 1);</code><br><code>Point classNum;double classProb;</code><br><code>minMaxLoc(prob, NULL, &amp;classProb, NULL, &amp;classNum);</code></td></tr></tbody></table><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><ul><li>需要准备训练好的模型权重文件，模型配置文件，配置文件中定义了模型结构、图像输入后的图像尺寸，压缩比例，均值等信息。<a href="https://github.com/opencv/opencv/blob/master/samples/dnn/models.yml">官方</a>也给定了一些samples供使用。</li></ul><h2 id="ssd"><a class="markdownIt-Anchor" href="#ssd"></a> ssd</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;opencv2/dnn.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv::dnn;</span><br><span class="line">String objNames[] = &#123; <span class="string">&quot;background&quot;</span>,<span class="string">&quot;aeroplane&quot;</span>,<span class="string">&quot;bicycle&quot;</span> ,<span class="string">&quot;bird&quot;</span> ,<span class="string">&quot;boat&quot;</span> ,<span class="string">&quot;bottle&quot;</span> ,<span class="string">&quot;bus&quot;</span> ,<span class="string">&quot;car&quot;</span> ,<span class="string">&quot;cat&quot;</span> ,</span><br><span class="line"><span class="string">&quot;chair&quot;</span> ,<span class="string">&quot;cow&quot;</span> ,<span class="string">&quot;diningtable&quot;</span> ,<span class="string">&quot;dog&quot;</span> ,<span class="string">&quot;horse&quot;</span> ,<span class="string">&quot;motorbike&quot;</span> ,<span class="string">&quot;person&quot;</span> ,<span class="string">&quot;pottedplant&quot;</span> ,<span class="string">&quot;sheep&quot;</span> ,<span class="string">&quot;sofa&quot;</span> ,</span><br><span class="line"><span class="string">&quot;train&quot;</span> ,<span class="string">&quot;tvmoitor&quot;</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> model_path = <span class="string">R&quot;(model\ssd\)&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> model_cfg_file = model_path + <span class="string">&quot;MobileNetSSD_deploy.caffemodel&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> model_pro_file = model_path + <span class="string">&quot;MobileNetSSD_deploy.prototxt&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> model_label_file = model_path + <span class="string">&quot;labelmap_det.txt&quot;</span>;</span><br><span class="line">    Net net = readNetFromCaffe(model_pro_file, model_cfg_file);</span><br><span class="line">    net.setPreferableBackend(DNN_BACKEND_OPENCV);</span><br><span class="line">    <span class="comment">//net.setPreferableTarget(DNN_TARGET_CUDA);</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; layer_names = net.getLayerNames();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : layer_names) &#123;</span><br><span class="line">        <span class="keyword">int</span> id = net.getLayerId(i);</span><br><span class="line">        <span class="keyword">auto</span> layer = net.getLayer(id);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;id&lt;&lt;layer &lt;&lt; i &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//printf(&quot;layerid:%d,type:%s,name:%s\n&quot;, id, layer-&gt;type.c_str(), layer-&gt;name.c_str());</span></span><br><span class="line">    &#125;</span><br><span class="line">    Mat src = imread(<span class="string">R&quot;(Pictures\1.jpg)&quot;</span>);</span><br><span class="line">    imshow(<span class="string">&quot;input&quot;</span>, src);</span><br><span class="line">    Mat blob = blobFromImage(src, <span class="number">0.007843</span>, Size(<span class="number">300</span>, <span class="number">300</span>), Scalar(<span class="number">127.5</span>, <span class="number">127.5</span>, <span class="number">127.5</span>), <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">    net.setInput(blob, <span class="string">&quot;data&quot;</span>);</span><br><span class="line">    Mat detection = net.forward(<span class="string">&quot;detection_out&quot;</span>);</span><br><span class="line">    <span class="function">Mat <span class="title">detectionMat</span><span class="params">(detection.size[<span class="number">2</span>], detection.size[<span class="number">3</span>], CV_32F, detection.ptr&lt;<span class="keyword">float</span>&gt;())</span></span>;</span><br><span class="line">    <span class="keyword">float</span> confidence_trhreshold = <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; detectionMat.rows; i++) &#123;</span><br><span class="line">        <span class="keyword">float</span> score = detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (score &gt; confidence_trhreshold) &#123;</span><br><span class="line">            <span class="keyword">size_t</span> objIndex = (<span class="keyword">size_t</span>)(detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">float</span> tl_x = detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">3</span>) * src.cols;</span><br><span class="line">            <span class="keyword">float</span> tl_y = detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">4</span>) * src.rows;</span><br><span class="line">            <span class="keyword">float</span> br_x = detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">5</span>) * src.cols;</span><br><span class="line">            <span class="keyword">float</span> br_y = detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">6</span>) * src.rows;</span><br><span class="line">            <span class="function">Rect <span class="title">box</span><span class="params">((<span class="keyword">int</span>)tl_x, (<span class="keyword">int</span>)tl_y, (<span class="keyword">int</span>)(br_x - tl_x), (<span class="keyword">int</span>)(br_y - tl_y))</span></span>;</span><br><span class="line">            rectangle(src, box, Scalar(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>, <span class="number">8</span>, <span class="number">0</span>);</span><br><span class="line">            putText(src, format(<span class="string">&quot;score:%.2f,index:%s&quot;</span>,score, objNames[objIndex].c_str()), box.tl(), FONT_HERSHEY_PLAIN, <span class="number">0.75</span>, Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">25</span>), <span class="number">1</span>, <span class="number">8</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    imshow(<span class="string">&quot;res&quot;</span>, src);</span><br><span class="line">    waitKey(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="opencv" scheme="http://blog.guoming576.cn/categories/opencv/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
  <entry>
    <title>装饰器</title>
    <link href="http://blog.guoming576.cn/2021/01/02/decorator/"/>
    <id>http://blog.guoming576.cn/2021/01/02/decorator/</id>
    <published>2021-01-02T07:58:23.000Z</published>
    <updated>2021-01-02T08:15:52.093Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li>装饰器是python的一种语法糖，可以简洁的在函数加入操作。</li></ul><h1 id="函数中返回函数"><a class="markdownIt-Anchor" href="#函数中返回函数"></a> 函数中返回函数<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">a_func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapTheFunction</span>():</span></span><br><span class="line">        print(<span class="string">&quot;I am doing some boring work before executing a_func()&quot;</span>)</span><br><span class="line">        a_func()</span><br><span class="line">        print(<span class="string">&quot;I am doing some boring work after executing a_func()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapTheFunction</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function</span>():</span></span><br><span class="line">    print(<span class="string">&quot;I am the function which needs some decoration to remove my foul smell&quot;</span>)</span><br><span class="line">function = decorator(function)</span><br><span class="line">function()</span><br></pre></td></tr></table></figure><ul><li>@符号是一个简短的方式来生成一个被装饰的函数</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">a_func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapTheFunction</span>():</span></span><br><span class="line">        print(<span class="string">&quot;I am doing some boring work before executing a_func()&quot;</span>)</span><br><span class="line">        a_func()</span><br><span class="line">        print(<span class="string">&quot;I am doing some boring work after executing a_func()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapTheFunction</span><br><span class="line"><span class="meta">@decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function</span>():</span></span><br><span class="line">    print(<span class="string">&quot;I am the function which needs some decoration to remove my foul smell&quot;</span>)</span><br><span class="line">function()</span><br></pre></td></tr></table></figure><ul><li>我们运行如下代码会存在一个问题：</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">print(function.__name__)</span><br><span class="line"><span class="comment"># Output: wrapTheFunction</span></span><br></pre></td></tr></table></figure><ul><li>这并不是我们想要的！Ouput输出应该是&quot;function&quot;。这里的函数被warpTheFunction替代了。它重写了我们函数的名字和注释文档(docstring)。幸运的是Python提供给我们一个简单的函数来解决这个问题，那就是functools.wraps。我们修改上一个例子来使用functools.wraps：</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">a_func</span>):</span></span><br><span class="line"><span class="meta">    @wraps(a_func)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapTheFunction</span>():</span></span><br><span class="line">        print(<span class="string">&quot;I am doing some boring work before executing a_func()&quot;</span>)</span><br><span class="line">        a_func()</span><br><span class="line">        print(<span class="string">&quot;I am doing some boring work after executing a_func()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapTheFunction</span><br><span class="line"><span class="meta">@decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Hey yo! Decorate me!&quot;&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;I am the function which needs some decoration to &quot;</span></span><br><span class="line">          <span class="string">&quot;remove my foul smell&quot;</span>)</span><br><span class="line">print(function.__name__)</span><br><span class="line"><span class="comment"># Output: function</span></span><br></pre></td></tr></table></figure><h1 id="带参数的装饰器"><a class="markdownIt-Anchor" href="#带参数的装饰器"></a> 带参数的装饰器</h1><ul><li>在函数中嵌入装饰器：以日志为例，创建一个包裹函数，能让我们指定一个用于输出的日志文件。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logit</span>(<span class="params">logfile=<span class="string">&#x27;out.log&#x27;</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">logging_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line"><span class="meta">        @wraps(func)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapped_function</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            log_string = func.__name__ + <span class="string">&quot; was called&quot;</span></span><br><span class="line">            print(log_string)</span><br><span class="line">            <span class="comment"># 打开logfile，并写入内容</span></span><br><span class="line">            <span class="keyword">with</span> open(logfile, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> opened_file:</span><br><span class="line">                <span class="comment"># 现在将日志打到指定的logfile</span></span><br><span class="line">                opened_file.write(log_string + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> wrapped_function</span><br><span class="line">    <span class="keyword">return</span> logging_decorator</span><br><span class="line"><span class="meta">@logit()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc1</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">myfunc1()</span><br><span class="line"><span class="comment"># Output: myfunc1 was called</span></span><br><span class="line"><span class="comment"># 现在一个叫做 out.log 的文件出现了，里面的内容就是上面的字符串</span></span><br><span class="line"><span class="meta">@logit(logfile=&#x27;func2.log&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc2</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">myfunc2()</span><br><span class="line"><span class="comment"># Output: myfunc2 was called</span></span><br><span class="line"><span class="comment"># 现在一个叫做 func2.log 的文件出现了，里面的内容就是上面的字符串</span></span><br></pre></td></tr></table></figure><h1 id="装饰器类"><a class="markdownIt-Anchor" href="#装饰器类"></a> 装饰器类</h1><ul><li>现在我们有了能用于正式环境的logit装饰器，但当我们的应用的某些部分还比较脆弱时，异常也许是需要更紧急关注的事情。比方说有时你只想打日志到一个文件。而有时你想把引起你注意的问题发送到一个email，同时也保留日志，留个记录。这是一个使用继承的场景，但目前为止我们只看到过用来构建装饰器的函数。</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">logit</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, logfile=<span class="string">&#x27;out.log&#x27;</span></span>):</span></span><br><span class="line">        self.logfile = logfile</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, func</span>):</span></span><br><span class="line"><span class="meta">        @wraps(func)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapped_function</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            log_string = func.__name__ + <span class="string">&quot; was called&quot;</span></span><br><span class="line">            print(log_string)</span><br><span class="line">            <span class="comment"># 打开logfile并写入</span></span><br><span class="line">            <span class="keyword">with</span> open(self.logfile, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> opened_file:</span><br><span class="line">                <span class="comment"># 现在将日志打到指定的文件</span></span><br><span class="line">                opened_file.write(log_string + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="comment"># 现在，发送一个通知</span></span><br><span class="line">            self.notify()</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> wrapped_function</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">notify</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># logit只打日志，不做别的</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>这个实现有一个附加优势，在于比嵌套函数的方式更加整洁，而且包裹一个函数还是使用跟以前一样的语法：</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">@logit()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc1</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h1 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h1><h2 id="实现重试策略"><a class="markdownIt-Anchor" href="#实现重试策略"></a> 实现重试策略<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.runoob.com/w3cnote/python-func-decorators.html">链接</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/weixin_42731853/article/details/111351730">链接</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="programme" scheme="http://blog.guoming576.cn/categories/programme/"/>
    
    
      <category term="python" scheme="http://blog.guoming576.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>TensorRT</title>
    <link href="http://blog.guoming576.cn/2020/12/05/tensorRT/"/>
    <id>http://blog.guoming576.cn/2020/12/05/tensorRT/</id>
    <published>2020-12-05T10:32:53.000Z</published>
    <updated>2021-09-12T11:34:01.705Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>TensorRT</p></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><ul><li><p><a href="https://docs.nvidia.com/deeplearning/tensorrt/developer-guide/index.html">TensorRT</a>是一个高性能的深度学习推理（Inference）优化器，可以为深度学习应用提供低延迟、高吞吐率的部署推理。TensorRT可用于对超大规模数据中心、嵌入式平台或自动驾驶平台进行推理加速。TensorRT现已能支持TensorFlow、Caffe、Mxnet、Pytorch等几乎所有的深度学习框架，将TensorRT和NVIDIA的GPU结合起来，能在几乎所有的框架中进行快速和高效的部署推理。</p></li><li><p>TensorRT 是一个C<ins>库，从 TensorRT 3 开始提供C</ins> API和Python API，主要用来针对 NVIDIA GPU进行 高性能推理（Inference）加速。现在最新版TensorRT是4.0版本。</p></li><li><p>可以认为tensorRT是一个只有前向传播的深度学习框架，这个框架可以将 Caffe，TensorFlow的网络模型解析，然后与tensorRT中对应的层进行一一映射，把其他框架的模型统一全部 转换到tensorRT中，然后在tensorRT中可以针对NVIDIA自家GPU实施优化策略，并进行部署加速。</p></li><li><p>目前TensorRT4.0 几乎可以支持所有常用的深度学习框架，对于caffe和TensorFlow来说，tensorRT可以直接解析他们的网络模型；对于caffe2，pytorch，mxnet，chainer，CNTK等框架则是首先要将模型转为 ONNX 的通用深度学习模型，然后对ONNX模型做解析。而tensorflow和MATLAB已经将TensorRT集成到框架中去了。</p></li><li><p>ONNX（Open Neural Network Exchange）是微软和Facebook携手开发的开放式神经网络交换工具，也就是说不管用什么框架训练，只要转换为ONNX模型，就可以放在其他框架上面去inference。这是一种统一的神经网络模型定义和保存方式，上面提到的除了tensorflow之外的其他框架官方应该都对onnx做了支持，而ONNX自己开发了对tensorflow的支持。从深度学习框架方面来说，这是各大厂商对抗谷歌tensorflow垄断地位的一种有效方式；从研究人员和开发者方面来说，这可以使开发者轻易地在不同机器学习工具之间进行转换，并为项目选择最好的组合方式，加快从研究到生产的速度。</p></li></ul><p><img src="/images/pasted-271.png" alt="tensorRT" /></p><h2 id="支持的层"><a class="markdownIt-Anchor" href="#支持的层"></a> 支持的层</h2><table><thead><tr><th>层</th><th>支持</th></tr></thead><tbody><tr><td>Activation</td><td>ReLU, tanh and sigmoid</td></tr><tr><td>Concatenation</td><td>: Link together multiple tensors across the channel dimension.</td></tr><tr><td>Convolution</td><td>3D，2D</td></tr><tr><td>Deconvolution</td><td>Fully</td></tr><tr><td>ElementWise</td><td>sum, product or max of two tensors</td></tr><tr><td>Pooling</td><td>max and average</td></tr><tr><td>Padding</td><td>Flatten</td></tr><tr><td>SoftMax</td><td>cross-channel only</td></tr><tr><td>RNN</td><td>RNN, GRU, and LSTM</td></tr><tr><td>Scale</td><td>Affine transformation and/or exponentiation by constant values</td></tr><tr><td>Shuffle</td><td>Reshuffling of tensors , reshape or transpose data</td></tr><tr><td>Squeeze</td><td>Removes dimensions of size 1 from the shape of a tensor</td></tr><tr><td>Unary</td><td>Supported operations are exp, log, sqrt, recip, abs and neg</td></tr><tr><td>Plugin</td><td>integrate custom layer implementations that TensorRT does not natively support.</td></tr></tbody></table><ul><li><p>基本上比较经典的层比如，卷积，反卷积，全连接，RNN，softmax等，在tensorRT中都是有对应的实现方式的，tensorRT是可以直接解析的。</p></li><li><p>但是由于现在深度学习技术发展日新月异，各种不同结构的自定义层（比如：STN）层出不穷，所以tensorRT是不可能全部支持当前存在的所有层的。那对于这些自定义的层tensorRT中有一个 Plugin 层，这个层提供了 API 可以由用户自己定义tensorRT不支持的层。</p></li></ul><p><img src="/images/pasted-272.png" alt="TensorRT-plugin" /></p><h2 id="优化方式"><a class="markdownIt-Anchor" href="#优化方式"></a> 优化方式</h2><ul><li><p>TensorRT优化方法主要有以下几种方式，最主要的是两种：层间融合或张量融合（Layer &amp; Tensor Fusion）、数据精度校准（Weight &amp;Activation Precision Calibration）。<br /><img src="/images/pasted-273.png" alt="TensorRT-optimize-method" /></p></li><li><p><a href="https://www.cnblogs.com/qccz123456/p/11767858.html">详细介绍</a></p></li></ul><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p><strong>cuda</strong></p><ul><li>首先要在机器上安装cuda，在<a href="https://developer.nvidia.com/cuda-toolkit-archive">官网</a>找到对应的系统下载安装即可。</li><li>完成后可以测试是否成功：<code>nvcc --version</code><br /><strong>cudnn</strong></li><li>安装cudnn，<a href="https://developer.nvidia.com/rdp/cudnn-archive">官网</a>。</li><li>把cudnn解压到cuda路径即可</li></ul><p><strong>配置环境变量</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> CUDA_HOME=/usr/<span class="built_in">local</span>/cuda</span><br><span class="line"><span class="built_in">export</span> CUDNN_HOME=xxx/cudnn-10.0xxxx/cuda</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$CUDA_HOME</span>/bin:<span class="variable">$CUDNN_HOME</span>/bin</span><br></pre></td></tr></table></figure><h3 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> linux</h3><ul><li><a href="http://docs.nvidia.com/deeplearning/sdk/tensorrt-install-guide/index.html">官方指导</a></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里改为自己对应的cuda版本</span></span><br><span class="line">$ sudo dpkg -i nv-tensorrt-repo-ubuntu1604-ga-cuda8.0-trt3.0-20171128_1-1_amd64.deb</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install tensorrt</span><br><span class="line">$ sudo apt-get install python3-libnvinfer-doc</span><br><span class="line">$ sudo apt-get install uff-converter-tf</span><br></pre></td></tr></table></figure><ul><li><p>安装好后，使用 <code>$ dpkg -l | grep TensorRT</code> 命令检测是否成功</p></li><li><p>安装后会在 /usr/src 目录下生成一个 tensorrt 文件夹，里面包含 bin , data , python , samples 四个文件夹， samples 文件夹中是官方例程的源码； data , python 文件中存放官方例程用到的资源文件，比如caffemodel文件，TensorFlow模型文件，一些图片等；bin 文件夹用于存放编译后的二进制文件。</p></li><li><p>可以把 tensorrt 文件夹拷贝到用户目录下，方便自己修改测试例程中的代码。</p></li><li><p>进入 samples 文件夹直接 make，会在 bin 目录中生成可执行文件，可以一一进行测试学习。</p></li><li><p>另外tensorRT是不开源的， 它的头文件位于<code>/usr/include/x86_64-linux-gnu</code>目录下，共有七个</p></li><li><p>tensorRT的库文件位于<code>/usr/lib/x86_64-linux-gnu</code>目录下</p></li><li><p>环境变量</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tensorrt</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=~/TensorRT-7.0.0,11/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="comment"># cuda</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/cuda-10.2/lib64:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">export</span> CUDA_INSTALL_DIR=/usr/<span class="built_in">local</span>/cuda-10.2</span><br><span class="line"><span class="built_in">export</span> CUDNN_INSTALL_DIR=/usr/<span class="built_in">local</span>/cuda-10.2</span><br><span class="line"><span class="comment"># 复制tensorrt的lib和include到系统文件夹</span></span><br><span class="line">sudo cp -r ./lib/* /usr/lib</span><br><span class="line">sudo cp -r ./include/* /usr/include</span><br></pre></td></tr></table></figure><h2 id="安装pycuda"><a class="markdownIt-Anchor" href="#安装pycuda"></a> 安装pycuda</h2><ul><li>使用python接口的tensorRT，需要安装pycuda</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pycuda</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorrt</span><br><span class="line">tensorrt.__version__</span><br></pre></td></tr></table></figure><h2 id="安装opencv"><a class="markdownIt-Anchor" href="#安装opencv"></a> 安装opencv</h2><ul><li>建议使用opencv3版本，在cmake时手动指定CUDA参数</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> <span class="string">&quot;https://github.com/opencv/opencv.git&quot;</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="string">&quot;https://github.com/opencv/opencv_contrib.git&quot;</span></span><br><span class="line">mkdir 20190509_cuda</span><br><span class="line">mkdir -p opencv-master/build_cuda</span><br><span class="line"><span class="built_in">cd</span> opencv-master/build_cuda</span><br><span class="line">cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span> -D INSTALL_PYTHON_EXAMPLES=ON -D INSTALL_C_EXAMPLES=OFF -DOPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.4.4/modules -D CUDA_GENERATION=Auto -D PYTHON-EXCUTABLE=/usr/bin/python -D WITH_TBB=ON =D WITH_V4L=ON -D WITH_GTK=ON -D WITH_OPENGL=ON -D BUILD_EXAMPLES=ON -DCUDA_CUDA_LIBRARY=/usr/<span class="built_in">local</span>/cuda-9.0/lib64/stubs/libcuda.so -DCMAKE_LIBRARY_PATH=/usr/<span class="built_in">local</span>/cuda-9.0/lib64/stubs/ ..</span><br><span class="line">ccmake ..</span><br><span class="line"><span class="comment">#按t，切换进入高级模式</span></span><br><span class="line">make -j 20</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>配置</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//Build CUDA modules stubs when no CUDA SDK</span><br><span class="line">BUILD_CUDA_STUBS:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Create build rules <span class="keyword">for</span> OpenCV Documentation</span><br><span class="line">BUILD_DOCS:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build all examples</span><br><span class="line">BUILD_EXAMPLES:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Create Java wrapper exporting all <span class="built_in">functions</span> of OpenCV library</span><br><span class="line">// (requires static build of OpenCV modules)</span><br><span class="line">BUILD_FAT_JAVA_LIB:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build IPP IW from <span class="built_in">source</span></span><br><span class="line">BUILD_IPP_IW:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build Intel ITT from <span class="built_in">source</span></span><br><span class="line">BUILD_ITT:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build libjasper from <span class="built_in">source</span></span><br><span class="line">BUILD_JASPER:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Enable Java support</span><br><span class="line">BUILD_JAVA:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build libjpeg from <span class="built_in">source</span></span><br><span class="line">BUILD_JPEG:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build openexr from <span class="built_in">source</span></span><br><span class="line">BUILD_OPENEXR:BOOL=ON</span><br><span class="line"></span><br><span class="line">//Include ILM support via OpenEXR</span><br><span class="line">WITH_OPENEXR:BOOL=ON</span><br><span class="line"></span><br><span class="line">//Build performance tests</span><br><span class="line">BUILD_PERF_TESTS:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build libpng from <span class="built_in">source</span></span><br><span class="line">BUILD_PNG:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Force to build libprotobuf from sources</span><br><span class="line">BUILD_PROTOBUF:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build shared libraries (.dll/.so) instead of static ones (.lib/.a)</span><br><span class="line">BUILD_SHARED_LIBS:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Download and build TBB from <span class="built_in">source</span></span><br><span class="line">BUILD_TBB:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build accuracy &amp; regression tests</span><br><span class="line">BUILD_TESTS:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build libtiff from <span class="built_in">source</span></span><br><span class="line">BUILD_TIFF:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build WebP from <span class="built_in">source</span></span><br><span class="line">BUILD_WEBP:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include debug info into release binaries (<span class="string">&#x27;OFF&#x27;</span> means default</span><br><span class="line">// settings)</span><br><span class="line">BUILD_WITH_DEBUG_INFO:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Enables dynamic linking of IPP (only <span class="keyword">for</span> standalone IPP)</span><br><span class="line">BUILD_WITH_DYNAMIC_IPP:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Build zlib from <span class="built_in">source</span></span><br><span class="line">BUILD_ZLIB:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include opencv_face module into the OpenCV build</span><br><span class="line">BUILD_opencv_face:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include opencv_highgui module into the OpenCV build</span><br><span class="line">BUILD_opencv_highgui:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include opencv_java_bindings_generator module into the OpenCV</span><br><span class="line">// build</span><br><span class="line">BUILD_opencv_java_bindings_generator:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include opencv_xfeatures2d module into the OpenCV build</span><br><span class="line">BUILD_opencv_xfeatures2d:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Choose the <span class="built_in">type</span> of build, options are: None Debug Release RelWithDebInfo</span><br><span class="line">// MinSizeRel ...</span><br><span class="line">CMAKE_BUILD_TYPE:STRING=Debug</span><br><span class="line"></span><br><span class="line">//Installation Directory</span><br><span class="line">CMAKE_INSTALL_PREFIX:PATH=/home/admin/opencv/2019-05-09_cuda</span><br><span class="line"></span><br><span class="line">//<span class="string">&quot;cudart&quot;</span> library</span><br><span class="line">CUDA_CUDART_LIBRARY:FILEPATH=/usr/<span class="built_in">local</span>/cuda/lib64/libcudart.so</span><br><span class="line"></span><br><span class="line">//Path to a program.</span><br><span class="line">CUDA_NVCC_EXECUTABLE:FILEPATH=/usr/<span class="built_in">local</span>/cuda/bin/nvcc</span><br><span class="line"></span><br><span class="line">//Path to a file.</span><br><span class="line">CUDA_TOOLKIT_INCLUDE:PATH=/usr/<span class="built_in">local</span>/cuda/include</span><br><span class="line"></span><br><span class="line">//Toolkit location.</span><br><span class="line">CUDA_TOOLKIT_ROOT_DIR:PATH=/usr/<span class="built_in">local</span>/cuda</span><br><span class="line"></span><br><span class="line">//Use the static version of the CUDA runtime library <span class="keyword">if</span> available</span><br><span class="line">CUDA_USE_STATIC_CUDA_RUNTIME:BOOL=ON</span><br><span class="line"></span><br><span class="line">//Enable ADE framework (required <span class="keyword">for</span> Graph API module)</span><br><span class="line">WITH_ADE:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include Aravis GigE support</span><br><span class="line">WITH_ARAVIS:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include NVidia Cuda Runtime support</span><br><span class="line">WITH_CUDA:BOOL=ON</span><br><span class="line"></span><br><span class="line">//Include Intel Inference Engine support</span><br><span class="line">WITH_INF_ENGINE:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include Intel IPP support</span><br><span class="line">WITH_IPP:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include Intel ITT support</span><br><span class="line">WITH_ITT:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include JPEG2K support</span><br><span class="line">WITH_JASPER:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include JPEG support</span><br><span class="line">WITH_JPEG:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include Lapack library support</span><br><span class="line">WITH_LAPACK:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include NVidia Video Decoding library support</span><br><span class="line">WITH_NVCUVID:BOOL=ON</span><br><span class="line"></span><br><span class="line">//Include PNG support</span><br><span class="line">WITH_PNG:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Enable libprotobuf</span><br><span class="line">WITH_PROTOBUF:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include Intel TBB support</span><br><span class="line">WITH_TBB:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include TIFF support</span><br><span class="line">WITH_TIFF:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include Vulkan support</span><br><span class="line">WITH_VULKAN:BOOL=OFF</span><br><span class="line"></span><br><span class="line">//Include WebP support</span><br><span class="line">WITH_WEBP:BOOL=OFF</span><br></pre></td></tr></table></figure><h3 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> windows</h3><ul><li><p><a href="https://developer.nvidia.com/tensorrt">官方网址</a>，<a href="https://developer.nvidia.com/nvidia-tensorrt-7x-download">下载安装包</a></p></li><li><p>解压，设置系统环境变量</p></li><li><p>复制dll文件到cuda安装目录</p></li><li><p>完成tensorRT安装后，测试看安装是否成功，可以直接编译刚才解压的TensorRT里的案例来测试。这里我们选用sampleMNIST来测试。<a href="https://blog.csdn.net/yangzzguang/article/details/85570663">流程</a></p></li></ul><h1 id="功能介绍"><a class="markdownIt-Anchor" href="#功能介绍"></a> 功能介绍</h1><h2 id="流程"><a class="markdownIt-Anchor" href="#流程"></a> 流程</h2><table><thead><tr><th>流程</th><th>说明</th></tr></thead><tbody><tr><td>模型训练</td><td>导出得到模型权重文件，例如onnx、tensorflow、caffe等</td></tr><tr><td>builder</td><td>模型优化器，构建器将网络模型定义作为输入，执行与设备无关和针对特定设备的优化，并创建引擎</td></tr><tr><td>network definition</td><td>模型表示，定义网络张量和运算符的图</td></tr><tr><td>engine</td><td>由构建器优化的模型表示，推理引擎用于序列化和反序列化，保存和解析构建的优化模型</td></tr><tr><td>plan</td><td>计划文件，序列化格式的推理引擎。初始化推理引擎，应用程序首先从plan文件中反序列化模型</td></tr><tr><td>runtime</td><td>执行推理，输入数据即可得到输出结果</td></tr></tbody></table><ul><li>build阶段会根据网络定义，执行包括平台特定优化，生成特定的推理引擎。这个阶段可能会花费大量时间，所以将其序列化为plan文件以供以后使用</li><li>其中构建时的优化包括：<ul><li>消除不使用的输出层</li><li>消除等同于无操作的内容</li><li>卷积、偏置和relu操作融合</li><li>使用完全相似的参数和相同的源的张量进行操作聚合，例如gooleNetv5的初始模块汇总1x1卷积</li><li>将层输出定向到正确的最终目的地来合并拼接层</li></ul></li></ul><h2 id="工作流"><a class="markdownIt-Anchor" href="#工作流"></a> 工作流</h2><table><thead><tr><th>工作流</th><th>说明</th></tr></thead><tbody><tr><td>导出模型</td><td></td></tr><tr><td>设定batch size</td><td>推断时的batch size</td></tr><tr><td>设定精度</td><td>推理时使用较低精度提供更快的计算速度和更低的内存消耗。支持TF32、FP32、FP16、INT8精度</td></tr><tr><td>模型转换</td><td>模型从onnx、wts等转换为tensorrt引擎。三种方式：1、使用TF-TRT；2、onnx文件自动转换；3、使用tensorrt API手动创建网络(最高的性能)</td></tr><tr><td>部署模型</td><td>两种类型的runtime，C++和python绑定的独立runtime，以及tensorflow的原生集成的runtime。三种方式：1、tensorflow部署；2、使用tensorrt runtime API部署；3、使用NVIDIA推理服务器部署；</td></tr></tbody></table><table><thead><tr><th>精度范围</th><th>动态范围</th><th>最小精度</th></tr></thead><tbody><tr><td>FP32</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>3.4</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>38</mn></msup><mtext> </mtext><mn>3.4</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>38</mn></msup></mrow><annotation encoding="application/x-tex">-3.4\times 10^{38} ~ 3.4\times 10^{38}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord">3</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.4</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>45</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1.4\times 10^{-45}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">4</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></span></td></tr><tr><td>FP16</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>65504</mn><mtext> </mtext><mn>65504</mn></mrow><annotation encoding="application/x-tex">-65504~65504</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">6</span><span class="mord">5</span><span class="mord">5</span><span class="mord">0</span><span class="mord">4</span><span class="mspace nobreak"> </span><span class="mord">6</span><span class="mord">5</span><span class="mord">5</span><span class="mord">0</span><span class="mord">4</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5.96</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>8</mn></mrow></msup></mrow><annotation encoding="application/x-tex">5.96\times 10^{-8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">.</span><span class="mord">9</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td></tr><tr><td>INT8</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>128</mn><mtext> </mtext><mn>127</mn></mrow><annotation encoding="application/x-tex">-128~127</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace nobreak"> </span><span class="mord">1</span><span class="mord">2</span><span class="mord">7</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td></tr></tbody></table><ul><li>检查GPU是否支持FP16/INT8，<a href="https://developer.nvidia.com/cuda-gpus#compute">GPU精度能力</a>，<a href="https://docs.nvidia.com/deeplearning/tensorrt/support-matrix/index.html#hardware=precision-matrix">GPU精度矩阵</a></li></ul><h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><h2 id="创建网络"><a class="markdownIt-Anchor" href="#创建网络"></a> 创建网络</h2><h3 id="原始api搭建"><a class="markdownIt-Anchor" href="#原始api搭建"></a> 原始api搭建</h3><ul><li>创建builder和网络</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IBuilder* builder = createInferBuilder(gLogger);</span><br><span class="line">INetworkDefinition* network = builder-&gt;createNetworkV2(<span class="number">1U</span> &lt;&lt; <span class="keyword">static_cast</span>&lt;<span class="keyword">uint32_t</span>&gt;(NetworkDefinitionCreationFlag::kEXPLICIT_BATCH));</span><br></pre></td></tr></table></figure><ul><li>定义网络输入输出</li></ul><blockquote><p>Add the Input layer to the network, with the input dimensions, including dynamic batch. A network can have multiple inputs, although in this sample there is only one:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> data = network-&gt;addInput(INPUT_BLOB_NAME, dt, Dims3&#123;<span class="number">-1</span>, <span class="number">1</span>, INPUT_H, INPUT_W&#125;);</span><br></pre></td></tr></table></figure><ul><li>添加卷积层</li></ul><blockquote><p>Add the Convolution layer with hidden layer input nodes, strides and weights for filter and bias. In order to retrieve the tensor reference from the layer, we can use:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> conv1 = network-&gt;addConvolution(*data-&gt;getOutput(<span class="number">0</span>), <span class="number">20</span>, DimsHW&#123;<span class="number">5</span>, <span class="number">5</span>&#125;, weightMap[<span class="string">&quot;conv1filter&quot;</span>], weightMap[<span class="string">&quot;conv1bias&quot;</span>]);</span><br><span class="line">conv1-&gt;setStride(DimsHW&#123;<span class="number">1</span>, <span class="number">1</span>&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>Note: Weights passed to TensorRT layers are in host memory.</p></blockquote><ul><li>添加池化层</li></ul><blockquote><p>Add the Pooling layer:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> pool1 = network-&gt;addPooling(*conv1-&gt;getOutput(<span class="number">0</span>), PoolingType::kMAX, DimsHW&#123;<span class="number">2</span>, <span class="number">2</span>&#125;);</span><br><span class="line">pool1-&gt;setStride(DimsHW&#123;<span class="number">2</span>, <span class="number">2</span>&#125;);</span><br></pre></td></tr></table></figure><ul><li>全连接和激活层</li></ul><blockquote><p>Add the FullyConnected and Activation layers:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> ip1 = network-&gt;addFullyConnected(*pool1-&gt;getOutput(<span class="number">0</span>), <span class="number">500</span>, weightMap[<span class="string">&quot;ip1filter&quot;</span>], weightMap[<span class="string">&quot;ip1bias&quot;</span>]);</span><br><span class="line"><span class="keyword">auto</span> relu1 = network-&gt;addActivation(*ip1-&gt;getOutput(<span class="number">0</span>), ActivationType::kRELU);</span><br></pre></td></tr></table></figure><ul><li>softmax层</li></ul><blockquote><p>Add the SoftMax layer to calculate the final probabilities and set it as the output:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> prob = network-&gt;addSoftMax(*relu1-&gt;getOutput(<span class="number">0</span>));</span><br><span class="line">prob-&gt;getOutput(<span class="number">0</span>)-&gt;setName(OUTPUT_BLOB_NAME);</span><br></pre></td></tr></table></figure><ul><li>输出</li></ul><blockquote><p>Mark the output:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">network-&gt;markOutput(*prob-&gt;getOutput(<span class="number">0</span>));</span><br></pre></td></tr></table></figure><h3 id="通过已生成网络搭建"><a class="markdownIt-Anchor" href="#通过已生成网络搭建"></a> 通过已生成网络搭建</h3><ul><li>parse解析器支持：ONNX、UFF、Caffe的方式，导入网络模型</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ONNX: </span></span><br><span class="line"><span class="keyword">auto</span> parser = nvonnxparser::createParser(*network, gLogger);</span><br><span class="line"><span class="comment">//Caffe: </span></span><br><span class="line"><span class="keyword">auto</span> parser = nvcaffeparser1::createCaffeParser();</span><br><span class="line"><span class="comment">//UFF: </span></span><br><span class="line"><span class="keyword">auto</span> parser = nvuffparser::createUffParser();</span><br></pre></td></tr></table></figure><ul><li>解析Caffe网络</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Create the builder and network:</span></span><br><span class="line">IBuilder* builder = createInferBuilder(gLogger);</span><br><span class="line">INetworkDefinition* network = builder-&gt;createNetworkV2(<span class="number">0U</span>);</span><br><span class="line"><span class="comment">//Create the Caffe parser:</span></span><br><span class="line">ICaffeParser* parser = createCaffeParser();</span><br><span class="line">Parse the imported model:</span><br><span class="line"><span class="keyword">const</span> IBlobNameToTensor* blobNameToTensor = parser-&gt;parse(<span class="string">&quot;deploy_file&quot;</span> , <span class="string">&quot;modelFile&quot;</span>, *network, DataType::kFLOAT);</span><br><span class="line"><span class="comment">//Specify the outputs of the network:</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; s : outputs)</span><br><span class="line">    network-&gt;markOutput(*blobNameToTensor-&gt;find(s.c_str()));</span><br></pre></td></tr></table></figure><h2 id="创建engine"><a class="markdownIt-Anchor" href="#创建engine"></a> 创建engine</h2><blockquote><p>Build the engine using the builder object:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IBuilderConfig* config = builder-&gt;createBuilderConfig();</span><br><span class="line">config-&gt;setMaxWorkspaceSize(<span class="number">1</span> &lt;&lt; <span class="number">20</span>);</span><br><span class="line">ICudaEngine* engine = builder-&gt;buildEngineWithConfig(*network, *config);</span><br></pre></td></tr></table></figure><blockquote><p>When the engine is built, TensorRT makes copies of the weights.</p></blockquote><ul><li>释放资源</li></ul><blockquote><p>Dispense with the network, builder, and parser if using one.</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">parser-&gt;destroy();</span><br><span class="line">network-&gt;destroy();</span><br><span class="line">config-&gt;destroy();</span><br><span class="line">builder-&gt;destroy();</span><br></pre></td></tr></table></figure><h2 id="序列化模型"><a class="markdownIt-Anchor" href="#序列化模型"></a> 序列化模型</h2><ul><li>序列化模型</li></ul><blockquote><p>Run the builder as a prior offline step and then serialize:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IHostMemory *serializedModel = engine-&gt;serialize();</span><br><span class="line"><span class="comment">// store model to disk</span></span><br><span class="line"><span class="comment">// &lt;…&gt;</span></span><br><span class="line">serializedModel-&gt;destroy();</span><br></pre></td></tr></table></figure><ul><li>反序列化</li></ul><blockquote><p>Create a runtime object to deserialize:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IRuntime* runtime = createInferRuntime(gLogger);</span><br><span class="line">ICudaEngine* engine = runtime-&gt;deserializeCudaEngine(modelData, modelSize, <span class="literal">nullptr</span>);</span><br></pre></td></tr></table></figure><h2 id="执行模型"><a class="markdownIt-Anchor" href="#执行模型"></a> 执行模型</h2><blockquote><p>Create some space to store intermediate activation values. Since the engine holds the network definition and trained parameters, additional space is necessary. These are held in an execution context:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IExecutionContext *context = engine-&gt;createExecutionContext();</span><br></pre></td></tr></table></figure><blockquote><p>An engine can have multiple execution contexts, allowing one set of weights to be used for multiple overlapping inference tasks. For example, you can process images in parallel CUDA streams using one engine and one context per stream. Each context will be created on the same GPU as the engine.</p></blockquote><blockquote><p>Use the input and output blob names to get the corresponding input and output index:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> inputIndex = engine-&gt;getBindingIndex(INPUT_BLOB_NAME);</span><br><span class="line"><span class="keyword">int</span> outputIndex = engine-&gt;getBindingIndex(OUTPUT_BLOB_NAME);</span><br></pre></td></tr></table></figure><blockquote><p>Using these indices, set up a buffer array pointing to the input and output buffers on the GPU:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span>* buffers[<span class="number">2</span>];</span><br><span class="line">buffers[inputIndex] = inputBuffer;</span><br><span class="line">buffers[outputIndex] = outputBuffer;</span><br></pre></td></tr></table></figure><blockquote><p>TensorRT execution is typically asynchronous, so enqueue the kernels on a CUDA stream:</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">context-&gt;enqueueV2(buffers, stream, <span class="literal">nullptr</span>);</span><br></pre></td></tr></table></figure><blockquote><p>It is common to enqueue asynchronous memcpy() before and after the kernels to move data from the GPU if it is not already there. The final argument to enqueueV2() is an optional CUDA event which will be signaled when the input buffers have been consumed and their memory may be safely reused.</p></blockquote><blockquote><p>To determine when the kernel (and possibly memcpy()) are complete, use standard CUDA synchronization mechanisms such as events, or waiting on the stream.</p></blockquote><h1 id="int8加速"><a class="markdownIt-Anchor" href="#int8加速"></a> INT8加速</h1><h2 id="流程-2"><a class="markdownIt-Anchor" href="#流程-2"></a> 流程</h2><ol><li>准备校准图片（calibration images），保存在<code>tensorrtx/yolov5/build</code></li><li>yolov5.cpp设置宏：<code>#define USE_INT8</code></li><li><code>make &amp;&amp; sudo ./yolov5 -s &amp;&amp; sudo ./yolov5 -d ../samples</code></li></ol><h1 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h1><ul><li>下面代码是一个简单的build过程</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IBuilder* builder = createInferBuilder(gLogger);</span><br><span class="line"><span class="comment">// parse the caffe model to populate the network, then set the outputs</span></span><br><span class="line"><span class="comment">// 创建一个network对象，不过这时network对象只是一个空架子</span></span><br><span class="line">INetworkDefinition* network = builder-&gt;createNetwork();</span><br><span class="line"><span class="comment">//tensorRT提供一个高级别的API：CaffeParser，用于解析Caffe模型</span></span><br><span class="line"><span class="comment">//parser.parse函数接受的参数就是上面提到的文件，和network对象</span></span><br><span class="line"><span class="comment">//这一步之后network对象里面的参数才被填充，才具有实际的意义</span></span><br><span class="line">CaffeParser parser;</span><br><span class="line"><span class="keyword">auto</span> blob_name_to_tensor = parser.parse(“deploy.prototxt”,trained_file.c_str(),*network,DataType::kFLOAT);</span><br><span class="line"><span class="comment">// 标记输出 tensors</span></span><br><span class="line"><span class="comment">// specify which tensors are outputs</span></span><br><span class="line">network-&gt;markOutput(*blob_name_to_tensor-&gt;find(<span class="string">&quot;prob&quot;</span>));</span><br><span class="line"><span class="comment">// Build the engine</span></span><br><span class="line"><span class="comment">// 设置batchsize和工作空间，然后创建inference engine</span></span><br><span class="line">builder-&gt;setMaxBatchSize(<span class="number">1</span>);</span><br><span class="line">builder-&gt;setMaxWorkspaceSize(<span class="number">1</span> &lt;&lt; <span class="number">30</span>);</span><br><span class="line"><span class="comment">//调用buildCudaEngine时才会进行前述的层间融合或精度校准优化方式</span></span><br><span class="line">ICudaEngine* engine = builder-&gt;buildCudaEngine(*network);</span><br></pre></td></tr></table></figure><h1 id="gpu编程"><a class="markdownIt-Anchor" href="#gpu编程"></a> GPU编程</h1><ul><li>由于GPU处理核心更多，在处理并行运算时比CPU更高效。</li></ul><table><thead><tr><th>CPU</th><th>GPU</th><th>层次</th></tr></thead><tbody><tr><td>算术逻辑和控制单元</td><td>流处理器SM</td><td>硬件</td></tr><tr><td>算术单元</td><td>批量处理器SP</td><td>硬件</td></tr><tr><td>进程</td><td>block</td><td>软件</td></tr><tr><td>线程</td><td>thread</td><td>软件</td></tr><tr><td>调度单位</td><td>warp</td><td>软件</td></tr></tbody></table><h2 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h2><ul><li><code>cuda C</code>是对常规c的扩展，加入了一些函数前缀</li></ul><table><thead><tr><th>前缀</th><th>执行位置</th><th>调用位置</th></tr></thead><tbody><tr><td><strong>device</strong> float DeviceFunc()</td><td>device</td><td>device</td></tr><tr><td><strong>global</strong> float KernelFunc()</td><td>device</td><td>host</td></tr><tr><td><strong>host</strong> float HostFunc()</td><td>host</td><td>host</td></tr></tbody></table><p><img src="/images/pasted_398.png" alt="" /></p><ul><li><p>一个grid线程两个内置的坐标变量：blockIdx和threadIdx</p></li><li><p>barrier同步等待，由于并发特性，程序里用到计算结果时，等待所有kernel计算完成再继续</p></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__syncthreads();</span><br></pre></td></tr></table></figure><table><thead><tr><th>七个步骤</th><th>说明</th></tr></thead><tbody><tr><td><code>cudaSetDevice(0);</code></td><td>获取设备，默认0，只有一个GPU可以省略</td></tr><tr><td><code>cudaMalloc((void**))&amp; d_a,sizeof(float)*n);</code></td><td>分配显存</td></tr><tr><td><code>cudaMemcpy(d_a,a,sizeof(float)*n,cudaMemcpyHostToDevice);</code></td><td>数据传输至GPU</td></tr><tr><td><code>gpu_kernel&lt;&lt;&lt;blocks, threads&gt;&gt;&gt;(***);</code></td><td>kernel函数</td></tr><tr><td><code>cudaMemcpy(a,d_a,sizeof(float)*n,cudaMemcpyDeivceToHost);</code></td><td>数据传输至CPU</td></tr><tr><td><code>cudaFree(d_a);</code></td><td>释放显存</td></tr><tr><td><code>cudaDeviceReset();</code></td><td>重置设备，可以省略</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//kernel definition</span></span><br><span class="line"><span class="function">__global__ <span class="keyword">void</span> <span class="title">VecAdd</span><span class="params">(<span class="keyword">float</span>* A, <span class="keyword">float</span>* B, <span class="keyword">float</span>* C)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i=threadIdx.x;</span><br><span class="line">  C[i]=A[i]+B[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">//1,N表示分配了一个线程快block，每个线程块分配了N个线程</span></span><br><span class="line">  VecAdd&lt;&lt;&lt;<span class="number">1</span>,N&gt;&gt;&gt;(A,B,C);</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="cpp"><a class="markdownIt-Anchor" href="#cpp"></a> CPP</h2><h1 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践</h1><h2 id="yolov5"><a class="markdownIt-Anchor" href="#yolov5"></a> yolov5</h2><ul><li>使用tensorrt API搭建的yolov5网络生成的wts文件，<a href="https://github.com/wang-xinyu/tensorrtX">yolov-tensorrtX</a></li><li>生成wts文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python gen_wts.py <span class="comment"># 将gen_wts.py放在yolov5文件夹下，再将生成的yolov5.wts，放在tensorrtx/yolov5文件夹下</span></span><br></pre></td></tr></table></figure><ul><li>编译前修改yolov5.cpp的类型<code>#define Net s</code>：可以为s,m,l,x等，yololayer.h文件下类别个数CLASS_NUM</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br></pre></td></tr></table></figure><ul><li>执行tensorRT加速后的yolov5</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./yolov5 -s <span class="comment"># 序列化</span></span><br><span class="line">sudo ./yolov5 -d ./samples <span class="comment"># 反序列化，并推理</span></span><br></pre></td></tr></table></figure><ul><li>使用python执行加速</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python yolov5_trt.py</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;TensorRT&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="AI" scheme="http://blog.guoming576.cn/categories/AI/"/>
    
    
      <category term="algorithm" scheme="http://blog.guoming576.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>三维重建</title>
    <link href="http://blog.guoming576.cn/2020/11/29/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    <id>http://blog.guoming576.cn/2020/11/29/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/</id>
    <published>2020-11-28T16:18:27.000Z</published>
    <updated>2020-12-18T06:14:40.469Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote></blockquote><a id="more"></a><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li>三维重建包含静态场景、动态场景。目前是一个非常热的研究领域，未来会在很多领域发挥巨大作用<ul><li>室内场景：稠密三维重建目的是使用消费级相机（本文特指深度相机）对室内场景进行扫描，自动生成一个精确完整的三维模型，应用在室内的增强现实游戏、机器人室内导航、AR家具展示等。</li><li>室外场景主要应用在自动驾驶、建筑建模等场景</li></ul></li></ul><h1 id="特征点提取和检测"><a class="markdownIt-Anchor" href="#特征点提取和检测"></a> 特征点提取和检测</h1><p><strong>定义</strong></p><ul><li>在其他含有相同场景或目标的相似图像中以一种相同的或至少非常相似的不变形式表示图像或目标。具有尺度不变性。</li></ul><p><img src="/images/pasted-276.png" alt="特征点类型" /></p><ul><li>角点作为特征点最具代表性，在两个方向上都具有强烈变化。边缘和区块相对难以区分。</li></ul><p><strong>特征</strong></p><ul><li>可重复性(Repeatability)：相同区域可以在不同的图像中被找到</li><li>可区别性(Distinctiveness)：不同区域有不同的表达</li><li>高效性(Efficiency)：同一图像中，特征点的数量应远小于像素的数量</li><li>局部性(Locality)：特征仅与一小片图像区域有关</li></ul><p><strong>组成</strong></p><ul><li>关键点(Key Point)；位置、大小、方向、评分等<ul><li>FAST/Moravec/Harris</li></ul></li><li>描述子(Descriptor)：特征点周围的图像信息，对旋转、平移、噪声等干扰具有抵抗能力<ul><li>SIFT/SURF/ORB/BRIEF/BRISK</li></ul></li></ul><h2 id="关键点检测"><a class="markdownIt-Anchor" href="#关键点检测"></a> 关键点检测</h2><h3 id="harris角点检测"><a class="markdownIt-Anchor" href="#harris角点检测"></a> Harris角点检测</h3><ul><li><p>在(x,y)这个点统计x,y的变化率，得到变换方向[u,v]和Harris矩阵，再根据SVD分解，可以得到两个特征值，得到在两个方向的变化情况。若两个特征点都变化较大，则为角点</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo stretchy="false">[</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>u</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>v</mi><mo stretchy="false">)</mo><mo>−</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup><mo>≈</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>u</mi><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>v</mi><mo>−</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup><mi>H</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">E(u,v)=\sum_{x,y}[I(x+u,y+v)-I(x,y)]^2\approx\sum_{x,y}w(x,y)[I(x,y)+\frac{\partial I}{\partial x}(x,y)u+\frac{\partial I}{\partial y}(x,y)v-I(x,y)]^2=\begin{bmatrix}u\\v\end{bmatrix}^TH\begin{bmatrix}u\\v\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.185818em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.185818em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.631261em;vertical-align:-0.95003em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.681231em;"><span style="top:-3.9029000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p><ul><li>图像梯度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\triangle I(x,y)=(\frac{\partial I}{\partial x}(x,y),\frac{\partial I}{\partial y}(x,y))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">△</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li><li>Harris矩阵：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>u</mi><msub><mi>m</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>I</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">H=\begin{bmatrix}\sum_{x,y}w(x,y)(\frac{\partial I}{\partial x}(x,y))^2&amp;\sum_{x,y}w(x,y)(\frac{\partial I}{\partial x}(x,y)\frac{\partial I}{\partial y}(x,y))\\\\sum_{x,y}w(x,y)(\frac{\partial I}{\partial x}(x,y)\frac{\partial I}{\partial y}(x,y))&amp;\sum_{x,y}w(x,y)(\frac{\partial I}{\partial y}(x,y))^2\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.9224319999999993em;vertical-align:-1.7112159999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2112159999999994em;"><span style="top:-4.3311079999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7112159999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2112159999999994em;"><span style="top:-4.3311079999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7112159999999998em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>V</mi><mi>D</mi><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">)</mo><mo>=</mo><mi>U</mi><mi mathvariant="normal">Σ</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">SVD(H)=U\Sigma V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord">Σ</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_1,\lambda_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><ul><li>根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_1,\lambda_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>判断是否为角点</li></ul></li><li><p>为了简化SVD求解，使用角点准则：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">)</mo><mo>−</mo><mi>k</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>e</mi><mo stretchy="false">(</mo><mi>H</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msub><mi>λ</mi><mn>1</mn></msub><msub><mi>λ</mi><mn>2</mn></msub><mo>−</mo><mi>k</mi><mo stretchy="false">(</mo><msub><mi>λ</mi><mn>1</mn></msub><mo>+</mo><msub><mi>λ</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">C=det(H)-ktrace(H)^2=\lambda_1\lambda_2-k(\lambda_1+\lambda_2)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>,k=0.04</p><ul><li>k越小，检测子越敏感</li><li>只有当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><msub><mi>λ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_1\lambda_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>同时取得最大值时，c才能取得最大</li></ul></li><li><p>非极大值抑制(NMS)，避免重复检测</p></li></ul><p><strong>缺点</strong></p><ul><li>不具有尺度不变性</li></ul><h3 id="log特征点检测"><a class="markdownIt-Anchor" href="#log特征点检测"></a> LoG特征点检测</h3><ul><li>尺度归一化的LoG算子，模拟人的视觉由近到远的特点，得到多个尺度空间的特征点</li><li>尺度空间，用不同大小的滤波核k对图像滤波，得到多个图：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>  </mtext><msub><mi>σ</mi><mi>D</mi></msub><mo>∈</mo><mo stretchy="false">[</mo><msub><mi>σ</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>k</mi><msub><mi>σ</mi><mn>0</mn></msub><mo separator="true">,</mo><msup><mi>k</mi><mn>2</mn></msup><msub><mi>σ</mi><mn>0</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">L(x,y,\sigma_D)=I(x,y)*G(x,y,\sigma_D),\;\sigma_D\in[\sigma_0,k\sigma_0,k^2\sigma_0,...]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mclose">]</span></span></span></span></li><li>LoG算子：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">▽</mi><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo><mo>∗</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\triangledown L(x,y,\sigma_D)=(\frac{\partial^2L(x,y,\sigma_D)}{\partial x^2}+\frac{\partial^2L(x,y,\sigma_D)}{\partial y^2})=(\frac{\partial^2G(x,y,\sigma_D)}{\partial x^2}+\frac{\partial^2G(x,y,\sigma_D)}{\partial y^2})*I(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord amsrm">▽</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4539199999999999em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">L</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.5900279999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">L</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4539199999999999em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">G</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.5900279999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">G</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(x,y,\sigma_D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是拉普拉斯算子</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(x,y,\sigma_D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是高斯函数</li><li>卷积之后乘以拉普拉斯算子等价于高斯*原图，高斯滤波的基本性质</li></ul></li><li>尺度归一化的LoG：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi mathvariant="normal">▽</mi><mrow><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi></mrow><mn>2</mn></msubsup><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>σ</mi><mi>D</mi><mn>2</mn></msubsup><mo stretchy="false">(</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>σ</mi><mi>D</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo><mo>∗</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\triangledown^2_{norm}L(x,y,\sigma_D)=\sigma_D^2(\frac{\partial^2G(x,y,\sigma_D)}{\partial x^2}+\frac{\partial^2G(x,y,\sigma_D)}{\partial y^2})*I(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord amsrm">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4539199999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">G</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.5900279999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">G</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></li><li>构建尺度空间，同时在位置空间和尺度空间寻找归一化LoG极值作为特征点</li></ul><p><strong>缺点</strong></p><ul><li>计算量非常大，实际很少使用</li></ul><h3 id="sift"><a class="markdownIt-Anchor" href="#sift"></a> SIFT</h3><ul><li><p>尺度不变特征变换（SIFT）</p></li><li><p>针对LOG的缺点，使用DoG对归一化LoG进行近似</p></li><li><p>高斯空间：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(x,y,\sigma)=G(x,y,\sigma)*I(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p></li><li><p>高斯差分：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>k</mi><mi>σ</mi><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∗</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>k</mi><mi>σ</mi><mo stretchy="false">)</mo><mo>−</mo><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(x,y,\sigma)=(G(x,y,k\sigma)-(x,y,\sigma))*I(x,y)=L(x,y,k\sigma)-L(x,y,\sigma)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span></span></span></span></p></li></ul><p><strong>步骤</strong></p><ol><li>尺度空间的极值检测：<ul><li>尺度空间指一个变化尺度(σ)的二维高斯函数G(x,y,σ)与原图像I(x,y)卷积（即高斯模糊）后形成的空间,尺度不变特征应该既是空间域上又是尺度域上的局部极值。极值检测的大致原理是根据不同尺度下的高斯模糊化图像差异（Difference of Gaussians,DoG）寻找局部极值，这些找到的极值所对应的点被称为关键点或特征点。</li></ul></li><li>关键点定位：<ul><li>在不同尺寸空间下可能找出过多的关键点，有些关键点可能相对不易辨识或易受噪声干扰。该步借由关键点附近像素的信息、关键点的尺寸、关键点的主曲率来定位各个关键点，借此消除位于边上或是易受噪声干扰的关键点。</li></ul></li><li>方向定位：<ul><li>为了使描述符具有旋转不变性，需要利用图像的局部特征为给每一个关键点分配一个基准方向。通过计算关键点局部邻域的方向直方图，寻找直方图中最大值的方向作为关键点的主方向。</li></ul></li><li>关键点描述子：<ul><li>找到关键点的位置、尺寸并赋予关键点方向后，将可确保其移动、缩放、旋转的不变性。此外还需要为关键点建立一个描述子向量，使其在不同光线与视角下皆能保持其不变性。SIFT描述子是关键点邻域高斯图像梯度统计结果的一种表示，见下图。通过对关键点周围图像区域分块，计算块内梯度直方图，生成具有独特性的向量，这个向量是该区域图像信息的一种抽象，具有唯一性。Lowe在原论文中建议描述子使用在关键点尺度空间内44的窗口中计算的8个方向的梯度信息，共44*8=128维向量表征。(opencv中实现的也是128维)</li></ul></li></ol><h3 id="surf"><a class="markdownIt-Anchor" href="#surf"></a> SURF</h3><ul><li>(Speeded-Up Robust Features) 加速稳健特征<br />SURF(Speeded Up Robust Features, 加速稳健特征) 是一种稳健的图像识别和描述算法。它是SIFT的高效变种，也是提取尺度不变特征，算法步骤与SIFT算法大致相同，但采用的方法不一样，要比SIFT算法更高效（正如其名）。SURF使用海森(Hesseian)矩阵的行列式值作特征点检测并用积分图加速运算；SURF 的描述子基于 2D 离散小波变换响应并且有效地利用了积分图。</li></ul><p><strong>步骤</strong></p><ol><li>特征点检测：<ul><li>SURF使用Hessian矩阵来检测特征点，该矩阵是x,y方向的二阶导数矩阵，可测量一个函数的局部曲率，其行列式值代表像素点周围的变化量，特征点需取行列式值的极值点。用方型滤波器取代SIFT中的高斯滤波器，利用积分图（计算位于滤波器方型的四个角落值）大幅提高运算速度。</li></ul></li><li>特征点定位：</li></ol><ul><li>与SIFT类似，通过特征点邻近信息插补来定位特征点。</li></ul><ol start="3"><li>方向定位：<ul><li>通过计算特征点周围像素点x,y方向的哈尔小波变换，并将x,y方向的变换值在xy平面某一角度区间内相加组成一个向量，在所有的向量当中最长的(即x、y分量最大的)即为此特征点的方向。</li></ul></li><li>特征描述子：<ul><li>选定了特征点的方向后，其周围相素点需要以此方向为基准来建立描述子。此时以55个像素点为一个子区域，取特征点周围2020个像素点的范围共16个子区域，计算子区域内的x、y方向(此时以平行特征点方向为x、垂直特征点方向为y)的哈尔小波转换总和Σdx、ΣdyΣdx、Σdy与其向量长度总和Σ|dx|、Σ|dy|Σ|dx|、Σ|dy|共四个量值，共可产生一个64维的描述子。</li></ul></li></ol><h3 id="fast"><a class="markdownIt-Anchor" href="#fast"></a> FAST</h3><ul><li>是一种角点检测，主要检测局部像素灰度变化明显的地方，以速度快著称</li><li>如果一个像素与它邻域的像素差别较大，则其更有可能是角点。</li></ul><p><img src="/images/pasted-277.png" alt="角点" /></p><ul><li><p>计算过程：</p><ul><li>在图像中选取像素p，假设亮度为Ip</li><li>设置阈值T（比如Ip的20%）</li><li>以像素为中心，选取半径为3的圆上的16个像素点</li><li>选取的圆上，若有连续的N个点亮度大于Ip+T或小于Ip-T</li></ul></li><li><p>N的取值的不同，可以分为：FAST-9、FAST-11、FAST-12。常用的FAST-12</p></li></ul><h3 id="oriented-fast"><a class="markdownIt-Anchor" href="#oriented-fast"></a> Oriented FAST</h3><ul><li>由于相机的旋转，相同的角点会有旋转变化，按照相同矩形框范围计算描述子会导致结果的不同</li><li>Oriented FAST在FAST基础上，计算旋转，得到的选择框可以与之前的检测更为相似，具体过程：<ul><li>在一个细小的图像块B中，定义图像块的矩为：<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mrow><mi>p</mi><mi>q</mi></mrow></msub><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><mi>B</mi></mrow></msub><msup><mi>x</mi><mi>p</mi></msup><msup><mi>y</mi><mi>q</mi></msup><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>  </mtext><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo>=</mo><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">m_{pq}=\sum_{x,y\in B}x^py^qI(x,y),\;p,q={0,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.185818em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span></span></span></span></li></ul></li><li>通过矩可以找到图像块的质心：<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mo stretchy="false">(</mo><mfrac><msub><mi>m</mi><mn>10</mn></msub><msub><mi>m</mi><mn>00</mn></msub></mfrac><mo separator="true">,</mo><mfrac><msub><mi>m</mi><mn>01</mn></msub><msub><mi>m</mi><mn>00</mn></msub></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=(\frac{m_{10}}{m_{00}},\frac{m_{01}}{m_{00}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1951em;vertical-align:-0.44509999999999994em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7114919999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7114919999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></li></ul></li><li>链接图像块的几何中心O与质心C，得到一个方向向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>O</mi><mi>C</mi></mrow><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{OC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>，特征点的方向可以定义为<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy="false">(</mo><mfrac><msub><mi>m</mi><mn>01</mn></msub><msub><mi>m</mi><mn>10</mn></msub></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta=arctan(\frac{m_{01}}{m_{10}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1951em;vertical-align:-0.44509999999999994em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7114919999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></li></ul></li></ul></li></ul><h2 id="描述子"><a class="markdownIt-Anchor" href="#描述子"></a> 描述子</h2><ul><li>基于直方图</li><li>基于不变性</li><li>基于二进制</li></ul><h3 id="sift描述子"><a class="markdownIt-Anchor" href="#sift描述子"></a> SIFT描述子</h3><ul><li>生成描述子，统计不同方向的梯度值得到直方图，找到主方向<ul><li>将区域分成4x4的block，每个block统计梯度方向的直方图</li></ul></li><li>图像根据主方向进行对齐，然后插值得到新的图像</li><li>像素归一化，用户去除光照变化</li></ul><h3 id="gloh描述子"><a class="markdownIt-Anchor" href="#gloh描述子"></a> GLOH描述子</h3><ul><li>使用极坐标系，根据距离统计直方图</li></ul><h3 id="brief"><a class="markdownIt-Anchor" href="#brief"></a> BRIEF</h3><ul><li><p>是一种二进制描述，对特征点区域的block中，选取很多对点，每对点与特征点呈中心对称，计算两者的像素差，这种方法对光照的变化非常鲁棒</p></li><li><p>算法具体过程：</p><ul><li>为减少噪声干扰，先对图像进行高斯滤波(方差为2，高斯窗口为9×9)</li><li>以特征点为中心，取S×S的邻域窗口，在窗口内随机选取一对(两个)点，比较二者像素的大小，进行二进制赋值：<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi>f</mi><mtext>  </mtext><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\tau(p;x,y)=\begin{cases} 1 &amp; if\;p(x)&lt;p(y)\\0&amp;otherwise\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul></li><li>其中，p(x)、p(y)分别是随机点x=(u1,v1)，y=(u2,v2)的像素值</li><li>在窗口中随机选取N对随机点，重复步骤2的二进制赋值，形成一个二进制编码，这个编码就是对特征点的描述，即特征描述子。</li></ul></li><li><p>BRIEF-128/256/512：在特征点附近的128次像素比较</p></li><li><p>度量需要用汉明距离</p><ul><li>两个二进制的值进行比较，得到两者不同的位数</li></ul></li></ul><p><img src="/images/pasted-278.png" alt="随机选点" /></p><ul><li><p>随机选点的方法</p><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都呈均匀分布<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mfrac><mi>S</mi><mn>2</mn></mfrac><mo separator="true">,</mo><mfrac><mi>S</mi><mn>2</mn></mfrac><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-\frac{S}{2},\frac{S}{2}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都呈高斯分布<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mfrac><mn>1</mn><mn>25</mn></mfrac><msup><mi>S</mi><mn>2</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\frac{1}{25}S^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，准则采样服从各向同性的同一高斯分布</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>服从高斯分布<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mfrac><mn>1</mn><mn>25</mn></mfrac><msup><mi>S</mi><mn>2</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\frac{1}{25}S^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>服从高斯分布<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mfrac><mn>1</mn><mn>100</mn></mfrac><msup><mi>S</mi><mn>2</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[x_i,\frac{1}{100}S^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，采样分为2步进行，首先在原点处为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进行高斯采样，然后在中心为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>处为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进行高斯采样</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>在空间量化极坐标下的离散位置处进行随机采样</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">x_i=(0,0)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>在空间量化极坐标下的离散位置处进行随机采样</li></ol></li><li><p>作者实验证明第2种方法效果更好</p></li></ul><h3 id="经典特征点"><a class="markdownIt-Anchor" href="#经典特征点"></a> <a href="https://zhuanlan.zhihu.com/p/36382429">经典特征点</a></h3><ul><li>Harris</li><li>SIFT</li><li>SURF</li></ul><h2 id="特征点匹配"><a class="markdownIt-Anchor" href="#特征点匹配"></a> 特征点匹配</h2><ul><li>特征匹配：通过描述子的差异判断哪些特征为同一个点，ORB可以用汉明距离</li><li>暴力匹配：比较两图每个特征间的距离</li></ul><p><img src="/images/pasted-279.png" alt="特征匹配" /></p><ul><li>特征提取就是关键点和描述子的组合</li><li>度量描述子的距离：欧氏距离，马氏距离，归一化互相关，汉明距离</li><li>匹配策略：最近邻搜索，最近邻距离比，快速最近邻搜索</li></ul><h3 id="orb特征"><a class="markdownIt-Anchor" href="#orb特征"></a> ORB特征</h3><ul><li>关键点：Oriented FAST，计算了特征点的主要方向，增加了旋转不变性</li><li>描述子：BRIEF，对前一步的特征点周围图像区域进行描述</li></ul><h1 id="相机模型"><a class="markdownIt-Anchor" href="#相机模型"></a> 相机模型</h1><h2 id="针孔相机模型"><a class="markdownIt-Anchor" href="#针孔相机模型"></a> 针孔相机模型</h2><h2 id="径向畸变"><a class="markdownIt-Anchor" href="#径向畸变"></a> 径向畸变</h2><h2 id="2d-2d对极几何"><a class="markdownIt-Anchor" href="#2d-2d对极几何"></a> 2D-2D对极几何</h2><h3 id="对极约束"><a class="markdownIt-Anchor" href="#对极约束"></a> 对极约束</h3><h3 id="本质单应矩阵"><a class="markdownIt-Anchor" href="#本质单应矩阵"></a> 本质/单应矩阵</h3><h2 id="三角量测"><a class="markdownIt-Anchor" href="#三角量测"></a> 三角量测</h2><h2 id="3d-2d-pnp问题"><a class="markdownIt-Anchor" href="#3d-2d-pnp问题"></a> 3D-2D PnP问题</h2><ul><li>已知三维点和对应的二维点，求相机的内外参数</li></ul><h3 id="直接线性变换法"><a class="markdownIt-Anchor" href="#直接线性变换法"></a> 直接线性变换法</h3><h3 id="捆绑调整ba"><a class="markdownIt-Anchor" href="#捆绑调整ba"></a> 捆绑调整BA</h3><ul><li>同时对三维点位置和相机参数进行非线性优化，求最小化重投影误差</li><li>无约束最小二乘问题：梯度下降法、牛顿法、Levenberg-Marquardt法</li></ul><h1 id="静态场景"><a class="markdownIt-Anchor" href="#静态场景"></a> 静态场景<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h1><h2 id="kinectfusion"><a class="markdownIt-Anchor" href="#kinectfusion"></a> KinectFusion</h2><ul><li><p>帝国理工的Newcombe等人在2011年提出的KinectFusion，可在不需要RGB图而只用深度图的情况下就能实时地建立三维模型。KinectFusion算法首次实现了基于廉价消费类相机的实时刚体重建，在当时是非常有影响力的工作，它极大的推动了实时稠密三维重建的商业化进程。</p></li><li><p><a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ismar2011.pdf">论文</a></p></li><li><p><a href="https://github.com/ParikaGoel/KinectFusion">代码</a></p></li><li><p><a href="http://pointclouds.org/news/kinectfusion-open-source.html">PCL实现的代码</a></p></li></ul><h2 id="kintinuous"><a class="markdownIt-Anchor" href="#kintinuous"></a> Kintinuous</h2><ul><li><a href="http://www.thomaswhelan.ie/Whelan12rssw.pdf">论文</a></li><li><a href="https://github.com/mp3guy/Kintinuous">代码连接</a></li></ul><h2 id="elasticfusion"><a class="markdownIt-Anchor" href="#elasticfusion"></a> ElasticFusion</h2><ul><li><a href="http://roboticsproceedings.org/rss11/p01.pdf">论文</a></li><li><a href="http://www.thomaswhelan.ie/Whelan16ijrr.pdf">论文</a></li><li><a href="https://github.com/mp3guy/ElasticFusion">代码连接</a></li></ul><h2 id="elasticreconstruction"><a class="markdownIt-Anchor" href="#elasticreconstruction"></a> ElasticReconstruction</h2><ul><li><a href="http://vladlen.info/papers/indoor.pdf">论文</a></li><li><a href="http://qianyi.info/scene.html">项目官网</a></li><li><a href="https://github.com/qianyizh/ElasticReconstruction">代码连接</a></li></ul><h2 id="dynamicfusion"><a class="markdownIt-Anchor" href="#dynamicfusion"></a> DynamicFusion</h2><ul><li><a href="https://arxiv.org/abs/1708.00783">论文</a></li><li><a href="https://grail.cs.washington.edu/projects/dynamicfusion/">项目官网</a></li><li><a href="https://github.com/mihaibujanca/dynamicfusion">代码连接</a></li></ul><h2 id="infinitam"><a class="markdownIt-Anchor" href="#infinitam"></a> InfiniTAM</h2><ul><li><a href="">论文</a></li><li><a href="http://www.robots.ox.ac.uk/~victor/infinitam/">项目官网</a></li><li><a href="https://github.com/victorprad/InfiniTAM">代码连接</a></li></ul><h2 id="bundlefusion"><a class="markdownIt-Anchor" href="#bundlefusion"></a> BundleFusion<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></h2><ul><li><a href="https://arxiv.org/pdf/1604.01093.pdf">论文</a></li><li><a href="http://graphics.stanford.edu/projects/bundlefusion/">项目官网</a></li><li><a href="https://github.com/niessner/BundleFusion">代码连接</a></li></ul><h1 id="动态场景"><a class="markdownIt-Anchor" href="#动态场景"></a> 动态场景</h1><h2 id="dynamicfusion-2"><a class="markdownIt-Anchor" href="#dynamicfusion-2"></a> DynamicFusion</h2><ul><li><a href="https://rse-lab.cs.washington.edu/papers/dynamic-fusion-cvpr-2015.pdf">论文</a></li></ul><h2 id="volumedeform"><a class="markdownIt-Anchor" href="#volumedeform"></a> volumeDeform</h2><ul><li><a href="https://graphics.stanford.edu/~niessner/papers/2016/5volumeDeform/innmann2016deform.pdf">论文</a></li></ul><h2 id="bodyfusion"><a class="markdownIt-Anchor" href="#bodyfusion"></a> BodyFusion</h2><ul><li><a href="http://www.liuyebin.com/bodyfusion/bodyfusion_files/BdyFu_ICCV17.pdf">论文</a></li></ul><h2 id="doublefusion"><a class="markdownIt-Anchor" href="#doublefusion"></a> DoubleFusion</h2><ul><li><a href="http://www.liuyebin.com/doublefusion/doublefusion_files/doublefusion.pdf">论文</a></li></ul><h2 id="unstructuredfusion"><a class="markdownIt-Anchor" href="#unstructuredfusion"></a> UnstructuredFusion</h2><ul><li><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8708933&amp;tag=1">论文</a></li></ul><h2 id="robustfusion"><a class="markdownIt-Anchor" href="#robustfusion"></a> RobustFusion</h2><ul><li><a href="https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123490239.pdf">论文</a></li></ul><h2 id="killingfusion"><a class="markdownIt-Anchor" href="#killingfusion"></a> KillingFusion</h2><ul><li><a href="http://campar.in.tum.de/pub/slavcheva2017cvpr/slavcheva2017cvpr.pdf">论文</a></li></ul><h2 id="surfelwarp"><a class="markdownIt-Anchor" href="#surfelwarp"></a> SurfelWarp</h2><ul><li><a href="https://arxiv.org/pdf/1904.13073.pdf">论文</a></li><li><a href="https://github.com/weigao95/surfelwarp">代码</a></li></ul><h2 id="fusion4d"><a class="markdownIt-Anchor" href="#fusion4d"></a> Fusion4D</h2><ul><li><a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/11/a114-dou.pdf">论文</a></li></ul><h1 id="深度学习方法"><a class="markdownIt-Anchor" href="#深度学习方法"></a> 深度学习方法<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></h1><ul><li>3-D重建基本上可以分成两种路径：一是多视角重建，二是运动重建</li></ul><p><strong>多视角重建</strong></p><ul><li>多视角立体视觉(MVS，multiple view stereo)，传统MVS的方法可以分成两种：区域增长（region growing）和深度融合（depth-fusion）。</li></ul><p><strong>运动重建</strong></p><ul><li>运动恢复结构（SFM）是基于背景不动的前提，机器人的研究者称之为SLAM。</li><li>在机器人领域成为同步定位和制图（SLAM）技术，有滤波法和关键帧法两种</li><li>后者精度高，在稀疏特征点的基础上可以采用集束调整（BA，Bundle Adjustment）<ul><li>PTAM</li><li>ORB-SLAM1/2</li><li>LSD-SLAM</li><li>KinectFusion（RGB-D数据）</li><li>LOAM/Velodyne SLAM（激光雷达数据）</li></ul></li><li>视觉里程计（VO）是SLAM的一部分，估计自身运动和姿态变化。</li><li>深度学习的迅猛发展，在SLAM/SFM/VO/MVS的应用探索也就成了必然。</li></ul><h2 id="deepvo"><a class="markdownIt-Anchor" href="#deepvo"></a> DeepVO</h2><ul><li>基于深度递归卷积神经网络（RCNN）提出了一种端到端单目视觉里程计（VO）框架。</li></ul><h2 id="undeepvo"><a class="markdownIt-Anchor" href="#undeepvo"></a> UnDeepVO</h2><ul><li>深度神经网络估计单目相机的6-DoF姿势及其视野的深度。</li></ul><h2 id="vinet"><a class="markdownIt-Anchor" href="#vinet"></a> VINet</h2><ul><li>使用视觉和惯性传感器进行运动估计的流形（on-manifold）序列到序列的学习方法。消除相机和IMU之间繁琐的手动同步，无需手动校准；模型自然地结合特定领域信息，显著地减轻漂移。</li></ul><h2 id="sfm-net"><a class="markdownIt-Anchor" href="#sfm-net"></a> SfM-Net</h2><ul><li>用于视频运动估计几何觉察的神经网络，根据场景、目标深度、相机运动、3D目标旋转和平移等来分解帧像素运动。</li></ul><h2 id="cnn-slam"><a class="markdownIt-Anchor" href="#cnn-slam"></a> CNN-SLAM</h2><ul><li>用于精确和密集的单目图像重建。</li></ul><h2 id="posenet"><a class="markdownIt-Anchor" href="#posenet"></a> PoseNet</h2><ul><li>Kendall A, Grimes M, Cipolla R. “Posenet: A convolutional network for real-time 6-dof camera relocalization”，IEEE ICCV. 2015</li><li>实时单目6 DOF重定位系统。</li></ul><h2 id="vidloc"><a class="markdownIt-Anchor" href="#vidloc"></a> VidLoc</h2><ul><li>用于视频片段6-DoF定位的递归卷积模型。</li></ul><h2 id="netvlad"><a class="markdownIt-Anchor" href="#netvlad"></a> NetVLAD</h2><ul><li>基于视觉的位置识别问题要求快速准确地识别给定查询照片的位置。</li></ul><h2 id="learned-stereo-machine"><a class="markdownIt-Anchor" href="#learned-stereo-machine"></a> Learned Stereo Machine</h2><ul><li>用于多视角立体视觉的深度学习系统，即学习立体视觉机（LSM）。</li></ul><h2 id="deepmvs"><a class="markdownIt-Anchor" href="#deepmvs"></a> DeepMVS</h2><ul><li>用于多视角立体视觉（MVS）重建的深度卷积神经网络（ConvNet）。</li></ul><h2 id="mvsnet"><a class="markdownIt-Anchor" href="#mvsnet"></a> MVSNet</h2><ul><li>出了一种端到端深度神经网络来推断参考深度图D</li></ul><h2 id="recurrent-mvsnet"><a class="markdownIt-Anchor" href="#recurrent-mvsnet"></a> Recurrent MVSNet</h2><ul><li>基于递归神经网络的可扩展多视角立体视觉框架</li></ul><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.zhihu.com/question/29885222/answer/918009389">连接</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/296509722">连接</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://mp.weixin.qq.com/s?__biz=MzIxOTczOTM4NA==&amp;mid=2247485487&amp;idx=1&amp;sn=068e04d652578deb55e93b1a32fa9a21&amp;chksm=97d7edb8a0a064ae265e9beb0f337f36fd3470a14ce97701cb16710608e0f1899c3d03b196ff&amp;scene=21#wechat_redirect">连接</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://blog.csdn.net/fuxingyin/article/details/52921958">连接</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/112103579">连接</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="programme" scheme="http://blog.guoming576.cn/categories/programme/"/>
    
    
      <category term="robotic" scheme="http://blog.guoming576.cn/tags/robotic/"/>
    
  </entry>
  
</feed>
